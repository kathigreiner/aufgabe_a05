{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./node_modules/hashed/lib/util.js","webpack:///./node_modules/rbush/index.js","webpack:///./node_modules/hashed/lib/index.js","webpack:///./node_modules/util/util.js","webpack:///./node_modules/hashed/lib/serializers.js","webpack:///./node_modules/ol/ol.css?05fa","webpack:///./node_modules/ol/ol.css","webpack:///./node_modules/css-loader/dist/runtime/api.js","webpack:///./node_modules/style-loader/lib/addStyles.js","webpack:///./node_modules/style-loader/lib/urls.js","webpack:///./node_modules/hashed/lib/store.js","webpack:///./node_modules/hashed/lib/schema.js","webpack:///./node_modules/hashed/lib/field.js","webpack:///./node_modules/process/browser.js","webpack:///./node_modules/util/support/isBufferBrowser.js","webpack:///./node_modules/inherits/inherits_browser.js","webpack:///./node_modules/hashed/lib/deserializers.js","webpack:///./node_modules/hashed/lib/hash.js","webpack:///./node_modules/quickselect/quickselect.js","webpack:///./node_modules/ol/util.js","webpack:///./node_modules/ol/AssertionError.js","webpack:///./node_modules/ol/CollectionEventType.js","webpack:///./node_modules/ol/ObjectEventType.js","webpack:///./node_modules/ol/obj.js","webpack:///./node_modules/ol/events.js","webpack:///./node_modules/ol/Disposable.js","webpack:///./node_modules/ol/functions.js","webpack:///./node_modules/ol/events/Event.js","webpack:///./node_modules/ol/events/Target.js","webpack:///./node_modules/ol/events/EventType.js","webpack:///./node_modules/ol/Observable.js","webpack:///./node_modules/ol/Object.js","webpack:///./node_modules/ol/Collection.js","webpack:///./node_modules/ol/MapEvent.js","webpack:///./node_modules/ol/MapBrowserEvent.js","webpack:///./node_modules/ol/has.js","webpack:///./node_modules/ol/MapBrowserEventType.js","webpack:///./node_modules/ol/MapBrowserPointerEvent.js","webpack:///./node_modules/ol/pointer/EventType.js","webpack:///./node_modules/ol/pointer/EventSource.js","webpack:///./node_modules/ol/pointer/MouseSource.js","webpack:///./node_modules/ol/pointer/MsSource.js","webpack:///./node_modules/ol/pointer/NativeSource.js","webpack:///./node_modules/ol/pointer/PointerEvent.js","webpack:///./node_modules/ol/array.js","webpack:///./node_modules/ol/pointer/TouchSource.js","webpack:///./node_modules/ol/pointer/PointerEventHandler.js","webpack:///./node_modules/ol/MapBrowserEventHandler.js","webpack:///./node_modules/ol/MapEventType.js","webpack:///./node_modules/ol/MapProperty.js","webpack:///./node_modules/ol/render/EventType.js","webpack:///./node_modules/ol/TileState.js","webpack:///./node_modules/ol/asserts.js","webpack:///./node_modules/ol/structs/PriorityQueue.js","webpack:///./node_modules/ol/TileQueue.js","webpack:///./node_modules/ol/tilegrid/common.js","webpack:///./node_modules/ol/math.js","webpack:///./node_modules/ol/centerconstraint.js","webpack:///./node_modules/ol/extent/Corner.js","webpack:///./node_modules/ol/extent/Relationship.js","webpack:///./node_modules/ol/extent.js","webpack:///./node_modules/ol/resolutionconstraint.js","webpack:///./node_modules/ol/rotationconstraint.js","webpack:///./node_modules/ol/ViewHint.js","webpack:///./node_modules/ol/ViewProperty.js","webpack:///./node_modules/ol/coordinate.js","webpack:///./node_modules/ol/easing.js","webpack:///./node_modules/ol/geom/GeometryType.js","webpack:///./node_modules/ol/geom/GeometryLayout.js","webpack:///./node_modules/ol/geom/flat/transform.js","webpack:///./node_modules/ol/sphere.js","webpack:///./node_modules/ol/proj/Units.js","webpack:///./node_modules/ol/proj/Projection.js","webpack:///./node_modules/ol/proj/epsg3857.js","webpack:///./node_modules/ol/proj/epsg4326.js","webpack:///./node_modules/ol/proj/projections.js","webpack:///./node_modules/ol/proj/transforms.js","webpack:///./node_modules/ol/proj.js","webpack:///./node_modules/ol/transform.js","webpack:///./node_modules/ol/geom/Geometry.js","webpack:///./node_modules/ol/geom/SimpleGeometry.js","webpack:///./node_modules/ol/geom/flat/area.js","webpack:///./node_modules/ol/geom/flat/closest.js","webpack:///./node_modules/ol/geom/flat/deflate.js","webpack:///./node_modules/ol/geom/flat/inflate.js","webpack:///./node_modules/ol/geom/flat/simplify.js","webpack:///./node_modules/ol/geom/LinearRing.js","webpack:///./node_modules/ol/geom/Point.js","webpack:///./node_modules/ol/geom/flat/contains.js","webpack:///./node_modules/ol/geom/flat/interiorpoint.js","webpack:///./node_modules/ol/geom/flat/segments.js","webpack:///./node_modules/ol/geom/flat/intersectsextent.js","webpack:///./node_modules/ol/geom/flat/reverse.js","webpack:///./node_modules/ol/geom/flat/orient.js","webpack:///./node_modules/ol/geom/Polygon.js","webpack:///./node_modules/ol/View.js","webpack:///./node_modules/ol/dom.js","webpack:///./node_modules/ol/layer/Property.js","webpack:///./node_modules/ol/layer/Base.js","webpack:///./node_modules/ol/source/State.js","webpack:///./node_modules/ol/layer/Group.js","webpack:///./node_modules/ol/size.js","webpack:///./node_modules/ol/PluggableMap.js","webpack:///./node_modules/ol/control/Control.js","webpack:///./node_modules/ol/css.js","webpack:///./node_modules/ol/layer/Layer.js","webpack:///./node_modules/ol/control/Attribution.js","webpack:///./node_modules/ol/control/Rotate.js","webpack:///./node_modules/ol/control/Zoom.js","webpack:///./node_modules/ol/Kinetic.js","webpack:///./node_modules/ol/interaction/Property.js","webpack:///./node_modules/ol/interaction/Interaction.js","webpack:///./node_modules/ol/interaction/DoubleClickZoom.js","webpack:///./node_modules/ol/events/condition.js","webpack:///./node_modules/ol/interaction/Pointer.js","webpack:///./node_modules/ol/interaction/DragPan.js","webpack:///./node_modules/ol/interaction/DragRotate.js","webpack:///./node_modules/ol/render/Box.js","webpack:///./node_modules/ol/interaction/DragBox.js","webpack:///./node_modules/ol/interaction/DragZoom.js","webpack:///./node_modules/ol/events/KeyCode.js","webpack:///./node_modules/ol/interaction/KeyboardPan.js","webpack:///./node_modules/ol/interaction/KeyboardZoom.js","webpack:///./node_modules/ol/interaction/MouseWheelZoom.js","webpack:///./node_modules/ol/interaction/PinchRotate.js","webpack:///./node_modules/ol/interaction/PinchZoom.js","webpack:///./node_modules/ol/render/Event.js","webpack:///./node_modules/ol/color.js","webpack:///./node_modules/ol/style/IconImageCache.js","webpack:///./node_modules/ol/renderer/Map.js","webpack:///./node_modules/ol/renderer/Composite.js","webpack:///./node_modules/ol/Map.js","webpack:///./node_modules/ol/control/util.js","webpack:///./node_modules/ol/interaction.js","webpack:///./node_modules/ol/layer/TileProperty.js","webpack:///./node_modules/ol/layer/BaseTile.js","webpack:///./node_modules/ol/TileRange.js","webpack:///./node_modules/ol/structs/LRUCache.js","webpack:///./node_modules/ol/render/canvas/LabelCache.js","webpack:///./node_modules/ol/render/canvas.js","webpack:///./node_modules/ol/ImageState.js","webpack:///./node_modules/ol/renderer/Layer.js","webpack:///./node_modules/ol/renderer/canvas/Layer.js","webpack:///./node_modules/ol/renderer/canvas/TileLayer.js","webpack:///./node_modules/ol/layer/Tile.js","webpack:///./node_modules/ol/colorlike.js","webpack:///./node_modules/ol/style/Image.js","webpack:///./node_modules/ol/style/RegularShape.js","webpack:///./node_modules/ol/style/Circle.js","webpack:///./node_modules/ol/style/Fill.js","webpack:///./node_modules/ol/style/Stroke.js","webpack:///./node_modules/ol/style/Style.js","webpack:///./node_modules/ol/layer/BaseVector.js","webpack:///./node_modules/ol/render/VectorContext.js","webpack:///./node_modules/ol/render/canvas/Instruction.js","webpack:///./node_modules/ol/render/canvas/Builder.js","webpack:///./node_modules/ol/render/canvas/ImageBuilder.js","webpack:///./node_modules/ol/render/canvas/LineStringBuilder.js","webpack:///./node_modules/ol/render/canvas/PolygonBuilder.js","webpack:///./node_modules/ol/geom/flat/straightchunk.js","webpack:///./node_modules/ol/style/TextPlacement.js","webpack:///./node_modules/ol/render/canvas/TextBuilder.js","webpack:///./node_modules/ol/render/canvas/BuilderGroup.js","webpack:///./node_modules/ol/render/canvas/BuilderType.js","webpack:///./node_modules/ol/geom/flat/length.js","webpack:///./node_modules/ol/geom/flat/textpath.js","webpack:///./node_modules/ol/render/canvas/Executor.js","webpack:///./node_modules/ol/render/canvas/ExecutorGroup.js","webpack:///./node_modules/ol/renderer/vector.js","webpack:///./node_modules/ol/renderer/canvas/VectorLayer.js","webpack:///./node_modules/ol/layer/Vector.js","webpack:///./node_modules/ol/format/FormatType.js","webpack:///./node_modules/ol/featureloader.js","webpack:///./node_modules/ol/loadingstrategy.js","webpack:///./node_modules/ol/source/Source.js","webpack:///./node_modules/ol/source/VectorEventType.js","webpack:///./node_modules/ol/structs/RBush.js","webpack:///./node_modules/ol/source/Vector.js","webpack:///./node_modules/ol/Feature.js","webpack:///./node_modules/ol/format/Feature.js","webpack:///./node_modules/ol/format/JSONFeature.js","webpack:///./node_modules/ol/geom/GeometryCollection.js","webpack:///./node_modules/ol/geom/flat/interpolate.js","webpack:///./node_modules/ol/geom/LineString.js","webpack:///./node_modules/ol/geom/MultiLineString.js","webpack:///./node_modules/ol/geom/MultiPoint.js","webpack:///./node_modules/ol/geom/MultiPolygon.js","webpack:///./node_modules/ol/geom/flat/center.js","webpack:///./node_modules/ol/format/GeoJSON.js","webpack:///./node_modules/ol/OverlayPositioning.js","webpack:///./node_modules/ol/Overlay.js","webpack:///./node_modules/ol-hashed/index.js","webpack:///./node_modules/ol/reproj/common.js","webpack:///./node_modules/ol/Tile.js","webpack:///./node_modules/ol/ImageTile.js","webpack:///./node_modules/ol/tilecoord.js","webpack:///./node_modules/ol/TileCache.js","webpack:///./node_modules/ol/reproj.js","webpack:///./node_modules/ol/reproj/Triangulation.js","webpack:///./node_modules/ol/reproj/Tile.js","webpack:///./node_modules/ol/tileurlfunction.js","webpack:///./node_modules/ol/tilegrid/TileGrid.js","webpack:///./node_modules/ol/tilegrid.js","webpack:///./node_modules/ol/source/Tile.js","webpack:///./node_modules/ol/source/TileEventType.js","webpack:///./node_modules/ol/source/UrlTile.js","webpack:///./node_modules/ol/source/TileImage.js","webpack:///./node_modules/ol/source/XYZ.js","webpack:///./node_modules/ol/source/OSM.js","webpack:///./main.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","util","typeOf","type","isArray","isDate","isRegExp","isError","extend","dest","source","zip","zipped","count","unzip","array","ii","length","rbush","default","quickselect","maxEntries","format","this","_maxEntries","Math","max","_minEntries","ceil","_initFormat","clear","findItem","item","items","equalsFn","indexOf","calcBBox","node","toBBox","distBBox","children","k","destNode","createNode","minX","Infinity","minY","maxX","maxY","child","leaf","a","b","min","compareNodeMinX","compareNodeMinY","bboxArea","bboxMargin","contains","intersects","height","multiSelect","arr","left","right","compare","mid","stack","pop","push","all","_all","data","search","bbox","result","len","childBBox","nodesToSearch","collides","load","insert","_build","slice","_splitRoot","tmpNode","_insert","remove","parent","index","goingUp","path","indexes","splice","_condense","compareMinX","compareMinY","toJSON","fromJSON","apply","N","M","log","pow","j","right2","right3","N2","N1","sqrt","_chooseSubtree","level","targetNode","area","enlargement","minArea","minEnlargement","isNode","insertPath","_split","_adjustParentBBoxes","_chooseSplitAxis","splitIndex","_chooseSplitIndex","newNode","bbox1","bbox2","overlap","minOverlap","_allDistMargin","sort","leftBBox","rightBBox","margin","siblings","compareArr","Function","join","Store","hash","store","reset","window","removeEventListener","update","addEventListener","deserialize","location","values","defaults","nonDefaults","history","pushState","serialize","register","config","callback","unregister","process","getOwnPropertyDescriptors","obj","keys","descriptors","getOwnPropertyDescriptor","formatRegExp","f","isString","objects","arguments","inspect","args","str","String","replace","x","Number","JSON","stringify","_","isNull","isObject","deprecate","fn","msg","noDeprecation","warned","throwDeprecation","Error","traceDeprecation","console","trace","error","debugEnviron","debugs","opts","ctx","seen","stylize","stylizeNoColor","depth","colors","isBoolean","showHidden","_extend","isUndefined","customInspect","stylizeWithColor","formatValue","styleType","style","styles","recurseTimes","isFunction","constructor","ret","primitive","simple","isNumber","formatPrimitive","visibleKeys","forEach","val","idx","arrayToHash","getOwnPropertyNames","formatError","RegExp","toString","Date","output","base","braces","toUTCString","formatProperty","match","formatArray","map","reduce","prev","cur","numLinesEst","reduceToSingleString","desc","set","split","line","substr","ar","Array","arg","re","objectToString","e","pad","debuglog","env","NODE_DEBUG","toUpperCase","test","pid","bold","italic","underline","inverse","white","grey","black","blue","cyan","green","magenta","red","yellow","special","number","boolean","undefined","null","string","date","regexp","isNullOrUndefined","isSymbol","isPrimitive","isBuffer","months","prop","time","getHours","getMinutes","getSeconds","getDate","getMonth","inherits","origin","add","kCustomPromisifiedSymbol","callbackifyOnRejected","reason","cb","newReason","promisify","original","TypeError","writable","configurable","promiseResolve","promiseReject","promise","Promise","resolve","reject","err","setPrototypeOf","getPrototypeOf","defineProperties","custom","callbackify","callbackified","maybeCb","self","then","nextTick","rej","enc","encodeURIComponent","serializers","num","bool","toISOString","content","options","hmr","transform","insertInto","locals","useSourceMap","list","cssMapping","btoa","sourceMapping","sourceMap","unescape","sourceURLs","sources","sourceRoot","concat","cssWithMappingToString","mediaQuery","alreadyImportedModules","id","memo","stylesInDom","isOldIE","document","atob","getElement","target","styleTarget","querySelector","HTMLIFrameElement","contentDocument","head","singleton","singletonCounter","stylesInsertedAtTop","fixUrls","addStylesToDom","domStyle","refs","parts","addStyle","listToStyles","newStyles","part","css","media","insertStyleElement","lastStyleElementInsertedAtTop","insertAt","nextSibling","insertBefore","appendChild","firstChild","before","removeStyleElement","parentNode","removeChild","createStyleElement","createElement","attrs","nonce","nc","getNonce","addAttrs","el","setAttribute","styleIndex","applyToSingletonTag","URL","createObjectURL","revokeObjectURL","Blob","link","rel","createLinkElement","autoFixUrls","convertToAbsoluteUrls","blob","oldSrc","href","styleSheet","cssText","createTextNode","newObj","DEBUG","newList","mayRemove","textStore","replaceText","replacement","filter","Boolean","cssNode","childNodes","baseUrl","protocol","host","currentDir","pathname","fullMatch","origUrl","newUrl","unquotedOrigUrl","trim","$1","Schema","_values","_defaults","_providers","_callback","_callbackTimer","_scheduleCallback","clearTimeout","setTimeout","_debouncedCallback","_updateTimer","_debouncedUpdate","newValues","providers","provider","schema","changed","state","forEachKey","prefixed","deserialized","getDefault","serializedDefault","removedProvider","conflicts","_initializeProvider","serializedValue","deserializedValue","deserializedDefault","serialized","serializer","Field","fields","prefix","_prefix","_fields","getPrefixed","thisArg","more","other","thisPrefixedKeys","deserializers","cachedSetTimeout","cachedClearTimeout","defaultSetTimout","defaultClearTimeout","runTimeout","fun","currentQueue","queue","draining","queueIndex","cleanUpNextTick","drainQueue","timeout","run","marker","runClearTimeout","Item","noop","title","browser","argv","version","versions","on","addListener","once","off","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","listeners","binding","cwd","chdir","dir","umask","copy","fill","readUInt8","ctor","superCtor","super_","TempCtor","dec","decodeURIComponent","isNaN","getTime","parse","substring","swap","tmp","defaultCompare","quickselectStep","z","exp","sd","newLeft","floor","newRight","factory","util_abstract","uidCounter_","getUid","ol_uid","extendStatics","VERSION","__extends","__proto__","__","ol_AssertionError","_super","AssertionError","code","_this","message","CollectionEventType","ADD","REMOVE","ObjectEventType","obj_assign","assign","var_sources","getValues","isEmpty","findListener","listener","opt_this","opt_setDeleteIndex","listenerObj","bindTo","deleteIndex","getListeners","listenerMap","getListenerMap","opt_create","ol_lm","removeListeners","boundListener","removeListenerMap","listen","opt_once","callOnce","evt","unlistenByKey","bindListener","listenOnce","unlisten","ol_Disposable","Disposable","disposed_","dispose","disposeInternal","TRUE","FALSE","VOID","events_Event","Event","propagationStopped","preventDefault","stopPropagation","Target_extends","events_Target","Target","pendingRemovals_","dispatching_","listeners_","dispatchEvent","event","propagate","pendingRemovals","unlistenAll","hasListener","opt_type","EventType","CHANGE","CLEAR","CONTEXTMENU","CLICK","DBLCLICK","DRAGENTER","DRAGOVER","DROP","ERROR","KEYDOWN","KEYPRESS","LOAD","MOUSEDOWN","MOUSEMOVE","MOUSEOUT","MOUSEUP","MOUSEWHEEL","MSPOINTERDOWN","RESIZE","TOUCHSTART","TOUCHMOVE","TOUCHEND","WHEEL","Observable_extends","ol_Observable","Observable","revision_","getRevision","un","Object_extends","ObjectEvent","oldValue","Object_BaseObject","BaseObject","opt_values","values_","setProperties","getKeys","getProperties","notify","eventType","getChangeEventType","opt_silent","unset","changeEventTypeCache","ol_Object","Collection_extends","Property","CollectionEvent","opt_element","opt_index","element","ol_Collection","Collection","opt_array","opt_options","unique_","unique","array_","assertUnique_","updateLength_","getLength","getArray","elem","removeAt","setAt","opt_except","MapEvent_extends","ol_MapEvent","MapEvent","opt_frameState","frameState","MapBrowserEvent_extends","ol_MapBrowserEvent","MapBrowserEvent","browserEvent","opt_dragging","originalEvent","pixel","getEventPixel","coordinate","getCoordinateFromPixel","dragging","ua","navigator","userAgent","toLowerCase","FIREFOX","SAFARI","WEBKIT","MAC","DEVICE_PIXEL_RATIO","devicePixelRatio","TOUCH","POINTER","MSPOINTER","MapBrowserEventType","SINGLECLICK","POINTERDRAG","POINTERMOVE","POINTERDOWN","POINTERUP","POINTEROVER","POINTEROUT","POINTERENTER","POINTERLEAVE","POINTERCANCEL","MapBrowserPointerEvent_extends","ol_MapBrowserPointerEvent","MapBrowserPointerEvent","pointerEvent","pointer_EventType","pointer_EventSource","EventSource","dispatcher","mapping","mapping_","getEvents","getHandlerForEvent","MouseSource_extends","POINTER_ID","POINTER_TYPE","mousedown","inEvent","isEventSimulatedFromTouch_","pointerMap","cancel","prepareEvent","down","mousemove","move","mouseup","button","up","cleanupMouse","mouseover","enterOver","mouseout","leaveOut","cloneEvent","pd","pointerId","isPrimary","pointerType","pointer_MouseSource","MouseSource","lastTouches","lts","clientX","y","clientY","dx","abs","dy","MsSource_extends","POINTER_TYPES","msPointerDown","prepareEvent_","msPointerMove","msPointerUp","cleanup","msPointerOut","msPointerOver","msPointerCancel","msLostPointerCapture","makeEvent","msGotPointerCapture","pointer_MsSource","MsSource","MSPointerDown","MSPointerMove","MSPointerUp","MSPointerOut","MSPointerOver","MSPointerCancel","MSGotPointerCapture","MSLostPointerCapture","NativeSource_extends","pointerDown","fireNativeEvent","pointerMove","pointerUp","pointerOut","pointerOver","pointerCancel","lostPointerCapture","gotPointerCapture","pointer_NativeSource","NativeSource","pointerdown","pointermove","pointerup","pointerout","pointerover","pointercancel","gotpointercapture","lostpointercapture","PointerEvent_extends","HAS_BUTTONS","PointerEvent","opt_eventDict","eventDict","buttons","which","getButtons","pressure","getPressure","bubbles","cancelable","view","detail","screenX","screenY","ctrlKey","altKey","shiftKey","metaKey","relatedTarget","width","tiltX","tiltY","hwTimestamp","ev","MouseEvent","pointer_PointerEvent","numberSafeCompareFunction","linearFindNearest","direction","reverseSubArray","begin","end","extension","equals","arr1","arr2","len1","TouchSource_extends","touchstart","vacuumTouches_","setPrimaryTouch_","changedTouches","dedupSynthMouse_","clickCount_","processTouches_","overDown_","touchmove","moveOverOut_","touchend","upOut_","touchcancel","cancelOut_","pointer_TouchSource","TouchSource","mouseSource","firstTouchId_","resetId_","dedupTimeout_","isPrimaryTouch_","inTouch","identifier","cancelResetClickCount_","removePrimaryPointer_","inPointer","resetClickCount_","resetClickCountHandler_","touchToPointer_","radiusX","radiusY","force","inFunction","touches","pointer","findTouch_","touchList","searchId","out","outTarget","over","enter","outEvent","leave","cleanUpPointer_","lt_1","PointerEventHandler_extends","CLONE_PROPS","pointer_PointerEventHandler","PointerEventHandler","element_","eventMap_","eventSourceList_","registerSources","registerSource","register_","newEvents","handler","eventSource","addEvents_","unregister_","removeEvents_","eventHandler_","events","eventName","eventCopy","fireEvent","contains_","container","contained","inType","wrapMouseEvent","MapBrowserEventHandler_extends","ol_MapBrowserEventHandler","MapBrowserEventHandler","moveTolerance","map_","clickTimeoutId_","dragging_","dragListenerKeys_","moveTolerance_","down_","getViewport","activePointers_","trackedTouches_","pointerEventHandler_","documentPointerEventHandler_","pointerdownListenerKey_","handlePointerDown_","relayedListenerKey_","relayEvent_","emulateClick_","newEvent","updateActivePointers_","handlePointerUp_","isMouseActionButton_","handlePointerMove_","isMoving_","MapEventType","MapProperty","LAYERGROUP","SIZE","TARGET","VIEW","render_EventType","TileState","IDLE","LOADING","LOADED","EMPTY","ABORT","assert","assertion","errorCode","structs_PriorityQueue","PriorityQueue","priorityFunction","keyFunction","priorityFunction_","keyFunction_","elements_","priorities_","queuedElements_","dequeue","elements","priorities","siftUp_","elementKey","enqueue","priority","siftDown_","getCount","getLeftChildIndex_","getRightChildIndex_","getParentIndex_","heapify_","isKeyQueued","isQueued","startIndex","lIndex","rIndex","smallerChildIndex","parentIndex","reprioritize","TileQueue_extends","ol_TileQueue","TileQueue","tilePriorityFunction","tileChangeCallback","getKey","tileChangeCallback_","tilesLoading_","tilesLoadingKeys_","added","handleTileChange","getTilesLoading","tile","getState","hifi","tileKey","loadMoreTiles","maxTotalLoading","maxNewLoads","newLoads","abortedTiles","DEFAULT_MAX_ZOOM","DEFAULT_TILE_SIZE","clamp","cosh","squaredSegmentDistance","x1","y1","x2","y2","math_squaredDistance","toDegrees","angleInRadians","PI","toRadians","angleInDegrees","modulo","lerp","none","center","Corner","BOTTOM_LEFT","BOTTOM_RIGHT","TOP_LEFT","TOP_RIGHT","Relationship","UNKNOWN","INTERSECTING","ABOVE","RIGHT","BELOW","LEFT","boundingExtent","coordinates","extent","createEmpty","extendCoordinate","buffer","opt_extent","clone","closestSquaredDistanceXY","containsCoordinate","containsXY","containsExtent","extent1","extent2","coordinateRelationship","relationship","createOrUpdate","createOrUpdateEmpty","createOrUpdateFromFlatCoordinates","flatCoordinates","offset","stride","extendFlatCoordinates","extent_equals","extent_extend","extendCoordinates","extendXY","getArea","extent_isEmpty","getWidth","getHeight","getBottomLeft","getBottomRight","getCenter","getCorner","corner","getTopLeft","getTopRight","getForViewAndSize","resolution","rotation","size","cosRotation","cos","sinRotation","sin","xCos","xSin","yCos","ySin","x0","x3","y0","y3","getIntersection","intersection","extent_intersects","getViewportClampedResolution","maxExtent","viewportSize","xResolution","yResolution","getSmoothClampedResolution","maxResolution","minResolution","createMinMaxResolution","opt_smooth","opt_maxExtent","opt_isMoving","cappedMaxRes","disable","rotationconstraint_none","ViewHint","ViewProperty","coordinate_equals","coordinate1","coordinate2","rotate","angle","cosAngle","sinAngle","easeIn","easeOut","inAndOut","linear","GeometryType","POINT","LINE_STRING","LINEAR_RING","POLYGON","MULTI_POINT","MULTI_LINE_STRING","MULTI_POLYGON","GEOMETRY_COLLECTION","CIRCLE","GeometryLayout","XY","XYZ","XYM","XYZM","transform2D","opt_dest","DEFAULT_RADIUS","getDistance","c1","c2","opt_radius","radius","lat1","lat2","deltaLatBy2","deltaLonBy2","atan2","sphere_offset","distance","bearing","lon1","dByR","lat","asin","Units","DEGREES","FEET","METERS","PIXELS","TILE_PIXELS","USFEET","METERS_PER_UNIT","proj_Units","proj_Projection","Projection","code_","units_","extent_","worldExtent_","worldExtent","axisOrientation_","axisOrientation","global_","global","canWrapX_","getPointResolutionFunc_","getPointResolution","defaultTileGrid_","metersPerUnit_","metersPerUnit","canWrapX","getCode","getExtent","getUnits","getMetersPerUnit","getWorldExtent","getAxisOrientation","isGlobal","setGlobal","getDefaultTileGrid","setDefaultTileGrid","tileGrid","setExtent","setWorldExtent","setGetPointResolution","func","getPointResolutionFunc","epsg3857_extends","RADIUS","HALF_SIZE","EXTENT","WORLD_EXTENT","epsg3857_EPSG3857Projection","EPSG3857Projection","units","point","PROJECTIONS","fromEPSG4326","input","opt_output","opt_dimension","dimension","halfSize","tan","toEPSG4326","atan","epsg4326_extends","epsg4326_EXTENT","epsg4326_METERS_PER_UNIT","epsg4326_EPSG4326Projection","EPSG4326Projection","opt_axisOrientation","epsg4326_PROJECTIONS","projections_cache","projections2","forwardTransform","inverseTransform","transforms","transforms_add","destination","transformFn","sourceCode","destinationCode","cloneTransform","identityTransform","addProjection","projection","projections_add","proj_get","projectionLike","opt_units","pointResolution","toEPSG4326_1","getTransformFromProjections","vertices","addEquivalentProjections","projections","addProjections","createProjection","defaultCode","fromLonLat","opt_projection","proj_transform","equivalent","projection1","projection2","equalUnits","sourceProjection","destinationProjection","transformFunc","transforms_get","getTransform","compose","dx1","dy1","sx","sy","dx2","dy2","makeInverse","mat","det","transform_toString","Geometry_extends","tmpTransform","geom_Geometry","Geometry","extentRevision_","simplifiedGeometryCache","simplifiedGeometryMaxMinSquaredTolerance","simplifiedGeometryRevision","closestPointXY","closestPoint","minSquaredDistance","coord","getClosestPoint","opt_closestPoint","NaN","intersectsCoordinate","computeExtent","returnOrUpdate","anchor","scale","opt_sy","opt_anchor","simplify","tolerance","getSimplifiedGeometry","squaredTolerance","getType","applyTransform","intersectsExtent","translate","deltaX","deltaY","sourceProj","inCoordinates","outCoordinates","pixelExtent","projectedExtent","SimpleGeometry_extends","getStrideForLayout","layout","geom_SimpleGeometry","SimpleGeometry","getCoordinates","getFirstCoordinate","getFlatCoordinates","getLastCoordinate","getLayout","simplifiedGeometry","getSimplifiedGeometryInternal","getStride","setFlatCoordinates","setCoordinates","opt_layout","setLayout","nesting","getLayoutForStride","anchorX","anchorY","transform_rotate","transform_scale","area_linearRing","twiceArea","area_linearRings","ends","assignClosest","offset1","offset2","maxSquaredDelta","squaredDelta","arrayMaxSquaredDelta","assignClosestPoint","maxDelta","isRing","opt_tmpPoint","squaredDistance","tmpPoint","assignClosestArrayPoint","deflateCoordinates","deflateCoordinatesArray","coordinatess","opt_ends","jj","inflateCoordinates","opt_coordinates","inflateCoordinatesArray","opt_coordinatess","inflateMultiCoordinatesArray","endss","opt_coordinatesss","coordinatesss","douglasPeucker","simplifiedFlatCoordinates","simplifiedOffset","markers","last","first","maxSquaredDistance","squaredDistance_1","douglasPeuckerArray","simplifiedEnds","snap","round","quantize","quantizeArray","LinearRing_extends","geom_LinearRing","LinearRing","maxDelta_","maxDeltaRevision_","Point_extends","geom_Point","Point","deflateCoordinate","linearRingContainsExtent","forEachCorner","linearRingContainsXY","wn","linearRingsContainsXY","getInteriorPointOfArray","flatCenters","flatCentersOffset","intersections","rr","pointX","maxSegmentLength","segmentLength","point1","point2","intersectsLineString","coordinatesExtent","start","startRel","endRel","startX","startY","endX","endY","slope","intersectsSegment","intersectsLinearRingArray","intersectsLinearRing","reverse_coordinates","linearRingIsClockwise","edge","linearRingsAreOriented","opt_right","isClockwise","orientLinearRings","orientLinearRingsArray","Polygon_extends","Polygon_Polygon","Polygon","ends_","flatInteriorPointRevision_","flatInteriorPoint_","orientedRevision_","orientedFlatCoordinates_","appendLinearRing","linearRing","getOrientedFlatCoordinates","getEnds","getFlatInteriorPoint","flatCenter","getInteriorPoint","getLinearRingCount","getLinearRing","getLinearRings","linearRings","geom_Polygon","fromExtent","View_extends","DEFAULT_MIN_ZOOM","animationCallback","returnValue","isNoopAnimation","animation","sourceCenter","targetCenter","sourceResolution","targetResolution","sourceRotation","targetRotation","ol_View","View","hints_","animations_","updateAnimationKey_","projection_","targetCenter_","targetResolution_","targetRotation_","applyOptions_","resolutionConstraintInfo","resolutionConstraint","minZoom","maxZoom","zoomFactor","multiWorld","smooth","smoothResolutionConstraint","resolutions","constrainResolution","capped","createSnapToResolutions","constrainOnlyCenter","defaultMaxResolution","defaultMinResolution","power","opt_minResolution","zoomLevel","createSnapToPower","extent_1","constraint","createResolutionConstraint","maxResolution_","minResolution_","zoomFactor_","resolutions_","minZoom_","centerConstraint","onlyCenter","smoothExtentConstraint","viewWidth","viewHeight","ratio","createCenterConstraint","rotationConstraint","enableRotation","constrainRotation","opt_tolerance","theta","createRotationConstraint","constraints_","setRotation","setCenter","setResolution","zoom","setZoom","resolveConstraints","options_","getUpdatedOptions_","newOptions","getResolution","getZoom","getRotation","animate","var_args","isDef","getAnimating","animate_","animationCount","now","series","complete","duration","easing","getResolutionForZoom","delta","setHint","updateAnimations_","getInteracting","cancelAnimations","cancelAnimationFrame","seriesComplete","elapsed","fraction","progress","getSizeFromViewport_","constrainedResolution","calculateCenterZoom","applyTargetState_","constrainedRotation","calculateCenterRotate","requestAnimationFrame","currentCenter","currentResolution","opt_rotation","selector","metrics","getComputedStyle","parseInt","w","h","getConstraints","getHints","opt_hints","calculateExtent","opt_size","getMaxResolution","getMinResolution","getMaxZoom","getZoomForResolution","setMaxZoom","getMinZoom","setMinZoom","setConstrainResolution","enabled","getProjection","getResolutions","getResolutionForExtent","getResolutionForValueFunction","opt_power","getValueForResolutionFunction","pixelRatio","nearest","baseLevel","fit","geometryOrExtent","geometry","padding","coords","minRotX","minRotY","maxRotX","maxRotY","rotX","rotY","getConstrainedResolution","centerRotX","centerRotY","getConstrainedCenter","centerOn","position","centerX","centerY","adjustCenter","deltaCoordinates","adjustResolution","isMoving","newResolution","adjustZoom","adjustRotation","newRotation","hint","opt_doNotCancelAnims","opt_forceMoving","newCenter","opt_duration","opt_resolutionDirection","beginInteraction","endInteraction","opt_targetResolution","getConstrainedZoom","targetZoom","opt_direction","targetRes","createCanvasContext2D","opt_width","opt_height","canvas","getContext","dom_outerWidth","offsetWidth","marginLeft","marginRight","dom_outerHeight","offsetHeight","marginTop","marginBottom","replaceNode","oldNode","replaceChild","removeNode","removeChildren","lastChild","layer_Property","OPACITY","VISIBLE","Z_INDEX","MAX_RESOLUTION","MIN_RESOLUTION","SOURCE","Base_extends","Base","BaseLayer","properties","opacity","visible","zIndex","className_","className","state_","getClassName","getLayerState","layer","managed","getOpacity","sourceState","getSourceState","getVisible","getZIndex","getLayersArray","getLayerStatesArray","opt_states","setMaxResolution","setMinResolution","setOpacity","setVisible","setZIndex","zindex","State","UNDEFINED","READY","Group_extends","Group_Property","LAYERS","Group","LayerGroup","baseOptions","layers","layersListenerKeys_","listenerKeys_","handleLayersChanged_","setLayers","handleLayerChange_","getLayers","handleLayersAdd_","handleLayersRemove_","layersArray","collectionEvent","states","pos","ownLayerState","layerState","toSize","PluggableMap_extends","ol_PluggableMap","PluggableMap","optionsInternal","keyboardEventTarget","getElementById","controls","interactions","overlays","layerGroup","createOptionsInternal","maxTilesLoading_","maxTilesLoading","pixelRatio_","animationDelayKey_","animationDelay_","renderFrame_","coordinateToPixelTransform_","pixelToCoordinateTransform_","frameIndex_","frameState_","previousExtent_","viewPropertyListenerKey_","viewChangeListenerKey_","layerGroupPropertyListenerKeys_","viewport_","overflow","msTouchAction","touchAction","overlayContainer_","overlayContainerStopEvent_","mapBrowserEventHandler_","handleMapBrowserEvent","keyboardEventTarget_","keyHandlerKeys_","handleBrowserEvent","overlays_","overlayIdIndex_","renderer_","createRenderer","handleResize_","focus_","postRenderFunctions_","tileQueue_","getTilePriority","handleTileChange_","skippedFeatureUids_","handleLayerGroupChanged_","handleViewChanged_","handleSizeChanged_","handleTargetChanged_","control","setMap","interaction","addOverlayInternal_","getId","addControl","getControls","addInteraction","getInteractions","addLayer","getLayerGroup","addOverlay","overlay","getOverlays","setTarget","forEachFeatureAtPixel","hitTolerance","layerFilter","forEachFeatureAtCoordinate","getFeaturesAtPixel","features","feature","forEachLayerAtPixel","hasFeatureAtPixel","hasFeatureAtCoordinate","getEventCoordinate","viewportPosition","getBoundingClientRect","eventPosition","top","getTarget","getTargetElement","pixelToCoordinateTransform","getOverlayById","getPixelFromCoordinate","coordinateToPixelTransform","getRenderer","getSize","getView","getOverlayContainer","getOverlayContainerStopEvent","tileSourceKey","tileCenter","tileResolution","wantedTiles","focus","mapBrowserEvent","HTMLElement","parentElement","interactionsArray","getActive","handleEvent","handlePostRender","tileQueue","hints","viewHints","lowOnFrameBudget","getLoading","getSource","loading","dispatchRenderEvent","postRenderFunctions","render","targetElement","updateSize","removeLayerRenderers","handleViewPropertyChanged_","isRendered","renderSync","removeControl","removeInteraction","removeLayer","removeOverlay","viewState","previousFrameState","hasArea","layerStatesArray","skippedFeatureUids","usedTiles","renderFrame","setLayerGroup","setSize","setView","skipFeature","computedStyle","parseFloat","unskipFeature","cache","Control_extends","control_Control","Control","target_","listenerKeys","getMap","CLASS_HIDDEN","CLASS_SELECTABLE","CLASS_UNSELECTABLE","CLASS_CONTROL","CLASS_COLLAPSED","getFontFamilies","font","family","fontFamily","Layer_extends","visibleAtResolution","layer_Layer","Layer","mapPrecomposeKey_","mapRenderKey_","sourceChangeKey_","handleSourcePropertyChange_","setSource","handleSourceChange_","layerRenderer","prepareFrame","renderEvent","Attribution_extends","Attribution_render","mapEvent","updateElement_","control_Attribution","Attribution","ulElement_","collapsed_","collapsed","overrideCollapsible_","collapsible","collapsible_","tipLabel","collapseLabel","collapseLabel_","textContent","label","label_","activeLabel","handleClick_","cssClasses","renderedAttributions_","renderedVisible_","collectSourceAttributions_","lookup","visibleAttributions","attributionGetter","getAttributions","attributions","getAttributionsCollapsible","setCollapsible","display","innerHTML","handleToggle_","classList","toggle","getCollapsible","setCollapsed","getCollapsed","Rotate_extends","Rotate_render","rotation_","autoHide_","control_Rotate","Rotate","callResetNorth_","resetNorth","duration_","autoHide","resetNorth_","Zoom_extends","control_Zoom","Zoom","zoomInLabel","zoomOutLabel","zoomInTipLabel","zoomOutTipLabel","inElement","outElement","zoomByDelta_","currentZoom","newZoom","ol_Kinetic","Kinetic","decay","minVelocity","delay","decay_","minVelocity_","delay_","points_","angle_","initialVelocity_","lastIndex","firstIndex","getAngle","interaction_Property","Interaction_extends","zoomByDelta","interaction_Interaction","Interaction","setActive","active","DoubleClickZoom_extends","stopEvent","delta_","interaction_DoubleClickZoom","DoubleClickZoom","altShiftKeysOnly","condition_focus","activeElement","always","mouseActionButton","noModifierKeys","shiftKeyOnly","targetNotEditable","tagName","mouseOnly","Pointer_extends","Pointer_centroid","pointerEvents","Pointer","PointerInteraction","handleDownEvent","handleDragEvent","handleMoveEvent","handleUpEvent","stopDown","handlingDownUpSequence","trackedPointers_","targetPointers","updateTrackedPointers_","handledUp","handled","isPointerDraggingEvent","event_1","DragPan_extends","interaction_DragPan","DragPan","kinetic_","kinetic","lastCentroid","lastPointersCount_","panning_","condition_","condition","noKinetic_","centroid","centerpx","DragRotate_extends","interaction_DragRotate","DragRotate","lastAngle_","Box_extends","Box","RenderBox","geometry_","startPixel_","endPixel_","render_","startPixel","endPixel","setPixels","createOrUpdateGeometry","getGeometry","DragBox_extends","DragBoxEventType","DragBoxEvent","interaction_DragBox","DragBox","box_","minArea_","onBoxEnd_","onBoxEnd","boxEndCondition_","boxEndCondition","defaultBoxEndCondition","DragZoom_extends","out_","mapExtent","boxPixelExtent","scaleFromCenter","interaction_DragZoom","DragZoom","KeyCode","UP","DOWN","KeyboardPan_extends","KeyboardPan_handleEvent","keyCode","mapUnitsDelta","pixelDelta_","pan","interaction_KeyboardPan","KeyboardPan","defaultCondition_","pixelDelta","KeyboardZoom_extends","KeyboardZoom_handleEvent","charCode","charCodeAt","interaction_KeyboardZoom","KeyboardZoom","MouseWheelZoom_extends","Mode","interaction_MouseWheelZoom","MouseWheelZoom","totalDelta_","lastDelta_","timeout_","useAnchor_","useAnchor","lastAnchor_","startTime_","timeoutId_","mode_","trackpadEventGap_","trackpadTimeoutId_","trackpadDeltaPerZoom_","endInteraction_","sign","wheelEvent","deltaMode","WheelEvent","DOM_DELTA_PIXEL","DOM_DELTA_LINE","wheelDeltaY","timeLeft","handleWheelZoom_","setMouseAnchor","PinchRotate_extends","interaction_PinchRotate","PinchRotate","pointerOptions","anchor_","rotating_","rotationDelta_","threshold_","threshold","rotationDelta","touch0","touch1","PinchZoom_extends","interaction_PinchZoom","PinchZoom","lastDistance_","lastScaleDelta_","scaleDelta","Event_extends","render_Event","RenderEvent","opt_inversePixelTransform","opt_context","opt_glContext","inversePixelTransform","context","glContext","HEX_COLOR_RE_","NAMED_COLOR_RE_","cacheSize","normalize","color","color_toString","g","IconImageCache","cache_","cacheSize_","maxCacheSize_","canExpireCache","expire","iconImage","src","crossOrigin","maxCacheSize","asString","shared","Map_extends","expireIconCache","renderer_Map","MapRenderer","layerRenderers_","layerRendererListeners_","calculateMatrices2D","removeLayerRendererByKey_","thisArg2","viewResolution","translatedCoordinate","projectionExtent","worldWidth","layerStates","getLayerRenderer","callback_1","getWrapX","layerKey","renderer","handleLayerRendererChange_","getLayerRenderers","scheduleExpireIconCache","scheduleRemoveUnusedLayerRenderers","layerStatesMap","acc","_loop_1","this_1","Composite_extends","Composite","CompositeMapRenderer","children_","oldChildren","oldChild","newChild","replaceChildren","getDataAtPixel","ol_Map_extends","ol_Map","Map","zoomOptions","rotateOptions","attribution","attributionOptions","altShiftDragRotate","doubleClickZoom","zoomDelta","zoomDuration","dragPan","onFocusOnly","pinchRotate","pinchZoom","keyboard","mouseWheelZoom","shiftDragZoom","interaction_defaults","TileProperty","BaseTile_extends","BaseTile","BaseTileLayer","preload","useInterimTilesOnError","setPreload","setUseInterimTilesOnError","getPreload","getUseInterimTilesOnError","TileRange","tileCoord","containsTileRange","tileRange","TileRange_createOrUpdate","ol_TileRange","LRUCache_extends","structs_LRUCache","LRUCache","opt_highWaterMark","highWaterMark","count_","entries_","oldest_","newest_","containsKey","entry","value_","key_","newer","older","peekLast","peekLastKey","peekFirstKey","LabelCache_extends","LabelCache_LabelCache","LabelCache","consumers","consumer","consumerId","prune","outer","release","defaultLineDash","defaultPadding","labelCache","checkedFonts","measureContext","textHeights","checkFont","interval","referenceWidth","retries","checked","referenceFonts","text","isAvailable","getMeasureContext","weight","fontWeight","available","referenceFont","measureText","check","done","clearInterval","fontSpec","fontFamilies","setInterval","div","heights","measureTextHeight","body","measureTextWidth","canvas_measureAndCacheTextWidth","rotateAtOffset","offsetX","offsetY","resetTransform","drawImage","image","originX","originY","alpha","globalAlpha","setTransform","ImageState","renderer_Layer_extends","renderer_Layer","LayerRenderer","layer_","loadedTileCallback","tiles","createLoadedTileFinder","forEachLoadedTile","getLayer","handleImageChange_","renderIfReadyAndVisible","loadImage","imageState","canvas_Layer_extends","canvas_Layer","CanvasLayerRenderer","renderedResolution","tempTransform_","pixelTransform_","inversePixelTransform_","transformOrigin","clip","halfWidth","halfHeight","topLeft","topRight","bottomRight","bottomLeft","save","beginPath","moveTo","lineTo","clipUnrotated","inverted","dispatchRenderEvent_","preRender","postRender","getRenderTransform","renderPixel","getImageData","Uint8Array","TileLayer_extends","TileLayer_CanvasTileLayerRenderer","CanvasTileLayerRenderer","tileLayer","extentChanged","renderedExtent_","renderedRevision","renderedTiles","newTiles_","tmpExtent","tmpTileRange_","zDirection","isDrawableTile","tileState","getTile","setState","getInterimTile","viewCenter","tileSource","sourceRevision","getTileGridForProjection","getZForResolution","tilePixelRatio","getTilePixelRatio","canvasExtent","getTileRangeForExtentAndZ","tilesToDrawByZ","findLoadedTiles","tmpTileRange","uid","inTransition","getAlpha","childTileRange","getTileCoordChildTileRange","covered","forEachTileCoordParentTileRange","canvasScale","clearRect","zs","currentZ","currentTilePixelSize","getTilePixelSize","currentScale","dx_1","dy_1","originTileCoord","getTileCoordForCoordAndZ","originTileExtent","getTileCoordExtent","origin_1","tileGutter","getGutterForProjection","tilesToDraw","tileCoordKey","floatX","nextX","floatY","nextY","drawTileImage","updateUsedTiles","manageTilePyramid","updateCacheSize_","scheduleExpireCache","restore","canvasTransform","gutter","transition","getTileImage","getOpaque","alphaChanged","endTransition","getImage","postRenderFunction","expireCache","tileCache","opt_tileCallback","getTileCoordCenter","useTile","canvas_TileLayer","Tile_extends","layer_Tile","TileLayer","asColorLike","style_Image","ImageStyle","opacity_","rotateWithView_","rotateWithView","scale_","getScale","getRotateWithView","getAnchor","getHitDetectionImage","getImageState","getImageSize","getHitDetectionImageSize","getOrigin","setRotateWithView","setScale","listenImageChange","unlistenImageChange","RegularShape_extends","style_RegularShape","RegularShape","canvas_","hitDetectionCanvas_","fill_","origin_","points","radius_","radius1","radius2_","radius2","stroke_","stroke","size_","imageSize_","hitDetectionImageSize_","getFill","getPoints","getRadius","getRadius2","getStroke","strokeStyle","lineCap","lineJoin","miterLimit","lineDash","lineDashOffset","strokeWidth","getColor","getLineDash","getLineDashOffset","getLineJoin","getLineCap","getMiterLimit","renderOptions","imageSize","draw_","createHitDetectionCanvas_","angle0","radiusC","arc","fillStyle","lineWidth","setLineDash","closePath","drawHitDetectionCanvas_","Circle_extends","Circle","CircleStyle","setRadius","style_Fill","Fill","color_","setColor","style_Stroke","Stroke","lineCap_","lineDash_","lineDashOffset_","lineJoin_","miterLimit_","width_","setLineCap","setLineDashOffset","setLineJoin","setMiterLimit","setWidth","Style","geometryFunction_","defaultGeometryFunction","setGeometry","image_","text_","zIndex_","getText","setRenderer","getGeometryFunction","setFill","setImage","setStroke","setText","defaultStyles","createDefaultStyle","style_Style","BaseVector_extends","BaseVector_Property","BaseVector","BaseVectorLayer","renderBuffer","updateWhileAnimating","updateWhileInteracting","declutter_","declutter","renderBuffer_","style_","styleFunction_","setStyle","updateWhileAnimating_","updateWhileInteracting_","getDeclutter","getRenderBuffer","getRenderOrder","getStyle","getStyleFunction","getUpdateWhileAnimating","getUpdateWhileInteracting","setRenderOrder","renderOrder","styleFunction","styles_1","toFunction","render_VectorContext","VectorContext","drawCustom","drawGeometry","drawCircle","circleGeometry","drawFeature","drawGeometryCollection","geometryCollectionGeometry","drawLineString","lineStringGeometry","drawMultiLineString","multiLineStringGeometry","drawMultiPoint","multiPointGeometry","drawMultiPolygon","multiPolygonGeometry","drawPoint","pointGeometry","drawPolygon","polygonGeometry","drawText","setFillStrokeStyle","setImageStyle","imageStyle","opt_declutterGroup","setTextStyle","textStyle","Instruction","BEGIN_GEOMETRY","BEGIN_PATH","CLOSE_PATH","CUSTOM","DRAW_CHARS","DRAW_IMAGE","END_GEOMETRY","FILL","MOVE_TO_LINE_TO","SET_FILL_STYLE","SET_STROKE_STYLE","STROKE","Instruction_fillInstruction","Instruction_strokeInstruction","beginPathInstruction","closePathInstruction","canvas_Instruction","Builder_extends","Builder","CanvasBuilder","maxLineWidth","beginGeometryInstruction1_","beginGeometryInstruction2_","bufferedMaxExtent_","instructions","tmpCoordinate_","hitDetectionInstructions","applyPixelRatio","dashArray","dash","appendFlatCoordinates","closed","skipFirst","myEnd","getBufferedMaxExtent","lastRel","nextRel","lastXCoord","lastYCoord","nextCoord","skipped","drawCustomCoordinates_","builderEnds","builderEnd","beginGeometry","builderEndss","builderBegin","getEndss","myEnds","endGeometry","finish","reverseHitDetectionInstructions","reverse","instruction","fillStyleColor","strokeStyleColor","strokeStyleLineCap","strokeStyleLineDash","strokeStyleLineDashOffset","strokeStyleLineJoin","strokeStyleWidth","strokeStyleMiterLimit","createFill","fillInstruction","applyStroke","createStroke","updateFillStyle","currentFillStyle","updateStrokeStyle","currentStrokeStyle","currentLineCap","currentLineDash","currentLineDashOffset","currentLineJoin","currentLineWidth","currentMiterLimit","endGeometryInstruction","ImageBuilder_extends","ImageBuilder","CanvasImageBuilder","declutterGroup_","hitDetectionImage_","anchorX_","anchorY_","height_","originX_","originY_","drawCoordinates_","myBegin","declutterGroup","hitDetectionImage","LineStringBuilder_extends","LineStringBuilder","CanvasLineStringBuilder","drawFlatCoordinates_","moveToLineToInstruction","lastStroke","PolygonBuilder_extends","PolygonBuilder","CanvasPolygonBuilder","drawFlatCoordinatess_","numEnds","setFillStrokeStyles_","circleInstruction","matchingChunk","maxAngle","m12","m23","x12","y12","x23","y23","chunkStart","chunkEnd","chunkM","acos","TextPlacement","TextBuilder_extends","TEXT_ALIGN","middle","hanging","alphabetic","ideographic","bottom","BATCH_CONSTRUCTORS","Default","Image","LineString","Text","CanvasTextBuilder","labels_","textOffsetX_","textOffsetY_","textRotateWithView_","textRotation_","textFillState_","fillStates","textStrokeState_","strokeStates","textState_","textStates","textKey_","fillKey_","strokeKey_","fillState","strokeState","textState","geometryType","placement","textAlign","flatOffset","flatEnd","oo","range","drawChars_","geometryWidths","getFlatMidpoint","getFlatMidpoints","interiorPoints","getFlatInteriorPoints","saveTextStates_","backgroundFill","backgroundStroke","pixelRatio_1","strokeKey","textKey","textBaseline","fillKey","baseline","textScale","textFillStyle","textStrokeStyle","getFont","getOverflow","getMaxAngle","getPlacement","getTextAlign","getTextBaseline","getBackgroundFill","getBackgroundStroke","getPadding","textOffsetX","getOffsetX","textOffsetY","getOffsetY","textRotateWithView","textRotation","canvas_BuilderGroup","BuilderGroup","tolerance_","maxExtent_","resolution_","buildersByZIndex_","addDeclutter","group","builderInstructions","zKey","builders","builderKey","builderInstruction","getBuilder","builderType","zIndexKey","replays","replay","Constructor","BuilderType","DEFAULT","IMAGE","TEXT","lineStringLength","drawTextOnPath","startM","measureAndCacheTextWidth","previousAngle","numChars","segmentM","chunk","chunkLength","char","charAt","charLength","charM","segmentPos","interpolate","unshift","Executor_extends","Executor_tmpExtent","Executor_tmpTransform","Executor_p1","Executor_p2","p3","p4","canvas_Executor","Executor","overlaps","declutterTree","alignFill_","coordinateCache_","renderedTransform_","pixelCoordinates_","viewRotation_","widths_","getTextImage","align","lines","numLines","widths","currentWidth","measureTextWidths","lineHeight","renderWidth","leftRight","strokeText","fillText","replayTextBackground_","p1","p2","strokeInstruction","setStrokeStyle_","replayImage_","snapToPixel","fillStroke","boxW","boxH","boxX","boxY","strokePadding","declutterArgs","repeatSize","renderDeclutter_","groupCount","box","declutterData","drawTextImageWithPointPlacement_","execute_","skippedFeaturesHash","featureCallback","opt_hitExtent","pixelCoordinates","transform1","transform2","dd","prevX","prevY","roundX","roundY","skipFeatures","pendingFill","pendingStroke","lastFillInstruction","lastStrokeInstruction","coordinateCache","viewRotation","batchSize","labelWithAnchor","widthIndex","measurePixelRatio","pixelRatioScale","cachedWidths","pathLength","textLength","cc","chars","execute","executeHitDetection","opt_featureCallback","ExecutorGroup_extends","ORDER","ExecutorGroup_ExecutorGroup","ExecutorGroup","allInstructions","opt_renderBuffer","declutterTree_","overlaps_","executorsByZIndex_","hitDetectionContext_","hitDetectionTransform_","createExecutors_","flatClipCoords","getClipCoords","executors","instructionByZindex","hasExecutors","candidates","declutterReplays","hitExtent","contextSize","declutteredFeatures","mask","circleArrayCache","arraySize","fillCircleArrayRowToMiddle","getCircleArray","imageData","i_1","j_1","result_1","executor","opt_builderTypes","opt_declutterReplays","builderTypes","0","canvas_ExecutorGroup","SIMPLIFY_TOLERANCE","GEOMETRY_RENDERERS","builderGroup","imageReplay","textReplay","lineStringReplay","polygonReplay","MultiPoint","MultiLineString","MultiPolygon","GeometryCollection","replayGroup","geometries","getGeometriesArray","geometryRenderer","circleReplay","defaultOrder","feature1","feature2","getSquaredTolerance","getTolerance","renderFeature","renderGeometry","getGeometries","renderFeatureInternal","VectorLayer_extends","canvas_VectorLayer","CanvasVectorLayerRenderer","vectorLayer","rbush_default","dirty_","renderedRevision_","renderedResolution_","renderedRenderOrder_","replayGroup_","replayGroupChanged","handleFontsChanged_","vectorSource","clipExtent","clipped","world","transform_1","transform_2","layer_1","features_1","handleStyleImageChange_","animating","interacting","frameStateExtent","vectorLayerRevision","vectorLayerRenderBuffer","vectorLayerRenderOrder","loadFeatures","dirty","features_2","forEachFeatureInExtent","replayGroupInstructions","executorGroup","getOverlaps","Vector_extends","Vector","VectorLayer","FormatType","ARRAY_BUFFER","XML","featureloader_xhr","url","success","failure","xhr","XMLHttpRequest","open","responseType","onload","status","responseText","responseXML","DOMParser","parseFromString","readFeatures","featureProjection","readProjection","onerror","send","loadFeaturesXhr","dataProjection","addFeatures","loadingstrategy_all","Source_extends","adaptAttributions","attributionLike","source_Source","Source","attributions_","attributionsCollapsible_","attributionsCollapsible","wrapX_","wrapX","refresh","setAttributions","VectorEventType","structs_RBush","RBush","opt_maxEntries","rbush_","items_","extents","getAll","getInExtent","forEach_","forEachInExtent","source_Vector_extends","VectorSourceEvent","opt_feature","source_Vector","VectorSource","loader_","format_","url_","loader","strategy_","strategy","collection","useSpatialIndex","featuresRtree_","loadedExtentsRtree_","nullGeometryFeatures_","idIndex_","undefIdIndex_","featureChangeKeys_","featuresCollection_","addFeaturesInternal","bindFeaturesCollection_","addFeature","addFeatureInternal","featureKey","addToIndex_","setupChangeEvents_","handleFeatureChange_","valid","newFeatures","geometryFeatures","length_1","length_2","length_3","modifyingCollection","removeFeature","opt_fast","featureId","removeFeatureInternal","clearEvent","forEachFeature","forEachFeatureAtCoordinateDirect","forEachFeatureIntersectingExtent","getFeaturesCollection","getFeatures","getFeaturesAtCoordinate","getFeaturesInExtent","getClosestFeatureToCoordinate","opt_filter","closestFeature","previousMinSquaredDistance","minDistance","getFeatureById","getFormat","getUrl","sid","removeFromIdIndex_","hasFeature","loadedExtentsRtree","extentsToLoad","extentToLoad","removeLoadedExtent","removed","setLoader","setUrl","Feature_extends","ol_Feature","Feature","opt_geometryOrProperties","id_","geometryName_","geometryChangeKey_","handleGeometryChanged_","setGeometryName","getGeometryName","handleGeometryChange_","createStyleFunction","setId","format_Feature","FeatureFormat","defaultFeatureProjection","getReadOptions","adaptOptions","readFeature","readGeometry","writeFeature","writeFeatures","writeGeometry","transformGeometryWithOptions","write","transformed","decimals","power_1","JSONFeature_extends","getObject","format_JSONFeature","JSONFeature","readFeatureFromObject","readFeaturesFromObject","readGeometryFromObject","readProjectionFromObject","writeFeatureObject","writeFeaturesObject","writeGeometryObject","GeometryCollection_extends","cloneGeometries","clonedGeometries","geom_GeometryCollection","opt_geometries","geometries_","listenGeometriesChange_","unlistenGeometriesChange_","geometryCollection","setGeometries","simplifiedGeometries","simplified","simplifiedGeometryCollection","setGeometriesArray","interpolatePoint","pointY","cumulativeLengths","haystack","needle","opt_comparator","cmp","comparator","low","high","found","binarySearch","lineStringCoordinateAtM","extrapolate","lo","hi","m0","LineString_extends","geom_LineString","flatMidpoint_","flatMidpointRevision_","appendCoordinate","forEachSegment","getCoordinateAtM","opt_extrapolate","getCoordinateAt","MultiLineString_extends","geom_MultiLineString","lineStrings","lineString","appendLineString","opt_interpolate","lineStringsCoordinateAtM","getLineString","getLineStrings","midpoints","intersectsLineStringArray","MultiPoint_extends","geom_MultiPoint","appendPoint","getPoint","MultiPolygon_extends","geom_MultiPolygon","opt_endss","endss_","flatInteriorPointsRevision_","flatInteriorPoints_","polygons","polygon","appendPolygon","newEndss","multiArrayMaxSquaredDelta","assignClosestMultiArrayPoint","linearRingssContainsXY","linearRingss","center_linearRingss","getInteriorPointsOfMultiArray","getInteriorPoints","linearRingssAreOriented","simplifiedEndss","quantizeMultiArray","getPolygon","prevEnds","getPolygons","intersectsLinearRingMultiArray","deflateMultiCoordinatesArray","lastEnds","GeoJSON_extends","readPointGeometry","readLineStringGeometry","readPolygonGeometry","readMultiPointGeometry","readMultiLineStringGeometry","readMultiPolygonGeometry","readGeometryCollectionGeometry","geoJSON","writePointGeometry","writeLineStringGeometry","rightHanded","writePolygonGeometry","writeMultiPointGeometry","writeMultiLineStringGeometry","writeMultiPolygonGeometry","writeGeometryCollectionGeometry","format_GeoJSON","GeoJSON","geometryName","extractGeometryName_","extractGeometryName","geoJSONFeature","geoJSONFeatures","crs","OverlayPositioning","BOTTOM_CENTER","CENTER_LEFT","CENTER_CENTER","CENTER_RIGHT","TOP_CENTER","Overlay_extends","Overlay_Property","ELEMENT","MAP","OFFSET","POSITION","POSITIONING","ol_Overlay","Overlay","insertFirst","autoPan","autoPanAnimation","autoPanMargin","rendered","bottom_","left_","right_","top_","mapPostrenderListenerKey","handleElementChanged","handleMapChanged","handleOffsetChanged","handlePositionChanged","handlePositioningChanged","setElement","setOffset","setPositioning","positioning","setPosition","getOffset","getPosition","getPositioning","updatePixelPosition","panIntoView","mapRect","getRect","overlayRect","offsetLeft","offsetRight","offsetTop","offsetBottom","centerPx","newCenterPx","pageXOffset","pageYOffset","mapSize","updateRenderedPosition","top_1","getOptions","toPrecision","precision","factor","ol_hashed","viewport","LOG2E","clientWidth","LN2","hashHandler","lib_default","onMoveEnd","ERROR_THRESHOLD","ol_Tile_extends","ol_Tile","Tile","interimTile","transition_","transitionStarts_","refreshInterimChain","getTileCoord","ImageTile_extends","getBlankImage","fillRect","ol_ImageTile","ImageTile","tileLoadFunction","crossOrigin_","src_","imageListenerKeys_","tileLoadFunction_","unlistenImage_","handleImageError_","handleImageLoad_","naturalWidth","naturalHeight","tilecoord_createOrUpdate","opt_tileCoord","getKeyZXY","tilecoord_getKey","TileCache_extends","ol_TileCache","TileCache","pruneExceptNewestZ","fromKey","enlargeClipPoint","centroidX","centroidY","dX","dY","reproj_render","sourceExtent","targetExtent","triangulation","opt_renderEdges","sourceDataExtent","canvasWidthInUnits","canvasHeightInUnits","stitchContext","stitchScale","xPos","yPos","srcWidth","srcHeight","targetTopLeft","getTriangles","triangle","u0","v0","u1","v1","u2","v2","sourceNumericalShiftX","sourceNumericalShiftY","affineCoefs","maxRow","maxEl","absValue","coef","solveLinearSystem","p0","MAX_SUBDIVISION","reproj_Triangulation","Triangulation","targetProj","maxSourceExtent","errorThreshold","sourceProj_","targetProj_","transformInvCache","transformInv","transformInv_","maxSourceExtent_","errorThresholdSquared_","triangles_","wrapsXInSource_","canWrapXInSource_","sourceWorldWidth_","targetWorldWidth_","destinationTopLeft","destinationTopRight","destinationBottomRight","destinationBottomLeft","sourceTopLeft","sourceTopRight","sourceBottomRight","sourceBottomLeft","addQuad_","leftBound_1","newTriangle","addTriangle_","aSrc","bSrc","cSrc","dSrc","maxSubdivision","sourceQuadExtent","sourceCoverageX","sourceWorldWidth","wrapsX","needsSubdivision","isFinite","centerSrc","bc","bcSrc","da","daSrc","ab","abSrc","cd","cdSrc","calculateSourceExtent","reproj_Tile_extends","reproj_Tile","ReprojTile","sourceTileGrid","targetTileGrid","wrappedTileCoord","getTileFunction","opt_errorThreshold","renderEdges_","gutter_","sourceTileGrid_","targetTileGrid_","wrappedTileCoord_","sourceTiles_","sourcesListenerKeys_","sourceZ_","maxTargetExtent","limitedTargetExtent","sourceProjExtent","targetMetersPerUnit","sourceMetersPerUnit","compensationFactor","calculateSourceResolution","errorThresholdInPixels","triangulation_","sourceRange","srcX","srcY","unlistenSources_","reproject_","getTileSize","leftToLoad_1","sourceListenKey_1","createFromTemplate","template","zRegEx","xRegEx","yRegEx","dashYRegEx","getFullTileRange","createFromTemplates","templates","tileUrlFunctions","createFromTileUrlFunctions","nullTileUrlFunction","tmpTileCoord","tilegrid_TileGrid","TileGrid","opt_strict","every","currentVal","res","origins","origins_","tileSizes_","tileSizes","tileSize_","tileSize","fullTileRanges_","tmpSize_","sizes","calculateTileRanges_","forEachTileCoord","opt_tileRange","tileCoordExtent","getTileRangeExtent","getTileCoordForXYAndZ_","getTileCoordForCoordAndResolution","getTileCoordForXYAndResolution_","reverseIntersectionPolicy","adjustX","adjustY","xFromOrigin","yFromOrigin","tileCoordX","tileCoordY","getTileCoordResolution","fullTileRanges","getForProjection","opt_maxZoom","opt_tileSize","opt_corner","resolutionsFromExtent","createForExtent","extentFromProjection","createForProjection","half","source_Tile_extends","Tile_TileSource","TileSource","opaque_","opaque","tilePixelRatio_","canUseScreen","screen","availWidth","availHeight","tmpSize","tileOptions","getTileCacheForProjection","loaded","setKey","getTileGrid","thisProj","getTileCoordForTileUrlFunction","worldsAway","withinExtentAndZ","TileSourceEvent","source_Tile","TileEventType","UrlTile_extends","source_UrlTile","UrlTile","generateTileUrlFunction_","tileUrlFunction","urls","setUrls","tileLoadingKeys_","getTileLoadFunction","getTileUrlFunction","getUrls","setTileLoadFunction","setTileUrlFunction","exec","startCharCode","stopCharCode","fromCharCode","stop_1","expandUrl","TileImage_extends","defaultTileLoadFunction","imageTile","source_TileImage","TileImage","tileClass","tileCacheForProjection","tileGridForProjection","reprojectionErrorThreshold_","reprojectionErrorThreshold","renderReprojectionEdges_","usedTileCache","getGutter","projKey","createTile_","urlTileCoord","tileUrl","newTile","getTileInternal","setRenderReprojectionEdges","setTileGridForProjection","tilegrid","proj","XYZ_extends","source_XYZ","xyzOptions","gridOptions","createXYZ","OSM_extends","ATTRIBUTION","source_OSM","OSM","main_map","bezirkeLayer","feedbackLayer","calculateStatistics","feedbacks","bezirke","feedback","bezirk","feedbackGeom","markup","lonLat","lon","fillColor","feedbackCount","GPSsource","GPSlayer","geolocation","watchPosition","longitude","latitude","accuracy","opt_n","opt_sphereRadius","circular","alert","enableHighAccuracy","locate"],"mappings":"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","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 28);\n","const util = require('util');\n\n/**\n * Get the type of a value.\n * @param {*} value The value.\n * @return {string} The type.\n */\nexports.typeOf = function typeOf(value) {\n  let type = typeof value;\n  if (type === 'object') {\n    if (value === null) {\n      type = 'null';\n    } else if (util.isArray(value)) {\n      type = 'array';\n    } else if (util.isDate(value)) {\n      type = 'date';\n    } else if (util.isRegExp(value)) {\n      type = 'regexp';\n    } else if (util.isError(value)) {\n      type = 'error';\n    }\n  }\n  return type;\n};\n\n/**\n * Copy properties from one object to another.\n * @param {Object} dest The destination object.\n * @param {Object} source The source object.\n * @return {Object} The destination object.\n */\nexports.extend = function(dest, source) {\n  for (const key in source) {\n    dest[key] = source[key];\n  }\n  return dest;\n};\n\n/**\n * Generate an array of alternating name, value from an object's properties.\n * @param {Object} object The object to zip.\n * @return {Array} The array of name, value [, name, value]*.\n */\nexports.zip = function(object) {\n  const zipped = [];\n  let count = 0;\n  for (const key in object) {\n    zipped[2 * count] = key;\n    zipped[2 * count + 1] = object[key];\n    ++count;\n  }\n  return zipped;\n};\n\n/**\n * Generate an object from an array of alternating name, value items.\n * @param {Array} array The array of name, value [, name, value]*.\n * @return {Object} The zipped up object.\n */\nexports.unzip = function(array) {\n  const object = {};\n  for (let i = 0, ii = array.length; i < ii; i += 2) {\n    object[array[i]] = array[i + 1];\n  }\n  return object;\n};\n","'use strict';\n\nmodule.exports = rbush;\nmodule.exports.default = rbush;\n\nvar quickselect = require('quickselect');\n\nfunction rbush(maxEntries, format) {\n    if (!(this instanceof rbush)) return new rbush(maxEntries, format);\n\n    // max entries in a node is 9 by default; min node fill is 40% for best performance\n    this._maxEntries = Math.max(4, maxEntries || 9);\n    this._minEntries = Math.max(2, Math.ceil(this._maxEntries * 0.4));\n\n    if (format) {\n        this._initFormat(format);\n    }\n\n    this.clear();\n}\n\nrbush.prototype = {\n\n    all: function () {\n        return this._all(this.data, []);\n    },\n\n    search: function (bbox) {\n\n        var node = this.data,\n            result = [],\n            toBBox = this.toBBox;\n\n        if (!intersects(bbox, node)) return result;\n\n        var nodesToSearch = [],\n            i, len, child, childBBox;\n\n        while (node) {\n            for (i = 0, len = node.children.length; i < len; i++) {\n\n                child = node.children[i];\n                childBBox = node.leaf ? toBBox(child) : child;\n\n                if (intersects(bbox, childBBox)) {\n                    if (node.leaf) result.push(child);\n                    else if (contains(bbox, childBBox)) this._all(child, result);\n                    else nodesToSearch.push(child);\n                }\n            }\n            node = nodesToSearch.pop();\n        }\n\n        return result;\n    },\n\n    collides: function (bbox) {\n\n        var node = this.data,\n            toBBox = this.toBBox;\n\n        if (!intersects(bbox, node)) return false;\n\n        var nodesToSearch = [],\n            i, len, child, childBBox;\n\n        while (node) {\n            for (i = 0, len = node.children.length; i < len; i++) {\n\n                child = node.children[i];\n                childBBox = node.leaf ? toBBox(child) : child;\n\n                if (intersects(bbox, childBBox)) {\n                    if (node.leaf || contains(bbox, childBBox)) return true;\n                    nodesToSearch.push(child);\n                }\n            }\n            node = nodesToSearch.pop();\n        }\n\n        return false;\n    },\n\n    load: function (data) {\n        if (!(data && data.length)) return this;\n\n        if (data.length < this._minEntries) {\n            for (var i = 0, len = data.length; i < len; i++) {\n                this.insert(data[i]);\n            }\n            return this;\n        }\n\n        // recursively build the tree with the given data from scratch using OMT algorithm\n        var node = this._build(data.slice(), 0, data.length - 1, 0);\n\n        if (!this.data.children.length) {\n            // save as is if tree is empty\n            this.data = node;\n\n        } else if (this.data.height === node.height) {\n            // split root if trees have the same height\n            this._splitRoot(this.data, node);\n\n        } else {\n            if (this.data.height < node.height) {\n                // swap trees if inserted one is bigger\n                var tmpNode = this.data;\n                this.data = node;\n                node = tmpNode;\n            }\n\n            // insert the small tree into the large tree at appropriate level\n            this._insert(node, this.data.height - node.height - 1, true);\n        }\n\n        return this;\n    },\n\n    insert: function (item) {\n        if (item) this._insert(item, this.data.height - 1);\n        return this;\n    },\n\n    clear: function () {\n        this.data = createNode([]);\n        return this;\n    },\n\n    remove: function (item, equalsFn) {\n        if (!item) return this;\n\n        var node = this.data,\n            bbox = this.toBBox(item),\n            path = [],\n            indexes = [],\n            i, parent, index, goingUp;\n\n        // depth-first iterative tree traversal\n        while (node || path.length) {\n\n            if (!node) { // go up\n                node = path.pop();\n                parent = path[path.length - 1];\n                i = indexes.pop();\n                goingUp = true;\n            }\n\n            if (node.leaf) { // check current node\n                index = findItem(item, node.children, equalsFn);\n\n                if (index !== -1) {\n                    // item found, remove the item and condense tree upwards\n                    node.children.splice(index, 1);\n                    path.push(node);\n                    this._condense(path);\n                    return this;\n                }\n            }\n\n            if (!goingUp && !node.leaf && contains(node, bbox)) { // go down\n                path.push(node);\n                indexes.push(i);\n                i = 0;\n                parent = node;\n                node = node.children[0];\n\n            } else if (parent) { // go right\n                i++;\n                node = parent.children[i];\n                goingUp = false;\n\n            } else node = null; // nothing found\n        }\n\n        return this;\n    },\n\n    toBBox: function (item) { return item; },\n\n    compareMinX: compareNodeMinX,\n    compareMinY: compareNodeMinY,\n\n    toJSON: function () { return this.data; },\n\n    fromJSON: function (data) {\n        this.data = data;\n        return this;\n    },\n\n    _all: function (node, result) {\n        var nodesToSearch = [];\n        while (node) {\n            if (node.leaf) result.push.apply(result, node.children);\n            else nodesToSearch.push.apply(nodesToSearch, node.children);\n\n            node = nodesToSearch.pop();\n        }\n        return result;\n    },\n\n    _build: function (items, left, right, height) {\n\n        var N = right - left + 1,\n            M = this._maxEntries,\n            node;\n\n        if (N <= M) {\n            // reached leaf level; return leaf\n            node = createNode(items.slice(left, right + 1));\n            calcBBox(node, this.toBBox);\n            return node;\n        }\n\n        if (!height) {\n            // target height of the bulk-loaded tree\n            height = Math.ceil(Math.log(N) / Math.log(M));\n\n            // target number of root entries to maximize storage utilization\n            M = Math.ceil(N / Math.pow(M, height - 1));\n        }\n\n        node = createNode([]);\n        node.leaf = false;\n        node.height = height;\n\n        // split the items into M mostly square tiles\n\n        var N2 = Math.ceil(N / M),\n            N1 = N2 * Math.ceil(Math.sqrt(M)),\n            i, j, right2, right3;\n\n        multiSelect(items, left, right, N1, this.compareMinX);\n\n        for (i = left; i <= right; i += N1) {\n\n            right2 = Math.min(i + N1 - 1, right);\n\n            multiSelect(items, i, right2, N2, this.compareMinY);\n\n            for (j = i; j <= right2; j += N2) {\n\n                right3 = Math.min(j + N2 - 1, right2);\n\n                // pack each entry recursively\n                node.children.push(this._build(items, j, right3, height - 1));\n            }\n        }\n\n        calcBBox(node, this.toBBox);\n\n        return node;\n    },\n\n    _chooseSubtree: function (bbox, node, level, path) {\n\n        var i, len, child, targetNode, area, enlargement, minArea, minEnlargement;\n\n        while (true) {\n            path.push(node);\n\n            if (node.leaf || path.length - 1 === level) break;\n\n            minArea = minEnlargement = Infinity;\n\n            for (i = 0, len = node.children.length; i < len; i++) {\n                child = node.children[i];\n                area = bboxArea(child);\n                enlargement = enlargedArea(bbox, child) - area;\n\n                // choose entry with the least area enlargement\n                if (enlargement < minEnlargement) {\n                    minEnlargement = enlargement;\n                    minArea = area < minArea ? area : minArea;\n                    targetNode = child;\n\n                } else if (enlargement === minEnlargement) {\n                    // otherwise choose one with the smallest area\n                    if (area < minArea) {\n                        minArea = area;\n                        targetNode = child;\n                    }\n                }\n            }\n\n            node = targetNode || node.children[0];\n        }\n\n        return node;\n    },\n\n    _insert: function (item, level, isNode) {\n\n        var toBBox = this.toBBox,\n            bbox = isNode ? item : toBBox(item),\n            insertPath = [];\n\n        // find the best node for accommodating the item, saving all nodes along the path too\n        var node = this._chooseSubtree(bbox, this.data, level, insertPath);\n\n        // put the item into the node\n        node.children.push(item);\n        extend(node, bbox);\n\n        // split on node overflow; propagate upwards if necessary\n        while (level >= 0) {\n            if (insertPath[level].children.length > this._maxEntries) {\n                this._split(insertPath, level);\n                level--;\n            } else break;\n        }\n\n        // adjust bboxes along the insertion path\n        this._adjustParentBBoxes(bbox, insertPath, level);\n    },\n\n    // split overflowed node into two\n    _split: function (insertPath, level) {\n\n        var node = insertPath[level],\n            M = node.children.length,\n            m = this._minEntries;\n\n        this._chooseSplitAxis(node, m, M);\n\n        var splitIndex = this._chooseSplitIndex(node, m, M);\n\n        var newNode = createNode(node.children.splice(splitIndex, node.children.length - splitIndex));\n        newNode.height = node.height;\n        newNode.leaf = node.leaf;\n\n        calcBBox(node, this.toBBox);\n        calcBBox(newNode, this.toBBox);\n\n        if (level) insertPath[level - 1].children.push(newNode);\n        else this._splitRoot(node, newNode);\n    },\n\n    _splitRoot: function (node, newNode) {\n        // split root node\n        this.data = createNode([node, newNode]);\n        this.data.height = node.height + 1;\n        this.data.leaf = false;\n        calcBBox(this.data, this.toBBox);\n    },\n\n    _chooseSplitIndex: function (node, m, M) {\n\n        var i, bbox1, bbox2, overlap, area, minOverlap, minArea, index;\n\n        minOverlap = minArea = Infinity;\n\n        for (i = m; i <= M - m; i++) {\n            bbox1 = distBBox(node, 0, i, this.toBBox);\n            bbox2 = distBBox(node, i, M, this.toBBox);\n\n            overlap = intersectionArea(bbox1, bbox2);\n            area = bboxArea(bbox1) + bboxArea(bbox2);\n\n            // choose distribution with minimum overlap\n            if (overlap < minOverlap) {\n                minOverlap = overlap;\n                index = i;\n\n                minArea = area < minArea ? area : minArea;\n\n            } else if (overlap === minOverlap) {\n                // otherwise choose distribution with minimum area\n                if (area < minArea) {\n                    minArea = area;\n                    index = i;\n                }\n            }\n        }\n\n        return index;\n    },\n\n    // sorts node children by the best axis for split\n    _chooseSplitAxis: function (node, m, M) {\n\n        var compareMinX = node.leaf ? this.compareMinX : compareNodeMinX,\n            compareMinY = node.leaf ? this.compareMinY : compareNodeMinY,\n            xMargin = this._allDistMargin(node, m, M, compareMinX),\n            yMargin = this._allDistMargin(node, m, M, compareMinY);\n\n        // if total distributions margin value is minimal for x, sort by minX,\n        // otherwise it's already sorted by minY\n        if (xMargin < yMargin) node.children.sort(compareMinX);\n    },\n\n    // total margin of all possible split distributions where each node is at least m full\n    _allDistMargin: function (node, m, M, compare) {\n\n        node.children.sort(compare);\n\n        var toBBox = this.toBBox,\n            leftBBox = distBBox(node, 0, m, toBBox),\n            rightBBox = distBBox(node, M - m, M, toBBox),\n            margin = bboxMargin(leftBBox) + bboxMargin(rightBBox),\n            i, child;\n\n        for (i = m; i < M - m; i++) {\n            child = node.children[i];\n            extend(leftBBox, node.leaf ? toBBox(child) : child);\n            margin += bboxMargin(leftBBox);\n        }\n\n        for (i = M - m - 1; i >= m; i--) {\n            child = node.children[i];\n            extend(rightBBox, node.leaf ? toBBox(child) : child);\n            margin += bboxMargin(rightBBox);\n        }\n\n        return margin;\n    },\n\n    _adjustParentBBoxes: function (bbox, path, level) {\n        // adjust bboxes along the given tree path\n        for (var i = level; i >= 0; i--) {\n            extend(path[i], bbox);\n        }\n    },\n\n    _condense: function (path) {\n        // go through the path, removing empty nodes and updating bboxes\n        for (var i = path.length - 1, siblings; i >= 0; i--) {\n            if (path[i].children.length === 0) {\n                if (i > 0) {\n                    siblings = path[i - 1].children;\n                    siblings.splice(siblings.indexOf(path[i]), 1);\n\n                } else this.clear();\n\n            } else calcBBox(path[i], this.toBBox);\n        }\n    },\n\n    _initFormat: function (format) {\n        // data format (minX, minY, maxX, maxY accessors)\n\n        // uses eval-type function compilation instead of just accepting a toBBox function\n        // because the algorithms are very sensitive to sorting functions performance,\n        // so they should be dead simple and without inner calls\n\n        var compareArr = ['return a', ' - b', ';'];\n\n        this.compareMinX = new Function('a', 'b', compareArr.join(format[0]));\n        this.compareMinY = new Function('a', 'b', compareArr.join(format[1]));\n\n        this.toBBox = new Function('a',\n            'return {minX: a' + format[0] +\n            ', minY: a' + format[1] +\n            ', maxX: a' + format[2] +\n            ', maxY: a' + format[3] + '};');\n    }\n};\n\nfunction findItem(item, items, equalsFn) {\n    if (!equalsFn) return items.indexOf(item);\n\n    for (var i = 0; i < items.length; i++) {\n        if (equalsFn(item, items[i])) return i;\n    }\n    return -1;\n}\n\n// calculate node's bbox from bboxes of its children\nfunction calcBBox(node, toBBox) {\n    distBBox(node, 0, node.children.length, toBBox, node);\n}\n\n// min bounding rectangle of node children from k to p-1\nfunction distBBox(node, k, p, toBBox, destNode) {\n    if (!destNode) destNode = createNode(null);\n    destNode.minX = Infinity;\n    destNode.minY = Infinity;\n    destNode.maxX = -Infinity;\n    destNode.maxY = -Infinity;\n\n    for (var i = k, child; i < p; i++) {\n        child = node.children[i];\n        extend(destNode, node.leaf ? toBBox(child) : child);\n    }\n\n    return destNode;\n}\n\nfunction extend(a, b) {\n    a.minX = Math.min(a.minX, b.minX);\n    a.minY = Math.min(a.minY, b.minY);\n    a.maxX = Math.max(a.maxX, b.maxX);\n    a.maxY = Math.max(a.maxY, b.maxY);\n    return a;\n}\n\nfunction compareNodeMinX(a, b) { return a.minX - b.minX; }\nfunction compareNodeMinY(a, b) { return a.minY - b.minY; }\n\nfunction bboxArea(a)   { return (a.maxX - a.minX) * (a.maxY - a.minY); }\nfunction bboxMargin(a) { return (a.maxX - a.minX) + (a.maxY - a.minY); }\n\nfunction enlargedArea(a, b) {\n    return (Math.max(b.maxX, a.maxX) - Math.min(b.minX, a.minX)) *\n           (Math.max(b.maxY, a.maxY) - Math.min(b.minY, a.minY));\n}\n\nfunction intersectionArea(a, b) {\n    var minX = Math.max(a.minX, b.minX),\n        minY = Math.max(a.minY, b.minY),\n        maxX = Math.min(a.maxX, b.maxX),\n        maxY = Math.min(a.maxY, b.maxY);\n\n    return Math.max(0, maxX - minX) *\n           Math.max(0, maxY - minY);\n}\n\nfunction contains(a, b) {\n    return a.minX <= b.minX &&\n           a.minY <= b.minY &&\n           b.maxX <= a.maxX &&\n           b.maxY <= a.maxY;\n}\n\nfunction intersects(a, b) {\n    return b.minX <= a.maxX &&\n           b.minY <= a.maxY &&\n           b.maxX >= a.minX &&\n           b.maxY >= a.minY;\n}\n\nfunction createNode(children) {\n    return {\n        children: children,\n        height: 1,\n        leaf: true,\n        minX: Infinity,\n        minY: Infinity,\n        maxX: -Infinity,\n        maxY: -Infinity\n    };\n}\n\n// sort an array so that items come in groups of n unsorted items, with groups sorted between each other;\n// combines selection algorithm with binary divide & conquer approach\n\nfunction multiSelect(arr, left, right, n, compare) {\n    var stack = [left, right],\n        mid;\n\n    while (stack.length) {\n        right = stack.pop();\n        left = stack.pop();\n\n        if (right - left <= n) continue;\n\n        mid = left + Math.ceil((right - left) / n / 2) * n;\n        quickselect(arr, mid, left, right, compare);\n\n        stack.push(left, mid, mid, right);\n    }\n}\n","const Store = require('./store').Store;\nconst hash = require('./hash');\n\nlet store;\n\nfunction reset() {\n  if (store) {\n    window.removeEventListener('popstate', update);\n  }\n  window.addEventListener('popstate', update);\n  store = new Store(hash.deserialize(location.hash), function(\n    values,\n    defaults\n  ) {\n    const nonDefaults = {};\n    for (const key in values) {\n      if (values[key] !== defaults[key]) {\n        nonDefaults[key] = values[key];\n      }\n    }\n    history.pushState(values, '', hash.serialize(nonDefaults));\n  });\n}\n\nfunction update() {\n  store.update(hash.deserialize(location.hash));\n}\n\n/**\n * Register a new state provider.\n * @param {Object} config Schema config.\n * @param {function(Object)} callback Called immediately with initial state.\n * @return {function(Object)} Call this function with any updates to the state.\n */\nexports.register = function(config, callback) {\n  return store.register(config, callback);\n};\n\n/**\n * Unregister an existing state provider.\n * @param {function(Object)} callback Callback registered by the provider.\n */\nexports.unregister = function(callback) {\n  store.unregister(callback);\n};\n\n/**\n * Serialize values as they would be represented in the hash.\n * @param {Object} values An object with values to be serialized.\n * @return {string} The values as they would be represented in the hash.\n */\nexports.serialize = function(values) {\n  return hash.serialize(store.serialize(values));\n};\n\nexports.reset = reset;\n\nreset();\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nvar getOwnPropertyDescriptors = Object.getOwnPropertyDescriptors ||\n  function getOwnPropertyDescriptors(obj) {\n    var keys = Object.keys(obj);\n    var descriptors = {};\n    for (var i = 0; i < keys.length; i++) {\n      descriptors[keys[i]] = Object.getOwnPropertyDescriptor(obj, keys[i]);\n    }\n    return descriptors;\n  };\n\nvar formatRegExp = /%[sdj%]/g;\nexports.format = function(f) {\n  if (!isString(f)) {\n    var objects = [];\n    for (var i = 0; i < arguments.length; i++) {\n      objects.push(inspect(arguments[i]));\n    }\n    return objects.join(' ');\n  }\n\n  var i = 1;\n  var args = arguments;\n  var len = args.length;\n  var str = String(f).replace(formatRegExp, function(x) {\n    if (x === '%%') return '%';\n    if (i >= len) return x;\n    switch (x) {\n      case '%s': return String(args[i++]);\n      case '%d': return Number(args[i++]);\n      case '%j':\n        try {\n          return JSON.stringify(args[i++]);\n        } catch (_) {\n          return '[Circular]';\n        }\n      default:\n        return x;\n    }\n  });\n  for (var x = args[i]; i < len; x = args[++i]) {\n    if (isNull(x) || !isObject(x)) {\n      str += ' ' + x;\n    } else {\n      str += ' ' + inspect(x);\n    }\n  }\n  return str;\n};\n\n\n// Mark that a method should not be used.\n// Returns a modified function which warns once by default.\n// If --no-deprecation is set, then it is a no-op.\nexports.deprecate = function(fn, msg) {\n  if (typeof process !== 'undefined' && process.noDeprecation === true) {\n    return fn;\n  }\n\n  // Allow for deprecating things in the process of starting up.\n  if (typeof process === 'undefined') {\n    return function() {\n      return exports.deprecate(fn, msg).apply(this, arguments);\n    };\n  }\n\n  var warned = false;\n  function deprecated() {\n    if (!warned) {\n      if (process.throwDeprecation) {\n        throw new Error(msg);\n      } else if (process.traceDeprecation) {\n        console.trace(msg);\n      } else {\n        console.error(msg);\n      }\n      warned = true;\n    }\n    return fn.apply(this, arguments);\n  }\n\n  return deprecated;\n};\n\n\nvar debugs = {};\nvar debugEnviron;\nexports.debuglog = function(set) {\n  if (isUndefined(debugEnviron))\n    debugEnviron = process.env.NODE_DEBUG || '';\n  set = set.toUpperCase();\n  if (!debugs[set]) {\n    if (new RegExp('\\\\b' + set + '\\\\b', 'i').test(debugEnviron)) {\n      var pid = process.pid;\n      debugs[set] = function() {\n        var msg = exports.format.apply(exports, arguments);\n        console.error('%s %d: %s', set, pid, msg);\n      };\n    } else {\n      debugs[set] = function() {};\n    }\n  }\n  return debugs[set];\n};\n\n\n/**\n * Echos the value of a value. Trys to print the value out\n * in the best way possible given the different types.\n *\n * @param {Object} obj The object to print out.\n * @param {Object} opts Optional options object that alters the output.\n */\n/* legacy: obj, showHidden, depth, colors*/\nfunction inspect(obj, opts) {\n  // default options\n  var ctx = {\n    seen: [],\n    stylize: stylizeNoColor\n  };\n  // legacy...\n  if (arguments.length >= 3) ctx.depth = arguments[2];\n  if (arguments.length >= 4) ctx.colors = arguments[3];\n  if (isBoolean(opts)) {\n    // legacy...\n    ctx.showHidden = opts;\n  } else if (opts) {\n    // got an \"options\" object\n    exports._extend(ctx, opts);\n  }\n  // set default options\n  if (isUndefined(ctx.showHidden)) ctx.showHidden = false;\n  if (isUndefined(ctx.depth)) ctx.depth = 2;\n  if (isUndefined(ctx.colors)) ctx.colors = false;\n  if (isUndefined(ctx.customInspect)) ctx.customInspect = true;\n  if (ctx.colors) ctx.stylize = stylizeWithColor;\n  return formatValue(ctx, obj, ctx.depth);\n}\nexports.inspect = inspect;\n\n\n// http://en.wikipedia.org/wiki/ANSI_escape_code#graphics\ninspect.colors = {\n  'bold' : [1, 22],\n  'italic' : [3, 23],\n  'underline' : [4, 24],\n  'inverse' : [7, 27],\n  'white' : [37, 39],\n  'grey' : [90, 39],\n  'black' : [30, 39],\n  'blue' : [34, 39],\n  'cyan' : [36, 39],\n  'green' : [32, 39],\n  'magenta' : [35, 39],\n  'red' : [31, 39],\n  'yellow' : [33, 39]\n};\n\n// Don't use 'blue' not visible on cmd.exe\ninspect.styles = {\n  'special': 'cyan',\n  'number': 'yellow',\n  'boolean': 'yellow',\n  'undefined': 'grey',\n  'null': 'bold',\n  'string': 'green',\n  'date': 'magenta',\n  // \"name\": intentionally not styling\n  'regexp': 'red'\n};\n\n\nfunction stylizeWithColor(str, styleType) {\n  var style = inspect.styles[styleType];\n\n  if (style) {\n    return '\\u001b[' + inspect.colors[style][0] + 'm' + str +\n           '\\u001b[' + inspect.colors[style][1] + 'm';\n  } else {\n    return str;\n  }\n}\n\n\nfunction stylizeNoColor(str, styleType) {\n  return str;\n}\n\n\nfunction arrayToHash(array) {\n  var hash = {};\n\n  array.forEach(function(val, idx) {\n    hash[val] = true;\n  });\n\n  return hash;\n}\n\n\nfunction formatValue(ctx, value, recurseTimes) {\n  // Provide a hook for user-specified inspect functions.\n  // Check that value is an object with an inspect function on it\n  if (ctx.customInspect &&\n      value &&\n      isFunction(value.inspect) &&\n      // Filter out the util module, it's inspect function is special\n      value.inspect !== exports.inspect &&\n      // Also filter out any prototype objects using the circular check.\n      !(value.constructor && value.constructor.prototype === value)) {\n    var ret = value.inspect(recurseTimes, ctx);\n    if (!isString(ret)) {\n      ret = formatValue(ctx, ret, recurseTimes);\n    }\n    return ret;\n  }\n\n  // Primitive types cannot have properties\n  var primitive = formatPrimitive(ctx, value);\n  if (primitive) {\n    return primitive;\n  }\n\n  // Look up the keys of the object.\n  var keys = Object.keys(value);\n  var visibleKeys = arrayToHash(keys);\n\n  if (ctx.showHidden) {\n    keys = Object.getOwnPropertyNames(value);\n  }\n\n  // IE doesn't make error fields non-enumerable\n  // http://msdn.microsoft.com/en-us/library/ie/dww52sbt(v=vs.94).aspx\n  if (isError(value)\n      && (keys.indexOf('message') >= 0 || keys.indexOf('description') >= 0)) {\n    return formatError(value);\n  }\n\n  // Some type of object without properties can be shortcutted.\n  if (keys.length === 0) {\n    if (isFunction(value)) {\n      var name = value.name ? ': ' + value.name : '';\n      return ctx.stylize('[Function' + name + ']', 'special');\n    }\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    }\n    if (isDate(value)) {\n      return ctx.stylize(Date.prototype.toString.call(value), 'date');\n    }\n    if (isError(value)) {\n      return formatError(value);\n    }\n  }\n\n  var base = '', array = false, braces = ['{', '}'];\n\n  // Make Array say that they are Array\n  if (isArray(value)) {\n    array = true;\n    braces = ['[', ']'];\n  }\n\n  // Make functions say that they are functions\n  if (isFunction(value)) {\n    var n = value.name ? ': ' + value.name : '';\n    base = ' [Function' + n + ']';\n  }\n\n  // Make RegExps say that they are RegExps\n  if (isRegExp(value)) {\n    base = ' ' + RegExp.prototype.toString.call(value);\n  }\n\n  // Make dates with properties first say the date\n  if (isDate(value)) {\n    base = ' ' + Date.prototype.toUTCString.call(value);\n  }\n\n  // Make error with message first say the error\n  if (isError(value)) {\n    base = ' ' + formatError(value);\n  }\n\n  if (keys.length === 0 && (!array || value.length == 0)) {\n    return braces[0] + base + braces[1];\n  }\n\n  if (recurseTimes < 0) {\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    } else {\n      return ctx.stylize('[Object]', 'special');\n    }\n  }\n\n  ctx.seen.push(value);\n\n  var output;\n  if (array) {\n    output = formatArray(ctx, value, recurseTimes, visibleKeys, keys);\n  } else {\n    output = keys.map(function(key) {\n      return formatProperty(ctx, value, recurseTimes, visibleKeys, key, array);\n    });\n  }\n\n  ctx.seen.pop();\n\n  return reduceToSingleString(output, base, braces);\n}\n\n\nfunction formatPrimitive(ctx, value) {\n  if (isUndefined(value))\n    return ctx.stylize('undefined', 'undefined');\n  if (isString(value)) {\n    var simple = '\\'' + JSON.stringify(value).replace(/^\"|\"$/g, '')\n                                             .replace(/'/g, \"\\\\'\")\n                                             .replace(/\\\\\"/g, '\"') + '\\'';\n    return ctx.stylize(simple, 'string');\n  }\n  if (isNumber(value))\n    return ctx.stylize('' + value, 'number');\n  if (isBoolean(value))\n    return ctx.stylize('' + value, 'boolean');\n  // For some reason typeof null is \"object\", so special case here.\n  if (isNull(value))\n    return ctx.stylize('null', 'null');\n}\n\n\nfunction formatError(value) {\n  return '[' + Error.prototype.toString.call(value) + ']';\n}\n\n\nfunction formatArray(ctx, value, recurseTimes, visibleKeys, keys) {\n  var output = [];\n  for (var i = 0, l = value.length; i < l; ++i) {\n    if (hasOwnProperty(value, String(i))) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          String(i), true));\n    } else {\n      output.push('');\n    }\n  }\n  keys.forEach(function(key) {\n    if (!key.match(/^\\d+$/)) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          key, true));\n    }\n  });\n  return output;\n}\n\n\nfunction formatProperty(ctx, value, recurseTimes, visibleKeys, key, array) {\n  var name, str, desc;\n  desc = Object.getOwnPropertyDescriptor(value, key) || { value: value[key] };\n  if (desc.get) {\n    if (desc.set) {\n      str = ctx.stylize('[Getter/Setter]', 'special');\n    } else {\n      str = ctx.stylize('[Getter]', 'special');\n    }\n  } else {\n    if (desc.set) {\n      str = ctx.stylize('[Setter]', 'special');\n    }\n  }\n  if (!hasOwnProperty(visibleKeys, key)) {\n    name = '[' + key + ']';\n  }\n  if (!str) {\n    if (ctx.seen.indexOf(desc.value) < 0) {\n      if (isNull(recurseTimes)) {\n        str = formatValue(ctx, desc.value, null);\n      } else {\n        str = formatValue(ctx, desc.value, recurseTimes - 1);\n      }\n      if (str.indexOf('\\n') > -1) {\n        if (array) {\n          str = str.split('\\n').map(function(line) {\n            return '  ' + line;\n          }).join('\\n').substr(2);\n        } else {\n          str = '\\n' + str.split('\\n').map(function(line) {\n            return '   ' + line;\n          }).join('\\n');\n        }\n      }\n    } else {\n      str = ctx.stylize('[Circular]', 'special');\n    }\n  }\n  if (isUndefined(name)) {\n    if (array && key.match(/^\\d+$/)) {\n      return str;\n    }\n    name = JSON.stringify('' + key);\n    if (name.match(/^\"([a-zA-Z_][a-zA-Z_0-9]*)\"$/)) {\n      name = name.substr(1, name.length - 2);\n      name = ctx.stylize(name, 'name');\n    } else {\n      name = name.replace(/'/g, \"\\\\'\")\n                 .replace(/\\\\\"/g, '\"')\n                 .replace(/(^\"|\"$)/g, \"'\");\n      name = ctx.stylize(name, 'string');\n    }\n  }\n\n  return name + ': ' + str;\n}\n\n\nfunction reduceToSingleString(output, base, braces) {\n  var numLinesEst = 0;\n  var length = output.reduce(function(prev, cur) {\n    numLinesEst++;\n    if (cur.indexOf('\\n') >= 0) numLinesEst++;\n    return prev + cur.replace(/\\u001b\\[\\d\\d?m/g, '').length + 1;\n  }, 0);\n\n  if (length > 60) {\n    return braces[0] +\n           (base === '' ? '' : base + '\\n ') +\n           ' ' +\n           output.join(',\\n  ') +\n           ' ' +\n           braces[1];\n  }\n\n  return braces[0] + base + ' ' + output.join(', ') + ' ' + braces[1];\n}\n\n\n// NOTE: These type checking functions intentionally don't use `instanceof`\n// because it is fragile and can be easily faked with `Object.create()`.\nfunction isArray(ar) {\n  return Array.isArray(ar);\n}\nexports.isArray = isArray;\n\nfunction isBoolean(arg) {\n  return typeof arg === 'boolean';\n}\nexports.isBoolean = isBoolean;\n\nfunction isNull(arg) {\n  return arg === null;\n}\nexports.isNull = isNull;\n\nfunction isNullOrUndefined(arg) {\n  return arg == null;\n}\nexports.isNullOrUndefined = isNullOrUndefined;\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\nexports.isNumber = isNumber;\n\nfunction isString(arg) {\n  return typeof arg === 'string';\n}\nexports.isString = isString;\n\nfunction isSymbol(arg) {\n  return typeof arg === 'symbol';\n}\nexports.isSymbol = isSymbol;\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\nexports.isUndefined = isUndefined;\n\nfunction isRegExp(re) {\n  return isObject(re) && objectToString(re) === '[object RegExp]';\n}\nexports.isRegExp = isRegExp;\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\nexports.isObject = isObject;\n\nfunction isDate(d) {\n  return isObject(d) && objectToString(d) === '[object Date]';\n}\nexports.isDate = isDate;\n\nfunction isError(e) {\n  return isObject(e) &&\n      (objectToString(e) === '[object Error]' || e instanceof Error);\n}\nexports.isError = isError;\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\nexports.isFunction = isFunction;\n\nfunction isPrimitive(arg) {\n  return arg === null ||\n         typeof arg === 'boolean' ||\n         typeof arg === 'number' ||\n         typeof arg === 'string' ||\n         typeof arg === 'symbol' ||  // ES6 symbol\n         typeof arg === 'undefined';\n}\nexports.isPrimitive = isPrimitive;\n\nexports.isBuffer = require('./support/isBuffer');\n\nfunction objectToString(o) {\n  return Object.prototype.toString.call(o);\n}\n\n\nfunction pad(n) {\n  return n < 10 ? '0' + n.toString(10) : n.toString(10);\n}\n\n\nvar months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep',\n              'Oct', 'Nov', 'Dec'];\n\n// 26 Feb 16:19:34\nfunction timestamp() {\n  var d = new Date();\n  var time = [pad(d.getHours()),\n              pad(d.getMinutes()),\n              pad(d.getSeconds())].join(':');\n  return [d.getDate(), months[d.getMonth()], time].join(' ');\n}\n\n\n// log is just a thin wrapper to console.log that prepends a timestamp\nexports.log = function() {\n  console.log('%s - %s', timestamp(), exports.format.apply(exports, arguments));\n};\n\n\n/**\n * Inherit the prototype methods from one constructor into another.\n *\n * The Function.prototype.inherits from lang.js rewritten as a standalone\n * function (not on Function.prototype). NOTE: If this file is to be loaded\n * during bootstrapping this function needs to be rewritten using some native\n * functions as prototype setup using normal JavaScript does not work as\n * expected during bootstrapping (see mirror.js in r114903).\n *\n * @param {function} ctor Constructor function which needs to inherit the\n *     prototype.\n * @param {function} superCtor Constructor function to inherit prototype from.\n */\nexports.inherits = require('inherits');\n\nexports._extend = function(origin, add) {\n  // Don't do anything if add isn't an object\n  if (!add || !isObject(add)) return origin;\n\n  var keys = Object.keys(add);\n  var i = keys.length;\n  while (i--) {\n    origin[keys[i]] = add[keys[i]];\n  }\n  return origin;\n};\n\nfunction hasOwnProperty(obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n\nvar kCustomPromisifiedSymbol = typeof Symbol !== 'undefined' ? Symbol('util.promisify.custom') : undefined;\n\nexports.promisify = function promisify(original) {\n  if (typeof original !== 'function')\n    throw new TypeError('The \"original\" argument must be of type Function');\n\n  if (kCustomPromisifiedSymbol && original[kCustomPromisifiedSymbol]) {\n    var fn = original[kCustomPromisifiedSymbol];\n    if (typeof fn !== 'function') {\n      throw new TypeError('The \"util.promisify.custom\" argument must be of type Function');\n    }\n    Object.defineProperty(fn, kCustomPromisifiedSymbol, {\n      value: fn, enumerable: false, writable: false, configurable: true\n    });\n    return fn;\n  }\n\n  function fn() {\n    var promiseResolve, promiseReject;\n    var promise = new Promise(function (resolve, reject) {\n      promiseResolve = resolve;\n      promiseReject = reject;\n    });\n\n    var args = [];\n    for (var i = 0; i < arguments.length; i++) {\n      args.push(arguments[i]);\n    }\n    args.push(function (err, value) {\n      if (err) {\n        promiseReject(err);\n      } else {\n        promiseResolve(value);\n      }\n    });\n\n    try {\n      original.apply(this, args);\n    } catch (err) {\n      promiseReject(err);\n    }\n\n    return promise;\n  }\n\n  Object.setPrototypeOf(fn, Object.getPrototypeOf(original));\n\n  if (kCustomPromisifiedSymbol) Object.defineProperty(fn, kCustomPromisifiedSymbol, {\n    value: fn, enumerable: false, writable: false, configurable: true\n  });\n  return Object.defineProperties(\n    fn,\n    getOwnPropertyDescriptors(original)\n  );\n}\n\nexports.promisify.custom = kCustomPromisifiedSymbol\n\nfunction callbackifyOnRejected(reason, cb) {\n  // `!reason` guard inspired by bluebird (Ref: https://goo.gl/t5IS6M).\n  // Because `null` is a special error value in callbacks which means \"no error\n  // occurred\", we error-wrap so the callback consumer can distinguish between\n  // \"the promise rejected with null\" or \"the promise fulfilled with undefined\".\n  if (!reason) {\n    var newReason = new Error('Promise was rejected with a falsy value');\n    newReason.reason = reason;\n    reason = newReason;\n  }\n  return cb(reason);\n}\n\nfunction callbackify(original) {\n  if (typeof original !== 'function') {\n    throw new TypeError('The \"original\" argument must be of type Function');\n  }\n\n  // We DO NOT return the promise as it gives the user a false sense that\n  // the promise is actually somehow related to the callback's execution\n  // and that the callback throwing will reject the promise.\n  function callbackified() {\n    var args = [];\n    for (var i = 0; i < arguments.length; i++) {\n      args.push(arguments[i]);\n    }\n\n    var maybeCb = args.pop();\n    if (typeof maybeCb !== 'function') {\n      throw new TypeError('The last argument must be of type Function');\n    }\n    var self = this;\n    var cb = function() {\n      return maybeCb.apply(self, arguments);\n    };\n    // In true node style we process the callback on `nextTick` with all the\n    // implications (stack, `uncaughtException`, `async_hooks`)\n    original.apply(this, args)\n      .then(function(ret) { process.nextTick(cb, null, ret) },\n            function(rej) { process.nextTick(callbackifyOnRejected, rej, cb) });\n  }\n\n  Object.setPrototypeOf(callbackified, Object.getPrototypeOf(original));\n  Object.defineProperties(callbackified,\n                          getOwnPropertyDescriptors(original));\n  return callbackified;\n}\nexports.callbackify = callbackify;\n","const util = require('util');\n\nconst enc = encodeURIComponent;\n\nconst serializers = {\n  string: function(str) {\n    if (typeof str !== 'string') {\n      throw new Error('Expected string to serialize: ' + str);\n    }\n    return enc(str);\n  },\n  number: function(num) {\n    if (typeof num !== 'number') {\n      throw new Error('Expected number to serialize: ' + num);\n    }\n    return enc(String(num));\n  },\n  boolean: function(bool) {\n    if (typeof bool !== 'boolean') {\n      throw new Error('Expected boolean to serialize: ' + bool);\n    }\n    return bool ? '1' : '0';\n  },\n  date: function(date) {\n    if (!util.isDate(date)) {\n      throw new Error('Expected date to serialize: ' + date);\n    }\n    return enc(date.toISOString());\n  },\n  array: function(array) {\n    if (!util.isArray(array)) {\n      throw new Error('Expected array to serialize: ' + array);\n    }\n    return enc(JSON.stringify(array));\n  },\n  object: function(obj) {\n    return enc(JSON.stringify(obj));\n  }\n};\n\n/**\n * Get a serializer for a value of the given type.\n * @param {string} type Value type.\n * @return {function(*): string} Function that serializes a value to a string.\n */\nexports.get = function(type) {\n  if (!(type in serializers)) {\n    throw new Error('Unable to serialize type: ' + type);\n  }\n  return serializers[type];\n};\n","\nvar content = require(\"!!../css-loader/dist/cjs.js!./ol.css\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../css-loader/dist/cjs.js!./ol.css\", function() {\n\t\tvar newContent = require(\"!!../css-loader/dist/cjs.js!./ol.css\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","exports = module.exports = require(\"../css-loader/dist/runtime/api.js\")(false);\n// Module\nexports.push([module.id, \".ol-box {\\n  box-sizing: border-box;\\n  border-radius: 2px;\\n  border: 2px solid blue;\\n}\\n\\n.ol-mouse-position {\\n  top: 8px;\\n  right: 8px;\\n  position: absolute;\\n}\\n\\n.ol-scale-line {\\n  background: rgba(0,60,136,0.3);\\n  border-radius: 4px;\\n  bottom: 8px;\\n  left: 8px;\\n  padding: 2px;\\n  position: absolute;\\n}\\n.ol-scale-line-inner {\\n  border: 1px solid #eee;\\n  border-top: none;\\n  color: #eee;\\n  font-size: 10px;\\n  text-align: center;\\n  margin: 1px;\\n  will-change: contents, width;\\n  transition: all 0.25s;\\n}\\n.ol-scale-bar {\\n  position: absolute;\\n  bottom: 8px;\\n  left: 8px;\\n}\\n.ol-scale-step-marker {\\n  width: 1px;\\n  height: 15px;\\n  background-color: #000000;\\n  float: right;\\n  z-Index: 10;\\n}\\n.ol-scale-step-text {\\n  position: absolute;\\n  bottom: -5px;\\n  font-size: 12px;\\n  z-Index: 11;\\n  color: #000000;\\n  text-shadow: -2px 0 #FFFFFF, 0 2px #FFFFFF, 2px 0 #FFFFFF, 0 -2px #FFFFFF;\\n}\\n.ol-scale-text {\\n  position: absolute;\\n  font-size: 14px;\\n  text-align: center;\\n  bottom: 25px;\\n  color: #000000;\\n  text-shadow: -2px 0 #FFFFFF, 0 2px #FFFFFF, 2px 0 #FFFFFF, 0 -2px #FFFFFF;\\n}\\n.ol-scale-singlebar {\\n  position: relative;\\n  height: 10px;\\n  z-Index: 9;\\n  border: 1px solid black;\\n}\\n\\n.ol-overlay-container {\\n  will-change: left,right,top,bottom;\\n}\\n\\n.ol-unsupported {\\n  display: none;\\n}\\n.ol-viewport, .ol-unselectable {\\n  -webkit-touch-callout: none;\\n  -webkit-user-select: none;\\n  -moz-user-select: none;\\n  -ms-user-select: none;\\n  user-select: none;\\n  -webkit-tap-highlight-color: rgba(0,0,0,0);\\n}\\n.ol-selectable {\\n  -webkit-touch-callout: default;\\n  -webkit-user-select: text;\\n  -moz-user-select: text;\\n  -ms-user-select: text;\\n  user-select: text;\\n}\\n.ol-grabbing {\\n  cursor: -webkit-grabbing;\\n  cursor: -moz-grabbing;\\n  cursor: grabbing;\\n}\\n.ol-grab {\\n  cursor: move;\\n  cursor: -webkit-grab;\\n  cursor: -moz-grab;\\n  cursor: grab;\\n}\\n.ol-control {\\n  position: absolute;\\n  background-color: rgba(255,255,255,0.4);\\n  border-radius: 4px;\\n  padding: 2px;\\n}\\n.ol-control:hover {\\n  background-color: rgba(255,255,255,0.6);\\n}\\n.ol-zoom {\\n  top: .5em;\\n  left: .5em;\\n}\\n.ol-rotate {\\n  top: .5em;\\n  right: .5em;\\n  transition: opacity .25s linear, visibility 0s linear;\\n}\\n.ol-rotate.ol-hidden {\\n  opacity: 0;\\n  visibility: hidden;\\n  transition: opacity .25s linear, visibility 0s linear .25s;\\n}\\n.ol-zoom-extent {\\n  top: 4.643em;\\n  left: .5em;\\n}\\n.ol-full-screen {\\n  right: .5em;\\n  top: .5em;\\n}\\n@media print {\\n  .ol-control {\\n    display: none;\\n  }\\n}\\n\\n.ol-control button {\\n  display: block;\\n  margin: 1px;\\n  padding: 0;\\n  color: white;\\n  font-size: 1.14em;\\n  font-weight: bold;\\n  text-decoration: none;\\n  text-align: center;\\n  height: 1.375em;\\n  width: 1.375em;\\n  line-height: .4em;\\n  background-color: rgba(0,60,136,0.5);\\n  border: none;\\n  border-radius: 2px;\\n}\\n.ol-control button::-moz-focus-inner {\\n  border: none;\\n  padding: 0;\\n}\\n.ol-zoom-extent button {\\n  line-height: 1.4em;\\n}\\n.ol-compass {\\n  display: block;\\n  font-weight: normal;\\n  font-size: 1.2em;\\n  will-change: transform;\\n}\\n.ol-touch .ol-control button {\\n  font-size: 1.5em;\\n}\\n.ol-touch .ol-zoom-extent {\\n  top: 5.5em;\\n}\\n.ol-control button:hover,\\n.ol-control button:focus {\\n  text-decoration: none;\\n  background-color: rgba(0,60,136,0.7);\\n}\\n.ol-zoom .ol-zoom-in {\\n  border-radius: 2px 2px 0 0;\\n}\\n.ol-zoom .ol-zoom-out {\\n  border-radius: 0 0 2px 2px;\\n}\\n\\n\\n.ol-attribution {\\n  text-align: right;\\n  bottom: .5em;\\n  right: .5em;\\n  max-width: calc(100% - 1.3em);\\n}\\n\\n.ol-attribution ul {\\n  margin: 0;\\n  padding: 0 .5em;\\n  font-size: .7rem;\\n  line-height: 1.375em;\\n  color: #000;\\n  text-shadow: 0 0 2px #fff;\\n}\\n.ol-attribution li {\\n  display: inline;\\n  list-style: none;\\n  line-height: inherit;\\n}\\n.ol-attribution li:not(:last-child):after {\\n  content: \\\" \\\";\\n}\\n.ol-attribution img {\\n  max-height: 2em;\\n  max-width: inherit;\\n  vertical-align: middle;\\n}\\n.ol-attribution ul, .ol-attribution button {\\n  display: inline-block;\\n}\\n.ol-attribution.ol-collapsed ul {\\n  display: none;\\n}\\n.ol-attribution:not(.ol-collapsed) {\\n  background: rgba(255,255,255,0.8);\\n}\\n.ol-attribution.ol-uncollapsible {\\n  bottom: 0;\\n  right: 0;\\n  border-radius: 4px 0 0;\\n  height: 1.1em;\\n  line-height: 1em;\\n}\\n.ol-attribution.ol-uncollapsible img {\\n  margin-top: -.2em;\\n  max-height: 1.6em;\\n}\\n.ol-attribution.ol-uncollapsible button {\\n  display: none;\\n}\\n\\n.ol-zoomslider {\\n  top: 4.5em;\\n  left: .5em;\\n  height: 200px;\\n}\\n.ol-zoomslider button {\\n  position: relative;\\n  height: 10px;\\n}\\n\\n.ol-touch .ol-zoomslider {\\n  top: 5.5em;\\n}\\n\\n.ol-overviewmap {\\n  left: 0.5em;\\n  bottom: 0.5em;\\n}\\n.ol-overviewmap.ol-uncollapsible {\\n  bottom: 0;\\n  left: 0;\\n  border-radius: 0 4px 0 0;\\n}\\n.ol-overviewmap .ol-overviewmap-map,\\n.ol-overviewmap button {\\n  display: inline-block;\\n}\\n.ol-overviewmap .ol-overviewmap-map {\\n  border: 1px solid #7b98bc;\\n  height: 150px;\\n  margin: 2px;\\n  width: 150px;\\n}\\n.ol-overviewmap:not(.ol-collapsed) button{\\n  bottom: 1px;\\n  left: 2px;\\n  position: absolute;\\n}\\n.ol-overviewmap.ol-collapsed .ol-overviewmap-map,\\n.ol-overviewmap.ol-uncollapsible button {\\n  display: none;\\n}\\n.ol-overviewmap:not(.ol-collapsed) {\\n  background: rgba(255,255,255,0.8);\\n}\\n.ol-overviewmap-box {\\n  border: 2px dotted rgba(0,60,136,0.7);\\n}\\n\\n.ol-overviewmap .ol-overviewmap-box:hover {\\n  cursor: move;\\n}\\n\", \"\"]);\n\n","\"use strict\";\n\n/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n*/\n// css base code, injected by the css-loader\nmodule.exports = function (useSourceMap) {\n  var list = []; // return the list of modules as css string\n\n  list.toString = function toString() {\n    return this.map(function (item) {\n      var content = cssWithMappingToString(item, useSourceMap);\n\n      if (item[2]) {\n        return '@media ' + item[2] + '{' + content + '}';\n      } else {\n        return content;\n      }\n    }).join('');\n  }; // import a list of modules into the list\n\n\n  list.i = function (modules, mediaQuery) {\n    if (typeof modules === 'string') {\n      modules = [[null, modules, '']];\n    }\n\n    var alreadyImportedModules = {};\n\n    for (var i = 0; i < this.length; i++) {\n      var id = this[i][0];\n\n      if (id != null) {\n        alreadyImportedModules[id] = true;\n      }\n    }\n\n    for (i = 0; i < modules.length; i++) {\n      var item = modules[i]; // skip already imported module\n      // this implementation is not 100% perfect for weird media query combinations\n      // when a module is imported multiple times with different media queries.\n      // I hope this will never occur (Hey this way we have smaller bundles)\n\n      if (item[0] == null || !alreadyImportedModules[item[0]]) {\n        if (mediaQuery && !item[2]) {\n          item[2] = mediaQuery;\n        } else if (mediaQuery) {\n          item[2] = '(' + item[2] + ') and (' + mediaQuery + ')';\n        }\n\n        list.push(item);\n      }\n    }\n  };\n\n  return list;\n};\n\nfunction cssWithMappingToString(item, useSourceMap) {\n  var content = item[1] || '';\n  var cssMapping = item[3];\n\n  if (!cssMapping) {\n    return content;\n  }\n\n  if (useSourceMap && typeof btoa === 'function') {\n    var sourceMapping = toComment(cssMapping);\n    var sourceURLs = cssMapping.sources.map(function (source) {\n      return '/*# sourceURL=' + cssMapping.sourceRoot + source + ' */';\n    });\n    return [content].concat(sourceURLs).concat([sourceMapping]).join('\\n');\n  }\n\n  return [content].join('\\n');\n} // Adapted from convert-source-map (MIT)\n\n\nfunction toComment(sourceMap) {\n  // eslint-disable-next-line no-undef\n  var base64 = btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))));\n  var data = 'sourceMappingURL=data:application/json;charset=utf-8;base64,' + base64;\n  return '/*# ' + data + ' */';\n}","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\nvar stylesInDom = {};\n\nvar\tmemoize = function (fn) {\n\tvar memo;\n\n\treturn function () {\n\t\tif (typeof memo === \"undefined\") memo = fn.apply(this, arguments);\n\t\treturn memo;\n\t};\n};\n\nvar isOldIE = memoize(function () {\n\t// Test for IE <= 9 as proposed by Browserhacks\n\t// @see http://browserhacks.com/#hack-e71d8692f65334173fee715c222cb805\n\t// Tests for existence of standard globals is to allow style-loader\n\t// to operate correctly into non-standard environments\n\t// @see https://github.com/webpack-contrib/style-loader/issues/177\n\treturn window && document && document.all && !window.atob;\n});\n\nvar getTarget = function (target, parent) {\n  if (parent){\n    return parent.querySelector(target);\n  }\n  return document.querySelector(target);\n};\n\nvar getElement = (function (fn) {\n\tvar memo = {};\n\n\treturn function(target, parent) {\n                // If passing function in options, then use it for resolve \"head\" element.\n                // Useful for Shadow Root style i.e\n                // {\n                //   insertInto: function () { return document.querySelector(\"#foo\").shadowRoot }\n                // }\n                if (typeof target === 'function') {\n                        return target();\n                }\n                if (typeof memo[target] === \"undefined\") {\n\t\t\tvar styleTarget = getTarget.call(this, target, parent);\n\t\t\t// Special case to return head of iframe instead of iframe itself\n\t\t\tif (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {\n\t\t\t\ttry {\n\t\t\t\t\t// This will throw an exception if access to iframe is blocked\n\t\t\t\t\t// due to cross-origin restrictions\n\t\t\t\t\tstyleTarget = styleTarget.contentDocument.head;\n\t\t\t\t} catch(e) {\n\t\t\t\t\tstyleTarget = null;\n\t\t\t\t}\n\t\t\t}\n\t\t\tmemo[target] = styleTarget;\n\t\t}\n\t\treturn memo[target]\n\t};\n})();\n\nvar singleton = null;\nvar\tsingletonCounter = 0;\nvar\tstylesInsertedAtTop = [];\n\nvar\tfixUrls = require(\"./urls\");\n\nmodule.exports = function(list, options) {\n\tif (typeof DEBUG !== \"undefined\" && DEBUG) {\n\t\tif (typeof document !== \"object\") throw new Error(\"The style-loader cannot be used in a non-browser environment\");\n\t}\n\n\toptions = options || {};\n\n\toptions.attrs = typeof options.attrs === \"object\" ? options.attrs : {};\n\n\t// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n\t// tags it will allow on a page\n\tif (!options.singleton && typeof options.singleton !== \"boolean\") options.singleton = isOldIE();\n\n\t// By default, add <style> tags to the <head> element\n        if (!options.insertInto) options.insertInto = \"head\";\n\n\t// By default, add <style> tags to the bottom of the target\n\tif (!options.insertAt) options.insertAt = \"bottom\";\n\n\tvar styles = listToStyles(list, options);\n\n\taddStylesToDom(styles, options);\n\n\treturn function update (newList) {\n\t\tvar mayRemove = [];\n\n\t\tfor (var i = 0; i < styles.length; i++) {\n\t\t\tvar item = styles[i];\n\t\t\tvar domStyle = stylesInDom[item.id];\n\n\t\t\tdomStyle.refs--;\n\t\t\tmayRemove.push(domStyle);\n\t\t}\n\n\t\tif(newList) {\n\t\t\tvar newStyles = listToStyles(newList, options);\n\t\t\taddStylesToDom(newStyles, options);\n\t\t}\n\n\t\tfor (var i = 0; i < mayRemove.length; i++) {\n\t\t\tvar domStyle = mayRemove[i];\n\n\t\t\tif(domStyle.refs === 0) {\n\t\t\t\tfor (var j = 0; j < domStyle.parts.length; j++) domStyle.parts[j]();\n\n\t\t\t\tdelete stylesInDom[domStyle.id];\n\t\t\t}\n\t\t}\n\t};\n};\n\nfunction addStylesToDom (styles, options) {\n\tfor (var i = 0; i < styles.length; i++) {\n\t\tvar item = styles[i];\n\t\tvar domStyle = stylesInDom[item.id];\n\n\t\tif(domStyle) {\n\t\t\tdomStyle.refs++;\n\n\t\t\tfor(var j = 0; j < domStyle.parts.length; j++) {\n\t\t\t\tdomStyle.parts[j](item.parts[j]);\n\t\t\t}\n\n\t\t\tfor(; j < item.parts.length; j++) {\n\t\t\t\tdomStyle.parts.push(addStyle(item.parts[j], options));\n\t\t\t}\n\t\t} else {\n\t\t\tvar parts = [];\n\n\t\t\tfor(var j = 0; j < item.parts.length; j++) {\n\t\t\t\tparts.push(addStyle(item.parts[j], options));\n\t\t\t}\n\n\t\t\tstylesInDom[item.id] = {id: item.id, refs: 1, parts: parts};\n\t\t}\n\t}\n}\n\nfunction listToStyles (list, options) {\n\tvar styles = [];\n\tvar newStyles = {};\n\n\tfor (var i = 0; i < list.length; i++) {\n\t\tvar item = list[i];\n\t\tvar id = options.base ? item[0] + options.base : item[0];\n\t\tvar css = item[1];\n\t\tvar media = item[2];\n\t\tvar sourceMap = item[3];\n\t\tvar part = {css: css, media: media, sourceMap: sourceMap};\n\n\t\tif(!newStyles[id]) styles.push(newStyles[id] = {id: id, parts: [part]});\n\t\telse newStyles[id].parts.push(part);\n\t}\n\n\treturn styles;\n}\n\nfunction insertStyleElement (options, style) {\n\tvar target = getElement(options.insertInto)\n\n\tif (!target) {\n\t\tthrow new Error(\"Couldn't find a style target. This probably means that the value for the 'insertInto' parameter is invalid.\");\n\t}\n\n\tvar lastStyleElementInsertedAtTop = stylesInsertedAtTop[stylesInsertedAtTop.length - 1];\n\n\tif (options.insertAt === \"top\") {\n\t\tif (!lastStyleElementInsertedAtTop) {\n\t\t\ttarget.insertBefore(style, target.firstChild);\n\t\t} else if (lastStyleElementInsertedAtTop.nextSibling) {\n\t\t\ttarget.insertBefore(style, lastStyleElementInsertedAtTop.nextSibling);\n\t\t} else {\n\t\t\ttarget.appendChild(style);\n\t\t}\n\t\tstylesInsertedAtTop.push(style);\n\t} else if (options.insertAt === \"bottom\") {\n\t\ttarget.appendChild(style);\n\t} else if (typeof options.insertAt === \"object\" && options.insertAt.before) {\n\t\tvar nextSibling = getElement(options.insertAt.before, target);\n\t\ttarget.insertBefore(style, nextSibling);\n\t} else {\n\t\tthrow new Error(\"[Style Loader]\\n\\n Invalid value for parameter 'insertAt' ('options.insertAt') found.\\n Must be 'top', 'bottom', or Object.\\n (https://github.com/webpack-contrib/style-loader#insertat)\\n\");\n\t}\n}\n\nfunction removeStyleElement (style) {\n\tif (style.parentNode === null) return false;\n\tstyle.parentNode.removeChild(style);\n\n\tvar idx = stylesInsertedAtTop.indexOf(style);\n\tif(idx >= 0) {\n\t\tstylesInsertedAtTop.splice(idx, 1);\n\t}\n}\n\nfunction createStyleElement (options) {\n\tvar style = document.createElement(\"style\");\n\n\tif(options.attrs.type === undefined) {\n\t\toptions.attrs.type = \"text/css\";\n\t}\n\n\tif(options.attrs.nonce === undefined) {\n\t\tvar nonce = getNonce();\n\t\tif (nonce) {\n\t\t\toptions.attrs.nonce = nonce;\n\t\t}\n\t}\n\n\taddAttrs(style, options.attrs);\n\tinsertStyleElement(options, style);\n\n\treturn style;\n}\n\nfunction createLinkElement (options) {\n\tvar link = document.createElement(\"link\");\n\n\tif(options.attrs.type === undefined) {\n\t\toptions.attrs.type = \"text/css\";\n\t}\n\toptions.attrs.rel = \"stylesheet\";\n\n\taddAttrs(link, options.attrs);\n\tinsertStyleElement(options, link);\n\n\treturn link;\n}\n\nfunction addAttrs (el, attrs) {\n\tObject.keys(attrs).forEach(function (key) {\n\t\tel.setAttribute(key, attrs[key]);\n\t});\n}\n\nfunction getNonce() {\n\tif (typeof __webpack_nonce__ === 'undefined') {\n\t\treturn null;\n\t}\n\n\treturn __webpack_nonce__;\n}\n\nfunction addStyle (obj, options) {\n\tvar style, update, remove, result;\n\n\t// If a transform function was defined, run it on the css\n\tif (options.transform && obj.css) {\n\t    result = typeof options.transform === 'function'\n\t\t ? options.transform(obj.css) \n\t\t : options.transform.default(obj.css);\n\n\t    if (result) {\n\t    \t// If transform returns a value, use that instead of the original css.\n\t    \t// This allows running runtime transformations on the css.\n\t    \tobj.css = result;\n\t    } else {\n\t    \t// If the transform function returns a falsy value, don't add this css.\n\t    \t// This allows conditional loading of css\n\t    \treturn function() {\n\t    \t\t// noop\n\t    \t};\n\t    }\n\t}\n\n\tif (options.singleton) {\n\t\tvar styleIndex = singletonCounter++;\n\n\t\tstyle = singleton || (singleton = createStyleElement(options));\n\n\t\tupdate = applyToSingletonTag.bind(null, style, styleIndex, false);\n\t\tremove = applyToSingletonTag.bind(null, style, styleIndex, true);\n\n\t} else if (\n\t\tobj.sourceMap &&\n\t\ttypeof URL === \"function\" &&\n\t\ttypeof URL.createObjectURL === \"function\" &&\n\t\ttypeof URL.revokeObjectURL === \"function\" &&\n\t\ttypeof Blob === \"function\" &&\n\t\ttypeof btoa === \"function\"\n\t) {\n\t\tstyle = createLinkElement(options);\n\t\tupdate = updateLink.bind(null, style, options);\n\t\tremove = function () {\n\t\t\tremoveStyleElement(style);\n\n\t\t\tif(style.href) URL.revokeObjectURL(style.href);\n\t\t};\n\t} else {\n\t\tstyle = createStyleElement(options);\n\t\tupdate = applyToTag.bind(null, style);\n\t\tremove = function () {\n\t\t\tremoveStyleElement(style);\n\t\t};\n\t}\n\n\tupdate(obj);\n\n\treturn function updateStyle (newObj) {\n\t\tif (newObj) {\n\t\t\tif (\n\t\t\t\tnewObj.css === obj.css &&\n\t\t\t\tnewObj.media === obj.media &&\n\t\t\t\tnewObj.sourceMap === obj.sourceMap\n\t\t\t) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tupdate(obj = newObj);\n\t\t} else {\n\t\t\tremove();\n\t\t}\n\t};\n}\n\nvar replaceText = (function () {\n\tvar textStore = [];\n\n\treturn function (index, replacement) {\n\t\ttextStore[index] = replacement;\n\n\t\treturn textStore.filter(Boolean).join('\\n');\n\t};\n})();\n\nfunction applyToSingletonTag (style, index, remove, obj) {\n\tvar css = remove ? \"\" : obj.css;\n\n\tif (style.styleSheet) {\n\t\tstyle.styleSheet.cssText = replaceText(index, css);\n\t} else {\n\t\tvar cssNode = document.createTextNode(css);\n\t\tvar childNodes = style.childNodes;\n\n\t\tif (childNodes[index]) style.removeChild(childNodes[index]);\n\n\t\tif (childNodes.length) {\n\t\t\tstyle.insertBefore(cssNode, childNodes[index]);\n\t\t} else {\n\t\t\tstyle.appendChild(cssNode);\n\t\t}\n\t}\n}\n\nfunction applyToTag (style, obj) {\n\tvar css = obj.css;\n\tvar media = obj.media;\n\n\tif(media) {\n\t\tstyle.setAttribute(\"media\", media)\n\t}\n\n\tif(style.styleSheet) {\n\t\tstyle.styleSheet.cssText = css;\n\t} else {\n\t\twhile(style.firstChild) {\n\t\t\tstyle.removeChild(style.firstChild);\n\t\t}\n\n\t\tstyle.appendChild(document.createTextNode(css));\n\t}\n}\n\nfunction updateLink (link, options, obj) {\n\tvar css = obj.css;\n\tvar sourceMap = obj.sourceMap;\n\n\t/*\n\t\tIf convertToAbsoluteUrls isn't defined, but sourcemaps are enabled\n\t\tand there is no publicPath defined then lets turn convertToAbsoluteUrls\n\t\ton by default.  Otherwise default to the convertToAbsoluteUrls option\n\t\tdirectly\n\t*/\n\tvar autoFixUrls = options.convertToAbsoluteUrls === undefined && sourceMap;\n\n\tif (options.convertToAbsoluteUrls || autoFixUrls) {\n\t\tcss = fixUrls(css);\n\t}\n\n\tif (sourceMap) {\n\t\t// http://stackoverflow.com/a/26603875\n\t\tcss += \"\\n/*# sourceMappingURL=data:application/json;base64,\" + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + \" */\";\n\t}\n\n\tvar blob = new Blob([css], { type: \"text/css\" });\n\n\tvar oldSrc = link.href;\n\n\tlink.href = URL.createObjectURL(blob);\n\n\tif(oldSrc) URL.revokeObjectURL(oldSrc);\n}\n","\n/**\n * When source maps are enabled, `style-loader` uses a link element with a data-uri to\n * embed the css on the page. This breaks all relative urls because now they are relative to a\n * bundle instead of the current page.\n *\n * One solution is to only use full urls, but that may be impossible.\n *\n * Instead, this function \"fixes\" the relative urls to be absolute according to the current page location.\n *\n * A rudimentary test suite is located at `test/fixUrls.js` and can be run via the `npm test` command.\n *\n */\n\nmodule.exports = function (css) {\n  // get current location\n  var location = typeof window !== \"undefined\" && window.location;\n\n  if (!location) {\n    throw new Error(\"fixUrls requires window.location\");\n  }\n\n\t// blank or null?\n\tif (!css || typeof css !== \"string\") {\n\t  return css;\n  }\n\n  var baseUrl = location.protocol + \"//\" + location.host;\n  var currentDir = baseUrl + location.pathname.replace(/\\/[^\\/]*$/, \"/\");\n\n\t// convert each url(...)\n\t/*\n\tThis regular expression is just a way to recursively match brackets within\n\ta string.\n\n\t /url\\s*\\(  = Match on the word \"url\" with any whitespace after it and then a parens\n\t   (  = Start a capturing group\n\t     (?:  = Start a non-capturing group\n\t         [^)(]  = Match anything that isn't a parentheses\n\t         |  = OR\n\t         \\(  = Match a start parentheses\n\t             (?:  = Start another non-capturing groups\n\t                 [^)(]+  = Match anything that isn't a parentheses\n\t                 |  = OR\n\t                 \\(  = Match a start parentheses\n\t                     [^)(]*  = Match anything that isn't a parentheses\n\t                 \\)  = Match a end parentheses\n\t             )  = End Group\n              *\\) = Match anything and then a close parens\n          )  = Close non-capturing group\n          *  = Match anything\n       )  = Close capturing group\n\t \\)  = Match a close parens\n\n\t /gi  = Get all matches, not the first.  Be case insensitive.\n\t */\n\tvar fixedCss = css.replace(/url\\s*\\(((?:[^)(]|\\((?:[^)(]+|\\([^)(]*\\))*\\))*)\\)/gi, function(fullMatch, origUrl) {\n\t\t// strip quotes (if they exist)\n\t\tvar unquotedOrigUrl = origUrl\n\t\t\t.trim()\n\t\t\t.replace(/^\"(.*)\"$/, function(o, $1){ return $1; })\n\t\t\t.replace(/^'(.*)'$/, function(o, $1){ return $1; });\n\n\t\t// already a full url? no change\n\t\tif (/^(#|data:|http:\\/\\/|https:\\/\\/|file:\\/\\/\\/|\\s*$)/i.test(unquotedOrigUrl)) {\n\t\t  return fullMatch;\n\t\t}\n\n\t\t// convert the url to a full url\n\t\tvar newUrl;\n\n\t\tif (unquotedOrigUrl.indexOf(\"//\") === 0) {\n\t\t  \t//TODO: should we add protocol?\n\t\t\tnewUrl = unquotedOrigUrl;\n\t\t} else if (unquotedOrigUrl.indexOf(\"/\") === 0) {\n\t\t\t// path should be relative to the base url\n\t\t\tnewUrl = baseUrl + unquotedOrigUrl; // already starts with '/'\n\t\t} else {\n\t\t\t// path should be relative to current directory\n\t\t\tnewUrl = currentDir + unquotedOrigUrl.replace(/^\\.\\//, \"\"); // Strip leading './'\n\t\t}\n\n\t\t// send back the fixed url(...)\n\t\treturn \"url(\" + JSON.stringify(newUrl) + \")\";\n\t});\n\n\t// send back the fixed css\n\treturn fixedCss;\n};\n","const Schema = require('./schema').Schema;\nconst util = require('./util');\nconst serializers = require('./serializers');\n\n/**\n * An object backed store of string values.  Allows registering multiple state\n * providers.\n * @param {Object} values Initial serialized values.\n * @param {function(Object)} callback Called with an object of serialized\n *     values and defaults whenever a provider updates state.\n * @constructor\n */\nconst Store = (exports.Store = function(values, callback) {\n  this._values = values;\n  this._defaults = {};\n  this._providers = [];\n  this._callback = callback;\n  this._callbackTimer = null;\n});\n\nStore.prototype._scheduleCallback = function() {\n  if (this._callbackTimer) {\n    clearTimeout(this._callbackTimer);\n  }\n  this._callbackTimer = setTimeout(this._debouncedCallback.bind(this));\n};\n\nStore.prototype._debouncedCallback = function() {\n  this._callbackTimer = null;\n  this._callback(this._values, this._defaults);\n};\n\nStore.prototype.update = function(values) {\n  if (this._updateTimer) {\n    clearTimeout(this._updateTimer);\n  }\n  this._updateTimer = setTimeout(this._debouncedUpdate.bind(this, values));\n};\n\nStore.prototype._debouncedUpdate = function(newValues) {\n  this._updateTimer = null;\n  const values = this._values;\n  const providers = this._providers.slice(); // callbacks may unregister providers\n  for (let i = providers.length - 1; i >= 0; --i) {\n    const provider = providers[i];\n    const schema = provider.schema;\n    let changed = false;\n    const state = {};\n    schema.forEachKey(function(key, prefixed) {\n      let deserialized;\n      if (!(prefixed in newValues)) {\n        deserialized = schema.getDefault(key);\n        const serializedDefault = schema.serialize(key, deserialized);\n        if (values[prefixed] !== serializedDefault) {\n          changed = true;\n          values[prefixed] = serializedDefault;\n          state[key] = deserialized;\n        }\n      } else if (values[prefixed] !== newValues[prefixed]) {\n        try {\n          deserialized = schema.deserialize(key, newValues[prefixed]);\n          values[prefixed] = newValues[prefixed];\n          state[key] = deserialized;\n          changed = true;\n        } catch (err) {\n          // invalid value, pass\n        }\n      }\n    });\n    if (changed && this._providers.indexOf(provider) >= 0) {\n      provider.callback(state);\n    }\n  }\n};\n\n/**\n * Unregister a provider.  Deletes the provider's values from the underlying\n * store and calls the store's callback.\n * @param {Function} callback The provider's callback.\n */\nStore.prototype.unregister = function(callback) {\n  let removedProvider;\n  this._providers = this._providers.filter(function(provider) {\n    const remove = provider.callback === callback;\n    if (remove) {\n      removedProvider = provider;\n    }\n    return !remove;\n  });\n  if (!removedProvider) {\n    throw new Error('Unable to unregister hashed state provider');\n  }\n  const values = this._values;\n  const defaults = this._defaults;\n  removedProvider.schema.forEachKey(function(key, prefixed) {\n    delete values[prefixed];\n    delete defaults[prefixed];\n  });\n  this._scheduleCallback();\n};\n\n/**\n * Register a new state provider.\n * @param {Object} config Schema config.\n * @param {function(Object)} callback Called by the store on state changes.\n * @return {function(Object)} Called by the provider on state changes.\n */\nStore.prototype.register = function(config, callback) {\n  const provider = {\n    schema: new Schema(config),\n    callback: callback\n  };\n\n  // ensure there are no conflicts with existing providers\n  for (let i = 0, ii = this._providers.length; i < ii; ++i) {\n    const conflicts = provider.schema.conflicts(this._providers[i].schema);\n    if (conflicts) {\n      throw new Error(\n        'Provider already registered using the same name: ' + conflicts\n      );\n    }\n    if (provider.callback === this._providers[i].callback) {\n      throw new Error('Provider already registered with the same callback');\n    }\n  }\n\n  this._providers.push(provider);\n  this._initializeProvider(provider);\n\n  return function update(state) {\n    if (this._providers.indexOf(provider) === -1) {\n      throw new Error('Unregistered provider attempting to update state');\n    }\n    const schema = provider.schema;\n    let changed = false;\n    const values = this._values;\n    schema.forEachKey(function(key, prefixed) {\n      if (key in state) {\n        const serializedValue = schema.serialize(key, state[key], state);\n        if (values[prefixed] !== serializedValue) {\n          changed = true;\n          values[prefixed] = serializedValue;\n        }\n      }\n    });\n    if (changed) {\n      this._scheduleCallback();\n    }\n  }.bind(this);\n};\n\n/**\n * Call provider with initial values.\n * @param {Object} provider Provider to be initialized.\n */\nStore.prototype._initializeProvider = function(provider) {\n  const state = {};\n  const defaults = {};\n  const values = this._values;\n  provider.schema.forEachKey(function(key, prefixed) {\n    let deserializedValue;\n    const deserializedDefault = provider.schema.getDefault(key);\n    const serializedDefault = provider.schema.serialize(\n      key,\n      deserializedDefault\n    );\n    if (prefixed in values) {\n      try {\n        deserializedValue = provider.schema.deserialize(key, values[prefixed]);\n      } catch (err) {\n        deserializedValue = deserializedDefault;\n      }\n    } else {\n      deserializedValue = deserializedDefault;\n    }\n    state[key] = deserializedValue;\n    defaults[prefixed] = serializedDefault;\n    values[prefixed] = provider.schema.serialize(key, deserializedValue);\n  });\n  for (const prefixed in defaults) {\n    this._defaults[prefixed] = defaults[prefixed];\n  }\n  provider.callback(state);\n};\n\n/**\n * Serialize values with provider serializers where available.\n * @param {Object} values Values to be serialized.\n * @return {Object} The serialized values.\n */\nStore.prototype.serialize = function(values) {\n  const serialized = {};\n  for (let i = 0, ii = this._providers.length; i < ii; ++i) {\n    const provider = this._providers[i];\n    provider.schema.forEachKey(function(key, prefixed) {\n      if (prefixed in values) {\n        serialized[prefixed] = provider.schema.serialize(\n          key,\n          values[prefixed],\n          values\n        );\n      }\n    });\n  }\n  for (const key in values) {\n    if (!(key in serialized)) {\n      const value = values[key];\n      const type = util.typeOf(value);\n      const serializer = serializers.get(type);\n      serialized[key] = serializer(value);\n    }\n  }\n  return serialized;\n};\n","const Field = require('./field').Field;\nconst util = require('./util');\n\n/**\n * Create a new schema.  A schema is a collection of field definitions.\n * @param {Object} config Keys are field names, values are field configs.\n * @constructor\n */\nconst Schema = (exports.Schema = function(config) {\n  config = util.extend({}, config);\n  const fields = {};\n  let prefix;\n  if ('_' in config) {\n    prefix = config._;\n    delete config._;\n  }\n  for (const key in config) {\n    fields[key] = new Field(config[key]);\n  }\n  this._prefix = prefix;\n  this._fields = fields;\n});\n\n/**\n * Get the prefixed version of a key.\n * @param {string} key The key.\n * @return {string} The prefixed key.\n */\nSchema.prototype.getPrefixed = function(key) {\n  return this._prefix ? this._prefix + '.' + key : key;\n};\n\n/**\n * Call a callback for each field key.\n * @param {function(string, number)} callback Called with a local field key and\n *     a prefixed key.\n * @param {Object} thisArg This argument for the callback.\n */\nSchema.prototype.forEachKey = function(callback, thisArg) {\n  let more;\n  for (const key in this._fields) {\n    more = callback.call(thisArg, key, this.getPrefixed(key));\n    if (more === false) {\n      return;\n    }\n  }\n};\n\n/**\n * Serialize a value.\n * @param {string} key The key or field name.\n * @param {*} value The value to serialize.\n * @param {Object} values Additional values for providers to use when serializing.\n * @return {string} The serialized value.\n */\nSchema.prototype.serialize = function(key, value, values) {\n  if (!(key in this._fields)) {\n    throw new Error('Unknown key: ' + key);\n  }\n  return this._fields[key].serialize(value, values);\n};\n\n/**\n * Deserialize a value.\n * @param {string} key The key or field name.\n * @param {string} str The serialized value.\n * @return {*} The deserialized value.\n */\nSchema.prototype.deserialize = function(key, str) {\n  if (!(key in this._fields)) {\n    throw new Error('Unknown key: ' + key);\n  }\n  return this._fields[key].deserialize(str);\n};\n\n/**\n * Get the default value for a particular field.\n * @param {string} key The key or field name.\n * @return {*} The default value.\n */\nSchema.prototype.getDefault = function(key) {\n  if (!(key in this._fields)) {\n    throw new Error('Unknown key: ' + key);\n  }\n  return this._fields[key].default;\n};\n\n/**\n * Determine if one schema conflicts with another.  Two schemas conflict if\n * any of their prefixed keys are the same.\n * @param {Schema} other The other schema.\n * @return {boolean|string} This schema conflicts with the other.  If the two\n *     schemas conflict, the return will be the first conflicting key (with\n *     any prefix).\n */\nSchema.prototype.conflicts = function(other) {\n  const thisPrefixedKeys = {};\n  for (const key in this._fields) {\n    thisPrefixedKeys[this.getPrefixed(key)] = true;\n  }\n\n  let conflicts = false;\n  other.forEachKey(function(_, prefixed) {\n    if (prefixed in thisPrefixedKeys) {\n      conflicts = prefixed;\n    }\n    return !conflicts;\n  });\n  return conflicts;\n};\n","const util = require('./util');\n\nconst serializers = require('./serializers');\nconst deserializers = require('./deserializers');\n\n/**\n * Create a new field.  A field must have a default value (`default`) and is\n * capable of serializing and deserializing values.\n * @param {Object} config Field configuration.  Must have a `default` property\n *     with a default value.  May have optional `serialize` and `deserialize`\n *     functions.  As a shorthand for providing a config object with a `default`\n *     property, a default value may be provided directly.\n * @constructor\n */\nexports.Field = function(config) {\n  if (util.typeOf(config) !== 'object') {\n    this.default = config;\n  } else if (!('default' in config)) {\n    throw new Error('Missing default');\n  } else {\n    this.default = config.default;\n  }\n\n  const type = util.typeOf(this.default);\n  this.serialize = config.serialize || serializers.get(type);\n  this.deserialize = config.deserialize || deserializers.get(type);\n};\n","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","module.exports = function isBuffer(arg) {\n  return arg && typeof arg === 'object'\n    && typeof arg.copy === 'function'\n    && typeof arg.fill === 'function'\n    && typeof arg.readUInt8 === 'function';\n}","if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    ctor.prototype = Object.create(superCtor.prototype, {\n      constructor: {\n        value: ctor,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    var TempCtor = function () {}\n    TempCtor.prototype = superCtor.prototype\n    ctor.prototype = new TempCtor()\n    ctor.prototype.constructor = ctor\n  }\n}\n","const util = require('./util');\n\nconst dec = decodeURIComponent;\n\nconst noop = function() {};\n\nconst deserializers = {\n  string: function(str) {\n    if (!str || typeof str !== 'string') {\n      throw new Error('Expected string to deserialize: ' + str);\n    }\n    return dec(str);\n  },\n  number: function(str) {\n    if (!str || typeof str !== 'string') {\n      throw new Error('Expected string to deserialize: ' + str);\n    }\n    const num = Number(dec(str));\n    if (isNaN(num)) {\n      throw new Error('Expected to deserialize a number: ' + str);\n    }\n    return num;\n  },\n  boolean: function(str) {\n    if (!str || typeof str !== 'string') {\n      throw new Error('Expected string to deserialize: ' + str);\n    }\n    let bool;\n    if (str === '1') {\n      bool = true;\n    } else if (str === '0') {\n      bool = false;\n    } else {\n      throw new Error('Expected \"1\" or \"0\" for boolean: ' + str);\n    }\n    return bool;\n  },\n  date: function(str) {\n    if (!str || typeof str !== 'string') {\n      throw new Error('Expected string to deserialize: ' + str);\n    }\n    const date = new Date(dec(str));\n    if (isNaN(date.getTime())) {\n      throw new Error('Expected to deserialize a date: ' + str);\n    }\n    return date;\n  },\n  array: function(str) {\n    if (!str || typeof str !== 'string') {\n      throw new Error('Expected string to deserialize: ' + str);\n    }\n    let array;\n    try {\n      array = JSON.parse(dec(str));\n    } catch (err) {\n      noop();\n    }\n    if (!array || util.typeOf(array) !== 'array') {\n      throw new Error('Expected to deserialize an array: ' + str);\n    }\n    return array;\n  },\n  object: function(str) {\n    if (!str || typeof str !== 'string') {\n      throw new Error('Expected string to deserialize: ' + str);\n    }\n    let obj;\n    try {\n      obj = JSON.parse(dec(str));\n    } catch (err) {\n      noop();\n    }\n    if (!obj || util.typeOf(obj) !== 'object') {\n      throw new Error('Expected to deserialize an object: ' + str);\n    }\n    return obj;\n  }\n};\n\n/**\n * Get a deserializer for a value of the given type.\n * @param {string} type Value type.\n * @return {function(string): *} Function that deserializes a string to a value.\n */\nexports.get = function(type) {\n  if (!(type in deserializers)) {\n    throw new Error('Unable to deserialize type: ' + type);\n  }\n  return deserializers[type];\n};\n","const util = require('./util');\n\n/**\n * Get values from a hash string.\n * @param {string} hash The hash string (e.g. '#/foo/bar').\n * @return {Object} The string values (e.g. {foo: 'bar'}).\n */\nfunction deserialize(hash) {\n  let zipped;\n  if (hash.length > 2) {\n    const path = hash.substring(2);\n    zipped = path.split('/');\n  } else {\n    zipped = [];\n  }\n  return util.unzip(zipped);\n}\n\n/**\n * Serialize values for the hash.\n * @param {Object} values The values to serialize.\n * @return {string} The hash string.\n */\nfunction serialize(values) {\n  let path = '#';\n  const parts = util.zip(values);\n  if (parts.length > 0) {\n    path = '#/' + parts.join('/');\n  }\n  return path;\n}\n\nexports.deserialize = deserialize;\nexports.serialize = serialize;\n","(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n\ttypeof define === 'function' && define.amd ? define(factory) :\n\t(global.quickselect = factory());\n}(this, (function () { 'use strict';\n\nfunction quickselect(arr, k, left, right, compare) {\n    quickselectStep(arr, k, left || 0, right || (arr.length - 1), compare || defaultCompare);\n}\n\nfunction quickselectStep(arr, k, left, right, compare) {\n\n    while (right > left) {\n        if (right - left > 600) {\n            var n = right - left + 1;\n            var m = k - left + 1;\n            var z = Math.log(n);\n            var s = 0.5 * Math.exp(2 * z / 3);\n            var sd = 0.5 * Math.sqrt(z * s * (n - s) / n) * (m - n / 2 < 0 ? -1 : 1);\n            var newLeft = Math.max(left, Math.floor(k - m * s / n + sd));\n            var newRight = Math.min(right, Math.floor(k + (n - m) * s / n + sd));\n            quickselectStep(arr, k, newLeft, newRight, compare);\n        }\n\n        var t = arr[k];\n        var i = left;\n        var j = right;\n\n        swap(arr, left, k);\n        if (compare(arr[right], t) > 0) swap(arr, left, right);\n\n        while (i < j) {\n            swap(arr, i, j);\n            i++;\n            j--;\n            while (compare(arr[i], t) < 0) i++;\n            while (compare(arr[j], t) > 0) j--;\n        }\n\n        if (compare(arr[left], t) === 0) swap(arr, left, j);\n        else {\n            j++;\n            swap(arr, j, right);\n        }\n\n        if (j <= k) left = j + 1;\n        if (k <= j) right = j - 1;\n    }\n}\n\nfunction swap(arr, i, j) {\n    var tmp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = tmp;\n}\n\nfunction defaultCompare(a, b) {\n    return a < b ? -1 : a > b ? 1 : 0;\n}\n\nreturn quickselect;\n\n})));\n","/**\n * @module ol/util\n */\n/**\n * @return {?} Any return.\n */\nexport function abstract() {\n    return /** @type {?} */ ((function () {\n        throw new Error('Unimplemented abstract method.');\n    })());\n}\n/**\n * Counter for getUid.\n * @type {number}\n * @private\n */\nvar uidCounter_ = 0;\n/**\n * Gets a unique ID for an object. This mutates the object so that further calls\n * with the same object as a parameter returns the same value. Unique IDs are generated\n * as a strictly increasing sequence. Adapted from goog.getUid.\n *\n * @param {Object} obj The object to get the unique ID for.\n * @return {string} The unique ID for the object.\n * @function module:ol.getUid\n * @api\n */\nexport function getUid(obj) {\n    return obj.ol_uid || (obj.ol_uid = String(++uidCounter_));\n}\n/**\n * OpenLayers version.\n * @type {string}\n */\nexport var VERSION = '6.0.0-beta.6';\n//# sourceMappingURL=util.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/AssertionError\n */\nimport { VERSION } from './util.js';\n/**\n * Error object thrown when an assertion failed. This is an ECMA-262 Error,\n * extended with a `code` property.\n * See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error.\n */\nvar AssertionError = /** @class */ (function (_super) {\n    __extends(AssertionError, _super);\n    /**\n     * @param {number} code Error code.\n     */\n    function AssertionError(code) {\n        var _this = this;\n        var path = VERSION === 'latest' ? VERSION : 'v' + VERSION.split('-')[0];\n        var message = 'Assertion failed. See https://openlayers.org/en/' + path +\n            '/doc/errors/#' + code + ' for details.';\n        _this = _super.call(this, message) || this;\n        /**\n         * Error code. The meaning of the code can be found on\n         * https://openlayers.org/en/latest/doc/errors/ (replace `latest` with\n         * the version found in the OpenLayers script's header comment if a version\n         * other than the latest is used).\n         * @type {number}\n         * @api\n         */\n        _this.code = code;\n        /**\n         * @type {string}\n         */\n        _this.name = 'AssertionError';\n        // Re-assign message, see https://github.com/Rich-Harris/buble/issues/40\n        _this.message = message;\n        return _this;\n    }\n    return AssertionError;\n}(Error));\nexport default AssertionError;\n//# sourceMappingURL=AssertionError.js.map","/**\n * @module ol/CollectionEventType\n */\n/**\n * @enum {string}\n */\nexport default {\n    /**\n     * Triggered when an item is added to the collection.\n     * @event module:ol/Collection.CollectionEvent#add\n     * @api\n     */\n    ADD: 'add',\n    /**\n     * Triggered when an item is removed from the collection.\n     * @event module:ol/Collection.CollectionEvent#remove\n     * @api\n     */\n    REMOVE: 'remove'\n};\n//# sourceMappingURL=CollectionEventType.js.map","/**\n * @module ol/ObjectEventType\n */\n/**\n * @enum {string}\n */\nexport default {\n    /**\n     * Triggered when a property is changed.\n     * @event module:ol/Object.ObjectEvent#propertychange\n     * @api\n     */\n    PROPERTYCHANGE: 'propertychange'\n};\n//# sourceMappingURL=ObjectEventType.js.map","/**\n * @module ol/obj\n */\n/**\n * Polyfill for Object.assign().  Assigns enumerable and own properties from\n * one or more source objects to a target object.\n * See https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Object/assign.\n *\n * @param {!Object} target The target object.\n * @param {...Object} var_sources The source object(s).\n * @return {!Object} The modified target object.\n */\nexport var assign = (typeof Object.assign === 'function') ? Object.assign : function (target, var_sources) {\n    if (target === undefined || target === null) {\n        throw new TypeError('Cannot convert undefined or null to object');\n    }\n    var output = Object(target);\n    for (var i = 1, ii = arguments.length; i < ii; ++i) {\n        var source = arguments[i];\n        if (source !== undefined && source !== null) {\n            for (var key in source) {\n                if (source.hasOwnProperty(key)) {\n                    output[key] = source[key];\n                }\n            }\n        }\n    }\n    return output;\n};\n/**\n * Removes all properties from an object.\n * @param {Object} object The object to clear.\n */\nexport function clear(object) {\n    for (var property in object) {\n        delete object[property];\n    }\n}\n/**\n * Polyfill for Object.values().  Get an array of property values from an object.\n * See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/values\n *\n * @param {!Object<K,V>} object The object from which to get the values.\n * @return {!Array<V>} The property values.\n * @template K,V\n */\nexport var getValues = (typeof Object.values === 'function') ? Object.values : function (object) {\n    var values = [];\n    for (var property in object) {\n        values.push(object[property]);\n    }\n    return values;\n};\n/**\n * Determine if an object has any properties.\n * @param {Object} object The object to check.\n * @return {boolean} The object is empty.\n */\nexport function isEmpty(object) {\n    var property;\n    for (property in object) {\n        return false;\n    }\n    return !property;\n}\n//# sourceMappingURL=obj.js.map","/**\n * @module ol/events\n */\nimport { clear } from './obj.js';\n/**\n * Key to use with {@link module:ol/Observable~Observable#unByKey}.\n * @typedef {Object} EventsKey\n * @property {Object} [bindTo]\n * @property {ListenerFunction} [boundListener]\n * @property {boolean} callOnce\n * @property {number} [deleteIndex]\n * @property {ListenerFunction} listener\n * @property {import(\"./events/Target.js\").EventTargetLike} target\n * @property {string} type\n * @api\n */\n/**\n * Listener function. This function is called with an event object as argument.\n * When the function returns `false`, event propagation will stop.\n *\n * @typedef {function((Event|import(\"./events/Event.js\").default)): (void|boolean)} ListenerFunction\n * @api\n */\n/**\n * @param {EventsKey} listenerObj Listener object.\n * @return {ListenerFunction} Bound listener.\n */\nexport function bindListener(listenerObj) {\n    var boundListener = function (evt) {\n        var listener = listenerObj.listener;\n        var bindTo = listenerObj.bindTo || listenerObj.target;\n        if (listenerObj.callOnce) {\n            unlistenByKey(listenerObj);\n        }\n        return listener.call(bindTo, evt);\n    };\n    listenerObj.boundListener = boundListener;\n    return boundListener;\n}\n/**\n * Finds the matching {@link module:ol/events~EventsKey} in the given listener\n * array.\n *\n * @param {!Array<!EventsKey>} listeners Array of listeners.\n * @param {!Function} listener The listener function.\n * @param {Object=} opt_this The `this` value inside the listener.\n * @param {boolean=} opt_setDeleteIndex Set the deleteIndex on the matching\n *     listener, for {@link module:ol/events~unlistenByKey}.\n * @return {EventsKey|undefined} The matching listener object.\n */\nexport function findListener(listeners, listener, opt_this, opt_setDeleteIndex) {\n    var listenerObj;\n    for (var i = 0, ii = listeners.length; i < ii; ++i) {\n        listenerObj = listeners[i];\n        if (listenerObj.listener === listener &&\n            listenerObj.bindTo === opt_this) {\n            if (opt_setDeleteIndex) {\n                listenerObj.deleteIndex = i;\n            }\n            return listenerObj;\n        }\n    }\n    return undefined;\n}\n/**\n * @param {import(\"./events/Target.js\").EventTargetLike} target Target.\n * @param {string} type Type.\n * @return {Array<EventsKey>|undefined} Listeners.\n */\nexport function getListeners(target, type) {\n    var listenerMap = getListenerMap(target);\n    return listenerMap ? listenerMap[type] : undefined;\n}\n/**\n * Get the lookup of listeners.\n * @param {Object} target Target.\n * @param {boolean=} opt_create If a map should be created if it doesn't exist.\n * @return {!Object<string, Array<EventsKey>>} Map of\n *     listeners by event type.\n */\nfunction getListenerMap(target, opt_create) {\n    var listenerMap = target.ol_lm;\n    if (!listenerMap && opt_create) {\n        listenerMap = target.ol_lm = {};\n    }\n    return listenerMap;\n}\n/**\n * Remove the listener map from a target.\n * @param {Object} target Target.\n */\nfunction removeListenerMap(target) {\n    delete target.ol_lm;\n}\n/**\n * Clean up all listener objects of the given type.  All properties on the\n * listener objects will be removed, and if no listeners remain in the listener\n * map, it will be removed from the target.\n * @param {import(\"./events/Target.js\").EventTargetLike} target Target.\n * @param {string} type Type.\n */\nfunction removeListeners(target, type) {\n    var listeners = getListeners(target, type);\n    if (listeners) {\n        for (var i = 0, ii = listeners.length; i < ii; ++i) {\n            /** @type {import(\"./events/Target.js\").default} */ (target).\n                removeEventListener(type, listeners[i].boundListener);\n            clear(listeners[i]);\n        }\n        listeners.length = 0;\n        var listenerMap = getListenerMap(target);\n        if (listenerMap) {\n            delete listenerMap[type];\n            if (Object.keys(listenerMap).length === 0) {\n                removeListenerMap(target);\n            }\n        }\n    }\n}\n/**\n * Registers an event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` to a `this` object, and returns\n * a key for use with {@link module:ol/events~unlistenByKey}.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object=} opt_this Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @param {boolean=} opt_once If true, add the listener as one-off listener.\n * @return {EventsKey} Unique key for the listener.\n */\nexport function listen(target, type, listener, opt_this, opt_once) {\n    var listenerMap = getListenerMap(target, true);\n    var listeners = listenerMap[type];\n    if (!listeners) {\n        listeners = listenerMap[type] = [];\n    }\n    var listenerObj = findListener(listeners, listener, opt_this, false);\n    if (listenerObj) {\n        if (!opt_once) {\n            // Turn one-off listener into a permanent one.\n            listenerObj.callOnce = false;\n        }\n    }\n    else {\n        listenerObj = {\n            bindTo: opt_this,\n            callOnce: !!opt_once,\n            listener: listener,\n            target: target,\n            type: type\n        };\n        /** @type {import(\"./events/Target.js\").default} */ (target).\n            addEventListener(type, bindListener(listenerObj));\n        listeners.push(listenerObj);\n    }\n    return listenerObj;\n}\n/**\n * Registers a one-off event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` as self-unregistering listener\n * to a `this` object, and returns a key for use with\n * {@link module:ol/events~unlistenByKey} in case the listener needs to be\n * unregistered before it is called.\n *\n * When {@link module:ol/events~listen} is called with the same arguments after this\n * function, the self-unregistering listener will be turned into a permanent\n * listener.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object=} opt_this Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @return {EventsKey} Key for unlistenByKey.\n */\nexport function listenOnce(target, type, listener, opt_this) {\n    return listen(target, type, listener, opt_this, true);\n}\n/**\n * Unregisters an event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * To return a listener, this function needs to be called with the exact same\n * arguments that were used for a previous {@link module:ol/events~listen} call.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object=} opt_this Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n */\nexport function unlisten(target, type, listener, opt_this) {\n    var listeners = getListeners(target, type);\n    if (listeners) {\n        var listenerObj = findListener(listeners, listener, opt_this, true);\n        if (listenerObj) {\n            unlistenByKey(listenerObj);\n        }\n    }\n}\n/**\n * Unregisters event listeners on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * The argument passed to this function is the key returned from\n * {@link module:ol/events~listen} or {@link module:ol/events~listenOnce}.\n *\n * @param {EventsKey} key The key.\n */\nexport function unlistenByKey(key) {\n    if (key && key.target) {\n        /** @type {import(\"./events/Target.js\").default} */ (key.target).\n            removeEventListener(key.type, key.boundListener);\n        var listeners = getListeners(key.target, key.type);\n        if (listeners) {\n            var i = 'deleteIndex' in key ? key.deleteIndex : listeners.indexOf(key);\n            if (i !== -1) {\n                listeners.splice(i, 1);\n            }\n            if (listeners.length === 0) {\n                removeListeners(key.target, key.type);\n            }\n        }\n        clear(key);\n    }\n}\n/**\n * Unregisters all event listeners on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Target.\n */\nexport function unlistenAll(target) {\n    var listenerMap = getListenerMap(target);\n    if (listenerMap) {\n        for (var type in listenerMap) {\n            removeListeners(target, type);\n        }\n    }\n}\n//# sourceMappingURL=events.js.map","/**\n * @module ol/Disposable\n */\n/**\n * @classdesc\n * Objects that need to clean up after themselves.\n */\nvar Disposable = /** @class */ (function () {\n    function Disposable() {\n        /**\n         * The object has already been disposed.\n         * @type {boolean}\n         * @private\n         */\n        this.disposed_ = false;\n    }\n    /**\n     * Clean up.\n     */\n    Disposable.prototype.dispose = function () {\n        if (!this.disposed_) {\n            this.disposed_ = true;\n            this.disposeInternal();\n        }\n    };\n    /**\n     * Extension point for disposable objects.\n     * @protected\n     */\n    Disposable.prototype.disposeInternal = function () { };\n    return Disposable;\n}());\nexport default Disposable;\n//# sourceMappingURL=Disposable.js.map","/**\n * @module ol/functions\n */\n/**\n * Always returns true.\n * @returns {boolean} true.\n */\nexport function TRUE() {\n    return true;\n}\n/**\n * Always returns false.\n * @returns {boolean} false.\n */\nexport function FALSE() {\n    return false;\n}\n/**\n * A reusable function, used e.g. as a default for callbacks.\n *\n * @return {void} Nothing.\n */\nexport function VOID() { }\n//# sourceMappingURL=functions.js.map","/**\n * @module ol/events/Event\n */\n/**\n * @classdesc\n * Stripped down implementation of the W3C DOM Level 2 Event interface.\n * See https://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-interface.\n *\n * This implementation only provides `type` and `target` properties, and\n * `stopPropagation` and `preventDefault` methods. It is meant as base class\n * for higher level events defined in the library, and works with\n * {@link module:ol/events/Target~Target}.\n */\nvar Event = /** @class */ (function () {\n    /**\n     * @param {string} type Type.\n     */\n    function Event(type) {\n        /**\n         * @type {boolean}\n         */\n        this.propagationStopped;\n        /**\n         * The event type.\n         * @type {string}\n         * @api\n         */\n        this.type = type;\n        /**\n         * The event target.\n         * @type {Object}\n         * @api\n         */\n        this.target = null;\n    }\n    /**\n     * Stop event propagation.\n     * @api\n     */\n    Event.prototype.preventDefault = function () {\n        this.propagationStopped = true;\n    };\n    /**\n     * Stop event propagation.\n     * @api\n     */\n    Event.prototype.stopPropagation = function () {\n        this.propagationStopped = true;\n    };\n    return Event;\n}());\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function stopPropagation(evt) {\n    evt.stopPropagation();\n}\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function preventDefault(evt) {\n    evt.preventDefault();\n}\nexport default Event;\n//# sourceMappingURL=Event.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/events/Target\n */\nimport Disposable from '../Disposable.js';\nimport { unlistenAll } from '../events.js';\nimport { VOID } from '../functions.js';\nimport Event from './Event.js';\n/**\n * @typedef {EventTarget|Target} EventTargetLike\n */\n/**\n * @classdesc\n * A simplified implementation of the W3C DOM Level 2 EventTarget interface.\n * See https://www.w3.org/TR/2000/REC-DOM-Level-2-Events-20001113/events.html#Events-EventTarget.\n *\n * There are two important simplifications compared to the specification:\n *\n * 1. The handling of `useCapture` in `addEventListener` and\n *    `removeEventListener`. There is no real capture model.\n * 2. The handling of `stopPropagation` and `preventDefault` on `dispatchEvent`.\n *    There is no event target hierarchy. When a listener calls\n *    `stopPropagation` or `preventDefault` on an event object, it means that no\n *    more listeners after this one will be called. Same as when the listener\n *    returns false.\n */\nvar Target = /** @class */ (function (_super) {\n    __extends(Target, _super);\n    function Target() {\n        var _this = _super.call(this) || this;\n        /**\n         * @private\n         * @type {!Object<string, number>}\n         */\n        _this.pendingRemovals_ = {};\n        /**\n         * @private\n         * @type {!Object<string, number>}\n         */\n        _this.dispatching_ = {};\n        /**\n         * @private\n         * @type {!Object<string, Array<import(\"../events.js\").ListenerFunction>>}\n         */\n        _this.listeners_ = {};\n        return _this;\n    }\n    /**\n     * @param {string} type Type.\n     * @param {import(\"../events.js\").ListenerFunction} listener Listener.\n     */\n    Target.prototype.addEventListener = function (type, listener) {\n        var listeners = this.listeners_[type];\n        if (!listeners) {\n            listeners = this.listeners_[type] = [];\n        }\n        if (listeners.indexOf(listener) === -1) {\n            listeners.push(listener);\n        }\n    };\n    /**\n     * Dispatches an event and calls all listeners listening for events\n     * of this type. The event parameter can either be a string or an\n     * Object with a `type` property.\n     *\n     * @param {{type: string,\n     *     target: (EventTargetLike|undefined),\n     *     propagationStopped: (boolean|undefined)}|\n     *     import(\"./Event.js\").default|string} event Event object.\n     * @return {boolean|undefined} `false` if anyone called preventDefault on the\n     *     event object or if any of the listeners returned false.\n     * @api\n     */\n    Target.prototype.dispatchEvent = function (event) {\n        var evt = typeof event === 'string' ? new Event(event) : event;\n        var type = evt.type;\n        evt.target = this;\n        var listeners = this.listeners_[type];\n        var propagate;\n        if (listeners) {\n            if (!(type in this.dispatching_)) {\n                this.dispatching_[type] = 0;\n                this.pendingRemovals_[type] = 0;\n            }\n            ++this.dispatching_[type];\n            for (var i = 0, ii = listeners.length; i < ii; ++i) {\n                if (listeners[i].call(this, evt) === false || evt.propagationStopped) {\n                    propagate = false;\n                    break;\n                }\n            }\n            --this.dispatching_[type];\n            if (this.dispatching_[type] === 0) {\n                var pendingRemovals = this.pendingRemovals_[type];\n                delete this.pendingRemovals_[type];\n                while (pendingRemovals--) {\n                    this.removeEventListener(type, VOID);\n                }\n                delete this.dispatching_[type];\n            }\n            return propagate;\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    Target.prototype.disposeInternal = function () {\n        unlistenAll(this);\n    };\n    /**\n     * Get the listeners for a specified event type. Listeners are returned in the\n     * order that they will be called in.\n     *\n     * @param {string} type Type.\n     * @return {Array<import(\"../events.js\").ListenerFunction>} Listeners.\n     */\n    Target.prototype.getListeners = function (type) {\n        return this.listeners_[type];\n    };\n    /**\n     * @param {string=} opt_type Type. If not provided,\n     *     `true` will be returned if this event target has any listeners.\n     * @return {boolean} Has listeners.\n     */\n    Target.prototype.hasListener = function (opt_type) {\n        return opt_type ?\n            opt_type in this.listeners_ :\n            Object.keys(this.listeners_).length > 0;\n    };\n    /**\n     * @param {string} type Type.\n     * @param {import(\"../events.js\").ListenerFunction} listener Listener.\n     */\n    Target.prototype.removeEventListener = function (type, listener) {\n        var listeners = this.listeners_[type];\n        if (listeners) {\n            var index = listeners.indexOf(listener);\n            if (type in this.pendingRemovals_) {\n                // make listener a no-op, and remove later in #dispatchEvent()\n                listeners[index] = VOID;\n                ++this.pendingRemovals_[type];\n            }\n            else {\n                listeners.splice(index, 1);\n                if (listeners.length === 0) {\n                    delete this.listeners_[type];\n                }\n            }\n        }\n    };\n    return Target;\n}(Disposable));\nexport default Target;\n//# sourceMappingURL=Target.js.map","/**\n * @module ol/events/EventType\n */\n/**\n * @enum {string}\n * @const\n */\nexport default {\n    /**\n     * Generic change event. Triggered when the revision counter is increased.\n     * @event module:ol/events/Event~Event#change\n     * @api\n     */\n    CHANGE: 'change',\n    CLEAR: 'clear',\n    CONTEXTMENU: 'contextmenu',\n    CLICK: 'click',\n    DBLCLICK: 'dblclick',\n    DRAGENTER: 'dragenter',\n    DRAGOVER: 'dragover',\n    DROP: 'drop',\n    ERROR: 'error',\n    KEYDOWN: 'keydown',\n    KEYPRESS: 'keypress',\n    LOAD: 'load',\n    MOUSEDOWN: 'mousedown',\n    MOUSEMOVE: 'mousemove',\n    MOUSEOUT: 'mouseout',\n    MOUSEUP: 'mouseup',\n    MOUSEWHEEL: 'mousewheel',\n    MSPOINTERDOWN: 'MSPointerDown',\n    RESIZE: 'resize',\n    TOUCHSTART: 'touchstart',\n    TOUCHMOVE: 'touchmove',\n    TOUCHEND: 'touchend',\n    WHEEL: 'wheel'\n};\n//# sourceMappingURL=EventType.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/Observable\n */\nimport { listen, unlistenByKey, unlisten, listenOnce } from './events.js';\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * An event target providing convenient methods for listener registration\n * and unregistration. A generic `change` event is always available through\n * {@link module:ol/Observable~Observable#changed}.\n *\n * @fires import(\"./events/Event.js\").Event\n * @api\n */\nvar Observable = /** @class */ (function (_super) {\n    __extends(Observable, _super);\n    function Observable() {\n        var _this = _super.call(this) || this;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.revision_ = 0;\n        return _this;\n    }\n    /**\n     * Increases the revision counter and dispatches a 'change' event.\n     * @api\n     */\n    Observable.prototype.changed = function () {\n        ++this.revision_;\n        this.dispatchEvent(EventType.CHANGE);\n    };\n    /**\n     * Get the version number for this object.  Each time the object is modified,\n     * its version number will be incremented.\n     * @return {number} Revision.\n     * @api\n     */\n    Observable.prototype.getRevision = function () {\n        return this.revision_;\n    };\n    /**\n     * Listen for a certain type of event.\n     * @param {string|Array<string>} type The event type or array of event types.\n     * @param {function(?): ?} listener The listener function.\n     * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n     *     called with an array of event types as the first argument, the return\n     *     will be an array of keys.\n     * @api\n     */\n    Observable.prototype.on = function (type, listener) {\n        if (Array.isArray(type)) {\n            var len = type.length;\n            var keys = new Array(len);\n            for (var i = 0; i < len; ++i) {\n                keys[i] = listen(this, type[i], listener);\n            }\n            return keys;\n        }\n        else {\n            return listen(this, /** @type {string} */ (type), listener);\n        }\n    };\n    /**\n     * Listen once for a certain type of event.\n     * @param {string|Array<string>} type The event type or array of event types.\n     * @param {function(?): ?} listener The listener function.\n     * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n     *     called with an array of event types as the first argument, the return\n     *     will be an array of keys.\n     * @api\n     */\n    Observable.prototype.once = function (type, listener) {\n        if (Array.isArray(type)) {\n            var len = type.length;\n            var keys = new Array(len);\n            for (var i = 0; i < len; ++i) {\n                keys[i] = listenOnce(this, type[i], listener);\n            }\n            return keys;\n        }\n        else {\n            return listenOnce(this, /** @type {string} */ (type), listener);\n        }\n    };\n    /**\n     * Unlisten for a certain type of event.\n     * @param {string|Array<string>} type The event type or array of event types.\n     * @param {function(?): ?} listener The listener function.\n     * @api\n     */\n    Observable.prototype.un = function (type, listener) {\n        if (Array.isArray(type)) {\n            for (var i = 0, ii = type.length; i < ii; ++i) {\n                unlisten(this, type[i], listener);\n            }\n            return;\n        }\n        else {\n            unlisten(this, /** @type {string} */ (type), listener);\n        }\n    };\n    return Observable;\n}(EventTarget));\n/**\n * Removes an event listener using the key returned by `on()` or `once()`.\n * @param {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} key The key returned by `on()`\n *     or `once()` (or an array of keys).\n * @api\n */\nexport function unByKey(key) {\n    if (Array.isArray(key)) {\n        for (var i = 0, ii = key.length; i < ii; ++i) {\n            unlistenByKey(key[i]);\n        }\n    }\n    else {\n        unlistenByKey(/** @type {import(\"./events.js\").EventsKey} */ (key));\n    }\n}\nexport default Observable;\n//# sourceMappingURL=Observable.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/Object\n */\nimport { getUid } from './util.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport Observable from './Observable.js';\nimport Event from './events/Event.js';\nimport { assign } from './obj.js';\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Object~BaseObject} instances are instances of this type.\n */\nvar ObjectEvent = /** @class */ (function (_super) {\n    __extends(ObjectEvent, _super);\n    /**\n     * @param {string} type The event type.\n     * @param {string} key The property name.\n     * @param {*} oldValue The old value for `key`.\n     */\n    function ObjectEvent(type, key, oldValue) {\n        var _this = _super.call(this, type) || this;\n        /**\n         * The name of the property whose value is changing.\n         * @type {string}\n         * @api\n         */\n        _this.key = key;\n        /**\n         * The old value. To get the new value use `e.target.get(e.key)` where\n         * `e` is the event object.\n         * @type {*}\n         * @api\n         */\n        _this.oldValue = oldValue;\n        return _this;\n    }\n    return ObjectEvent;\n}(Event));\nexport { ObjectEvent };\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Most non-trivial classes inherit from this.\n *\n * This extends {@link module:ol/Observable} with observable\n * properties, where each property is observable as well as the object as a\n * whole.\n *\n * Classes that inherit from this have pre-defined properties, to which you can\n * add your owns. The pre-defined properties are listed in this documentation as\n * 'Observable Properties', and have their own accessors; for example,\n * {@link module:ol/Map~Map} has a `target` property, accessed with\n * `getTarget()` and changed with `setTarget()`. Not all properties are however\n * settable. There are also general-purpose accessors `get()` and `set()`. For\n * example, `get('target')` is equivalent to `getTarget()`.\n *\n * The `set` accessors trigger a change event, and you can monitor this by\n * registering a listener. For example, {@link module:ol/View~View} has a\n * `center` property, so `view.on('change:center', function(evt) {...});` would\n * call the function whenever the value of the center property changes. Within\n * the function, `evt.target` would be the view, so `evt.target.getCenter()`\n * would return the new center.\n *\n * You can add your own observable properties with\n * `object.set('prop', 'value')`, and retrieve that with `object.get('prop')`.\n * You can listen for changes on that property value with\n * `object.on('change:prop', listener)`. You can get a list of all\n * properties with {@link module:ol/Object~BaseObject#getProperties}.\n *\n * Note that the observable properties are separate from standard JS properties.\n * You can, for example, give your map object a title with\n * `map.title='New title'` and with `map.set('title', 'Another title')`. The\n * first will be a `hasOwnProperty`; the second will appear in\n * `getProperties()`. Only the second is observable.\n *\n * Properties can be deleted by using the unset method. E.g.\n * object.unset('foo').\n *\n * @fires ObjectEvent\n * @api\n */\nvar BaseObject = /** @class */ (function (_super) {\n    __extends(BaseObject, _super);\n    /**\n     * @param {Object<string, *>=} opt_values An object with key-value pairs.\n     */\n    function BaseObject(opt_values) {\n        var _this = _super.call(this) || this;\n        // Call {@link module:ol/util~getUid} to ensure that the order of objects' ids is\n        // the same as the order in which they were created.  This also helps to\n        // ensure that object properties are always added in the same order, which\n        // helps many JavaScript engines generate faster code.\n        getUid(_this);\n        /**\n         * @private\n         * @type {!Object<string, *>}\n         */\n        _this.values_ = {};\n        if (opt_values !== undefined) {\n            _this.setProperties(opt_values);\n        }\n        return _this;\n    }\n    /**\n     * Gets a value.\n     * @param {string} key Key name.\n     * @return {*} Value.\n     * @api\n     */\n    BaseObject.prototype.get = function (key) {\n        var value;\n        if (this.values_.hasOwnProperty(key)) {\n            value = this.values_[key];\n        }\n        return value;\n    };\n    /**\n     * Get a list of object property names.\n     * @return {Array<string>} List of property names.\n     * @api\n     */\n    BaseObject.prototype.getKeys = function () {\n        return Object.keys(this.values_);\n    };\n    /**\n     * Get an object of all property names and values.\n     * @return {Object<string, *>} Object.\n     * @api\n     */\n    BaseObject.prototype.getProperties = function () {\n        return assign({}, this.values_);\n    };\n    /**\n     * @param {string} key Key name.\n     * @param {*} oldValue Old value.\n     */\n    BaseObject.prototype.notify = function (key, oldValue) {\n        var eventType;\n        eventType = getChangeEventType(key);\n        this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n        eventType = ObjectEventType.PROPERTYCHANGE;\n        this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n    };\n    /**\n     * Sets a value.\n     * @param {string} key Key name.\n     * @param {*} value Value.\n     * @param {boolean=} opt_silent Update without triggering an event.\n     * @api\n     */\n    BaseObject.prototype.set = function (key, value, opt_silent) {\n        if (opt_silent) {\n            this.values_[key] = value;\n        }\n        else {\n            var oldValue = this.values_[key];\n            this.values_[key] = value;\n            if (oldValue !== value) {\n                this.notify(key, oldValue);\n            }\n        }\n    };\n    /**\n     * Sets a collection of key-value pairs.  Note that this changes any existing\n     * properties and adds new ones (it does not remove any existing properties).\n     * @param {Object<string, *>} values Values.\n     * @param {boolean=} opt_silent Update without triggering an event.\n     * @api\n     */\n    BaseObject.prototype.setProperties = function (values, opt_silent) {\n        for (var key in values) {\n            this.set(key, values[key], opt_silent);\n        }\n    };\n    /**\n     * Unsets a property.\n     * @param {string} key Key name.\n     * @param {boolean=} opt_silent Unset without triggering an event.\n     * @api\n     */\n    BaseObject.prototype.unset = function (key, opt_silent) {\n        if (key in this.values_) {\n            var oldValue = this.values_[key];\n            delete this.values_[key];\n            if (!opt_silent) {\n                this.notify(key, oldValue);\n            }\n        }\n    };\n    return BaseObject;\n}(Observable));\n/**\n * @type {Object<string, string>}\n */\nvar changeEventTypeCache = {};\n/**\n * @param {string} key Key name.\n * @return {string} Change name.\n */\nexport function getChangeEventType(key) {\n    return changeEventTypeCache.hasOwnProperty(key) ?\n        changeEventTypeCache[key] :\n        (changeEventTypeCache[key] = 'change:' + key);\n}\nexport default BaseObject;\n//# sourceMappingURL=Object.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/Collection\n */\nimport AssertionError from './AssertionError.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport BaseObject from './Object.js';\nimport Event from './events/Event.js';\n/**\n * @enum {string}\n * @private\n */\nvar Property = {\n    LENGTH: 'length'\n};\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Collection~Collection} instances are instances of this\n * type.\n */\nvar CollectionEvent = /** @class */ (function (_super) {\n    __extends(CollectionEvent, _super);\n    /**\n     * @param {CollectionEventType} type Type.\n     * @param {*=} opt_element Element.\n     * @param {number} opt_index The index of the added or removed element.\n     */\n    function CollectionEvent(type, opt_element, opt_index) {\n        var _this = _super.call(this, type) || this;\n        /**\n         * The element that is added to or removed from the collection.\n         * @type {*}\n         * @api\n         */\n        _this.element = opt_element;\n        /**\n         * The index of the added or removed element.\n         * @type {number}\n         * @api\n         */\n        _this.index = opt_index;\n        return _this;\n    }\n    return CollectionEvent;\n}(Event));\nexport { CollectionEvent };\n/**\n * @typedef {Object} Options\n * @property {boolean} [unique=false] Disallow the same item from being added to\n * the collection twice.\n */\n/**\n * @classdesc\n * An expanded version of standard JS Array, adding convenience methods for\n * manipulation. Add and remove changes to the Collection trigger a Collection\n * event. Note that this does not cover changes to the objects _within_ the\n * Collection; they trigger events on the appropriate object, not on the\n * Collection as a whole.\n *\n * @fires CollectionEvent\n *\n * @template T\n * @api\n */\nvar Collection = /** @class */ (function (_super) {\n    __extends(Collection, _super);\n    /**\n     * @param {Array<T>=} opt_array Array.\n     * @param {Options=} opt_options Collection options.\n     */\n    function Collection(opt_array, opt_options) {\n        var _this = _super.call(this) || this;\n        var options = opt_options || {};\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.unique_ = !!options.unique;\n        /**\n         * @private\n         * @type {!Array<T>}\n         */\n        _this.array_ = opt_array ? opt_array : [];\n        if (_this.unique_) {\n            for (var i = 0, ii = _this.array_.length; i < ii; ++i) {\n                _this.assertUnique_(_this.array_[i], i);\n            }\n        }\n        _this.updateLength_();\n        return _this;\n    }\n    /**\n     * Remove all elements from the collection.\n     * @api\n     */\n    Collection.prototype.clear = function () {\n        while (this.getLength() > 0) {\n            this.pop();\n        }\n    };\n    /**\n     * Add elements to the collection.  This pushes each item in the provided array\n     * to the end of the collection.\n     * @param {!Array<T>} arr Array.\n     * @return {Collection<T>} This collection.\n     * @api\n     */\n    Collection.prototype.extend = function (arr) {\n        for (var i = 0, ii = arr.length; i < ii; ++i) {\n            this.push(arr[i]);\n        }\n        return this;\n    };\n    /**\n     * Iterate over each element, calling the provided callback.\n     * @param {function(T, number, Array<T>): *} f The function to call\n     *     for every element. This function takes 3 arguments (the element, the\n     *     index and the array). The return value is ignored.\n     * @api\n     */\n    Collection.prototype.forEach = function (f) {\n        var array = this.array_;\n        for (var i = 0, ii = array.length; i < ii; ++i) {\n            f(array[i], i, array);\n        }\n    };\n    /**\n     * Get a reference to the underlying Array object. Warning: if the array\n     * is mutated, no events will be dispatched by the collection, and the\n     * collection's \"length\" property won't be in sync with the actual length\n     * of the array.\n     * @return {!Array<T>} Array.\n     * @api\n     */\n    Collection.prototype.getArray = function () {\n        return this.array_;\n    };\n    /**\n     * Get the element at the provided index.\n     * @param {number} index Index.\n     * @return {T} Element.\n     * @api\n     */\n    Collection.prototype.item = function (index) {\n        return this.array_[index];\n    };\n    /**\n     * Get the length of this collection.\n     * @return {number} The length of the array.\n     * @observable\n     * @api\n     */\n    Collection.prototype.getLength = function () {\n        return this.get(Property.LENGTH);\n    };\n    /**\n     * Insert an element at the provided index.\n     * @param {number} index Index.\n     * @param {T} elem Element.\n     * @api\n     */\n    Collection.prototype.insertAt = function (index, elem) {\n        if (this.unique_) {\n            this.assertUnique_(elem);\n        }\n        this.array_.splice(index, 0, elem);\n        this.updateLength_();\n        this.dispatchEvent(new CollectionEvent(CollectionEventType.ADD, elem, index));\n    };\n    /**\n     * Remove the last element of the collection and return it.\n     * Return `undefined` if the collection is empty.\n     * @return {T|undefined} Element.\n     * @api\n     */\n    Collection.prototype.pop = function () {\n        return this.removeAt(this.getLength() - 1);\n    };\n    /**\n     * Insert the provided element at the end of the collection.\n     * @param {T} elem Element.\n     * @return {number} New length of the collection.\n     * @api\n     */\n    Collection.prototype.push = function (elem) {\n        if (this.unique_) {\n            this.assertUnique_(elem);\n        }\n        var n = this.getLength();\n        this.insertAt(n, elem);\n        return this.getLength();\n    };\n    /**\n     * Remove the first occurrence of an element from the collection.\n     * @param {T} elem Element.\n     * @return {T|undefined} The removed element or undefined if none found.\n     * @api\n     */\n    Collection.prototype.remove = function (elem) {\n        var arr = this.array_;\n        for (var i = 0, ii = arr.length; i < ii; ++i) {\n            if (arr[i] === elem) {\n                return this.removeAt(i);\n            }\n        }\n        return undefined;\n    };\n    /**\n     * Remove the element at the provided index and return it.\n     * Return `undefined` if the collection does not contain this index.\n     * @param {number} index Index.\n     * @return {T|undefined} Value.\n     * @api\n     */\n    Collection.prototype.removeAt = function (index) {\n        var prev = this.array_[index];\n        this.array_.splice(index, 1);\n        this.updateLength_();\n        this.dispatchEvent(new CollectionEvent(CollectionEventType.REMOVE, prev, index));\n        return prev;\n    };\n    /**\n     * Set the element at the provided index.\n     * @param {number} index Index.\n     * @param {T} elem Element.\n     * @api\n     */\n    Collection.prototype.setAt = function (index, elem) {\n        var n = this.getLength();\n        if (index < n) {\n            if (this.unique_) {\n                this.assertUnique_(elem, index);\n            }\n            var prev = this.array_[index];\n            this.array_[index] = elem;\n            this.dispatchEvent(new CollectionEvent(CollectionEventType.REMOVE, prev, index));\n            this.dispatchEvent(new CollectionEvent(CollectionEventType.ADD, elem, index));\n        }\n        else {\n            for (var j = n; j < index; ++j) {\n                this.insertAt(j, undefined);\n            }\n            this.insertAt(index, elem);\n        }\n    };\n    /**\n     * @private\n     */\n    Collection.prototype.updateLength_ = function () {\n        this.set(Property.LENGTH, this.array_.length);\n    };\n    /**\n     * @private\n     * @param {T} elem Element.\n     * @param {number=} opt_except Optional index to ignore.\n     */\n    Collection.prototype.assertUnique_ = function (elem, opt_except) {\n        for (var i = 0, ii = this.array_.length; i < ii; ++i) {\n            if (this.array_[i] === elem && i !== opt_except) {\n                throw new AssertionError(58);\n            }\n        }\n    };\n    return Collection;\n}(BaseObject));\nexport default Collection;\n//# sourceMappingURL=Collection.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/MapEvent\n */\nimport Event from './events/Event.js';\n/**\n * @classdesc\n * Events emitted as map events are instances of this type.\n * See {@link module:ol/PluggableMap~PluggableMap} for which events trigger a map event.\n */\nvar MapEvent = /** @class */ (function (_super) {\n    __extends(MapEvent, _super);\n    /**\n     * @param {string} type Event type.\n     * @param {import(\"./PluggableMap.js\").default} map Map.\n     * @param {?import(\"./PluggableMap.js\").FrameState=} opt_frameState Frame state.\n     */\n    function MapEvent(type, map, opt_frameState) {\n        var _this = _super.call(this, type) || this;\n        /**\n         * The map where the event occurred.\n         * @type {import(\"./PluggableMap.js\").default}\n         * @api\n         */\n        _this.map = map;\n        /**\n         * The frame state at the time of the event.\n         * @type {?import(\"./PluggableMap.js\").FrameState}\n         * @api\n         */\n        _this.frameState = opt_frameState !== undefined ? opt_frameState : null;\n        return _this;\n    }\n    return MapEvent;\n}(Event));\nexport default MapEvent;\n//# sourceMappingURL=MapEvent.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/MapBrowserEvent\n */\nimport MapEvent from './MapEvent.js';\n/**\n * @classdesc\n * Events emitted as map browser events are instances of this type.\n * See {@link module:ol/PluggableMap~PluggableMap} for which events trigger a map browser event.\n */\nvar MapBrowserEvent = /** @class */ (function (_super) {\n    __extends(MapBrowserEvent, _super);\n    /**\n     * @param {string} type Event type.\n     * @param {import(\"./PluggableMap.js\").default} map Map.\n     * @param {Event} browserEvent Browser event.\n     * @param {boolean=} opt_dragging Is the map currently being dragged?\n     * @param {?import(\"./PluggableMap.js\").FrameState=} opt_frameState Frame state.\n     */\n    function MapBrowserEvent(type, map, browserEvent, opt_dragging, opt_frameState) {\n        var _this = _super.call(this, type, map, opt_frameState) || this;\n        /**\n         * The original browser event.\n         * @const\n         * @type {Event}\n         * @api\n         */\n        _this.originalEvent = browserEvent;\n        /**\n         * The map pixel relative to the viewport corresponding to the original browser event.\n         * @type {import(\"./pixel.js\").Pixel}\n         * @api\n         */\n        _this.pixel = map.getEventPixel(browserEvent);\n        /**\n         * The coordinate in view projection corresponding to the original browser event.\n         * @type {import(\"./coordinate.js\").Coordinate}\n         * @api\n         */\n        _this.coordinate = map.getCoordinateFromPixel(_this.pixel);\n        /**\n         * Indicates if the map is currently being dragged. Only set for\n         * `POINTERDRAG` and `POINTERMOVE` events. Default is `false`.\n         *\n         * @type {boolean}\n         * @api\n         */\n        _this.dragging = opt_dragging !== undefined ? opt_dragging : false;\n        return _this;\n    }\n    /**\n     * Prevents the default browser action.\n     * See https://developer.mozilla.org/en-US/docs/Web/API/event.preventDefault.\n     * @override\n     * @api\n     */\n    MapBrowserEvent.prototype.preventDefault = function () {\n        _super.prototype.preventDefault.call(this);\n        this.originalEvent.preventDefault();\n    };\n    /**\n     * Prevents further propagation of the current event.\n     * See https://developer.mozilla.org/en-US/docs/Web/API/event.stopPropagation.\n     * @override\n     * @api\n     */\n    MapBrowserEvent.prototype.stopPropagation = function () {\n        _super.prototype.stopPropagation.call(this);\n        this.originalEvent.stopPropagation();\n    };\n    return MapBrowserEvent;\n}(MapEvent));\nexport default MapBrowserEvent;\n//# sourceMappingURL=MapBrowserEvent.js.map","/**\n * @module ol/has\n */\nvar ua = typeof navigator !== 'undefined' ?\n    navigator.userAgent.toLowerCase() : '';\n/**\n * User agent string says we are dealing with Firefox as browser.\n * @type {boolean}\n */\nexport var FIREFOX = ua.indexOf('firefox') !== -1;\n/**\n * User agent string says we are dealing with Safari as browser.\n * @type {boolean}\n */\nexport var SAFARI = ua.indexOf('safari') !== -1 && ua.indexOf('chrom') == -1;\n/**\n * User agent string says we are dealing with a WebKit engine.\n * @type {boolean}\n */\nexport var WEBKIT = ua.indexOf('webkit') !== -1 && ua.indexOf('edge') == -1;\n/**\n * User agent string says we are dealing with a Mac as platform.\n * @type {boolean}\n */\nexport var MAC = ua.indexOf('macintosh') !== -1;\n/**\n * The ratio between physical pixels and device-independent pixels\n * (dips) on the device (`window.devicePixelRatio`).\n * @const\n * @type {number}\n * @api\n */\nexport var DEVICE_PIXEL_RATIO = window.devicePixelRatio || 1;\n/**\n * Is HTML5 geolocation supported in the current browser?\n * @const\n * @type {boolean}\n * @api\n */\nexport var GEOLOCATION = 'geolocation' in navigator;\n/**\n * True if browser supports touch events.\n * @const\n * @type {boolean}\n * @api\n */\nexport var TOUCH = 'ontouchstart' in window;\n/**\n * True if browser supports pointer events.\n * @const\n * @type {boolean}\n */\nexport var POINTER = 'PointerEvent' in window;\n/**\n * True if browser supports ms pointer events (IE 10).\n * @const\n * @type {boolean}\n */\nexport var MSPOINTER = !!(navigator.msPointerEnabled);\nexport { HAS as WEBGL } from './webgl.js';\n//# sourceMappingURL=has.js.map","/**\n * @module ol/MapBrowserEventType\n */\nimport EventType from './events/EventType.js';\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n    /**\n     * A true single click with no dragging and no double click. Note that this\n     * event is delayed by 250 ms to ensure that it is not a double click.\n     * @event module:ol/MapBrowserEvent~MapBrowserEvent#singleclick\n     * @api\n     */\n    SINGLECLICK: 'singleclick',\n    /**\n     * A click with no dragging. A double click will fire two of this.\n     * @event module:ol/MapBrowserEvent~MapBrowserEvent#click\n     * @api\n     */\n    CLICK: EventType.CLICK,\n    /**\n     * A true double click, with no dragging.\n     * @event module:ol/MapBrowserEvent~MapBrowserEvent#dblclick\n     * @api\n     */\n    DBLCLICK: EventType.DBLCLICK,\n    /**\n     * Triggered when a pointer is dragged.\n     * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointerdrag\n     * @api\n     */\n    POINTERDRAG: 'pointerdrag',\n    /**\n     * Triggered when a pointer is moved. Note that on touch devices this is\n     * triggered when the map is panned, so is not the same as mousemove.\n     * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointermove\n     * @api\n     */\n    POINTERMOVE: 'pointermove',\n    POINTERDOWN: 'pointerdown',\n    POINTERUP: 'pointerup',\n    POINTEROVER: 'pointerover',\n    POINTEROUT: 'pointerout',\n    POINTERENTER: 'pointerenter',\n    POINTERLEAVE: 'pointerleave',\n    POINTERCANCEL: 'pointercancel'\n};\n//# sourceMappingURL=MapBrowserEventType.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/MapBrowserPointerEvent\n */\nimport MapBrowserEvent from './MapBrowserEvent.js';\nvar MapBrowserPointerEvent = /** @class */ (function (_super) {\n    __extends(MapBrowserPointerEvent, _super);\n    /**\n     * @param {string} type Event type.\n     * @param {import(\"./PluggableMap.js\").default} map Map.\n     * @param {import(\"./pointer/PointerEvent.js\").default} pointerEvent Pointer event.\n     * @param {boolean=} opt_dragging Is the map currently being dragged?\n     * @param {?import(\"./PluggableMap.js\").FrameState=} opt_frameState Frame state.\n     */\n    function MapBrowserPointerEvent(type, map, pointerEvent, opt_dragging, opt_frameState) {\n        var _this = _super.call(this, type, map, pointerEvent.originalEvent, opt_dragging, opt_frameState) || this;\n        /**\n         * @const\n         * @type {import(\"./pointer/PointerEvent.js\").default}\n         */\n        _this.pointerEvent = pointerEvent;\n        return _this;\n    }\n    return MapBrowserPointerEvent;\n}(MapBrowserEvent));\nexport default MapBrowserPointerEvent;\n//# sourceMappingURL=MapBrowserPointerEvent.js.map","/**\n * @module ol/pointer/EventType\n */\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n    POINTERMOVE: 'pointermove',\n    POINTERDOWN: 'pointerdown',\n    POINTERUP: 'pointerup',\n    POINTEROVER: 'pointerover',\n    POINTEROUT: 'pointerout',\n    POINTERENTER: 'pointerenter',\n    POINTERLEAVE: 'pointerleave',\n    POINTERCANCEL: 'pointercancel'\n};\n//# sourceMappingURL=EventType.js.map","/**\n * @module ol/pointer/EventSource\n */\nvar EventSource = /** @class */ (function () {\n    /**\n     * @param {import(\"./PointerEventHandler.js\").default} dispatcher Event handler.\n     * @param {!Object<string, function(Event): void>} mapping Event mapping.\n     */\n    function EventSource(dispatcher, mapping) {\n        /**\n         * @type {import(\"./PointerEventHandler.js\").default}\n         */\n        this.dispatcher = dispatcher;\n        /**\n         * @private\n         * @const\n         * @type {!Object<string, function(Event): void>}\n         */\n        this.mapping_ = mapping;\n    }\n    /**\n     * List of events supported by this source.\n     * @return {Array<string>} Event names\n     */\n    EventSource.prototype.getEvents = function () {\n        return Object.keys(this.mapping_);\n    };\n    /**\n     * Returns the handler that should handle a given event type.\n     * @param {string} eventType The event type.\n     * @return {function(Event)} Handler\n     */\n    EventSource.prototype.getHandlerForEvent = function (eventType) {\n        return this.mapping_[eventType];\n    };\n    return EventSource;\n}());\nexport default EventSource;\n//# sourceMappingURL=EventSource.js.map","/**\n * @module ol/pointer/MouseSource\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n// Based on https://github.com/Polymer/PointerEvents\n// Copyright (c) 2013 The Polymer Authors. All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n// * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n// * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n// * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\nimport EventSource from './EventSource.js';\n/**\n * @type {number}\n */\nexport var POINTER_ID = 1;\n/**\n * @type {string}\n */\nexport var POINTER_TYPE = 'mouse';\n/**\n * Radius around touchend that swallows mouse events.\n *\n * @type {number}\n */\nvar DEDUP_DIST = 25;\n/**\n * Handler for `mousedown`.\n *\n * @this {MouseSource}\n * @param {MouseEvent} inEvent The in event.\n */\nfunction mousedown(inEvent) {\n    if (!this.isEventSimulatedFromTouch_(inEvent)) {\n        // TODO(dfreedman) workaround for some elements not sending mouseup\n        // http://crbug/149091\n        if (POINTER_ID.toString() in this.pointerMap) {\n            this.cancel(inEvent);\n        }\n        var e = prepareEvent(inEvent, this.dispatcher);\n        this.pointerMap[POINTER_ID.toString()] = inEvent;\n        this.dispatcher.down(e, inEvent);\n    }\n}\n/**\n * Handler for `mousemove`.\n *\n * @this {MouseSource}\n * @param {MouseEvent} inEvent The in event.\n */\nfunction mousemove(inEvent) {\n    if (!this.isEventSimulatedFromTouch_(inEvent)) {\n        var e = prepareEvent(inEvent, this.dispatcher);\n        this.dispatcher.move(e, inEvent);\n    }\n}\n/**\n * Handler for `mouseup`.\n *\n * @this {MouseSource}\n * @param {MouseEvent} inEvent The in event.\n */\nfunction mouseup(inEvent) {\n    if (!this.isEventSimulatedFromTouch_(inEvent)) {\n        var p = this.pointerMap[POINTER_ID.toString()];\n        if (p && p.button === inEvent.button) {\n            var e = prepareEvent(inEvent, this.dispatcher);\n            this.dispatcher.up(e, inEvent);\n            this.cleanupMouse();\n        }\n    }\n}\n/**\n * Handler for `mouseover`.\n *\n * @this {MouseSource}\n * @param {MouseEvent} inEvent The in event.\n */\nfunction mouseover(inEvent) {\n    if (!this.isEventSimulatedFromTouch_(inEvent)) {\n        var e = prepareEvent(inEvent, this.dispatcher);\n        this.dispatcher.enterOver(e, inEvent);\n    }\n}\n/**\n * Handler for `mouseout`.\n *\n * @this {MouseSource}\n * @param {MouseEvent} inEvent The in event.\n */\nfunction mouseout(inEvent) {\n    if (!this.isEventSimulatedFromTouch_(inEvent)) {\n        var e = prepareEvent(inEvent, this.dispatcher);\n        this.dispatcher.leaveOut(e, inEvent);\n    }\n}\nvar MouseSource = /** @class */ (function (_super) {\n    __extends(MouseSource, _super);\n    /**\n     * @param {import(\"./PointerEventHandler.js\").default} dispatcher Event handler.\n     */\n    function MouseSource(dispatcher) {\n        var _this = this;\n        var mapping = {\n            'mousedown': mousedown,\n            'mousemove': mousemove,\n            'mouseup': mouseup,\n            'mouseover': mouseover,\n            'mouseout': mouseout\n        };\n        _this = _super.call(this, dispatcher, mapping) || this;\n        /**\n         * @const\n         * @type {!Object<string, Event|Object>}\n         */\n        _this.pointerMap = dispatcher.pointerMap;\n        /**\n         * @const\n         * @type {Array<import(\"../pixel.js\").Pixel>}\n         */\n        _this.lastTouches = [];\n        return _this;\n    }\n    /**\n     * Detect if a mouse event was simulated from a touch by\n     * checking if previously there was a touch event at the\n     * same position.\n     *\n     * FIXME - Known problem with the native Android browser on\n     * Samsung GT-I9100 (Android 4.1.2):\n     * In case the page is scrolled, this function does not work\n     * correctly when a canvas is used (WebGL or canvas renderer).\n     * Mouse listeners on canvas elements (for this browser), create\n     * two mouse events: One 'good' and one 'bad' one (on other browsers or\n     * when a div is used, there is only one event). For the 'bad' one,\n     * clientX/clientY and also pageX/pageY are wrong when the page\n     * is scrolled. Because of that, this function can not detect if\n     * the events were simulated from a touch event. As result, a\n     * pointer event at a wrong position is dispatched, which confuses\n     * the map interactions.\n     * It is unclear, how one can get the correct position for the event\n     * or detect that the positions are invalid.\n     *\n     * @private\n     * @param {MouseEvent} inEvent The in event.\n     * @return {boolean} True, if the event was generated by a touch.\n     */\n    MouseSource.prototype.isEventSimulatedFromTouch_ = function (inEvent) {\n        var lts = this.lastTouches;\n        var x = inEvent.clientX;\n        var y = inEvent.clientY;\n        for (var i = 0, l = lts.length, t = void 0; i < l && (t = lts[i]); i++) {\n            // simulated mouse events will be swallowed near a primary touchend\n            var dx = Math.abs(x - t[0]);\n            var dy = Math.abs(y - t[1]);\n            if (dx <= DEDUP_DIST && dy <= DEDUP_DIST) {\n                return true;\n            }\n        }\n        return false;\n    };\n    /**\n     * Dispatches a `pointercancel` event.\n     *\n     * @param {Event} inEvent The in event.\n     */\n    MouseSource.prototype.cancel = function (inEvent) {\n        var e = prepareEvent(inEvent, this.dispatcher);\n        this.dispatcher.cancel(e, inEvent);\n        this.cleanupMouse();\n    };\n    /**\n     * Remove the mouse from the list of active pointers.\n     */\n    MouseSource.prototype.cleanupMouse = function () {\n        delete this.pointerMap[POINTER_ID.toString()];\n    };\n    return MouseSource;\n}(EventSource));\n/**\n * Creates a copy of the original event that will be used\n * for the fake pointer event.\n *\n * @param {Event} inEvent The in event.\n * @param {import(\"./PointerEventHandler.js\").default} dispatcher Event handler.\n * @return {Object} The copied event.\n */\nexport function prepareEvent(inEvent, dispatcher) {\n    var e = dispatcher.cloneEvent(inEvent, inEvent);\n    // forward mouse preventDefault\n    var pd = e.preventDefault;\n    e.preventDefault = function () {\n        inEvent.preventDefault();\n        pd();\n    };\n    e.pointerId = POINTER_ID;\n    e.isPrimary = true;\n    e.pointerType = POINTER_TYPE;\n    return e;\n}\nexport default MouseSource;\n//# sourceMappingURL=MouseSource.js.map","/**\n * @module ol/pointer/MsSource\n */\n// Based on https://github.com/Polymer/PointerEvents\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n// Copyright (c) 2013 The Polymer Authors. All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n// * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n// * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n// * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\nimport EventSource from './EventSource.js';\n/**\n * @const\n * @type {Array<string>}\n */\nvar POINTER_TYPES = [\n    '',\n    'unavailable',\n    'touch',\n    'pen',\n    'mouse'\n];\n/**\n * Handler for `msPointerDown`.\n *\n * @this {MsSource}\n * @param {MSPointerEvent} inEvent The in event.\n */\nfunction msPointerDown(inEvent) {\n    this.pointerMap[inEvent.pointerId.toString()] = inEvent;\n    var e = this.prepareEvent_(inEvent);\n    this.dispatcher.down(e, inEvent);\n}\n/**\n * Handler for `msPointerMove`.\n *\n * @this {MsSource}\n * @param {MSPointerEvent} inEvent The in event.\n */\nfunction msPointerMove(inEvent) {\n    var e = this.prepareEvent_(inEvent);\n    this.dispatcher.move(e, inEvent);\n}\n/**\n * Handler for `msPointerUp`.\n *\n * @this {MsSource}\n * @param {MSPointerEvent} inEvent The in event.\n */\nfunction msPointerUp(inEvent) {\n    var e = this.prepareEvent_(inEvent);\n    this.dispatcher.up(e, inEvent);\n    this.cleanup(inEvent.pointerId);\n}\n/**\n * Handler for `msPointerOut`.\n *\n * @this {MsSource}\n * @param {MSPointerEvent} inEvent The in event.\n */\nfunction msPointerOut(inEvent) {\n    var e = this.prepareEvent_(inEvent);\n    this.dispatcher.leaveOut(e, inEvent);\n}\n/**\n * Handler for `msPointerOver`.\n *\n * @this {MsSource}\n * @param {MSPointerEvent} inEvent The in event.\n */\nfunction msPointerOver(inEvent) {\n    var e = this.prepareEvent_(inEvent);\n    this.dispatcher.enterOver(e, inEvent);\n}\n/**\n * Handler for `msPointerCancel`.\n *\n * @this {MsSource}\n * @param {MSPointerEvent} inEvent The in event.\n */\nfunction msPointerCancel(inEvent) {\n    var e = this.prepareEvent_(inEvent);\n    this.dispatcher.cancel(e, inEvent);\n    this.cleanup(inEvent.pointerId);\n}\n/**\n * Handler for `msLostPointerCapture`.\n *\n * @this {MsSource}\n * @param {MSPointerEvent} inEvent The in event.\n */\nfunction msLostPointerCapture(inEvent) {\n    var e = this.dispatcher.makeEvent('lostpointercapture', inEvent, inEvent);\n    this.dispatcher.dispatchEvent(e);\n}\n/**\n * Handler for `msGotPointerCapture`.\n *\n * @this {MsSource}\n * @param {MSPointerEvent} inEvent The in event.\n */\nfunction msGotPointerCapture(inEvent) {\n    var e = this.dispatcher.makeEvent('gotpointercapture', inEvent, inEvent);\n    this.dispatcher.dispatchEvent(e);\n}\nvar MsSource = /** @class */ (function (_super) {\n    __extends(MsSource, _super);\n    /**\n     * @param {import(\"./PointerEventHandler.js\").default} dispatcher Event handler.\n     */\n    function MsSource(dispatcher) {\n        var _this = this;\n        var mapping = {\n            'MSPointerDown': msPointerDown,\n            'MSPointerMove': msPointerMove,\n            'MSPointerUp': msPointerUp,\n            'MSPointerOut': msPointerOut,\n            'MSPointerOver': msPointerOver,\n            'MSPointerCancel': msPointerCancel,\n            'MSGotPointerCapture': msGotPointerCapture,\n            'MSLostPointerCapture': msLostPointerCapture\n        };\n        _this = _super.call(this, dispatcher, mapping) || this;\n        /**\n         * @const\n         * @type {!Object<string, MSPointerEvent|Object>}\n         */\n        _this.pointerMap = dispatcher.pointerMap;\n        return _this;\n    }\n    /**\n     * Creates a copy of the original event that will be used\n     * for the fake pointer event.\n     *\n     * @private\n     * @param {MSPointerEvent} inEvent The in event.\n     * @return {Object} The copied event.\n     */\n    MsSource.prototype.prepareEvent_ = function (inEvent) {\n        /** @type {MSPointerEvent|Object} */\n        var e = inEvent;\n        if (typeof inEvent.pointerType === 'number') {\n            e = this.dispatcher.cloneEvent(inEvent, inEvent);\n            e.pointerType = POINTER_TYPES[inEvent.pointerType];\n        }\n        return e;\n    };\n    /**\n     * Remove this pointer from the list of active pointers.\n     * @param {number} pointerId Pointer identifier.\n     */\n    MsSource.prototype.cleanup = function (pointerId) {\n        delete this.pointerMap[pointerId.toString()];\n    };\n    return MsSource;\n}(EventSource));\nexport default MsSource;\n//# sourceMappingURL=MsSource.js.map","/**\n * @module ol/pointer/NativeSource\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n// Based on https://github.com/Polymer/PointerEvents\n// Copyright (c) 2013 The Polymer Authors. All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n// * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n// * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n// * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\nimport EventSource from './EventSource.js';\n/**\n * Handler for `pointerdown`.\n *\n * @this {NativeSource}\n * @param {Event} inEvent The in event.\n */\nfunction pointerDown(inEvent) {\n    this.dispatcher.fireNativeEvent(inEvent);\n}\n/**\n * Handler for `pointermove`.\n *\n * @this {NativeSource}\n * @param {Event} inEvent The in event.\n */\nfunction pointerMove(inEvent) {\n    this.dispatcher.fireNativeEvent(inEvent);\n}\n/**\n * Handler for `pointerup`.\n *\n * @this {NativeSource}\n * @param {Event} inEvent The in event.\n */\nfunction pointerUp(inEvent) {\n    this.dispatcher.fireNativeEvent(inEvent);\n}\n/**\n * Handler for `pointerout`.\n *\n * @this {NativeSource}\n * @param {Event} inEvent The in event.\n */\nfunction pointerOut(inEvent) {\n    this.dispatcher.fireNativeEvent(inEvent);\n}\n/**\n * Handler for `pointerover`.\n *\n * @this {NativeSource}\n * @param {Event} inEvent The in event.\n */\nfunction pointerOver(inEvent) {\n    this.dispatcher.fireNativeEvent(inEvent);\n}\n/**\n * Handler for `pointercancel`.\n *\n * @this {NativeSource}\n * @param {Event} inEvent The in event.\n */\nfunction pointerCancel(inEvent) {\n    this.dispatcher.fireNativeEvent(inEvent);\n}\n/**\n * Handler for `lostpointercapture`.\n *\n * @this {NativeSource}\n * @param {Event} inEvent The in event.\n */\nfunction lostPointerCapture(inEvent) {\n    this.dispatcher.fireNativeEvent(inEvent);\n}\n/**\n * Handler for `gotpointercapture`.\n *\n * @this {NativeSource}\n * @param {Event} inEvent The in event.\n */\nfunction gotPointerCapture(inEvent) {\n    this.dispatcher.fireNativeEvent(inEvent);\n}\nvar NativeSource = /** @class */ (function (_super) {\n    __extends(NativeSource, _super);\n    /**\n     * @param {import(\"./PointerEventHandler.js\").default} dispatcher Event handler.\n     */\n    function NativeSource(dispatcher) {\n        var _this = this;\n        var mapping = {\n            'pointerdown': pointerDown,\n            'pointermove': pointerMove,\n            'pointerup': pointerUp,\n            'pointerout': pointerOut,\n            'pointerover': pointerOver,\n            'pointercancel': pointerCancel,\n            'gotpointercapture': gotPointerCapture,\n            'lostpointercapture': lostPointerCapture\n        };\n        _this = _super.call(this, dispatcher, mapping) || this;\n        return _this;\n    }\n    return NativeSource;\n}(EventSource));\nexport default NativeSource;\n//# sourceMappingURL=NativeSource.js.map","/**\n * @module ol/pointer/PointerEvent\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n// Based on https://github.com/Polymer/PointerEvents\n// Copyright (c) 2013 The Polymer Authors. All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n// * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n// * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n// * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\nimport _Event from '../events/Event.js';\n/**\n * Is the `buttons` property supported?\n * @type {boolean}\n */\nvar HAS_BUTTONS = false;\nvar PointerEvent = /** @class */ (function (_super) {\n    __extends(PointerEvent, _super);\n    /**\n     * A class for pointer events.\n     *\n     * This class is used as an abstraction for mouse events,\n     * touch events and even native pointer events.\n     *\n     * @param {string} type The type of the event to create.\n     * @param {Event} originalEvent The event.\n     * @param {Object<string, ?>=} opt_eventDict An optional dictionary of\n     *    initial event properties.\n     */\n    function PointerEvent(type, originalEvent, opt_eventDict) {\n        var _this = _super.call(this, type) || this;\n        /**\n         * @const\n         * @type {Event}\n         */\n        _this.originalEvent = originalEvent;\n        var eventDict = opt_eventDict ? opt_eventDict : {};\n        /**\n         * @type {number}\n         */\n        _this.buttons = getButtons(eventDict);\n        /**\n         * @type {number}\n         */\n        _this.pressure = getPressure(eventDict, _this.buttons);\n        // MouseEvent related properties\n        /**\n         * @type {boolean}\n         */\n        _this.bubbles = 'bubbles' in eventDict ? eventDict['bubbles'] : false;\n        /**\n         * @type {boolean}\n         */\n        _this.cancelable = 'cancelable' in eventDict ? eventDict['cancelable'] : false;\n        /**\n         * @type {Object}\n         */\n        _this.view = 'view' in eventDict ? eventDict['view'] : null;\n        /**\n         * @type {number}\n         */\n        _this.detail = 'detail' in eventDict ? eventDict['detail'] : null;\n        /**\n         * @type {number}\n         */\n        _this.screenX = 'screenX' in eventDict ? eventDict['screenX'] : 0;\n        /**\n         * @type {number}\n         */\n        _this.screenY = 'screenY' in eventDict ? eventDict['screenY'] : 0;\n        /**\n         * @type {number}\n         */\n        _this.clientX = 'clientX' in eventDict ? eventDict['clientX'] : 0;\n        /**\n         * @type {number}\n         */\n        _this.clientY = 'clientY' in eventDict ? eventDict['clientY'] : 0;\n        /**\n         * @type {boolean}\n         */\n        _this.ctrlKey = 'ctrlKey' in eventDict ? eventDict['ctrlKey'] : false;\n        /**\n         * @type {boolean}\n         */\n        _this.altKey = 'altKey' in eventDict ? eventDict['altKey'] : false;\n        /**\n         * @type {boolean}\n         */\n        _this.shiftKey = 'shiftKey' in eventDict ? eventDict['shiftKey'] : false;\n        /**\n         * @type {boolean}\n         */\n        _this.metaKey = 'metaKey' in eventDict ? eventDict['metaKey'] : false;\n        /**\n         * @type {number}\n         */\n        _this.button = 'button' in eventDict ? eventDict['button'] : 0;\n        /**\n         * @type {Node}\n         */\n        _this.relatedTarget = 'relatedTarget' in eventDict ?\n            eventDict['relatedTarget'] : null;\n        // PointerEvent related properties\n        /**\n         * @const\n         * @type {number}\n         */\n        _this.pointerId = 'pointerId' in eventDict ? eventDict['pointerId'] : 0;\n        /**\n         * @type {number}\n         */\n        _this.width = 'width' in eventDict ? eventDict['width'] : 0;\n        /**\n         * @type {number}\n         */\n        _this.height = 'height' in eventDict ? eventDict['height'] : 0;\n        /**\n         * @type {number}\n         */\n        _this.tiltX = 'tiltX' in eventDict ? eventDict['tiltX'] : 0;\n        /**\n         * @type {number}\n         */\n        _this.tiltY = 'tiltY' in eventDict ? eventDict['tiltY'] : 0;\n        /**\n         * @type {string}\n         */\n        _this.pointerType = 'pointerType' in eventDict ? eventDict['pointerType'] : '';\n        /**\n         * @type {number}\n         */\n        _this.hwTimestamp = 'hwTimestamp' in eventDict ? eventDict['hwTimestamp'] : 0;\n        /**\n         * @type {boolean}\n         */\n        _this.isPrimary = 'isPrimary' in eventDict ? eventDict['isPrimary'] : false;\n        // keep the semantics of preventDefault\n        if (originalEvent.preventDefault) {\n            _this.preventDefault = function () {\n                originalEvent.preventDefault();\n            };\n        }\n        return _this;\n    }\n    return PointerEvent;\n}(_Event));\n/**\n * @param {Object<string, ?>} eventDict The event dictionary.\n * @return {number} Button indicator.\n */\nfunction getButtons(eventDict) {\n    // According to the w3c spec,\n    // http://www.w3.org/TR/DOM-Level-3-Events/#events-MouseEvent-button\n    // MouseEvent.button == 0 can mean either no mouse button depressed, or the\n    // left mouse button depressed.\n    //\n    // As of now, the only way to distinguish between the two states of\n    // MouseEvent.button is by using the deprecated MouseEvent.which property, as\n    // this maps mouse buttons to positive integers > 0, and uses 0 to mean that\n    // no mouse button is held.\n    //\n    // MouseEvent.which is derived from MouseEvent.button at MouseEvent creation,\n    // but initMouseEvent does not expose an argument with which to set\n    // MouseEvent.which. Calling initMouseEvent with a buttonArg of 0 will set\n    // MouseEvent.button == 0 and MouseEvent.which == 1, breaking the expectations\n    // of app developers.\n    //\n    // The only way to propagate the correct state of MouseEvent.which and\n    // MouseEvent.button to a new MouseEvent.button == 0 and MouseEvent.which == 0\n    // is to call initMouseEvent with a buttonArg value of -1.\n    //\n    // This is fixed with DOM Level 4's use of buttons\n    var buttons;\n    if (eventDict.buttons || HAS_BUTTONS) {\n        buttons = eventDict.buttons;\n    }\n    else {\n        switch (eventDict.which) {\n            case 1:\n                buttons = 1;\n                break;\n            case 2:\n                buttons = 4;\n                break;\n            case 3:\n                buttons = 2;\n                break;\n            default: buttons = 0;\n        }\n    }\n    return buttons;\n}\n/**\n * @param {Object<string, ?>} eventDict The event dictionary.\n * @param {number} buttons Button indicator.\n * @return {number} The pressure.\n */\nfunction getPressure(eventDict, buttons) {\n    // Spec requires that pointers without pressure specified use 0.5 for down\n    // state and 0 for up state.\n    var pressure = 0;\n    if (eventDict.pressure) {\n        pressure = eventDict.pressure;\n    }\n    else {\n        pressure = buttons ? 0.5 : 0;\n    }\n    return pressure;\n}\n/**\n * Checks if the `buttons` property is supported.\n */\n(function () {\n    try {\n        var ev = new MouseEvent('click', { buttons: 1 });\n        HAS_BUTTONS = ev.buttons === 1;\n    }\n    catch (e) {\n        // pass\n    }\n})();\nexport default PointerEvent;\n//# sourceMappingURL=PointerEvent.js.map","/**\n * @module ol/array\n */\n/**\n * Performs a binary search on the provided sorted list and returns the index of the item if found. If it can't be found it'll return -1.\n * https://github.com/darkskyapp/binary-search\n *\n * @param {Array<*>} haystack Items to search through.\n * @param {*} needle The item to look for.\n * @param {Function=} opt_comparator Comparator function.\n * @return {number} The index of the item if found, -1 if not.\n */\nexport function binarySearch(haystack, needle, opt_comparator) {\n    var mid, cmp;\n    var comparator = opt_comparator || numberSafeCompareFunction;\n    var low = 0;\n    var high = haystack.length;\n    var found = false;\n    while (low < high) {\n        /* Note that \"(low + high) >>> 1\" may overflow, and results in a typecast\n         * to double (which gives the wrong results). */\n        mid = low + (high - low >> 1);\n        cmp = +comparator(haystack[mid], needle);\n        if (cmp < 0.0) { /* Too low. */\n            low = mid + 1;\n        }\n        else { /* Key found or too high */\n            high = mid;\n            found = !cmp;\n        }\n    }\n    /* Key not found. */\n    return found ? low : ~low;\n}\n/**\n * Compare function for array sort that is safe for numbers.\n * @param {*} a The first object to be compared.\n * @param {*} b The second object to be compared.\n * @return {number} A negative number, zero, or a positive number as the first\n *     argument is less than, equal to, or greater than the second.\n */\nexport function numberSafeCompareFunction(a, b) {\n    return a > b ? 1 : a < b ? -1 : 0;\n}\n/**\n * Whether the array contains the given object.\n * @param {Array<*>} arr The array to test for the presence of the element.\n * @param {*} obj The object for which to test.\n * @return {boolean} The object is in the array.\n */\nexport function includes(arr, obj) {\n    return arr.indexOf(obj) >= 0;\n}\n/**\n * @param {Array<number>} arr Array.\n * @param {number} target Target.\n * @param {number} direction 0 means return the nearest, > 0\n *    means return the largest nearest, < 0 means return the\n *    smallest nearest.\n * @return {number} Index.\n */\nexport function linearFindNearest(arr, target, direction) {\n    var n = arr.length;\n    if (arr[0] <= target) {\n        return 0;\n    }\n    else if (target <= arr[n - 1]) {\n        return n - 1;\n    }\n    else {\n        var i = void 0;\n        if (direction > 0) {\n            for (i = 1; i < n; ++i) {\n                if (arr[i] < target) {\n                    return i - 1;\n                }\n            }\n        }\n        else if (direction < 0) {\n            for (i = 1; i < n; ++i) {\n                if (arr[i] <= target) {\n                    return i;\n                }\n            }\n        }\n        else {\n            for (i = 1; i < n; ++i) {\n                if (arr[i] == target) {\n                    return i;\n                }\n                else if (arr[i] < target) {\n                    if (arr[i - 1] - target < target - arr[i]) {\n                        return i - 1;\n                    }\n                    else {\n                        return i;\n                    }\n                }\n            }\n        }\n        return n - 1;\n    }\n}\n/**\n * @param {Array<*>} arr Array.\n * @param {number} begin Begin index.\n * @param {number} end End index.\n */\nexport function reverseSubArray(arr, begin, end) {\n    while (begin < end) {\n        var tmp = arr[begin];\n        arr[begin] = arr[end];\n        arr[end] = tmp;\n        ++begin;\n        --end;\n    }\n}\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {!Array<VALUE>|VALUE} data The elements or arrays of elements to add to arr.\n * @template VALUE\n */\nexport function extend(arr, data) {\n    var extension = Array.isArray(data) ? data : [data];\n    var length = extension.length;\n    for (var i = 0; i < length; i++) {\n        arr[arr.length] = extension[i];\n    }\n}\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {VALUE} obj The element to remove.\n * @template VALUE\n * @return {boolean} If the element was removed.\n */\nexport function remove(arr, obj) {\n    var i = arr.indexOf(obj);\n    var found = i > -1;\n    if (found) {\n        arr.splice(i, 1);\n    }\n    return found;\n}\n/**\n * @param {Array<VALUE>} arr The array to search in.\n * @param {function(VALUE, number, ?) : boolean} func The function to compare.\n * @template VALUE\n * @return {VALUE|null} The element found or null.\n */\nexport function find(arr, func) {\n    var length = arr.length >>> 0;\n    var value;\n    for (var i = 0; i < length; i++) {\n        value = arr[i];\n        if (func(value, i, arr)) {\n            return value;\n        }\n    }\n    return null;\n}\n/**\n * @param {Array|Uint8ClampedArray} arr1 The first array to compare.\n * @param {Array|Uint8ClampedArray} arr2 The second array to compare.\n * @return {boolean} Whether the two arrays are equal.\n */\nexport function equals(arr1, arr2) {\n    var len1 = arr1.length;\n    if (len1 !== arr2.length) {\n        return false;\n    }\n    for (var i = 0; i < len1; i++) {\n        if (arr1[i] !== arr2[i]) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * Sort the passed array such that the relative order of equal elements is preverved.\n * See https://en.wikipedia.org/wiki/Sorting_algorithm#Stability for details.\n * @param {Array<*>} arr The array to sort (modifies original).\n * @param {!function(*, *): number} compareFnc Comparison function.\n * @api\n */\nexport function stableSort(arr, compareFnc) {\n    var length = arr.length;\n    var tmp = Array(arr.length);\n    var i;\n    for (i = 0; i < length; i++) {\n        tmp[i] = { index: i, value: arr[i] };\n    }\n    tmp.sort(function (a, b) {\n        return compareFnc(a.value, b.value) || a.index - b.index;\n    });\n    for (i = 0; i < arr.length; i++) {\n        arr[i] = tmp[i].value;\n    }\n}\n/**\n * @param {Array<*>} arr The array to search in.\n * @param {Function} func Comparison function.\n * @return {number} Return index.\n */\nexport function findIndex(arr, func) {\n    var index;\n    var found = !arr.every(function (el, idx) {\n        index = idx;\n        return !func(el, idx, arr);\n    });\n    return found ? index : -1;\n}\n/**\n * @param {Array<*>} arr The array to test.\n * @param {Function=} opt_func Comparison function.\n * @param {boolean=} opt_strict Strictly sorted (default false).\n * @return {boolean} Return index.\n */\nexport function isSorted(arr, opt_func, opt_strict) {\n    var compare = opt_func || numberSafeCompareFunction;\n    return arr.every(function (currentVal, index) {\n        if (index === 0) {\n            return true;\n        }\n        var res = compare(arr[index - 1], currentVal);\n        return !(res > 0 || opt_strict && res === 0);\n    });\n}\n//# sourceMappingURL=array.js.map","/**\n * @module ol/pointer/TouchSource\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n// Based on https://github.com/Polymer/PointerEvents\n// Copyright (c) 2013 The Polymer Authors. All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n// * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n// * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n// * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\nimport { remove } from '../array.js';\nimport EventSource from './EventSource.js';\nimport { POINTER_ID } from './MouseSource.js';\n/**\n * @type {number}\n */\nvar CLICK_COUNT_TIMEOUT = 200;\n/**\n * @type {string}\n */\nvar POINTER_TYPE = 'touch';\n/**\n * Handler for `touchstart`, triggers `pointerover`,\n * `pointerenter` and `pointerdown` events.\n *\n * @this {TouchSource}\n * @param {TouchEvent} inEvent The in event.\n */\nfunction touchstart(inEvent) {\n    this.vacuumTouches_(inEvent);\n    this.setPrimaryTouch_(inEvent.changedTouches[0]);\n    this.dedupSynthMouse_(inEvent);\n    this.clickCount_++;\n    this.processTouches_(inEvent, this.overDown_);\n}\n/**\n * Handler for `touchmove`.\n *\n * @this {TouchSource}\n * @param {TouchEvent} inEvent The in event.\n */\nfunction touchmove(inEvent) {\n    this.processTouches_(inEvent, this.moveOverOut_);\n}\n/**\n * Handler for `touchend`, triggers `pointerup`,\n * `pointerout` and `pointerleave` events.\n *\n * @this {TouchSource}\n * @param {TouchEvent} inEvent The event.\n */\nfunction touchend(inEvent) {\n    this.dedupSynthMouse_(inEvent);\n    this.processTouches_(inEvent, this.upOut_);\n}\n/**\n * Handler for `touchcancel`, triggers `pointercancel`,\n * `pointerout` and `pointerleave` events.\n *\n * @this {TouchSource}\n * @param {TouchEvent} inEvent The in event.\n */\nfunction touchcancel(inEvent) {\n    this.processTouches_(inEvent, this.cancelOut_);\n}\nvar TouchSource = /** @class */ (function (_super) {\n    __extends(TouchSource, _super);\n    /**\n     * @param {import(\"./PointerEventHandler.js\").default} dispatcher The event handler.\n     * @param {import(\"./MouseSource.js\").default} mouseSource Mouse source.\n     */\n    function TouchSource(dispatcher, mouseSource) {\n        var _this = this;\n        var mapping = {\n            'touchstart': touchstart,\n            'touchmove': touchmove,\n            'touchend': touchend,\n            'touchcancel': touchcancel\n        };\n        _this = _super.call(this, dispatcher, mapping) || this;\n        /**\n         * @const\n         * @type {!Object<string, Event|Object>}\n         */\n        _this.pointerMap = dispatcher.pointerMap;\n        /**\n         * @const\n         * @type {import(\"./MouseSource.js\").default}\n         */\n        _this.mouseSource = mouseSource;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.firstTouchId_ = undefined;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.clickCount_ = 0;\n        /**\n         * @private\n         * @type {?}\n         */\n        _this.resetId_;\n        /**\n         * Mouse event timeout: This should be long enough to\n         * ignore compat mouse events made by touch.\n         * @private\n         * @type {number}\n         */\n        _this.dedupTimeout_ = 2500;\n        return _this;\n    }\n    /**\n     * @private\n     * @param {Touch} inTouch The in touch.\n     * @return {boolean} True, if this is the primary touch.\n     */\n    TouchSource.prototype.isPrimaryTouch_ = function (inTouch) {\n        return this.firstTouchId_ === inTouch.identifier;\n    };\n    /**\n     * Set primary touch if there are no pointers, or the only pointer is the mouse.\n     * @param {Touch} inTouch The in touch.\n     * @private\n     */\n    TouchSource.prototype.setPrimaryTouch_ = function (inTouch) {\n        var count = Object.keys(this.pointerMap).length;\n        if (count === 0 || (count === 1 && POINTER_ID.toString() in this.pointerMap)) {\n            this.firstTouchId_ = inTouch.identifier;\n            this.cancelResetClickCount_();\n        }\n    };\n    /**\n     * @private\n     * @param {PointerEvent} inPointer The in pointer object.\n     */\n    TouchSource.prototype.removePrimaryPointer_ = function (inPointer) {\n        if (inPointer.isPrimary) {\n            this.firstTouchId_ = undefined;\n            this.resetClickCount_();\n        }\n    };\n    /**\n     * @private\n     */\n    TouchSource.prototype.resetClickCount_ = function () {\n        this.resetId_ = setTimeout(this.resetClickCountHandler_.bind(this), CLICK_COUNT_TIMEOUT);\n    };\n    /**\n     * @private\n     */\n    TouchSource.prototype.resetClickCountHandler_ = function () {\n        this.clickCount_ = 0;\n        this.resetId_ = undefined;\n    };\n    /**\n     * @private\n     */\n    TouchSource.prototype.cancelResetClickCount_ = function () {\n        if (this.resetId_ !== undefined) {\n            clearTimeout(this.resetId_);\n        }\n    };\n    /**\n     * @private\n     * @param {TouchEvent} browserEvent Browser event\n     * @param {Touch} inTouch Touch event\n     * @return {PointerEvent} A pointer object.\n     */\n    TouchSource.prototype.touchToPointer_ = function (browserEvent, inTouch) {\n        var e = this.dispatcher.cloneEvent(browserEvent, inTouch);\n        // Spec specifies that pointerId 1 is reserved for Mouse.\n        // Touch identifiers can start at 0.\n        // Add 2 to the touch identifier for compatibility.\n        e.pointerId = inTouch.identifier + 2;\n        // TODO: check if this is necessary?\n        //e.target = findTarget(e);\n        e.bubbles = true;\n        e.cancelable = true;\n        e.detail = this.clickCount_;\n        e.button = 0;\n        e.buttons = 1;\n        e.width = inTouch.radiusX || 0;\n        e.height = inTouch.radiusY || 0;\n        e.pressure = inTouch.force || 0.5;\n        e.isPrimary = this.isPrimaryTouch_(inTouch);\n        e.pointerType = POINTER_TYPE;\n        // make sure that the properties that are different for\n        // each `Touch` object are not copied from the BrowserEvent object\n        e.clientX = inTouch.clientX;\n        e.clientY = inTouch.clientY;\n        e.screenX = inTouch.screenX;\n        e.screenY = inTouch.screenY;\n        return e;\n    };\n    /**\n     * @private\n     * @param {TouchEvent} inEvent Touch event\n     * @param {function(TouchEvent, PointerEvent): void} inFunction In function.\n     */\n    TouchSource.prototype.processTouches_ = function (inEvent, inFunction) {\n        var touches = Array.prototype.slice.call(inEvent.changedTouches);\n        var count = touches.length;\n        function preventDefault() {\n            inEvent.preventDefault();\n        }\n        for (var i = 0; i < count; ++i) {\n            var pointer = this.touchToPointer_(inEvent, touches[i]);\n            // forward touch preventDefaults\n            pointer.preventDefault = preventDefault;\n            inFunction.call(this, inEvent, pointer);\n        }\n    };\n    /**\n     * @private\n     * @param {TouchList} touchList The touch list.\n     * @param {number} searchId Search identifier.\n     * @return {boolean} True, if the `Touch` with the given id is in the list.\n     */\n    TouchSource.prototype.findTouch_ = function (touchList, searchId) {\n        var l = touchList.length;\n        for (var i = 0; i < l; i++) {\n            var touch = touchList[i];\n            if (touch.identifier === searchId) {\n                return true;\n            }\n        }\n        return false;\n    };\n    /**\n     * In some instances, a touchstart can happen without a touchend. This\n     * leaves the pointermap in a broken state.\n     * Therefore, on every touchstart, we remove the touches that did not fire a\n     * touchend event.\n     * To keep state globally consistent, we fire a pointercancel for\n     * this \"abandoned\" touch\n     *\n     * @private\n     * @param {TouchEvent} inEvent The in event.\n     */\n    TouchSource.prototype.vacuumTouches_ = function (inEvent) {\n        var touchList = inEvent.touches;\n        // pointerMap.getCount() should be < touchList.length here,\n        // as the touchstart has not been processed yet.\n        var keys = Object.keys(this.pointerMap);\n        var count = keys.length;\n        if (count >= touchList.length) {\n            var d = [];\n            for (var i = 0; i < count; ++i) {\n                var key = Number(keys[i]);\n                var value = this.pointerMap[key];\n                // Never remove pointerId == 1, which is mouse.\n                // Touch identifiers are 2 smaller than their pointerId, which is the\n                // index in pointermap.\n                if (key != POINTER_ID && !this.findTouch_(touchList, key - 2)) {\n                    d.push(value.out);\n                }\n            }\n            for (var i = 0; i < d.length; ++i) {\n                this.cancelOut_(inEvent, d[i]);\n            }\n        }\n    };\n    /**\n     * @private\n     * @param {TouchEvent} browserEvent The event.\n     * @param {PointerEvent} inPointer The in pointer object.\n     */\n    TouchSource.prototype.overDown_ = function (browserEvent, inPointer) {\n        this.pointerMap[inPointer.pointerId] = {\n            target: inPointer.target,\n            out: inPointer,\n            outTarget: inPointer.target\n        };\n        this.dispatcher.over(inPointer, browserEvent);\n        this.dispatcher.enter(inPointer, browserEvent);\n        this.dispatcher.down(inPointer, browserEvent);\n    };\n    /**\n     * @private\n     * @param {TouchEvent} browserEvent The event.\n     * @param {PointerEvent} inPointer The in pointer.\n     */\n    TouchSource.prototype.moveOverOut_ = function (browserEvent, inPointer) {\n        var event = inPointer;\n        var pointer = this.pointerMap[event.pointerId];\n        // a finger drifted off the screen, ignore it\n        if (!pointer) {\n            return;\n        }\n        var outEvent = pointer.out;\n        var outTarget = pointer.outTarget;\n        this.dispatcher.move(event, browserEvent);\n        if (outEvent && outTarget !== event.target) {\n            outEvent.relatedTarget = event.target;\n            /** @type {Object} */ (event).relatedTarget = outTarget;\n            // recover from retargeting by shadow\n            outEvent.target = outTarget;\n            if (event.target) {\n                this.dispatcher.leaveOut(outEvent, browserEvent);\n                this.dispatcher.enterOver(event, browserEvent);\n            }\n            else {\n                // clean up case when finger leaves the screen\n                /** @type {Object} */ (event).target = outTarget;\n                /** @type {Object} */ (event).relatedTarget = null;\n                this.cancelOut_(browserEvent, event);\n            }\n        }\n        pointer.out = event;\n        pointer.outTarget = event.target;\n    };\n    /**\n     * @private\n     * @param {TouchEvent} browserEvent An event.\n     * @param {PointerEvent} inPointer The inPointer object.\n     */\n    TouchSource.prototype.upOut_ = function (browserEvent, inPointer) {\n        this.dispatcher.up(inPointer, browserEvent);\n        this.dispatcher.out(inPointer, browserEvent);\n        this.dispatcher.leave(inPointer, browserEvent);\n        this.cleanUpPointer_(inPointer);\n    };\n    /**\n     * @private\n     * @param {TouchEvent} browserEvent The event.\n     * @param {PointerEvent} inPointer The in pointer.\n     */\n    TouchSource.prototype.cancelOut_ = function (browserEvent, inPointer) {\n        this.dispatcher.cancel(inPointer, browserEvent);\n        this.dispatcher.out(inPointer, browserEvent);\n        this.dispatcher.leave(inPointer, browserEvent);\n        this.cleanUpPointer_(inPointer);\n    };\n    /**\n     * @private\n     * @param {PointerEvent} inPointer The inPointer object.\n     */\n    TouchSource.prototype.cleanUpPointer_ = function (inPointer) {\n        delete this.pointerMap[inPointer.pointerId];\n        this.removePrimaryPointer_(inPointer);\n    };\n    /**\n     * Prevent synth mouse events from creating pointer events.\n     *\n     * @private\n     * @param {TouchEvent} inEvent The in event.\n     */\n    TouchSource.prototype.dedupSynthMouse_ = function (inEvent) {\n        var lts = this.mouseSource.lastTouches;\n        var t = inEvent.changedTouches[0];\n        // only the primary finger will synth mouse events\n        if (this.isPrimaryTouch_(t)) {\n            // remember x/y of last touch\n            var lt_1 = [t.clientX, t.clientY];\n            lts.push(lt_1);\n            setTimeout(function () {\n                // remove touch after timeout\n                remove(lts, lt_1);\n            }, this.dedupTimeout_);\n        }\n    };\n    return TouchSource;\n}(EventSource));\nexport default TouchSource;\n//# sourceMappingURL=TouchSource.js.map","/**\n * @module ol/pointer/PointerEventHandler\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n// Based on https://github.com/Polymer/PointerEvents\n// Copyright (c) 2013 The Polymer Authors. All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n// * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n// * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n// * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\nimport { listen, unlisten } from '../events.js';\nimport EventTarget from '../events/Target.js';\nimport { POINTER, MSPOINTER, TOUCH } from '../has.js';\nimport PointerEventType from './EventType.js';\nimport MouseSource, { prepareEvent as prepareMouseEvent } from './MouseSource.js';\nimport MsSource from './MsSource.js';\nimport NativeSource from './NativeSource.js';\nimport PointerEvent from './PointerEvent.js';\nimport TouchSource from './TouchSource.js';\n/**\n * Properties to copy when cloning an event, with default values.\n * @type {Array<Array>}\n */\nvar CLONE_PROPS = [\n    // MouseEvent\n    ['bubbles', false],\n    ['cancelable', false],\n    ['view', null],\n    ['detail', null],\n    ['screenX', 0],\n    ['screenY', 0],\n    ['clientX', 0],\n    ['clientY', 0],\n    ['ctrlKey', false],\n    ['altKey', false],\n    ['shiftKey', false],\n    ['metaKey', false],\n    ['button', 0],\n    ['relatedTarget', null],\n    // DOM Level 3\n    ['buttons', 0],\n    // PointerEvent\n    ['pointerId', 0],\n    ['width', 0],\n    ['height', 0],\n    ['pressure', 0],\n    ['tiltX', 0],\n    ['tiltY', 0],\n    ['pointerType', ''],\n    ['hwTimestamp', 0],\n    ['isPrimary', false],\n    // event instance\n    ['type', ''],\n    ['target', null],\n    ['currentTarget', null],\n    ['which', 0]\n];\nvar PointerEventHandler = /** @class */ (function (_super) {\n    __extends(PointerEventHandler, _super);\n    /**\n     * @param {Element|HTMLDocument} element Viewport element.\n     */\n    function PointerEventHandler(element) {\n        var _this = _super.call(this) || this;\n        /**\n         * @const\n         * @private\n         * @type {Element|HTMLDocument}\n         */\n        _this.element_ = element;\n        /**\n         * @const\n         * @type {!Object<string, Event|Object>}\n         */\n        _this.pointerMap = {};\n        /**\n         * @type {Object<string, function(Event): void>}\n         * @private\n         */\n        _this.eventMap_ = {};\n        /**\n         * @type {Array<import(\"./EventSource.js\").default>}\n         * @private\n         */\n        _this.eventSourceList_ = [];\n        _this.registerSources();\n        return _this;\n    }\n    /**\n     * Set up the event sources (mouse, touch and native pointers)\n     * that generate pointer events.\n     */\n    PointerEventHandler.prototype.registerSources = function () {\n        if (POINTER) {\n            this.registerSource('native', new NativeSource(this));\n        }\n        else if (MSPOINTER) {\n            this.registerSource('ms', new MsSource(this));\n        }\n        else {\n            var mouseSource = new MouseSource(this);\n            this.registerSource('mouse', mouseSource);\n            if (TOUCH) {\n                this.registerSource('touch', new TouchSource(this, mouseSource));\n            }\n        }\n        // register events on the viewport element\n        this.register_();\n    };\n    /**\n     * Add a new event source that will generate pointer events.\n     *\n     * @param {string} name A name for the event source\n     * @param {import(\"./EventSource.js\").default} source The source event.\n     */\n    PointerEventHandler.prototype.registerSource = function (name, source) {\n        var s = source;\n        var newEvents = s.getEvents();\n        if (newEvents) {\n            newEvents.forEach(function (e) {\n                var handler = s.getHandlerForEvent(e);\n                if (handler) {\n                    this.eventMap_[e] = handler.bind(s);\n                }\n            }.bind(this));\n            this.eventSourceList_.push(s);\n        }\n    };\n    /**\n     * Set up the events for all registered event sources.\n     * @private\n     */\n    PointerEventHandler.prototype.register_ = function () {\n        var l = this.eventSourceList_.length;\n        for (var i = 0; i < l; i++) {\n            var eventSource = this.eventSourceList_[i];\n            this.addEvents_(eventSource.getEvents());\n        }\n    };\n    /**\n     * Remove all registered events.\n     * @private\n     */\n    PointerEventHandler.prototype.unregister_ = function () {\n        var l = this.eventSourceList_.length;\n        for (var i = 0; i < l; i++) {\n            var eventSource = this.eventSourceList_[i];\n            this.removeEvents_(eventSource.getEvents());\n        }\n    };\n    /**\n     * Calls the right handler for a new event.\n     * @private\n     * @param {Event} inEvent Browser event.\n     */\n    PointerEventHandler.prototype.eventHandler_ = function (inEvent) {\n        var type = inEvent.type;\n        var handler = this.eventMap_[type];\n        if (handler) {\n            handler(inEvent);\n        }\n    };\n    /**\n     * Setup listeners for the given events.\n     * @private\n     * @param {Array<string>} events List of events.\n     */\n    PointerEventHandler.prototype.addEvents_ = function (events) {\n        events.forEach(function (eventName) {\n            listen(this.element_, eventName, this.eventHandler_, this);\n        }.bind(this));\n    };\n    /**\n     * Unregister listeners for the given events.\n     * @private\n     * @param {Array<string>} events List of events.\n     */\n    PointerEventHandler.prototype.removeEvents_ = function (events) {\n        events.forEach(function (e) {\n            unlisten(this.element_, e, this.eventHandler_, this);\n        }.bind(this));\n    };\n    /**\n     * Returns a snapshot of inEvent, with writable properties.\n     *\n     * @param {Event} event Browser event.\n     * @param {Event|Touch} inEvent An event that contains\n     *    properties to copy.\n     * @return {Object} An object containing shallow copies of\n     *    `inEvent`'s properties.\n     */\n    PointerEventHandler.prototype.cloneEvent = function (event, inEvent) {\n        var eventCopy = {};\n        for (var i = 0, ii = CLONE_PROPS.length; i < ii; i++) {\n            var p = CLONE_PROPS[i][0];\n            eventCopy[p] = event[p] || inEvent[p] || CLONE_PROPS[i][1];\n        }\n        return eventCopy;\n    };\n    // EVENTS\n    /**\n     * Triggers a 'pointerdown' event.\n     * @param {Object} data Pointer event data.\n     * @param {Event} event The event.\n     */\n    PointerEventHandler.prototype.down = function (data, event) {\n        this.fireEvent(PointerEventType.POINTERDOWN, data, event);\n    };\n    /**\n     * Triggers a 'pointermove' event.\n     * @param {Object} data Pointer event data.\n     * @param {Event} event The event.\n     */\n    PointerEventHandler.prototype.move = function (data, event) {\n        this.fireEvent(PointerEventType.POINTERMOVE, data, event);\n    };\n    /**\n     * Triggers a 'pointerup' event.\n     * @param {Object} data Pointer event data.\n     * @param {Event} event The event.\n     */\n    PointerEventHandler.prototype.up = function (data, event) {\n        this.fireEvent(PointerEventType.POINTERUP, data, event);\n    };\n    /**\n     * Triggers a 'pointerenter' event.\n     * @param {Object} data Pointer event data.\n     * @param {Event} event The event.\n     */\n    PointerEventHandler.prototype.enter = function (data, event) {\n        data.bubbles = false;\n        this.fireEvent(PointerEventType.POINTERENTER, data, event);\n    };\n    /**\n     * Triggers a 'pointerleave' event.\n     * @param {Object} data Pointer event data.\n     * @param {Event} event The event.\n     */\n    PointerEventHandler.prototype.leave = function (data, event) {\n        data.bubbles = false;\n        this.fireEvent(PointerEventType.POINTERLEAVE, data, event);\n    };\n    /**\n     * Triggers a 'pointerover' event.\n     * @param {Object} data Pointer event data.\n     * @param {Event} event The event.\n     */\n    PointerEventHandler.prototype.over = function (data, event) {\n        data.bubbles = true;\n        this.fireEvent(PointerEventType.POINTEROVER, data, event);\n    };\n    /**\n     * Triggers a 'pointerout' event.\n     * @param {Object} data Pointer event data.\n     * @param {Event} event The event.\n     */\n    PointerEventHandler.prototype.out = function (data, event) {\n        data.bubbles = true;\n        this.fireEvent(PointerEventType.POINTEROUT, data, event);\n    };\n    /**\n     * Triggers a 'pointercancel' event.\n     * @param {Object} data Pointer event data.\n     * @param {Event} event The event.\n     */\n    PointerEventHandler.prototype.cancel = function (data, event) {\n        this.fireEvent(PointerEventType.POINTERCANCEL, data, event);\n    };\n    /**\n     * Triggers a combination of 'pointerout' and 'pointerleave' events.\n     * @param {Object} data Pointer event data.\n     * @param {Event} event The event.\n     */\n    PointerEventHandler.prototype.leaveOut = function (data, event) {\n        this.out(data, event);\n        if (!this.contains_(data.target, data.relatedTarget)) {\n            this.leave(data, event);\n        }\n    };\n    /**\n     * Triggers a combination of 'pointerover' and 'pointerevents' events.\n     * @param {Object} data Pointer event data.\n     * @param {Event} event The event.\n     */\n    PointerEventHandler.prototype.enterOver = function (data, event) {\n        this.over(data, event);\n        if (!this.contains_(data.target, data.relatedTarget)) {\n            this.enter(data, event);\n        }\n    };\n    /**\n     * @private\n     * @param {Element} container The container element.\n     * @param {Element} contained The contained element.\n     * @return {boolean} Returns true if the container element\n     *   contains the other element.\n     */\n    PointerEventHandler.prototype.contains_ = function (container, contained) {\n        if (!container || !contained) {\n            return false;\n        }\n        return container.contains(contained);\n    };\n    // EVENT CREATION AND TRACKING\n    /**\n     * Creates a new Event of type `inType`, based on the information in\n     * `data`.\n     *\n     * @param {string} inType A string representing the type of event to create.\n     * @param {Object} data Pointer event data.\n     * @param {Event} event The event.\n     * @return {PointerEvent} A PointerEvent of type `inType`.\n     */\n    PointerEventHandler.prototype.makeEvent = function (inType, data, event) {\n        return new PointerEvent(inType, event, data);\n    };\n    /**\n     * Make and dispatch an event in one call.\n     * @param {string} inType A string representing the type of event.\n     * @param {Object} data Pointer event data.\n     * @param {Event} event The event.\n     */\n    PointerEventHandler.prototype.fireEvent = function (inType, data, event) {\n        var e = this.makeEvent(inType, data, event);\n        this.dispatchEvent(e);\n    };\n    /**\n     * Creates a pointer event from a native pointer event\n     * and dispatches this event.\n     * @param {Event} event A platform event with a target.\n     */\n    PointerEventHandler.prototype.fireNativeEvent = function (event) {\n        var e = this.makeEvent(event.type, event, event);\n        this.dispatchEvent(e);\n    };\n    /**\n     * Wrap a native mouse event into a pointer event.\n     * This proxy method is required for the legacy IE support.\n     * @param {string} eventType The pointer event type.\n     * @param {Event} event The event.\n     * @return {PointerEvent} The wrapped event.\n     */\n    PointerEventHandler.prototype.wrapMouseEvent = function (eventType, event) {\n        var pointerEvent = this.makeEvent(eventType, prepareMouseEvent(event, this), event);\n        return pointerEvent;\n    };\n    /**\n     * @inheritDoc\n     */\n    PointerEventHandler.prototype.disposeInternal = function () {\n        this.unregister_();\n        _super.prototype.disposeInternal.call(this);\n    };\n    return PointerEventHandler;\n}(EventTarget));\nexport default PointerEventHandler;\n//# sourceMappingURL=PointerEventHandler.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/MapBrowserEventHandler\n */\nimport { DEVICE_PIXEL_RATIO } from './has.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport MapBrowserPointerEvent from './MapBrowserPointerEvent.js';\nimport { listen, unlistenByKey } from './events.js';\nimport EventTarget from './events/Target.js';\nimport PointerEventType from './pointer/EventType.js';\nimport PointerEventHandler from './pointer/PointerEventHandler.js';\nvar MapBrowserEventHandler = /** @class */ (function (_super) {\n    __extends(MapBrowserEventHandler, _super);\n    /**\n     * @param {import(\"./PluggableMap.js\").default} map The map with the viewport to listen to events on.\n     * @param {number=} moveTolerance The minimal distance the pointer must travel to trigger a move.\n     */\n    function MapBrowserEventHandler(map, moveTolerance) {\n        var _this = _super.call(this) || this;\n        /**\n         * This is the element that we will listen to the real events on.\n         * @type {import(\"./PluggableMap.js\").default}\n         * @private\n         */\n        _this.map_ = map;\n        /**\n         * @type {any}\n         * @private\n         */\n        _this.clickTimeoutId_;\n        /**\n         * @type {boolean}\n         * @private\n         */\n        _this.dragging_ = false;\n        /**\n         * @type {!Array<import(\"./events.js\").EventsKey>}\n         * @private\n         */\n        _this.dragListenerKeys_ = [];\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.moveTolerance_ = moveTolerance ?\n            moveTolerance * DEVICE_PIXEL_RATIO : DEVICE_PIXEL_RATIO;\n        /**\n         * The most recent \"down\" type event (or null if none have occurred).\n         * Set on pointerdown.\n         * @type {import(\"./pointer/PointerEvent.js\").default}\n         * @private\n         */\n        _this.down_ = null;\n        var element = _this.map_.getViewport();\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.activePointers_ = 0;\n        /**\n         * @type {!Object<number, boolean>}\n         * @private\n         */\n        _this.trackedTouches_ = {};\n        /**\n         * Event handler which generates pointer events for\n         * the viewport element.\n         *\n         * @type {PointerEventHandler}\n         * @private\n         */\n        _this.pointerEventHandler_ = new PointerEventHandler(element);\n        /**\n         * Event handler which generates pointer events for\n         * the document (used when dragging).\n         *\n         * @type {PointerEventHandler}\n         * @private\n         */\n        _this.documentPointerEventHandler_ = null;\n        /**\n         * @type {?import(\"./events.js\").EventsKey}\n         * @private\n         */\n        _this.pointerdownListenerKey_ = listen(_this.pointerEventHandler_, PointerEventType.POINTERDOWN, _this.handlePointerDown_, _this);\n        /**\n         * @type {?import(\"./events.js\").EventsKey}\n         * @private\n         */\n        _this.relayedListenerKey_ = listen(_this.pointerEventHandler_, PointerEventType.POINTERMOVE, _this.relayEvent_, _this);\n        return _this;\n    }\n    /**\n     * @param {import(\"./pointer/PointerEvent.js\").default} pointerEvent Pointer\n     * event.\n     * @private\n     */\n    MapBrowserEventHandler.prototype.emulateClick_ = function (pointerEvent) {\n        var newEvent = new MapBrowserPointerEvent(MapBrowserEventType.CLICK, this.map_, pointerEvent);\n        this.dispatchEvent(newEvent);\n        if (this.clickTimeoutId_ !== undefined) {\n            // double-click\n            clearTimeout(this.clickTimeoutId_);\n            this.clickTimeoutId_ = undefined;\n            newEvent = new MapBrowserPointerEvent(MapBrowserEventType.DBLCLICK, this.map_, pointerEvent);\n            this.dispatchEvent(newEvent);\n        }\n        else {\n            // click\n            this.clickTimeoutId_ = setTimeout(function () {\n                this.clickTimeoutId_ = undefined;\n                var newEvent = new MapBrowserPointerEvent(MapBrowserEventType.SINGLECLICK, this.map_, pointerEvent);\n                this.dispatchEvent(newEvent);\n            }.bind(this), 250);\n        }\n    };\n    /**\n     * Keeps track on how many pointers are currently active.\n     *\n     * @param {import(\"./pointer/PointerEvent.js\").default} pointerEvent Pointer\n     * event.\n     * @private\n     */\n    MapBrowserEventHandler.prototype.updateActivePointers_ = function (pointerEvent) {\n        var event = pointerEvent;\n        if (event.type == MapBrowserEventType.POINTERUP ||\n            event.type == MapBrowserEventType.POINTERCANCEL) {\n            delete this.trackedTouches_[event.pointerId];\n        }\n        else if (event.type == MapBrowserEventType.POINTERDOWN) {\n            this.trackedTouches_[event.pointerId] = true;\n        }\n        this.activePointers_ = Object.keys(this.trackedTouches_).length;\n    };\n    /**\n     * @param {import(\"./pointer/PointerEvent.js\").default} pointerEvent Pointer\n     * event.\n     * @private\n     */\n    MapBrowserEventHandler.prototype.handlePointerUp_ = function (pointerEvent) {\n        this.updateActivePointers_(pointerEvent);\n        var newEvent = new MapBrowserPointerEvent(MapBrowserEventType.POINTERUP, this.map_, pointerEvent);\n        this.dispatchEvent(newEvent);\n        // We emulate click events on left mouse button click, touch contact, and pen\n        // contact. isMouseActionButton returns true in these cases (evt.button is set\n        // to 0).\n        // See http://www.w3.org/TR/pointerevents/#button-states\n        // We only fire click, singleclick, and doubleclick if nobody has called\n        // event.stopPropagation() or event.preventDefault().\n        if (!newEvent.propagationStopped && !this.dragging_ && this.isMouseActionButton_(pointerEvent)) {\n            this.emulateClick_(this.down_);\n        }\n        if (this.activePointers_ === 0) {\n            this.dragListenerKeys_.forEach(unlistenByKey);\n            this.dragListenerKeys_.length = 0;\n            this.dragging_ = false;\n            this.down_ = null;\n            this.documentPointerEventHandler_.dispose();\n            this.documentPointerEventHandler_ = null;\n        }\n    };\n    /**\n     * @param {import(\"./pointer/PointerEvent.js\").default} pointerEvent Pointer\n     * event.\n     * @return {boolean} If the left mouse button was pressed.\n     * @private\n     */\n    MapBrowserEventHandler.prototype.isMouseActionButton_ = function (pointerEvent) {\n        return pointerEvent.button === 0;\n    };\n    /**\n     * @param {import(\"./pointer/PointerEvent.js\").default} pointerEvent Pointer\n     * event.\n     * @private\n     */\n    MapBrowserEventHandler.prototype.handlePointerDown_ = function (pointerEvent) {\n        this.updateActivePointers_(pointerEvent);\n        var newEvent = new MapBrowserPointerEvent(MapBrowserEventType.POINTERDOWN, this.map_, pointerEvent);\n        this.dispatchEvent(newEvent);\n        this.down_ = pointerEvent;\n        if (this.dragListenerKeys_.length === 0) {\n            /* Set up a pointer event handler on the `document`,\n             * which is required when the pointer is moved outside\n             * the viewport when dragging.\n             */\n            this.documentPointerEventHandler_ =\n                new PointerEventHandler(document);\n            this.dragListenerKeys_.push(listen(this.documentPointerEventHandler_, MapBrowserEventType.POINTERMOVE, this.handlePointerMove_, this), listen(this.documentPointerEventHandler_, MapBrowserEventType.POINTERUP, this.handlePointerUp_, this), \n            /* Note that the listener for `pointercancel is set up on\n             * `pointerEventHandler_` and not `documentPointerEventHandler_` like\n             * the `pointerup` and `pointermove` listeners.\n             *\n             * The reason for this is the following: `TouchSource.vacuumTouches_()`\n             * issues `pointercancel` events, when there was no `touchend` for a\n             * `touchstart`. Now, let's say a first `touchstart` is registered on\n             * `pointerEventHandler_`. The `documentPointerEventHandler_` is set up.\n             * But `documentPointerEventHandler_` doesn't know about the first\n             * `touchstart`. If there is no `touchend` for the `touchstart`, we can\n             * only receive a `touchcancel` from `pointerEventHandler_`, because it is\n             * only registered there.\n             */\n            listen(this.pointerEventHandler_, MapBrowserEventType.POINTERCANCEL, this.handlePointerUp_, this));\n        }\n    };\n    /**\n     * @param {import(\"./pointer/PointerEvent.js\").default} pointerEvent Pointer\n     * event.\n     * @private\n     */\n    MapBrowserEventHandler.prototype.handlePointerMove_ = function (pointerEvent) {\n        // Between pointerdown and pointerup, pointermove events are triggered.\n        // To avoid a 'false' touchmove event to be dispatched, we test if the pointer\n        // moved a significant distance.\n        if (this.isMoving_(pointerEvent)) {\n            this.dragging_ = true;\n            var newEvent = new MapBrowserPointerEvent(MapBrowserEventType.POINTERDRAG, this.map_, pointerEvent, this.dragging_);\n            this.dispatchEvent(newEvent);\n        }\n        // Some native android browser triggers mousemove events during small period\n        // of time. See: https://code.google.com/p/android/issues/detail?id=5491 or\n        // https://code.google.com/p/android/issues/detail?id=19827\n        // ex: Galaxy Tab P3110 + Android 4.1.1\n        pointerEvent.preventDefault();\n    };\n    /**\n     * Wrap and relay a pointer event.  Note that this requires that the type\n     * string for the MapBrowserPointerEvent matches the PointerEvent type.\n     * @param {import(\"./pointer/PointerEvent.js\").default} pointerEvent Pointer\n     * event.\n     * @private\n     */\n    MapBrowserEventHandler.prototype.relayEvent_ = function (pointerEvent) {\n        var dragging = !!(this.down_ && this.isMoving_(pointerEvent));\n        this.dispatchEvent(new MapBrowserPointerEvent(pointerEvent.type, this.map_, pointerEvent, dragging));\n    };\n    /**\n     * @param {import(\"./pointer/PointerEvent.js\").default} pointerEvent Pointer\n     * event.\n     * @return {boolean} Is moving.\n     * @private\n     */\n    MapBrowserEventHandler.prototype.isMoving_ = function (pointerEvent) {\n        return this.dragging_ ||\n            Math.abs(pointerEvent.clientX - this.down_.clientX) > this.moveTolerance_ ||\n            Math.abs(pointerEvent.clientY - this.down_.clientY) > this.moveTolerance_;\n    };\n    /**\n     * @inheritDoc\n     */\n    MapBrowserEventHandler.prototype.disposeInternal = function () {\n        if (this.relayedListenerKey_) {\n            unlistenByKey(this.relayedListenerKey_);\n            this.relayedListenerKey_ = null;\n        }\n        if (this.pointerdownListenerKey_) {\n            unlistenByKey(this.pointerdownListenerKey_);\n            this.pointerdownListenerKey_ = null;\n        }\n        this.dragListenerKeys_.forEach(unlistenByKey);\n        this.dragListenerKeys_.length = 0;\n        if (this.documentPointerEventHandler_) {\n            this.documentPointerEventHandler_.dispose();\n            this.documentPointerEventHandler_ = null;\n        }\n        if (this.pointerEventHandler_) {\n            this.pointerEventHandler_.dispose();\n            this.pointerEventHandler_ = null;\n        }\n        _super.prototype.disposeInternal.call(this);\n    };\n    return MapBrowserEventHandler;\n}(EventTarget));\nexport default MapBrowserEventHandler;\n//# sourceMappingURL=MapBrowserEventHandler.js.map","/**\n * @module ol/MapEventType\n */\n/**\n * @enum {string}\n */\nexport default {\n    /**\n     * Triggered after a map frame is rendered.\n     * @event module:ol/MapEvent~MapEvent#postrender\n     * @api\n     */\n    POSTRENDER: 'postrender',\n    /**\n     * Triggered when the map starts moving.\n     * @event module:ol/MapEvent~MapEvent#movestart\n     * @api\n     */\n    MOVESTART: 'movestart',\n    /**\n     * Triggered after the map is moved.\n     * @event module:ol/MapEvent~MapEvent#moveend\n     * @api\n     */\n    MOVEEND: 'moveend'\n};\n//# sourceMappingURL=MapEventType.js.map","/**\n * @module ol/MapProperty\n */\n/**\n * @enum {string}\n */\nexport default {\n    LAYERGROUP: 'layergroup',\n    SIZE: 'size',\n    TARGET: 'target',\n    VIEW: 'view'\n};\n//# sourceMappingURL=MapProperty.js.map","/**\n * @module ol/render/EventType\n */\n/**\n * @enum {string}\n */\nexport default {\n    /**\n     * Triggered before a layer is rendered.\n     * @event module:ol/render/Event~RenderEvent#prerender\n     * @api\n     */\n    PRERENDER: 'prerender',\n    /**\n     * Triggered after a layer is rendered.\n     * @event module:ol/render/Event~RenderEvent#postrender\n     * @api\n     */\n    POSTRENDER: 'postrender',\n    /**\n     * Triggered before layers are rendered.\n     * @event module:ol/render/Event~RenderEvent#precompose\n     * @api\n     */\n    PRECOMPOSE: 'precompose',\n    /**\n     * Triggered after all layers are rendered.\n     * @event module:ol/render/Event~RenderEvent#postcompose\n     * @api\n     */\n    POSTCOMPOSE: 'postcompose',\n    /**\n     * Triggered when rendering is complete, i.e. all sources and tiles have\n     * finished loading for the current viewport, and all tiles are faded in.\n     * @event module:ol/render/Event~RenderEvent#rendercomplete\n     * @api\n     */\n    RENDERCOMPLETE: 'rendercomplete'\n};\n//# sourceMappingURL=EventType.js.map","/**\n * @module ol/TileState\n */\n/**\n * @enum {number}\n */\nexport default {\n    IDLE: 0,\n    LOADING: 1,\n    LOADED: 2,\n    /**\n     * Indicates that tile loading failed\n     * @type {number}\n     */\n    ERROR: 3,\n    EMPTY: 4,\n    ABORT: 5\n};\n//# sourceMappingURL=TileState.js.map","/**\n * @module ol/asserts\n */\nimport AssertionError from './AssertionError.js';\n/**\n * @param {*} assertion Assertion we expected to be truthy.\n * @param {number} errorCode Error code.\n */\nexport function assert(assertion, errorCode) {\n    if (!assertion) {\n        throw new AssertionError(errorCode);\n    }\n}\n//# sourceMappingURL=asserts.js.map","/**\n * @module ol/structs/PriorityQueue\n */\nimport { assert } from '../asserts.js';\nimport { clear } from '../obj.js';\n/**\n * @type {number}\n */\nexport var DROP = Infinity;\n/**\n * @classdesc\n * Priority queue.\n *\n * The implementation is inspired from the Closure Library's Heap class and\n * Python's heapq module.\n *\n * See http://closure-library.googlecode.com/svn/docs/closure_goog_structs_heap.js.source.html\n * and http://hg.python.org/cpython/file/2.7/Lib/heapq.py.\n *\n * @template T\n */\nvar PriorityQueue = /** @class */ (function () {\n    /**\n     * @param {function(T): number} priorityFunction Priority function.\n     * @param {function(T): string} keyFunction Key function.\n     */\n    function PriorityQueue(priorityFunction, keyFunction) {\n        /**\n         * @type {function(T): number}\n         * @private\n         */\n        this.priorityFunction_ = priorityFunction;\n        /**\n         * @type {function(T): string}\n         * @private\n         */\n        this.keyFunction_ = keyFunction;\n        /**\n         * @type {Array<T>}\n         * @private\n         */\n        this.elements_ = [];\n        /**\n         * @type {Array<number>}\n         * @private\n         */\n        this.priorities_ = [];\n        /**\n         * @type {!Object<string, boolean>}\n         * @private\n         */\n        this.queuedElements_ = {};\n    }\n    /**\n     * FIXME empty description for jsdoc\n     */\n    PriorityQueue.prototype.clear = function () {\n        this.elements_.length = 0;\n        this.priorities_.length = 0;\n        clear(this.queuedElements_);\n    };\n    /**\n     * Remove and return the highest-priority element. O(log N).\n     * @return {T} Element.\n     */\n    PriorityQueue.prototype.dequeue = function () {\n        var elements = this.elements_;\n        var priorities = this.priorities_;\n        var element = elements[0];\n        if (elements.length == 1) {\n            elements.length = 0;\n            priorities.length = 0;\n        }\n        else {\n            elements[0] = elements.pop();\n            priorities[0] = priorities.pop();\n            this.siftUp_(0);\n        }\n        var elementKey = this.keyFunction_(element);\n        delete this.queuedElements_[elementKey];\n        return element;\n    };\n    /**\n     * Enqueue an element. O(log N).\n     * @param {T} element Element.\n     * @return {boolean} The element was added to the queue.\n     */\n    PriorityQueue.prototype.enqueue = function (element) {\n        assert(!(this.keyFunction_(element) in this.queuedElements_), 31); // Tried to enqueue an `element` that was already added to the queue\n        var priority = this.priorityFunction_(element);\n        if (priority != DROP) {\n            this.elements_.push(element);\n            this.priorities_.push(priority);\n            this.queuedElements_[this.keyFunction_(element)] = true;\n            this.siftDown_(0, this.elements_.length - 1);\n            return true;\n        }\n        return false;\n    };\n    /**\n     * @return {number} Count.\n     */\n    PriorityQueue.prototype.getCount = function () {\n        return this.elements_.length;\n    };\n    /**\n     * Gets the index of the left child of the node at the given index.\n     * @param {number} index The index of the node to get the left child for.\n     * @return {number} The index of the left child.\n     * @private\n     */\n    PriorityQueue.prototype.getLeftChildIndex_ = function (index) {\n        return index * 2 + 1;\n    };\n    /**\n     * Gets the index of the right child of the node at the given index.\n     * @param {number} index The index of the node to get the right child for.\n     * @return {number} The index of the right child.\n     * @private\n     */\n    PriorityQueue.prototype.getRightChildIndex_ = function (index) {\n        return index * 2 + 2;\n    };\n    /**\n     * Gets the index of the parent of the node at the given index.\n     * @param {number} index The index of the node to get the parent for.\n     * @return {number} The index of the parent.\n     * @private\n     */\n    PriorityQueue.prototype.getParentIndex_ = function (index) {\n        return (index - 1) >> 1;\n    };\n    /**\n     * Make this a heap. O(N).\n     * @private\n     */\n    PriorityQueue.prototype.heapify_ = function () {\n        var i;\n        for (i = (this.elements_.length >> 1) - 1; i >= 0; i--) {\n            this.siftUp_(i);\n        }\n    };\n    /**\n     * @return {boolean} Is empty.\n     */\n    PriorityQueue.prototype.isEmpty = function () {\n        return this.elements_.length === 0;\n    };\n    /**\n     * @param {string} key Key.\n     * @return {boolean} Is key queued.\n     */\n    PriorityQueue.prototype.isKeyQueued = function (key) {\n        return key in this.queuedElements_;\n    };\n    /**\n     * @param {T} element Element.\n     * @return {boolean} Is queued.\n     */\n    PriorityQueue.prototype.isQueued = function (element) {\n        return this.isKeyQueued(this.keyFunction_(element));\n    };\n    /**\n     * @param {number} index The index of the node to move down.\n     * @private\n     */\n    PriorityQueue.prototype.siftUp_ = function (index) {\n        var elements = this.elements_;\n        var priorities = this.priorities_;\n        var count = elements.length;\n        var element = elements[index];\n        var priority = priorities[index];\n        var startIndex = index;\n        while (index < (count >> 1)) {\n            var lIndex = this.getLeftChildIndex_(index);\n            var rIndex = this.getRightChildIndex_(index);\n            var smallerChildIndex = rIndex < count &&\n                priorities[rIndex] < priorities[lIndex] ?\n                rIndex : lIndex;\n            elements[index] = elements[smallerChildIndex];\n            priorities[index] = priorities[smallerChildIndex];\n            index = smallerChildIndex;\n        }\n        elements[index] = element;\n        priorities[index] = priority;\n        this.siftDown_(startIndex, index);\n    };\n    /**\n     * @param {number} startIndex The index of the root.\n     * @param {number} index The index of the node to move up.\n     * @private\n     */\n    PriorityQueue.prototype.siftDown_ = function (startIndex, index) {\n        var elements = this.elements_;\n        var priorities = this.priorities_;\n        var element = elements[index];\n        var priority = priorities[index];\n        while (index > startIndex) {\n            var parentIndex = this.getParentIndex_(index);\n            if (priorities[parentIndex] > priority) {\n                elements[index] = elements[parentIndex];\n                priorities[index] = priorities[parentIndex];\n                index = parentIndex;\n            }\n            else {\n                break;\n            }\n        }\n        elements[index] = element;\n        priorities[index] = priority;\n    };\n    /**\n     * FIXME empty description for jsdoc\n     */\n    PriorityQueue.prototype.reprioritize = function () {\n        var priorityFunction = this.priorityFunction_;\n        var elements = this.elements_;\n        var priorities = this.priorities_;\n        var index = 0;\n        var n = elements.length;\n        var element, i, priority;\n        for (i = 0; i < n; ++i) {\n            element = elements[i];\n            priority = priorityFunction(element);\n            if (priority == DROP) {\n                delete this.queuedElements_[this.keyFunction_(element)];\n            }\n            else {\n                priorities[index] = priority;\n                elements[index++] = element;\n            }\n        }\n        elements.length = index;\n        priorities.length = index;\n        this.heapify_();\n    };\n    return PriorityQueue;\n}());\nexport default PriorityQueue;\n//# sourceMappingURL=PriorityQueue.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/TileQueue\n */\nimport TileState from './TileState.js';\nimport { listen, unlisten } from './events.js';\nimport EventType from './events/EventType.js';\nimport PriorityQueue from './structs/PriorityQueue.js';\n/**\n * @typedef {function(import(\"./Tile.js\").default, string, import(\"./coordinate.js\").Coordinate, number): number} PriorityFunction\n */\nvar TileQueue = /** @class */ (function (_super) {\n    __extends(TileQueue, _super);\n    /**\n     * @param {PriorityFunction} tilePriorityFunction Tile priority function.\n     * @param {function(): ?} tileChangeCallback Function called on each tile change event.\n     */\n    function TileQueue(tilePriorityFunction, tileChangeCallback) {\n        var _this = _super.call(this, \n        /**\n         * @param {Array} element Element.\n         * @return {number} Priority.\n         */\n        function (element) {\n            return tilePriorityFunction.apply(null, element);\n        }, \n        /**\n         * @param {Array} element Element.\n         * @return {string} Key.\n         */\n        function (element) {\n            return ( /** @type {import(\"./Tile.js\").default} */(element[0]).getKey());\n        }) || this;\n        /**\n         * @private\n         * @type {function(): ?}\n         */\n        _this.tileChangeCallback_ = tileChangeCallback;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.tilesLoading_ = 0;\n        /**\n         * @private\n         * @type {!Object<string,boolean>}\n         */\n        _this.tilesLoadingKeys_ = {};\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    TileQueue.prototype.enqueue = function (element) {\n        var added = _super.prototype.enqueue.call(this, element);\n        if (added) {\n            var tile = element[0];\n            listen(tile, EventType.CHANGE, this.handleTileChange, this);\n        }\n        return added;\n    };\n    /**\n     * @return {number} Number of tiles loading.\n     */\n    TileQueue.prototype.getTilesLoading = function () {\n        return this.tilesLoading_;\n    };\n    /**\n     * @param {import(\"./events/Event.js\").default} event Event.\n     * @protected\n     */\n    TileQueue.prototype.handleTileChange = function (event) {\n        var tile = /** @type {import(\"./Tile.js\").default} */ (event.target);\n        var state = tile.getState();\n        if (tile.hifi && state === TileState.LOADED || state === TileState.ERROR ||\n            state === TileState.EMPTY || state === TileState.ABORT) {\n            unlisten(tile, EventType.CHANGE, this.handleTileChange, this);\n            var tileKey = tile.getKey();\n            if (tileKey in this.tilesLoadingKeys_) {\n                delete this.tilesLoadingKeys_[tileKey];\n                --this.tilesLoading_;\n            }\n            this.tileChangeCallback_();\n        }\n    };\n    /**\n     * @param {number} maxTotalLoading Maximum number tiles to load simultaneously.\n     * @param {number} maxNewLoads Maximum number of new tiles to load.\n     */\n    TileQueue.prototype.loadMoreTiles = function (maxTotalLoading, maxNewLoads) {\n        var newLoads = 0;\n        var abortedTiles = false;\n        var state, tile, tileKey;\n        while (this.tilesLoading_ < maxTotalLoading && newLoads < maxNewLoads &&\n            this.getCount() > 0) {\n            tile = /** @type {import(\"./Tile.js\").default} */ (this.dequeue()[0]);\n            tileKey = tile.getKey();\n            state = tile.getState();\n            if (state === TileState.ABORT) {\n                abortedTiles = true;\n            }\n            else if (state === TileState.IDLE && !(tileKey in this.tilesLoadingKeys_)) {\n                this.tilesLoadingKeys_[tileKey] = true;\n                ++this.tilesLoading_;\n                ++newLoads;\n                tile.load();\n            }\n        }\n        if (newLoads === 0 && abortedTiles) {\n            // Do not stop the render loop when all wanted tiles were aborted due to\n            // a small, saturated tile cache.\n            this.tileChangeCallback_();\n        }\n    };\n    return TileQueue;\n}(PriorityQueue));\nexport default TileQueue;\n//# sourceMappingURL=TileQueue.js.map","/**\n * @module ol/tilegrid/common\n */\n/**\n * Default maximum zoom for default tile grids.\n * @type {number}\n */\nexport var DEFAULT_MAX_ZOOM = 42;\n/**\n * Default tile size.\n * @type {number}\n */\nexport var DEFAULT_TILE_SIZE = 256;\n//# sourceMappingURL=common.js.map","/**\n * @module ol/math\n */\nimport { assert } from './asserts.js';\n/**\n * Takes a number and clamps it to within the provided bounds.\n * @param {number} value The input number.\n * @param {number} min The minimum value to return.\n * @param {number} max The maximum value to return.\n * @return {number} The input number if it is within bounds, or the nearest\n *     number within the bounds.\n */\nexport function clamp(value, min, max) {\n    return Math.min(Math.max(value, min), max);\n}\n/**\n * Return the hyperbolic cosine of a given number. The method will use the\n * native `Math.cosh` function if it is available, otherwise the hyperbolic\n * cosine will be calculated via the reference implementation of the Mozilla\n * developer network.\n *\n * @param {number} x X.\n * @return {number} Hyperbolic cosine of x.\n */\nexport var cosh = (function () {\n    // Wrapped in a iife, to save the overhead of checking for the native\n    // implementation on every invocation.\n    var cosh;\n    if ('cosh' in Math) {\n        // The environment supports the native Math.cosh function, use it…\n        cosh = Math.cosh;\n    }\n    else {\n        // … else, use the reference implementation of MDN:\n        cosh = function (x) {\n            var y = /** @type {Math} */ (Math).exp(x);\n            return (y + 1 / y) / 2;\n        };\n    }\n    return cosh;\n}());\n/**\n * @param {number} x X.\n * @return {number} The smallest power of two greater than or equal to x.\n */\nexport function roundUpToPowerOfTwo(x) {\n    assert(0 < x, 29); // `x` must be greater than `0`\n    return Math.pow(2, Math.ceil(Math.log(x) / Math.LN2));\n}\n/**\n * Returns the square of the closest distance between the point (x, y) and the\n * line segment (x1, y1) to (x2, y2).\n * @param {number} x X.\n * @param {number} y Y.\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredSegmentDistance(x, y, x1, y1, x2, y2) {\n    var dx = x2 - x1;\n    var dy = y2 - y1;\n    if (dx !== 0 || dy !== 0) {\n        var t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n        if (t > 1) {\n            x1 = x2;\n            y1 = y2;\n        }\n        else if (t > 0) {\n            x1 += dx * t;\n            y1 += dy * t;\n        }\n    }\n    return squaredDistance(x, y, x1, y1);\n}\n/**\n * Returns the square of the distance between the points (x1, y1) and (x2, y2).\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredDistance(x1, y1, x2, y2) {\n    var dx = x2 - x1;\n    var dy = y2 - y1;\n    return dx * dx + dy * dy;\n}\n/**\n * Solves system of linear equations using Gaussian elimination method.\n *\n * @param {Array<Array<number>>} mat Augmented matrix (n x n + 1 column)\n *                                     in row-major order.\n * @return {Array<number>} The resulting vector.\n */\nexport function solveLinearSystem(mat) {\n    var n = mat.length;\n    for (var i = 0; i < n; i++) {\n        // Find max in the i-th column (ignoring i - 1 first rows)\n        var maxRow = i;\n        var maxEl = Math.abs(mat[i][i]);\n        for (var r = i + 1; r < n; r++) {\n            var absValue = Math.abs(mat[r][i]);\n            if (absValue > maxEl) {\n                maxEl = absValue;\n                maxRow = r;\n            }\n        }\n        if (maxEl === 0) {\n            return null; // matrix is singular\n        }\n        // Swap max row with i-th (current) row\n        var tmp = mat[maxRow];\n        mat[maxRow] = mat[i];\n        mat[i] = tmp;\n        // Subtract the i-th row to make all the remaining rows 0 in the i-th column\n        for (var j = i + 1; j < n; j++) {\n            var coef = -mat[j][i] / mat[i][i];\n            for (var k = i; k < n + 1; k++) {\n                if (i == k) {\n                    mat[j][k] = 0;\n                }\n                else {\n                    mat[j][k] += coef * mat[i][k];\n                }\n            }\n        }\n    }\n    // Solve Ax=b for upper triangular matrix A (mat)\n    var x = new Array(n);\n    for (var l = n - 1; l >= 0; l--) {\n        x[l] = mat[l][n] / mat[l][l];\n        for (var m = l - 1; m >= 0; m--) {\n            mat[m][n] -= mat[m][l] * x[l];\n        }\n    }\n    return x;\n}\n/**\n * Converts radians to to degrees.\n *\n * @param {number} angleInRadians Angle in radians.\n * @return {number} Angle in degrees.\n */\nexport function toDegrees(angleInRadians) {\n    return angleInRadians * 180 / Math.PI;\n}\n/**\n * Converts degrees to radians.\n *\n * @param {number} angleInDegrees Angle in degrees.\n * @return {number} Angle in radians.\n */\nexport function toRadians(angleInDegrees) {\n    return angleInDegrees * Math.PI / 180;\n}\n/**\n * Returns the modulo of a / b, depending on the sign of b.\n *\n * @param {number} a Dividend.\n * @param {number} b Divisor.\n * @return {number} Modulo.\n */\nexport function modulo(a, b) {\n    var r = a % b;\n    return r * b < 0 ? r + b : r;\n}\n/**\n * Calculates the linearly interpolated value of x between a and b.\n *\n * @param {number} a Number\n * @param {number} b Number\n * @param {number} x Value to be interpolated.\n * @return {number} Interpolated value.\n */\nexport function lerp(a, b, x) {\n    return a + x * (b - a);\n}\n//# sourceMappingURL=math.js.map","/**\n * @module ol/centerconstraint\n */\nimport { clamp } from './math.js';\n/**\n * @typedef {function((import(\"./coordinate.js\").Coordinate|undefined), number, import(\"./size.js\").Size, boolean=): (import(\"./coordinate.js\").Coordinate|undefined)} Type\n */\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {boolean} onlyCenter If true, the constraint will only apply to the view center.\n * @param {boolean} smooth If true, the view will be able to go slightly out of the given extent\n * (only during interaction and animation).\n * @return {Type} The constraint.\n */\nexport function createExtent(extent, onlyCenter, smooth) {\n    return (\n    /**\n     * @param {import(\"./coordinate.js\").Coordinate|undefined} center Center.\n     * @param {number} resolution Resolution.\n     * @param {import(\"./size.js\").Size} size Viewport size; unused if `onlyCenter` was specified.\n     * @param {boolean=} opt_isMoving True if an interaction or animation is in progress.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n     */\n    function (center, resolution, size, opt_isMoving) {\n        if (center) {\n            var viewWidth = onlyCenter ? 0 : size[0] * resolution;\n            var viewHeight = onlyCenter ? 0 : size[1] * resolution;\n            var minX = extent[0] + viewWidth / 2;\n            var maxX = extent[2] - viewWidth / 2;\n            var minY = extent[1] + viewHeight / 2;\n            var maxY = extent[3] - viewHeight / 2;\n            // note: when zooming out of bounds, min and max values for x and y may\n            // end up inverted (min > max); this has to be accounted for\n            if (minX > maxX) {\n                minX = maxX = (maxX + minX) / 2;\n            }\n            if (minY > maxY) {\n                minY = maxY = (maxY + minY) / 2;\n            }\n            var x = clamp(center[0], minX, maxX);\n            var y = clamp(center[1], minY, maxY);\n            var ratio = 30 * resolution;\n            // during an interaction, allow some overscroll\n            if (opt_isMoving && smooth) {\n                x += -ratio * Math.log(1 + Math.max(0, minX - center[0]) / ratio) +\n                    ratio * Math.log(1 + Math.max(0, center[0] - maxX) / ratio);\n                y += -ratio * Math.log(1 + Math.max(0, minY - center[1]) / ratio) +\n                    ratio * Math.log(1 + Math.max(0, center[1] - maxY) / ratio);\n            }\n            return [x, y];\n        }\n        else {\n            return undefined;\n        }\n    });\n}\n/**\n * @param {import(\"./coordinate.js\").Coordinate=} center Center.\n * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n */\nexport function none(center) {\n    return center;\n}\n//# sourceMappingURL=centerconstraint.js.map","/**\n * @module ol/extent/Corner\n */\n/**\n * Extent corner.\n * @enum {string}\n */\nexport default {\n    BOTTOM_LEFT: 'bottom-left',\n    BOTTOM_RIGHT: 'bottom-right',\n    TOP_LEFT: 'top-left',\n    TOP_RIGHT: 'top-right'\n};\n//# sourceMappingURL=Corner.js.map","/**\n * @module ol/extent/Relationship\n */\n/**\n * Relationship to an extent.\n * @enum {number}\n */\nexport default {\n    UNKNOWN: 0,\n    INTERSECTING: 1,\n    ABOVE: 2,\n    RIGHT: 4,\n    BELOW: 8,\n    LEFT: 16\n};\n//# sourceMappingURL=Relationship.js.map","/**\n * @module ol/extent\n */\nimport { assert } from './asserts.js';\nimport Corner from './extent/Corner.js';\nimport Relationship from './extent/Relationship.js';\n/**\n * An array of numbers representing an extent: `[minx, miny, maxx, maxy]`.\n * @typedef {Array<number>} Extent\n * @api\n */\n/**\n * Build an extent that includes all given coordinates.\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Bounding extent.\n * @api\n */\nexport function boundingExtent(coordinates) {\n    var extent = createEmpty();\n    for (var i = 0, ii = coordinates.length; i < ii; ++i) {\n        extendCoordinate(extent, coordinates[i]);\n    }\n    return extent;\n}\n/**\n * @param {Array<number>} xs Xs.\n * @param {Array<number>} ys Ys.\n * @param {Extent=} opt_extent Destination extent.\n * @private\n * @return {Extent} Extent.\n */\nfunction _boundingExtentXYs(xs, ys, opt_extent) {\n    var minX = Math.min.apply(null, xs);\n    var minY = Math.min.apply(null, ys);\n    var maxX = Math.max.apply(null, xs);\n    var maxY = Math.max.apply(null, ys);\n    return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n}\n/**\n * Return extent increased by the provided value.\n * @param {Extent} extent Extent.\n * @param {number} value The amount by which the extent should be buffered.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n * @api\n */\nexport function buffer(extent, value, opt_extent) {\n    if (opt_extent) {\n        opt_extent[0] = extent[0] - value;\n        opt_extent[1] = extent[1] - value;\n        opt_extent[2] = extent[2] + value;\n        opt_extent[3] = extent[3] + value;\n        return opt_extent;\n    }\n    else {\n        return [\n            extent[0] - value,\n            extent[1] - value,\n            extent[2] + value,\n            extent[3] + value\n        ];\n    }\n}\n/**\n * Creates a clone of an extent.\n *\n * @param {Extent} extent Extent to clone.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} The clone.\n */\nexport function clone(extent, opt_extent) {\n    if (opt_extent) {\n        opt_extent[0] = extent[0];\n        opt_extent[1] = extent[1];\n        opt_extent[2] = extent[2];\n        opt_extent[3] = extent[3];\n        return opt_extent;\n    }\n    else {\n        return extent.slice();\n    }\n}\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {number} Closest squared distance.\n */\nexport function closestSquaredDistanceXY(extent, x, y) {\n    var dx, dy;\n    if (x < extent[0]) {\n        dx = extent[0] - x;\n    }\n    else if (extent[2] < x) {\n        dx = x - extent[2];\n    }\n    else {\n        dx = 0;\n    }\n    if (y < extent[1]) {\n        dy = extent[1] - y;\n    }\n    else if (extent[3] < y) {\n        dy = y - extent[3];\n    }\n    else {\n        dy = 0;\n    }\n    return dx * dx + dy * dy;\n}\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @return {boolean} The coordinate is contained in the extent.\n * @api\n */\nexport function containsCoordinate(extent, coordinate) {\n    return containsXY(extent, coordinate[0], coordinate[1]);\n}\n/**\n * Check if one extent contains another.\n *\n * An extent is deemed contained if it lies completely within the other extent,\n * including if they share one or more edges.\n *\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The second extent is contained by or on the edge of the\n *     first.\n * @api\n */\nexport function containsExtent(extent1, extent2) {\n    return extent1[0] <= extent2[0] && extent2[2] <= extent1[2] &&\n        extent1[1] <= extent2[1] && extent2[3] <= extent1[3];\n}\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {number} x X coordinate.\n * @param {number} y Y coordinate.\n * @return {boolean} The x, y values are contained in the extent.\n * @api\n */\nexport function containsXY(extent, x, y) {\n    return extent[0] <= x && x <= extent[2] && extent[1] <= y && y <= extent[3];\n}\n/**\n * Get the relationship between a coordinate and extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate The coordinate.\n * @return {Relationship} The relationship (bitwise compare with\n *     import(\"./extent/Relationship.js\").Relationship).\n */\nexport function coordinateRelationship(extent, coordinate) {\n    var minX = extent[0];\n    var minY = extent[1];\n    var maxX = extent[2];\n    var maxY = extent[3];\n    var x = coordinate[0];\n    var y = coordinate[1];\n    var relationship = Relationship.UNKNOWN;\n    if (x < minX) {\n        relationship = relationship | Relationship.LEFT;\n    }\n    else if (x > maxX) {\n        relationship = relationship | Relationship.RIGHT;\n    }\n    if (y < minY) {\n        relationship = relationship | Relationship.BELOW;\n    }\n    else if (y > maxY) {\n        relationship = relationship | Relationship.ABOVE;\n    }\n    if (relationship === Relationship.UNKNOWN) {\n        relationship = Relationship.INTERSECTING;\n    }\n    return relationship;\n}\n/**\n * Create an empty extent.\n * @return {Extent} Empty extent.\n * @api\n */\nexport function createEmpty() {\n    return [Infinity, Infinity, -Infinity, -Infinity];\n}\n/**\n * Create a new extent or update the provided extent.\n * @param {number} minX Minimum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxX Maximum X.\n * @param {number} maxY Maximum Y.\n * @param {Extent=} opt_extent Destination extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdate(minX, minY, maxX, maxY, opt_extent) {\n    if (opt_extent) {\n        opt_extent[0] = minX;\n        opt_extent[1] = minY;\n        opt_extent[2] = maxX;\n        opt_extent[3] = maxY;\n        return opt_extent;\n    }\n    else {\n        return [minX, minY, maxX, maxY];\n    }\n}\n/**\n * Create a new empty extent or make the provided one empty.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateEmpty(opt_extent) {\n    return createOrUpdate(Infinity, Infinity, -Infinity, -Infinity, opt_extent);\n}\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinate(coordinate, opt_extent) {\n    var x = coordinate[0];\n    var y = coordinate[1];\n    return createOrUpdate(x, y, x, y, opt_extent);\n}\n/**\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinates(coordinates, opt_extent) {\n    var extent = createOrUpdateEmpty(opt_extent);\n    return extendCoordinates(extent, coordinates);\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromFlatCoordinates(flatCoordinates, offset, end, stride, opt_extent) {\n    var extent = createOrUpdateEmpty(opt_extent);\n    return extendFlatCoordinates(extent, flatCoordinates, offset, end, stride);\n}\n/**\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromRings(rings, opt_extent) {\n    var extent = createOrUpdateEmpty(opt_extent);\n    return extendRings(extent, rings);\n}\n/**\n * Determine if two extents are equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The two extents are equivalent.\n * @api\n */\nexport function equals(extent1, extent2) {\n    return extent1[0] == extent2[0] && extent1[2] == extent2[2] &&\n        extent1[1] == extent2[1] && extent1[3] == extent2[3];\n}\n/**\n * Modify an extent to include another extent.\n * @param {Extent} extent1 The extent to be modified.\n * @param {Extent} extent2 The extent that will be included in the first.\n * @return {Extent} A reference to the first (extended) extent.\n * @api\n */\nexport function extend(extent1, extent2) {\n    if (extent2[0] < extent1[0]) {\n        extent1[0] = extent2[0];\n    }\n    if (extent2[2] > extent1[2]) {\n        extent1[2] = extent2[2];\n    }\n    if (extent2[1] < extent1[1]) {\n        extent1[1] = extent2[1];\n    }\n    if (extent2[3] > extent1[3]) {\n        extent1[3] = extent2[3];\n    }\n    return extent1;\n}\n/**\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n */\nexport function extendCoordinate(extent, coordinate) {\n    if (coordinate[0] < extent[0]) {\n        extent[0] = coordinate[0];\n    }\n    if (coordinate[0] > extent[2]) {\n        extent[2] = coordinate[0];\n    }\n    if (coordinate[1] < extent[1]) {\n        extent[1] = coordinate[1];\n    }\n    if (coordinate[1] > extent[3]) {\n        extent[3] = coordinate[1];\n    }\n}\n/**\n * @param {Extent} extent Extent.\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Extent.\n */\nexport function extendCoordinates(extent, coordinates) {\n    for (var i = 0, ii = coordinates.length; i < ii; ++i) {\n        extendCoordinate(extent, coordinates[i]);\n    }\n    return extent;\n}\n/**\n * @param {Extent} extent Extent.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Extent} Extent.\n */\nexport function extendFlatCoordinates(extent, flatCoordinates, offset, end, stride) {\n    for (; offset < end; offset += stride) {\n        extendXY(extent, flatCoordinates[offset], flatCoordinates[offset + 1]);\n    }\n    return extent;\n}\n/**\n * @param {Extent} extent Extent.\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @return {Extent} Extent.\n */\nexport function extendRings(extent, rings) {\n    for (var i = 0, ii = rings.length; i < ii; ++i) {\n        extendCoordinates(extent, rings[i]);\n    }\n    return extent;\n}\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n */\nexport function extendXY(extent, x, y) {\n    extent[0] = Math.min(extent[0], x);\n    extent[1] = Math.min(extent[1], y);\n    extent[2] = Math.max(extent[2], x);\n    extent[3] = Math.max(extent[3], y);\n}\n/**\n * This function calls `callback` for each corner of the extent. If the\n * callback returns a truthy value the function returns that value\n * immediately. Otherwise the function returns `false`.\n * @param {Extent} extent Extent.\n * @param {function(import(\"./coordinate.js\").Coordinate): S} callback Callback.\n * @return {S|boolean} Value.\n * @template S\n */\nexport function forEachCorner(extent, callback) {\n    var val;\n    val = callback(getBottomLeft(extent));\n    if (val) {\n        return val;\n    }\n    val = callback(getBottomRight(extent));\n    if (val) {\n        return val;\n    }\n    val = callback(getTopRight(extent));\n    if (val) {\n        return val;\n    }\n    val = callback(getTopLeft(extent));\n    if (val) {\n        return val;\n    }\n    return false;\n}\n/**\n * Get the size of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Area.\n * @api\n */\nexport function getArea(extent) {\n    var area = 0;\n    if (!isEmpty(extent)) {\n        area = getWidth(extent) * getHeight(extent);\n    }\n    return area;\n}\n/**\n * Get the bottom left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom left coordinate.\n * @api\n */\nexport function getBottomLeft(extent) {\n    return [extent[0], extent[1]];\n}\n/**\n * Get the bottom right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom right coordinate.\n * @api\n */\nexport function getBottomRight(extent) {\n    return [extent[2], extent[1]];\n}\n/**\n * Get the center coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Center.\n * @api\n */\nexport function getCenter(extent) {\n    return [(extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2];\n}\n/**\n * Get a corner coordinate of an extent.\n * @param {Extent} extent Extent.\n * @param {Corner} corner Corner.\n * @return {import(\"./coordinate.js\").Coordinate} Corner coordinate.\n */\nexport function getCorner(extent, corner) {\n    var coordinate;\n    if (corner === Corner.BOTTOM_LEFT) {\n        coordinate = getBottomLeft(extent);\n    }\n    else if (corner === Corner.BOTTOM_RIGHT) {\n        coordinate = getBottomRight(extent);\n    }\n    else if (corner === Corner.TOP_LEFT) {\n        coordinate = getTopLeft(extent);\n    }\n    else if (corner === Corner.TOP_RIGHT) {\n        coordinate = getTopRight(extent);\n    }\n    else {\n        assert(false, 13); // Invalid corner\n    }\n    return coordinate;\n}\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Enlarged area.\n */\nexport function getEnlargedArea(extent1, extent2) {\n    var minX = Math.min(extent1[0], extent2[0]);\n    var minY = Math.min(extent1[1], extent2[1]);\n    var maxX = Math.max(extent1[2], extent2[2]);\n    var maxY = Math.max(extent1[3], extent2[3]);\n    return (maxX - minX) * (maxY - minY);\n}\n/**\n * @param {import(\"./coordinate.js\").Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {import(\"./size.js\").Size} size Size.\n * @param {Extent=} opt_extent Destination extent.\n * @return {Extent} Extent.\n */\nexport function getForViewAndSize(center, resolution, rotation, size, opt_extent) {\n    var dx = resolution * size[0] / 2;\n    var dy = resolution * size[1] / 2;\n    var cosRotation = Math.cos(rotation);\n    var sinRotation = Math.sin(rotation);\n    var xCos = dx * cosRotation;\n    var xSin = dx * sinRotation;\n    var yCos = dy * cosRotation;\n    var ySin = dy * sinRotation;\n    var x = center[0];\n    var y = center[1];\n    var x0 = x - xCos + ySin;\n    var x1 = x - xCos - ySin;\n    var x2 = x + xCos - ySin;\n    var x3 = x + xCos + ySin;\n    var y0 = y - xSin - yCos;\n    var y1 = y - xSin + yCos;\n    var y2 = y + xSin + yCos;\n    var y3 = y + xSin - yCos;\n    return createOrUpdate(Math.min(x0, x1, x2, x3), Math.min(y0, y1, y2, y3), Math.max(x0, x1, x2, x3), Math.max(y0, y1, y2, y3), opt_extent);\n}\n/**\n * Get the height of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Height.\n * @api\n */\nexport function getHeight(extent) {\n    return extent[3] - extent[1];\n}\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Intersection area.\n */\nexport function getIntersectionArea(extent1, extent2) {\n    var intersection = getIntersection(extent1, extent2);\n    return getArea(intersection);\n}\n/**\n * Get the intersection of two extents.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {Extent=} opt_extent Optional extent to populate with intersection.\n * @return {Extent} Intersecting extent.\n * @api\n */\nexport function getIntersection(extent1, extent2, opt_extent) {\n    var intersection = opt_extent ? opt_extent : createEmpty();\n    if (intersects(extent1, extent2)) {\n        if (extent1[0] > extent2[0]) {\n            intersection[0] = extent1[0];\n        }\n        else {\n            intersection[0] = extent2[0];\n        }\n        if (extent1[1] > extent2[1]) {\n            intersection[1] = extent1[1];\n        }\n        else {\n            intersection[1] = extent2[1];\n        }\n        if (extent1[2] < extent2[2]) {\n            intersection[2] = extent1[2];\n        }\n        else {\n            intersection[2] = extent2[2];\n        }\n        if (extent1[3] < extent2[3]) {\n            intersection[3] = extent1[3];\n        }\n        else {\n            intersection[3] = extent2[3];\n        }\n    }\n    else {\n        createOrUpdateEmpty(intersection);\n    }\n    return intersection;\n}\n/**\n * @param {Extent} extent Extent.\n * @return {number} Margin.\n */\nexport function getMargin(extent) {\n    return getWidth(extent) + getHeight(extent);\n}\n/**\n * Get the size (width, height) of an extent.\n * @param {Extent} extent The extent.\n * @return {import(\"./size.js\").Size} The extent size.\n * @api\n */\nexport function getSize(extent) {\n    return [extent[2] - extent[0], extent[3] - extent[1]];\n}\n/**\n * Get the top left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top left coordinate.\n * @api\n */\nexport function getTopLeft(extent) {\n    return [extent[0], extent[3]];\n}\n/**\n * Get the top right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top right coordinate.\n * @api\n */\nexport function getTopRight(extent) {\n    return [extent[2], extent[3]];\n}\n/**\n * Get the width of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Width.\n * @api\n */\nexport function getWidth(extent) {\n    return extent[2] - extent[0];\n}\n/**\n * Determine if one extent intersects another.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent.\n * @return {boolean} The two extents intersect.\n * @api\n */\nexport function intersects(extent1, extent2) {\n    return extent1[0] <= extent2[2] &&\n        extent1[2] >= extent2[0] &&\n        extent1[1] <= extent2[3] &&\n        extent1[3] >= extent2[1];\n}\n/**\n * Determine if an extent is empty.\n * @param {Extent} extent Extent.\n * @return {boolean} Is empty.\n * @api\n */\nexport function isEmpty(extent) {\n    return extent[2] < extent[0] || extent[3] < extent[1];\n}\n/**\n * @param {Extent} extent Extent.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function returnOrUpdate(extent, opt_extent) {\n    if (opt_extent) {\n        opt_extent[0] = extent[0];\n        opt_extent[1] = extent[1];\n        opt_extent[2] = extent[2];\n        opt_extent[3] = extent[3];\n        return opt_extent;\n    }\n    else {\n        return extent;\n    }\n}\n/**\n * @param {Extent} extent Extent.\n * @param {number} value Value.\n */\nexport function scaleFromCenter(extent, value) {\n    var deltaX = ((extent[2] - extent[0]) / 2) * (value - 1);\n    var deltaY = ((extent[3] - extent[1]) / 2) * (value - 1);\n    extent[0] -= deltaX;\n    extent[2] += deltaX;\n    extent[1] -= deltaY;\n    extent[3] += deltaY;\n}\n/**\n * Determine if the segment between two coordinates intersects (crosses,\n * touches, or is contained by) the provided extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} start Segment start coordinate.\n * @param {import(\"./coordinate.js\").Coordinate} end Segment end coordinate.\n * @return {boolean} The segment intersects the extent.\n */\nexport function intersectsSegment(extent, start, end) {\n    var intersects = false;\n    var startRel = coordinateRelationship(extent, start);\n    var endRel = coordinateRelationship(extent, end);\n    if (startRel === Relationship.INTERSECTING ||\n        endRel === Relationship.INTERSECTING) {\n        intersects = true;\n    }\n    else {\n        var minX = extent[0];\n        var minY = extent[1];\n        var maxX = extent[2];\n        var maxY = extent[3];\n        var startX = start[0];\n        var startY = start[1];\n        var endX = end[0];\n        var endY = end[1];\n        var slope = (endY - startY) / (endX - startX);\n        var x = void 0, y = void 0;\n        if (!!(endRel & Relationship.ABOVE) &&\n            !(startRel & Relationship.ABOVE)) {\n            // potentially intersects top\n            x = endX - ((endY - maxY) / slope);\n            intersects = x >= minX && x <= maxX;\n        }\n        if (!intersects && !!(endRel & Relationship.RIGHT) &&\n            !(startRel & Relationship.RIGHT)) {\n            // potentially intersects right\n            y = endY - ((endX - maxX) * slope);\n            intersects = y >= minY && y <= maxY;\n        }\n        if (!intersects && !!(endRel & Relationship.BELOW) &&\n            !(startRel & Relationship.BELOW)) {\n            // potentially intersects bottom\n            x = endX - ((endY - minY) / slope);\n            intersects = x >= minX && x <= maxX;\n        }\n        if (!intersects && !!(endRel & Relationship.LEFT) &&\n            !(startRel & Relationship.LEFT)) {\n            // potentially intersects left\n            y = endY - ((endX - minX) * slope);\n            intersects = y >= minY && y <= maxY;\n        }\n    }\n    return intersects;\n}\n/**\n * Apply a transform function to the extent.\n * @param {Extent} extent Extent.\n * @param {import(\"./proj.js\").TransformFunction} transformFn Transform function.\n * Called with `[minX, minY, maxX, maxY]` extent coordinates.\n * @param {Extent=} opt_extent Destination extent.\n * @return {Extent} Extent.\n * @api\n */\nexport function applyTransform(extent, transformFn, opt_extent) {\n    var coordinates = [\n        extent[0], extent[1],\n        extent[0], extent[3],\n        extent[2], extent[1],\n        extent[2], extent[3]\n    ];\n    transformFn(coordinates, coordinates, 2);\n    var xs = [coordinates[0], coordinates[2], coordinates[4], coordinates[6]];\n    var ys = [coordinates[1], coordinates[3], coordinates[5], coordinates[7]];\n    return _boundingExtentXYs(xs, ys, opt_extent);\n}\n//# sourceMappingURL=extent.js.map","/**\n * @module ol/resolutionconstraint\n */\nimport { linearFindNearest } from './array.js';\nimport { getHeight, getWidth } from './extent';\nimport { clamp } from './math';\n/**\n * @typedef {function((number|undefined), number, import(\"./size.js\").Size, boolean=): (number|undefined)} Type\n */\n/**\n * Returns a modified resolution taking into acocunt the viewport size and maximum\n * allowed extent.\n * @param {number} resolution Resolution\n * @param {import(\"./extent.js\").Extent=} maxExtent Maximum allowed extent.\n * @param {import(\"./size.js\").Size} viewportSize Viewport size.\n * @return {number} Capped resolution.\n */\nfunction getViewportClampedResolution(resolution, maxExtent, viewportSize) {\n    var xResolution = getWidth(maxExtent) / viewportSize[0];\n    var yResolution = getHeight(maxExtent) / viewportSize[1];\n    return Math.min(resolution, Math.min(xResolution, yResolution));\n}\n/**\n * Returns a modified resolution to be between maxResolution and minResolution while\n * still allowing the value to be slightly out of bounds.\n * Note: the computation is based on the logarithm function (ln):\n *  - at 1, ln(x) is 0\n *  - above 1, ln(x) keeps increasing but at a much slower pace than x\n * The final result is clamped to prevent getting too far away from bounds.\n * @param {number} resolution Resolution.\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @return {number} Smoothed resolution.\n */\nfunction getSmoothClampedResolution(resolution, maxResolution, minResolution) {\n    var result = Math.min(resolution, maxResolution);\n    var ratio = 50;\n    result *= Math.log(1 + ratio * Math.max(0, resolution / maxResolution - 1)) / ratio + 1;\n    if (minResolution) {\n        result = Math.max(result, minResolution);\n        result /= Math.log(1 + ratio * Math.max(0, minResolution / resolution - 1)) / ratio + 1;\n    }\n    return clamp(result, minResolution / 2, maxResolution * 2);\n}\n/**\n * @param {Array<number>} resolutions Resolutions.\n * @param {boolean=} opt_smooth If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent=} opt_maxExtent Maximum allowed extent.\n * @return {Type} Zoom function.\n */\nexport function createSnapToResolutions(resolutions, opt_smooth, opt_maxExtent) {\n    return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean=} opt_isMoving True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, opt_isMoving) {\n        if (resolution !== undefined) {\n            var maxResolution = resolutions[0];\n            var minResolution = resolutions[resolutions.length - 1];\n            var cappedMaxRes = opt_maxExtent ?\n                getViewportClampedResolution(maxResolution, opt_maxExtent, size) :\n                maxResolution;\n            // during interacting or animating, allow intermediary values\n            if (opt_isMoving) {\n                var smooth = opt_smooth !== undefined ? opt_smooth : true;\n                if (!smooth) {\n                    return clamp(resolution, minResolution, cappedMaxRes);\n                }\n                return getSmoothClampedResolution(resolution, cappedMaxRes, minResolution);\n            }\n            var capped = Math.min(cappedMaxRes, resolution);\n            var z = Math.floor(linearFindNearest(resolutions, capped, direction));\n            return resolutions[z];\n        }\n        else {\n            return undefined;\n        }\n    });\n}\n/**\n * @param {number} power Power.\n * @param {number} maxResolution Maximum resolution.\n * @param {number=} opt_minResolution Minimum resolution.\n * @param {boolean=} opt_smooth If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent=} opt_maxExtent Maximum allowed extent.\n * @return {Type} Zoom function.\n */\nexport function createSnapToPower(power, maxResolution, opt_minResolution, opt_smooth, opt_maxExtent) {\n    return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean=} opt_isMoving True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, opt_isMoving) {\n        if (resolution !== undefined) {\n            var cappedMaxRes = opt_maxExtent ?\n                getViewportClampedResolution(maxResolution, opt_maxExtent, size) :\n                maxResolution;\n            var minResolution = opt_minResolution !== undefined ? opt_minResolution : 0;\n            // during interacting or animating, allow intermediary values\n            if (opt_isMoving) {\n                var smooth = opt_smooth !== undefined ? opt_smooth : true;\n                if (!smooth) {\n                    return clamp(resolution, minResolution, cappedMaxRes);\n                }\n                return getSmoothClampedResolution(resolution, cappedMaxRes, minResolution);\n            }\n            var offset = -direction * (0.5 - 1e-9) + 0.5;\n            var capped = Math.min(cappedMaxRes, resolution);\n            var zoomLevel = Math.floor(Math.log(maxResolution / capped) / Math.log(power) + offset);\n            var newResolution = maxResolution / Math.pow(power, zoomLevel);\n            return clamp(newResolution, minResolution, cappedMaxRes);\n        }\n        else {\n            return undefined;\n        }\n    });\n}\n/**\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @param {boolean=} opt_smooth If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent=} opt_maxExtent Maximum allowed extent.\n * @return {Type} Zoom function.\n */\nexport function createMinMaxResolution(maxResolution, minResolution, opt_smooth, opt_maxExtent) {\n    return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean=} opt_isMoving True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, opt_isMoving) {\n        if (resolution !== undefined) {\n            var cappedMaxRes = opt_maxExtent ?\n                getViewportClampedResolution(maxResolution, opt_maxExtent, size) :\n                maxResolution;\n            var smooth = opt_smooth !== undefined ? opt_smooth : true;\n            if (!smooth || !opt_isMoving) {\n                return clamp(resolution, minResolution, cappedMaxRes);\n            }\n            return getSmoothClampedResolution(resolution, cappedMaxRes, minResolution);\n        }\n        else {\n            return undefined;\n        }\n    });\n}\n//# sourceMappingURL=resolutionconstraint.js.map","/**\n * @module ol/rotationconstraint\n */\nimport { toRadians } from './math.js';\n/**\n * @typedef {function((number|undefined), boolean=): (number|undefined)} Type\n */\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function disable(rotation) {\n    if (rotation !== undefined) {\n        return 0;\n    }\n    else {\n        return undefined;\n    }\n}\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function none(rotation) {\n    if (rotation !== undefined) {\n        return rotation;\n    }\n    else {\n        return undefined;\n    }\n}\n/**\n * @param {number} n N.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToN(n) {\n    var theta = 2 * Math.PI / n;\n    return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean=} opt_isMoving True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, opt_isMoving) {\n        if (opt_isMoving) {\n            return rotation;\n        }\n        if (rotation !== undefined) {\n            rotation = Math.floor(rotation / theta + 0.5) * theta;\n            return rotation;\n        }\n        else {\n            return undefined;\n        }\n    });\n}\n/**\n * @param {number=} opt_tolerance Tolerance.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToZero(opt_tolerance) {\n    var tolerance = opt_tolerance || toRadians(5);\n    return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean} opt_isMoving True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, opt_isMoving) {\n        if (opt_isMoving) {\n            return rotation;\n        }\n        if (rotation !== undefined) {\n            if (Math.abs(rotation) <= tolerance) {\n                return 0;\n            }\n            else {\n                return rotation;\n            }\n        }\n        else {\n            return undefined;\n        }\n    });\n}\n//# sourceMappingURL=rotationconstraint.js.map","/**\n * @module ol/ViewHint\n */\n/**\n * @enum {number}\n */\nexport default {\n    ANIMATING: 0,\n    INTERACTING: 1\n};\n//# sourceMappingURL=ViewHint.js.map","/**\n * @module ol/ViewProperty\n */\n/**\n * @enum {string}\n */\nexport default {\n    CENTER: 'center',\n    RESOLUTION: 'resolution',\n    ROTATION: 'rotation'\n};\n//# sourceMappingURL=ViewProperty.js.map","/**\n * @module ol/coordinate\n */\nimport { modulo } from './math.js';\nimport { padNumber } from './string.js';\n/**\n * An array of numbers representing an xy coordinate. Example: `[16, 48]`.\n * @typedef {Array<number>} Coordinate\n * @api\n */\n/**\n * A function that takes a {@link module:ol/coordinate~Coordinate} and\n * transforms it into a `{string}`.\n *\n * @typedef {function((Coordinate|undefined)): string} CoordinateFormat\n * @api\n */\n/**\n * Add `delta` to `coordinate`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {add} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     add(coord, [-2, 4]);\n *     // coord is now [5.85, 51.983333]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {Coordinate} delta Delta.\n * @return {Coordinate} The input coordinate adjusted by\n * the given delta.\n * @api\n */\nexport function add(coordinate, delta) {\n    coordinate[0] += +delta[0];\n    coordinate[1] += +delta[1];\n    return coordinate;\n}\n/**\n * Calculates the point closest to the passed coordinate on the passed circle.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {import(\"./geom/Circle.js\").default} circle The circle.\n * @return {Coordinate} Closest point on the circumference.\n */\nexport function closestOnCircle(coordinate, circle) {\n    var r = circle.getRadius();\n    var center = circle.getCenter();\n    var x0 = center[0];\n    var y0 = center[1];\n    var x1 = coordinate[0];\n    var y1 = coordinate[1];\n    var dx = x1 - x0;\n    var dy = y1 - y0;\n    if (dx === 0 && dy === 0) {\n        dx = 1;\n    }\n    var d = Math.sqrt(dx * dx + dy * dy);\n    var x = x0 + r * dx / d;\n    var y = y0 + r * dy / d;\n    return [x, y];\n}\n/**\n * Calculates the point closest to the passed coordinate on the passed segment.\n * This is the foot of the perpendicular of the coordinate to the segment when\n * the foot is on the segment, or the closest segment coordinate when the foot\n * is outside the segment.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {Array<Coordinate>} segment The two coordinates\n * of the segment.\n * @return {Coordinate} The foot of the perpendicular of\n * the coordinate to the segment.\n */\nexport function closestOnSegment(coordinate, segment) {\n    var x0 = coordinate[0];\n    var y0 = coordinate[1];\n    var start = segment[0];\n    var end = segment[1];\n    var x1 = start[0];\n    var y1 = start[1];\n    var x2 = end[0];\n    var y2 = end[1];\n    var dx = x2 - x1;\n    var dy = y2 - y1;\n    var along = (dx === 0 && dy === 0) ? 0 :\n        ((dx * (x0 - x1)) + (dy * (y0 - y1))) / ((dx * dx + dy * dy) || 0);\n    var x, y;\n    if (along <= 0) {\n        x = x1;\n        y = y1;\n    }\n    else if (along >= 1) {\n        x = x2;\n        y = y2;\n    }\n    else {\n        x = x1 + along * dx;\n        y = y1 + along * dy;\n    }\n    return [x, y];\n}\n/**\n * Returns a {@link module:ol/coordinate~CoordinateFormat} function that can be\n * used to format\n * a {Coordinate} to a string.\n *\n * Example without specifying the fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var stringifyFunc = createStringXY();\n *     var out = stringifyFunc(coord);\n *     // out is now '8, 48'\n *\n * Example with explicitly specifying 2 fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var stringifyFunc = createStringXY(2);\n *     var out = stringifyFunc(coord);\n *     // out is now '7.85, 47.98'\n *\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {CoordinateFormat} Coordinate format.\n * @api\n */\nexport function createStringXY(opt_fractionDigits) {\n    return (\n    /**\n     * @param {Coordinate} coordinate Coordinate.\n     * @return {string} String XY.\n     */\n    function (coordinate) {\n        return toStringXY(coordinate, opt_fractionDigits);\n    });\n}\n/**\n * @param {string} hemispheres Hemispheres.\n * @param {number} degrees Degrees.\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} String.\n */\nexport function degreesToStringHDMS(hemispheres, degrees, opt_fractionDigits) {\n    var normalizedDegrees = modulo(degrees + 180, 360) - 180;\n    var x = Math.abs(3600 * normalizedDegrees);\n    var dflPrecision = opt_fractionDigits || 0;\n    var precision = Math.pow(10, dflPrecision);\n    var deg = Math.floor(x / 3600);\n    var min = Math.floor((x - deg * 3600) / 60);\n    var sec = x - (deg * 3600) - (min * 60);\n    sec = Math.ceil(sec * precision) / precision;\n    if (sec >= 60) {\n        sec = 0;\n        min += 1;\n    }\n    if (min >= 60) {\n        min = 0;\n        deg += 1;\n    }\n    return deg + '\\u00b0 ' + padNumber(min, 2) + '\\u2032 ' +\n        padNumber(sec, 2, dflPrecision) + '\\u2033' +\n        (normalizedDegrees == 0 ? '' : ' ' + hemispheres.charAt(normalizedDegrees < 0 ? 1 : 0));\n}\n/**\n * Transforms the given {@link module:ol/coordinate~Coordinate} to a string\n * using the given string template. The strings `{x}` and `{y}` in the template\n * will be replaced with the first and second coordinate values respectively.\n *\n * Example without specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var template = 'Coordinate is ({x}|{y}).';\n *     var out = format(coord, template);\n *     // out is now 'Coordinate is (8|48).'\n *\n * Example explicitly specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var template = 'Coordinate is ({x}|{y}).';\n *     var out = format(coord, template, 2);\n *     // out is now 'Coordinate is (7.85|47.98).'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {string} template A template string with `{x}` and `{y}` placeholders\n *     that will be replaced by first and second coordinate values.\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Formatted coordinate.\n * @api\n */\nexport function format(coordinate, template, opt_fractionDigits) {\n    if (coordinate) {\n        return template\n            .replace('{x}', coordinate[0].toFixed(opt_fractionDigits))\n            .replace('{y}', coordinate[1].toFixed(opt_fractionDigits));\n    }\n    else {\n        return '';\n    }\n}\n/**\n * @param {Coordinate} coordinate1 First coordinate.\n * @param {Coordinate} coordinate2 Second coordinate.\n * @return {boolean} The two coordinates are equal.\n */\nexport function equals(coordinate1, coordinate2) {\n    var equals = true;\n    for (var i = coordinate1.length - 1; i >= 0; --i) {\n        if (coordinate1[i] != coordinate2[i]) {\n            equals = false;\n            break;\n        }\n    }\n    return equals;\n}\n/**\n * Rotate `coordinate` by `angle`. `coordinate` is modified in place and\n * returned by the function.\n *\n * Example:\n *\n *     import {rotate} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var rotateRadians = Math.PI / 2; // 90 degrees\n *     rotate(coord, rotateRadians);\n *     // coord is now [-47.983333, 7.85]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} angle Angle in radian.\n * @return {Coordinate} Coordinate.\n * @api\n */\nexport function rotate(coordinate, angle) {\n    var cosAngle = Math.cos(angle);\n    var sinAngle = Math.sin(angle);\n    var x = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n    var y = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n    coordinate[0] = x;\n    coordinate[1] = y;\n    return coordinate;\n}\n/**\n * Scale `coordinate` by `scale`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {scale as scaleCoordinate} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var scale = 1.2;\n *     scaleCoordinate(coord, scale);\n *     // coord is now [9.42, 57.5799996]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} scale Scale factor.\n * @return {Coordinate} Coordinate.\n */\nexport function scale(coordinate, scale) {\n    coordinate[0] *= scale;\n    coordinate[1] *= scale;\n    return coordinate;\n}\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Squared distance between coord1 and coord2.\n */\nexport function squaredDistance(coord1, coord2) {\n    var dx = coord1[0] - coord2[0];\n    var dy = coord1[1] - coord2[1];\n    return dx * dx + dy * dy;\n}\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Distance between coord1 and coord2.\n */\nexport function distance(coord1, coord2) {\n    return Math.sqrt(squaredDistance(coord1, coord2));\n}\n/**\n * Calculate the squared distance from a coordinate to a line segment.\n *\n * @param {Coordinate} coordinate Coordinate of the point.\n * @param {Array<Coordinate>} segment Line segment (2\n * coordinates).\n * @return {number} Squared distance from the point to the line segment.\n */\nexport function squaredDistanceToSegment(coordinate, segment) {\n    return squaredDistance(coordinate, closestOnSegment(coordinate, segment));\n}\n/**\n * Format a geographic coordinate with the hemisphere, degrees, minutes, and\n * seconds.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringHDMS} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringHDMS(coord);\n *     // out is now '47° 58′ 60″ N 7° 50′ 60″ E'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringHDMS} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringHDMS(coord, 1);\n *     // out is now '47° 58′ 60.0″ N 7° 50′ 60.0″ E'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Hemisphere, degrees, minutes and seconds.\n * @api\n */\nexport function toStringHDMS(coordinate, opt_fractionDigits) {\n    if (coordinate) {\n        return degreesToStringHDMS('NS', coordinate[1], opt_fractionDigits) + ' ' +\n            degreesToStringHDMS('EW', coordinate[0], opt_fractionDigits);\n    }\n    else {\n        return '';\n    }\n}\n/**\n * Format a coordinate as a comma delimited string.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringXY(coord);\n *     // out is now '8, 48'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringXY(coord, 1);\n *     // out is now '7.8, 48.0'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} XY.\n * @api\n */\nexport function toStringXY(coordinate, opt_fractionDigits) {\n    return format(coordinate, '{x}, {y}', opt_fractionDigits);\n}\n//# sourceMappingURL=coordinate.js.map","/**\n * @module ol/easing\n */\n/**\n * Start slow and speed up.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeIn(t) {\n    return Math.pow(t, 3);\n}\n/**\n * Start fast and slow down.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeOut(t) {\n    return 1 - easeIn(1 - t);\n}\n/**\n * Start slow, speed up, and then slow down again.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function inAndOut(t) {\n    return 3 * t * t - 2 * t * t * t;\n}\n/**\n * Maintain a constant speed over time.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function linear(t) {\n    return t;\n}\n/**\n * Start slow, speed up, and at the very end slow down again.  This has the\n * same general behavior as {@link module:ol/easing~inAndOut}, but the final\n * slowdown is delayed.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function upAndDown(t) {\n    if (t < 0.5) {\n        return inAndOut(2 * t);\n    }\n    else {\n        return 1 - inAndOut(2 * (t - 0.5));\n    }\n}\n//# sourceMappingURL=easing.js.map","/**\n * @module ol/geom/GeometryType\n */\n/**\n * The geometry type. One of `'Point'`, `'LineString'`, `'LinearRing'`,\n * `'Polygon'`, `'MultiPoint'`, `'MultiLineString'`, `'MultiPolygon'`,\n * `'GeometryCollection'`, `'Circle'`.\n * @enum {string}\n */\nexport default {\n    POINT: 'Point',\n    LINE_STRING: 'LineString',\n    LINEAR_RING: 'LinearRing',\n    POLYGON: 'Polygon',\n    MULTI_POINT: 'MultiPoint',\n    MULTI_LINE_STRING: 'MultiLineString',\n    MULTI_POLYGON: 'MultiPolygon',\n    GEOMETRY_COLLECTION: 'GeometryCollection',\n    CIRCLE: 'Circle'\n};\n//# sourceMappingURL=GeometryType.js.map","/**\n * @module ol/geom/GeometryLayout\n */\n/**\n * The coordinate layout for geometries, indicating whether a 3rd or 4th z ('Z')\n * or measure ('M') coordinate is available. Supported values are `'XY'`,\n * `'XYZ'`, `'XYM'`, `'XYZM'`.\n * @enum {string}\n */\nexport default {\n    XY: 'XY',\n    XYZ: 'XYZ',\n    XYM: 'XYM',\n    XYZM: 'XYZM'\n};\n//# sourceMappingURL=GeometryLayout.js.map","/**\n * @module ol/geom/flat/transform\n */\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../transform.js\").Transform} transform Transform.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function transform2D(flatCoordinates, offset, end, stride, transform, opt_dest) {\n    var dest = opt_dest ? opt_dest : [];\n    var i = 0;\n    for (var j = offset; j < end; j += stride) {\n        var x = flatCoordinates[j];\n        var y = flatCoordinates[j + 1];\n        dest[i++] = transform[0] * x + transform[2] * y + transform[4];\n        dest[i++] = transform[1] * x + transform[3] * y + transform[5];\n    }\n    if (opt_dest && dest.length != i) {\n        dest.length = i;\n    }\n    return dest;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} angle Angle.\n * @param {Array<number>} anchor Rotation anchor point.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function rotate(flatCoordinates, offset, end, stride, angle, anchor, opt_dest) {\n    var dest = opt_dest ? opt_dest : [];\n    var cos = Math.cos(angle);\n    var sin = Math.sin(angle);\n    var anchorX = anchor[0];\n    var anchorY = anchor[1];\n    var i = 0;\n    for (var j = offset; j < end; j += stride) {\n        var deltaX = flatCoordinates[j] - anchorX;\n        var deltaY = flatCoordinates[j + 1] - anchorY;\n        dest[i++] = anchorX + deltaX * cos - deltaY * sin;\n        dest[i++] = anchorY + deltaX * sin + deltaY * cos;\n        for (var k = j + 2; k < j + stride; ++k) {\n            dest[i++] = flatCoordinates[k];\n        }\n    }\n    if (opt_dest && dest.length != i) {\n        dest.length = i;\n    }\n    return dest;\n}\n/**\n * Scale the coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} sx Scale factor in the x-direction.\n * @param {number} sy Scale factor in the y-direction.\n * @param {Array<number>} anchor Scale anchor point.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function scale(flatCoordinates, offset, end, stride, sx, sy, anchor, opt_dest) {\n    var dest = opt_dest ? opt_dest : [];\n    var anchorX = anchor[0];\n    var anchorY = anchor[1];\n    var i = 0;\n    for (var j = offset; j < end; j += stride) {\n        var deltaX = flatCoordinates[j] - anchorX;\n        var deltaY = flatCoordinates[j + 1] - anchorY;\n        dest[i++] = anchorX + sx * deltaX;\n        dest[i++] = anchorY + sy * deltaY;\n        for (var k = j + 2; k < j + stride; ++k) {\n            dest[i++] = flatCoordinates[k];\n        }\n    }\n    if (opt_dest && dest.length != i) {\n        dest.length = i;\n    }\n    return dest;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} deltaX Delta X.\n * @param {number} deltaY Delta Y.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function translate(flatCoordinates, offset, end, stride, deltaX, deltaY, opt_dest) {\n    var dest = opt_dest ? opt_dest : [];\n    var i = 0;\n    for (var j = offset; j < end; j += stride) {\n        dest[i++] = flatCoordinates[j] + deltaX;\n        dest[i++] = flatCoordinates[j + 1] + deltaY;\n        for (var k = j + 2; k < j + stride; ++k) {\n            dest[i++] = flatCoordinates[k];\n        }\n    }\n    if (opt_dest && dest.length != i) {\n        dest.length = i;\n    }\n    return dest;\n}\n//# sourceMappingURL=transform.js.map","/**\n * @license\n * Latitude/longitude spherical geodesy formulae taken from\n * http://www.movable-type.co.uk/scripts/latlong.html\n * Licensed under CC-BY-3.0.\n */\n/**\n * @module ol/sphere\n */\nimport { toRadians, toDegrees } from './math.js';\nimport GeometryType from './geom/GeometryType.js';\n/**\n * Object literal with options for the {@link getLength} or {@link getArea}\n * functions.\n * @typedef {Object} SphereMetricOptions\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857']\n * Projection of the  geometry.  By default, the geometry is assumed to be in\n * Web Mercator.\n * @property {number} [radius=6371008.8] Sphere radius.  By default, the radius of the\n * earth is used (Clarke 1866 Authalic Sphere).\n */\n/**\n * The mean Earth radius (1/3 * (2a + b)) for the WGS84 ellipsoid.\n * https://en.wikipedia.org/wiki/Earth_radius#Mean_radius\n * @type {number}\n */\nexport var DEFAULT_RADIUS = 6371008.8;\n/**\n * Get the great circle distance (in meters) between two geographic coordinates.\n * @param {Array} c1 Starting coordinate.\n * @param {Array} c2 Ending coordinate.\n * @param {number=} opt_radius The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {number} The great circle distance between the points (in meters).\n * @api\n */\nexport function getDistance(c1, c2, opt_radius) {\n    var radius = opt_radius || DEFAULT_RADIUS;\n    var lat1 = toRadians(c1[1]);\n    var lat2 = toRadians(c2[1]);\n    var deltaLatBy2 = (lat2 - lat1) / 2;\n    var deltaLonBy2 = toRadians(c2[0] - c1[0]) / 2;\n    var a = Math.sin(deltaLatBy2) * Math.sin(deltaLatBy2) +\n        Math.sin(deltaLonBy2) * Math.sin(deltaLonBy2) *\n            Math.cos(lat1) * Math.cos(lat2);\n    return 2 * radius * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n}\n/**\n * Get the cumulative great circle length of linestring coordinates (geographic).\n * @param {Array} coordinates Linestring coordinates.\n * @param {number} radius The sphere radius to use.\n * @return {number} The length (in meters).\n */\nfunction getLengthInternal(coordinates, radius) {\n    var length = 0;\n    for (var i = 0, ii = coordinates.length; i < ii - 1; ++i) {\n        length += getDistance(coordinates[i], coordinates[i + 1], radius);\n    }\n    return length;\n}\n/**\n * Get the spherical length of a geometry.  This length is the sum of the\n * great circle distances between coordinates.  For polygons, the length is\n * the sum of all rings.  For points, the length is zero.  For multi-part\n * geometries, the length is the sum of the length of each part.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions=} opt_options Options for the\n * length calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n * You can change this by providing a `projection` option.\n * @return {number} The spherical length (in meters).\n * @api\n */\nexport function getLength(geometry, opt_options) {\n    var options = opt_options || {};\n    var radius = options.radius || DEFAULT_RADIUS;\n    var projection = options.projection || 'EPSG:3857';\n    var type = geometry.getType();\n    if (type !== GeometryType.GEOMETRY_COLLECTION) {\n        geometry = geometry.clone().transform(projection, 'EPSG:4326');\n    }\n    var length = 0;\n    var coordinates, coords, i, ii, j, jj;\n    switch (type) {\n        case GeometryType.POINT:\n        case GeometryType.MULTI_POINT: {\n            break;\n        }\n        case GeometryType.LINE_STRING:\n        case GeometryType.LINEAR_RING: {\n            coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometry).getCoordinates();\n            length = getLengthInternal(coordinates, radius);\n            break;\n        }\n        case GeometryType.MULTI_LINE_STRING:\n        case GeometryType.POLYGON: {\n            coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometry).getCoordinates();\n            for (i = 0, ii = coordinates.length; i < ii; ++i) {\n                length += getLengthInternal(coordinates[i], radius);\n            }\n            break;\n        }\n        case GeometryType.MULTI_POLYGON: {\n            coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometry).getCoordinates();\n            for (i = 0, ii = coordinates.length; i < ii; ++i) {\n                coords = coordinates[i];\n                for (j = 0, jj = coords.length; j < jj; ++j) {\n                    length += getLengthInternal(coords[j], radius);\n                }\n            }\n            break;\n        }\n        case GeometryType.GEOMETRY_COLLECTION: {\n            var geometries = /** @type {import(\"./geom/GeometryCollection.js\").default} */ (geometry).getGeometries();\n            for (i = 0, ii = geometries.length; i < ii; ++i) {\n                length += getLength(geometries[i], opt_options);\n            }\n            break;\n        }\n        default: {\n            throw new Error('Unsupported geometry type: ' + type);\n        }\n    }\n    return length;\n}\n/**\n * Returns the spherical area for a list of coordinates.\n *\n * [Reference](https://trs-new.jpl.nasa.gov/handle/2014/40409)\n * Robert. G. Chamberlain and William H. Duquette, \"Some Algorithms for\n * Polygons on a Sphere\", JPL Publication 07-03, Jet Propulsion\n * Laboratory, Pasadena, CA, June 2007\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates List of coordinates of a linear\n * ring. If the ring is oriented clockwise, the area will be positive,\n * otherwise it will be negative.\n * @param {number} radius The sphere radius.\n * @return {number} Area (in square meters).\n */\nfunction getAreaInternal(coordinates, radius) {\n    var area = 0;\n    var len = coordinates.length;\n    var x1 = coordinates[len - 1][0];\n    var y1 = coordinates[len - 1][1];\n    for (var i = 0; i < len; i++) {\n        var x2 = coordinates[i][0];\n        var y2 = coordinates[i][1];\n        area += toRadians(x2 - x1) *\n            (2 + Math.sin(toRadians(y1)) +\n                Math.sin(toRadians(y2)));\n        x1 = x2;\n        y1 = y2;\n    }\n    return area * radius * radius / 2.0;\n}\n/**\n * Get the spherical area of a geometry.  This is the area (in meters) assuming\n * that polygon edges are segments of great circles on a sphere.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions=} opt_options Options for the area\n *     calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n *     You can change this by providing a `projection` option.\n * @return {number} The spherical area (in square meters).\n * @api\n */\nexport function getArea(geometry, opt_options) {\n    var options = opt_options || {};\n    var radius = options.radius || DEFAULT_RADIUS;\n    var projection = options.projection || 'EPSG:3857';\n    var type = geometry.getType();\n    if (type !== GeometryType.GEOMETRY_COLLECTION) {\n        geometry = geometry.clone().transform(projection, 'EPSG:4326');\n    }\n    var area = 0;\n    var coordinates, coords, i, ii, j, jj;\n    switch (type) {\n        case GeometryType.POINT:\n        case GeometryType.MULTI_POINT:\n        case GeometryType.LINE_STRING:\n        case GeometryType.MULTI_LINE_STRING:\n        case GeometryType.LINEAR_RING: {\n            break;\n        }\n        case GeometryType.POLYGON: {\n            coordinates = /** @type {import(\"./geom/Polygon.js\").default} */ (geometry).getCoordinates();\n            area = Math.abs(getAreaInternal(coordinates[0], radius));\n            for (i = 1, ii = coordinates.length; i < ii; ++i) {\n                area -= Math.abs(getAreaInternal(coordinates[i], radius));\n            }\n            break;\n        }\n        case GeometryType.MULTI_POLYGON: {\n            coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometry).getCoordinates();\n            for (i = 0, ii = coordinates.length; i < ii; ++i) {\n                coords = coordinates[i];\n                area += Math.abs(getAreaInternal(coords[0], radius));\n                for (j = 1, jj = coords.length; j < jj; ++j) {\n                    area -= Math.abs(getAreaInternal(coords[j], radius));\n                }\n            }\n            break;\n        }\n        case GeometryType.GEOMETRY_COLLECTION: {\n            var geometries = /** @type {import(\"./geom/GeometryCollection.js\").default} */ (geometry).getGeometries();\n            for (i = 0, ii = geometries.length; i < ii; ++i) {\n                area += getArea(geometries[i], opt_options);\n            }\n            break;\n        }\n        default: {\n            throw new Error('Unsupported geometry type: ' + type);\n        }\n    }\n    return area;\n}\n/**\n * Returns the coordinate at the given distance and bearing from `c1`.\n *\n * @param {import(\"./coordinate.js\").Coordinate} c1 The origin point (`[lon, lat]` in degrees).\n * @param {number} distance The great-circle distance between the origin\n *     point and the target point.\n * @param {number} bearing The bearing (in radians).\n * @param {number=} opt_radius The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {import(\"./coordinate.js\").Coordinate} The target point.\n */\nexport function offset(c1, distance, bearing, opt_radius) {\n    var radius = opt_radius || DEFAULT_RADIUS;\n    var lat1 = toRadians(c1[1]);\n    var lon1 = toRadians(c1[0]);\n    var dByR = distance / radius;\n    var lat = Math.asin(Math.sin(lat1) * Math.cos(dByR) +\n        Math.cos(lat1) * Math.sin(dByR) * Math.cos(bearing));\n    var lon = lon1 + Math.atan2(Math.sin(bearing) * Math.sin(dByR) * Math.cos(lat1), Math.cos(dByR) - Math.sin(lat1) * Math.sin(lat));\n    return [toDegrees(lon), toDegrees(lat)];\n}\n//# sourceMappingURL=sphere.js.map","/**\n * @module ol/proj/Units\n */\n/**\n * Projection units: `'degrees'`, `'ft'`, `'m'`, `'pixels'`, `'tile-pixels'` or\n * `'us-ft'`.\n * @enum {string}\n */\nvar Units = {\n    DEGREES: 'degrees',\n    FEET: 'ft',\n    METERS: 'm',\n    PIXELS: 'pixels',\n    TILE_PIXELS: 'tile-pixels',\n    USFEET: 'us-ft'\n};\n/**\n * Meters per unit lookup table.\n * @const\n * @type {Object<Units, number>}\n * @api\n */\nexport var METERS_PER_UNIT = {};\n// use the radius of the Normal sphere\nMETERS_PER_UNIT[Units.DEGREES] = 2 * Math.PI * 6370997 / 360;\nMETERS_PER_UNIT[Units.FEET] = 0.3048;\nMETERS_PER_UNIT[Units.METERS] = 1;\nMETERS_PER_UNIT[Units.USFEET] = 1200 / 3937;\nexport default Units;\n//# sourceMappingURL=Units.js.map","/**\n * @module ol/proj/Projection\n */\nimport { METERS_PER_UNIT } from './Units.js';\n/**\n * @typedef {Object} Options\n * @property {string} code The SRS identifier code, e.g. `EPSG:4326`.\n * @property {import(\"./Units.js\").default|string} [units] Units. Required unless a\n * proj4 projection is defined for `code`.\n * @property {import(\"../extent.js\").Extent} [extent] The validity extent for the SRS.\n * @property {string} [axisOrientation='enu'] The axis orientation as specified in Proj4.\n * @property {boolean} [global=false] Whether the projection is valid for the whole globe.\n * @property {number} [metersPerUnit] The meters per unit for the SRS.\n * If not provided, the `units` are used to get the meters per unit from the {@link module:ol/proj/Units~METERS_PER_UNIT}\n * lookup table.\n * @property {import(\"../extent.js\").Extent} [worldExtent] The world extent for the SRS.\n * @property {function(number, import(\"../coordinate.js\").Coordinate):number} [getPointResolution]\n * Function to determine resolution at a point. The function is called with a\n * `{number}` view resolution and an `{import(\"../coordinate.js\").Coordinate}` as arguments, and returns\n * the `{number}` resolution in projection units at the passed coordinate. If this is `undefined`,\n * the default {@link module:ol/proj#getPointResolution} function will be used.\n */\n/**\n * @classdesc\n * Projection definition class. One of these is created for each projection\n * supported in the application and stored in the {@link module:ol/proj} namespace.\n * You can use these in applications, but this is not required, as API params\n * and options use {@link module:ol/proj~ProjectionLike} which means the simple string\n * code will suffice.\n *\n * You can use {@link module:ol/proj~get} to retrieve the object for a particular\n * projection.\n *\n * The library includes definitions for `EPSG:4326` and `EPSG:3857`, together\n * with the following aliases:\n * * `EPSG:4326`: CRS:84, urn:ogc:def:crs:EPSG:6.6:4326,\n *     urn:ogc:def:crs:OGC:1.3:CRS84, urn:ogc:def:crs:OGC:2:84,\n *     http://www.opengis.net/gml/srs/epsg.xml#4326,\n *     urn:x-ogc:def:crs:EPSG:4326\n * * `EPSG:3857`: EPSG:102100, EPSG:102113, EPSG:900913,\n *     urn:ogc:def:crs:EPSG:6.18:3:3857,\n *     http://www.opengis.net/gml/srs/epsg.xml#3857\n *\n * If you use [proj4js](https://github.com/proj4js/proj4js), aliases can\n * be added using `proj4.defs()`. After all required projection definitions are\n * added, call the {@link module:ol/proj/proj4~register} function.\n *\n * @api\n */\nvar Projection = /** @class */ (function () {\n    /**\n     * @param {Options} options Projection options.\n     */\n    function Projection(options) {\n        /**\n         * @private\n         * @type {string}\n         */\n        this.code_ = options.code;\n        /**\n         * Units of projected coordinates. When set to `TILE_PIXELS`, a\n         * `this.extent_` and `this.worldExtent_` must be configured properly for each\n         * tile.\n         * @private\n         * @type {import(\"./Units.js\").default}\n         */\n        this.units_ = /** @type {import(\"./Units.js\").default} */ (options.units);\n        /**\n         * Validity extent of the projection in projected coordinates. For projections\n         * with `TILE_PIXELS` units, this is the extent of the tile in\n         * tile pixel space.\n         * @private\n         * @type {import(\"../extent.js\").Extent}\n         */\n        this.extent_ = options.extent !== undefined ? options.extent : null;\n        /**\n         * Extent of the world in EPSG:4326. For projections with\n         * `TILE_PIXELS` units, this is the extent of the tile in\n         * projected coordinate space.\n         * @private\n         * @type {import(\"../extent.js\").Extent}\n         */\n        this.worldExtent_ = options.worldExtent !== undefined ?\n            options.worldExtent : null;\n        /**\n         * @private\n         * @type {string}\n         */\n        this.axisOrientation_ = options.axisOrientation !== undefined ?\n            options.axisOrientation : 'enu';\n        /**\n         * @private\n         * @type {boolean}\n         */\n        this.global_ = options.global !== undefined ? options.global : false;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        this.canWrapX_ = !!(this.global_ && this.extent_);\n        /**\n         * @private\n         * @type {function(number, import(\"../coordinate.js\").Coordinate):number|undefined}\n         */\n        this.getPointResolutionFunc_ = options.getPointResolution;\n        /**\n         * @private\n         * @type {import(\"../tilegrid/TileGrid.js\").default}\n         */\n        this.defaultTileGrid_ = null;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        this.metersPerUnit_ = options.metersPerUnit;\n    }\n    /**\n     * @return {boolean} The projection is suitable for wrapping the x-axis\n     */\n    Projection.prototype.canWrapX = function () {\n        return this.canWrapX_;\n    };\n    /**\n     * Get the code for this projection, e.g. 'EPSG:4326'.\n     * @return {string} Code.\n     * @api\n     */\n    Projection.prototype.getCode = function () {\n        return this.code_;\n    };\n    /**\n     * Get the validity extent for this projection.\n     * @return {import(\"../extent.js\").Extent} Extent.\n     * @api\n     */\n    Projection.prototype.getExtent = function () {\n        return this.extent_;\n    };\n    /**\n     * Get the units of this projection.\n     * @return {import(\"./Units.js\").default} Units.\n     * @api\n     */\n    Projection.prototype.getUnits = function () {\n        return this.units_;\n    };\n    /**\n     * Get the amount of meters per unit of this projection.  If the projection is\n     * not configured with `metersPerUnit` or a units identifier, the return is\n     * `undefined`.\n     * @return {number|undefined} Meters.\n     * @api\n     */\n    Projection.prototype.getMetersPerUnit = function () {\n        return this.metersPerUnit_ || METERS_PER_UNIT[this.units_];\n    };\n    /**\n     * Get the world extent for this projection.\n     * @return {import(\"../extent.js\").Extent} Extent.\n     * @api\n     */\n    Projection.prototype.getWorldExtent = function () {\n        return this.worldExtent_;\n    };\n    /**\n     * Get the axis orientation of this projection.\n     * Example values are:\n     * enu - the default easting, northing, elevation.\n     * neu - northing, easting, up - useful for \"lat/long\" geographic coordinates,\n     *     or south orientated transverse mercator.\n     * wnu - westing, northing, up - some planetary coordinate systems have\n     *     \"west positive\" coordinate systems\n     * @return {string} Axis orientation.\n     * @api\n     */\n    Projection.prototype.getAxisOrientation = function () {\n        return this.axisOrientation_;\n    };\n    /**\n     * Is this projection a global projection which spans the whole world?\n     * @return {boolean} Whether the projection is global.\n     * @api\n     */\n    Projection.prototype.isGlobal = function () {\n        return this.global_;\n    };\n    /**\n     * Set if the projection is a global projection which spans the whole world\n     * @param {boolean} global Whether the projection is global.\n     * @api\n     */\n    Projection.prototype.setGlobal = function (global) {\n        this.global_ = global;\n        this.canWrapX_ = !!(global && this.extent_);\n    };\n    /**\n     * @return {import(\"../tilegrid/TileGrid.js\").default} The default tile grid.\n     */\n    Projection.prototype.getDefaultTileGrid = function () {\n        return this.defaultTileGrid_;\n    };\n    /**\n     * @param {import(\"../tilegrid/TileGrid.js\").default} tileGrid The default tile grid.\n     */\n    Projection.prototype.setDefaultTileGrid = function (tileGrid) {\n        this.defaultTileGrid_ = tileGrid;\n    };\n    /**\n     * Set the validity extent for this projection.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @api\n     */\n    Projection.prototype.setExtent = function (extent) {\n        this.extent_ = extent;\n        this.canWrapX_ = !!(this.global_ && extent);\n    };\n    /**\n     * Set the world extent for this projection.\n     * @param {import(\"../extent.js\").Extent} worldExtent World extent\n     *     [minlon, minlat, maxlon, maxlat].\n     * @api\n     */\n    Projection.prototype.setWorldExtent = function (worldExtent) {\n        this.worldExtent_ = worldExtent;\n    };\n    /**\n     * Set the getPointResolution function (see {@link module:ol/proj~getPointResolution}\n     * for this projection.\n     * @param {function(number, import(\"../coordinate.js\").Coordinate):number} func Function\n     * @api\n     */\n    Projection.prototype.setGetPointResolution = function (func) {\n        this.getPointResolutionFunc_ = func;\n    };\n    /**\n     * Get the custom point resolution function for this projection (if set).\n     * @return {function(number, import(\"../coordinate.js\").Coordinate):number|undefined} The custom point\n     * resolution function (if set).\n     */\n    Projection.prototype.getPointResolutionFunc = function () {\n        return this.getPointResolutionFunc_;\n    };\n    return Projection;\n}());\nexport default Projection;\n//# sourceMappingURL=Projection.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/proj/epsg3857\n */\nimport { cosh } from '../math.js';\nimport Projection from './Projection.js';\nimport Units from './Units.js';\n/**\n * Radius of WGS84 sphere\n *\n * @const\n * @type {number}\n */\nexport var RADIUS = 6378137;\n/**\n * @const\n * @type {number}\n */\nexport var HALF_SIZE = Math.PI * RADIUS;\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport var EXTENT = [\n    -HALF_SIZE, -HALF_SIZE,\n    HALF_SIZE, HALF_SIZE\n];\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport var WORLD_EXTENT = [-180, -85, 180, 85];\n/**\n * @classdesc\n * Projection object for web/spherical Mercator (EPSG:3857).\n */\nvar EPSG3857Projection = /** @class */ (function (_super) {\n    __extends(EPSG3857Projection, _super);\n    /**\n     * @param {string} code Code.\n     */\n    function EPSG3857Projection(code) {\n        return _super.call(this, {\n            code: code,\n            units: Units.METERS,\n            extent: EXTENT,\n            global: true,\n            worldExtent: WORLD_EXTENT,\n            getPointResolution: function (resolution, point) {\n                return resolution / cosh(point[1] / RADIUS);\n            }\n        }) || this;\n    }\n    return EPSG3857Projection;\n}(Projection));\n/**\n * Projections equal to EPSG:3857.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport var PROJECTIONS = [\n    new EPSG3857Projection('EPSG:3857'),\n    new EPSG3857Projection('EPSG:102100'),\n    new EPSG3857Projection('EPSG:102113'),\n    new EPSG3857Projection('EPSG:900913'),\n    new EPSG3857Projection('urn:ogc:def:crs:EPSG:6.18:3:3857'),\n    new EPSG3857Projection('urn:ogc:def:crs:EPSG::3857'),\n    new EPSG3857Projection('http://www.opengis.net/gml/srs/epsg.xml#3857')\n];\n/**\n * Transformation from EPSG:4326 to EPSG:3857.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>=} opt_output Output array of coordinate values.\n * @param {number=} opt_dimension Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function fromEPSG4326(input, opt_output, opt_dimension) {\n    var length = input.length;\n    var dimension = opt_dimension > 1 ? opt_dimension : 2;\n    var output = opt_output;\n    if (output === undefined) {\n        if (dimension > 2) {\n            // preserve values beyond second dimension\n            output = input.slice();\n        }\n        else {\n            output = new Array(length);\n        }\n    }\n    var halfSize = HALF_SIZE;\n    for (var i = 0; i < length; i += dimension) {\n        output[i] = halfSize * input[i] / 180;\n        var y = RADIUS *\n            Math.log(Math.tan(Math.PI * (+input[i + 1] + 90) / 360));\n        if (y > halfSize) {\n            y = halfSize;\n        }\n        else if (y < -halfSize) {\n            y = -halfSize;\n        }\n        output[i + 1] = y;\n    }\n    return output;\n}\n/**\n * Transformation from EPSG:3857 to EPSG:4326.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>=} opt_output Output array of coordinate values.\n * @param {number=} opt_dimension Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function toEPSG4326(input, opt_output, opt_dimension) {\n    var length = input.length;\n    var dimension = opt_dimension > 1 ? opt_dimension : 2;\n    var output = opt_output;\n    if (output === undefined) {\n        if (dimension > 2) {\n            // preserve values beyond second dimension\n            output = input.slice();\n        }\n        else {\n            output = new Array(length);\n        }\n    }\n    for (var i = 0; i < length; i += dimension) {\n        output[i] = 180 * input[i] / HALF_SIZE;\n        output[i + 1] = 360 * Math.atan(Math.exp(input[i + 1] / RADIUS)) / Math.PI - 90;\n    }\n    return output;\n}\n//# sourceMappingURL=epsg3857.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/proj/epsg4326\n */\nimport Projection from './Projection.js';\nimport Units from './Units.js';\n/**\n * Semi-major radius of the WGS84 ellipsoid.\n *\n * @const\n * @type {number}\n */\nexport var RADIUS = 6378137;\n/**\n * Extent of the EPSG:4326 projection which is the whole world.\n *\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport var EXTENT = [-180, -90, 180, 90];\n/**\n * @const\n * @type {number}\n */\nexport var METERS_PER_UNIT = Math.PI * RADIUS / 180;\n/**\n * @classdesc\n * Projection object for WGS84 geographic coordinates (EPSG:4326).\n *\n * Note that OpenLayers does not strictly comply with the EPSG definition.\n * The EPSG registry defines 4326 as a CRS for Latitude,Longitude (y,x).\n * OpenLayers treats EPSG:4326 as a pseudo-projection, with x,y coordinates.\n */\nvar EPSG4326Projection = /** @class */ (function (_super) {\n    __extends(EPSG4326Projection, _super);\n    /**\n     * @param {string} code Code.\n     * @param {string=} opt_axisOrientation Axis orientation.\n     */\n    function EPSG4326Projection(code, opt_axisOrientation) {\n        return _super.call(this, {\n            code: code,\n            units: Units.DEGREES,\n            extent: EXTENT,\n            axisOrientation: opt_axisOrientation,\n            global: true,\n            metersPerUnit: METERS_PER_UNIT,\n            worldExtent: EXTENT\n        }) || this;\n    }\n    return EPSG4326Projection;\n}(Projection));\n/**\n * Projections equal to EPSG:4326.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport var PROJECTIONS = [\n    new EPSG4326Projection('CRS:84'),\n    new EPSG4326Projection('EPSG:4326', 'neu'),\n    new EPSG4326Projection('urn:ogc:def:crs:EPSG::4326', 'neu'),\n    new EPSG4326Projection('urn:ogc:def:crs:EPSG:6.6:4326', 'neu'),\n    new EPSG4326Projection('urn:ogc:def:crs:OGC:1.3:CRS84'),\n    new EPSG4326Projection('urn:ogc:def:crs:OGC:2:84'),\n    new EPSG4326Projection('http://www.opengis.net/gml/srs/epsg.xml#4326', 'neu'),\n    new EPSG4326Projection('urn:x-ogc:def:crs:EPSG:4326', 'neu')\n];\n//# sourceMappingURL=epsg4326.js.map","/**\n * @module ol/proj/projections\n */\n/**\n * @type {Object<string, import(\"./Projection.js\").default>}\n */\nvar cache = {};\n/**\n * Clear the projections cache.\n */\nexport function clear() {\n    cache = {};\n}\n/**\n * Get a cached projection by code.\n * @param {string} code The code for the projection.\n * @return {import(\"./Projection.js\").default} The projection (if cached).\n */\nexport function get(code) {\n    return cache[code] || null;\n}\n/**\n * Add a projection to the cache.\n * @param {string} code The projection code.\n * @param {import(\"./Projection.js\").default} projection The projection to cache.\n */\nexport function add(code, projection) {\n    cache[code] = projection;\n}\n//# sourceMappingURL=projections.js.map","/**\n * @module ol/proj/transforms\n */\nimport { isEmpty } from '../obj.js';\n/**\n * @private\n * @type {!Object<string, Object<string, import(\"../proj.js\").TransformFunction>>}\n */\nvar transforms = {};\n/**\n * Clear the transform cache.\n */\nexport function clear() {\n    transforms = {};\n}\n/**\n * Registers a conversion function to convert coordinates from the source\n * projection to the destination projection.\n *\n * @param {import(\"./Projection.js\").default} source Source.\n * @param {import(\"./Projection.js\").default} destination Destination.\n * @param {import(\"../proj.js\").TransformFunction} transformFn Transform.\n */\nexport function add(source, destination, transformFn) {\n    var sourceCode = source.getCode();\n    var destinationCode = destination.getCode();\n    if (!(sourceCode in transforms)) {\n        transforms[sourceCode] = {};\n    }\n    transforms[sourceCode][destinationCode] = transformFn;\n}\n/**\n * Unregisters the conversion function to convert coordinates from the source\n * projection to the destination projection.  This method is used to clean up\n * cached transforms during testing.\n *\n * @param {import(\"./Projection.js\").default} source Source projection.\n * @param {import(\"./Projection.js\").default} destination Destination projection.\n * @return {import(\"../proj.js\").TransformFunction} transformFn The unregistered transform.\n */\nexport function remove(source, destination) {\n    var sourceCode = source.getCode();\n    var destinationCode = destination.getCode();\n    var transform = transforms[sourceCode][destinationCode];\n    delete transforms[sourceCode][destinationCode];\n    if (isEmpty(transforms[sourceCode])) {\n        delete transforms[sourceCode];\n    }\n    return transform;\n}\n/**\n * Get a transform given a source code and a destination code.\n * @param {string} sourceCode The code for the source projection.\n * @param {string} destinationCode The code for the destination projection.\n * @return {import(\"../proj.js\").TransformFunction|undefined} The transform function (if found).\n */\nexport function get(sourceCode, destinationCode) {\n    var transform;\n    if (sourceCode in transforms && destinationCode in transforms[sourceCode]) {\n        transform = transforms[sourceCode][destinationCode];\n    }\n    return transform;\n}\n//# sourceMappingURL=transforms.js.map","/**\n * @module ol/proj\n */\n/**\n * The ol/proj module stores:\n * * a list of {@link module:ol/proj/Projection}\n * objects, one for each projection supported by the application\n * * a list of transform functions needed to convert coordinates in one projection\n * into another.\n *\n * The static functions are the methods used to maintain these.\n * Each transform function can handle not only simple coordinate pairs, but also\n * large arrays of coordinates such as vector geometries.\n *\n * When loaded, the library adds projection objects for EPSG:4326 (WGS84\n * geographic coordinates) and EPSG:3857 (Web or Spherical Mercator, as used\n * for example by Bing Maps or OpenStreetMap), together with the relevant\n * transform functions.\n *\n * Additional transforms may be added by using the http://proj4js.org/\n * library (version 2.2 or later). You can use the full build supplied by\n * Proj4js, or create a custom build to support those projections you need; see\n * the Proj4js website for how to do this. You also need the Proj4js definitions\n * for the required projections. These definitions can be obtained from\n * https://epsg.io/, and are a JS function, so can be loaded in a script\n * tag (as in the examples) or pasted into your application.\n *\n * After all required projection definitions are added to proj4's registry (by\n * using `proj4.defs()`), simply call `register(proj4)` from the `ol/proj/proj4`\n * package. Existing transforms are not changed by this function. See\n * examples/wms-image-custom-proj for an example of this.\n *\n * Additional projection definitions can be registered with `proj4.defs()` any\n * time. Just make sure to call `register(proj4)` again; for example, with user-supplied data where you don't\n * know in advance what projections are needed, you can initially load minimal\n * support and then load whichever are requested.\n *\n * Note that Proj4js does not support projection extents. If you want to add\n * one for creating default tile grids, you can add it after the Projection\n * object has been created with `setExtent`, for example,\n * `get('EPSG:1234').setExtent(extent)`.\n *\n * In addition to Proj4js support, any transform functions can be added with\n * {@link module:ol/proj~addCoordinateTransforms}. To use this, you must first create\n * a {@link module:ol/proj/Projection} object for the new projection and add it with\n * {@link module:ol/proj~addProjection}. You can then add the forward and inverse\n * functions with {@link module:ol/proj~addCoordinateTransforms}. See\n * examples/wms-custom-proj for an example of this.\n *\n * Note that if no transforms are needed and you only need to define the\n * projection, just add a {@link module:ol/proj/Projection} with\n * {@link module:ol/proj~addProjection}. See examples/wms-no-proj for an example of\n * this.\n */\nimport { getDistance } from './sphere.js';\nimport { applyTransform } from './extent.js';\nimport { modulo } from './math.js';\nimport { toEPSG4326, fromEPSG4326, PROJECTIONS as EPSG3857_PROJECTIONS } from './proj/epsg3857.js';\nimport { PROJECTIONS as EPSG4326_PROJECTIONS } from './proj/epsg4326.js';\nimport Projection from './proj/Projection.js';\nimport Units, { METERS_PER_UNIT } from './proj/Units.js';\nimport * as projections from './proj/projections.js';\nimport { add as addTransformFunc, clear as clearTransformFuncs, get as getTransformFunc } from './proj/transforms.js';\n/**\n * A projection as {@link module:ol/proj/Projection}, SRS identifier\n * string or undefined.\n * @typedef {Projection|string|undefined} ProjectionLike\n * @api\n */\n/**\n * A transform function accepts an array of input coordinate values, an optional\n * output array, and an optional dimension (default should be 2).  The function\n * transforms the input coordinate values, populates the output array, and\n * returns the output array.\n *\n * @typedef {function(Array<number>, Array<number>=, number=): Array<number>} TransformFunction\n * @api\n */\nexport { METERS_PER_UNIT };\nexport { Projection };\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>=} opt_output Output array of coordinate values.\n * @param {number=} opt_dimension Dimension.\n * @return {Array<number>} Output coordinate array (new array, same coordinate\n *     values).\n */\nexport function cloneTransform(input, opt_output, opt_dimension) {\n    var output;\n    if (opt_output !== undefined) {\n        for (var i = 0, ii = input.length; i < ii; ++i) {\n            opt_output[i] = input[i];\n        }\n        output = opt_output;\n    }\n    else {\n        output = input.slice();\n    }\n    return output;\n}\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>=} opt_output Output array of coordinate values.\n * @param {number=} opt_dimension Dimension.\n * @return {Array<number>} Input coordinate array (same array as input).\n */\nexport function identityTransform(input, opt_output, opt_dimension) {\n    if (opt_output !== undefined && input !== opt_output) {\n        for (var i = 0, ii = input.length; i < ii; ++i) {\n            opt_output[i] = input[i];\n        }\n        input = opt_output;\n    }\n    return input;\n}\n/**\n * Add a Projection object to the list of supported projections that can be\n * looked up by their code.\n *\n * @param {Projection} projection Projection instance.\n * @api\n */\nexport function addProjection(projection) {\n    projections.add(projection.getCode(), projection);\n    addTransformFunc(projection, projection, cloneTransform);\n}\n/**\n * @param {Array<Projection>} projections Projections.\n */\nexport function addProjections(projections) {\n    projections.forEach(addProjection);\n}\n/**\n * Fetches a Projection object for the code specified.\n *\n * @param {ProjectionLike} projectionLike Either a code string which is\n *     a combination of authority and identifier such as \"EPSG:4326\", or an\n *     existing projection object, or undefined.\n * @return {Projection} Projection object, or null if not in list.\n * @api\n */\nexport function get(projectionLike) {\n    return typeof projectionLike === 'string' ?\n        projections.get(/** @type {string} */ (projectionLike)) :\n        ( /** @type {Projection} */(projectionLike) || null);\n}\n/**\n * Get the resolution of the point in degrees or distance units.\n * For projections with degrees as the unit this will simply return the\n * provided resolution. For other projections the point resolution is\n * by default estimated by transforming the 'point' pixel to EPSG:4326,\n * measuring its width and height on the normal sphere,\n * and taking the average of the width and height.\n * A custom function can be provided for a specific projection, either\n * by setting the `getPointResolution` option in the\n * {@link module:ol/proj/Projection~Projection} constructor or by using\n * {@link module:ol/proj/Projection~Projection#setGetPointResolution} to change an existing\n * projection object.\n * @param {ProjectionLike} projection The projection.\n * @param {number} resolution Nominal resolution in projection units.\n * @param {import(\"./coordinate.js\").Coordinate} point Point to find adjusted resolution at.\n * @param {Units=} opt_units Units to get the point resolution in.\n * Default is the projection's units.\n * @return {number} Point resolution.\n * @api\n */\nexport function getPointResolution(projection, resolution, point, opt_units) {\n    projection = get(projection);\n    var pointResolution;\n    var getter = projection.getPointResolutionFunc();\n    if (getter) {\n        pointResolution = getter(resolution, point);\n        if (opt_units && opt_units !== projection.getUnits()) {\n            var metersPerUnit = projection.getMetersPerUnit();\n            if (metersPerUnit) {\n                pointResolution = pointResolution * metersPerUnit / METERS_PER_UNIT[opt_units];\n            }\n        }\n    }\n    else {\n        var units = projection.getUnits();\n        if (units == Units.DEGREES && !opt_units || opt_units == Units.DEGREES) {\n            pointResolution = resolution;\n        }\n        else {\n            // Estimate point resolution by transforming the center pixel to EPSG:4326,\n            // measuring its width and height on the normal sphere, and taking the\n            // average of the width and height.\n            var toEPSG4326_1 = getTransformFromProjections(projection, get('EPSG:4326'));\n            var vertices = [\n                point[0] - resolution / 2, point[1],\n                point[0] + resolution / 2, point[1],\n                point[0], point[1] - resolution / 2,\n                point[0], point[1] + resolution / 2\n            ];\n            vertices = toEPSG4326_1(vertices, vertices, 2);\n            var width = getDistance(vertices.slice(0, 2), vertices.slice(2, 4));\n            var height = getDistance(vertices.slice(4, 6), vertices.slice(6, 8));\n            pointResolution = (width + height) / 2;\n            var metersPerUnit = opt_units ?\n                METERS_PER_UNIT[opt_units] :\n                projection.getMetersPerUnit();\n            if (metersPerUnit !== undefined) {\n                pointResolution /= metersPerUnit;\n            }\n        }\n    }\n    return pointResolution;\n}\n/**\n * Registers transformation functions that don't alter coordinates. Those allow\n * to transform between projections with equal meaning.\n *\n * @param {Array<Projection>} projections Projections.\n * @api\n */\nexport function addEquivalentProjections(projections) {\n    addProjections(projections);\n    projections.forEach(function (source) {\n        projections.forEach(function (destination) {\n            if (source !== destination) {\n                addTransformFunc(source, destination, cloneTransform);\n            }\n        });\n    });\n}\n/**\n * Registers transformation functions to convert coordinates in any projection\n * in projection1 to any projection in projection2.\n *\n * @param {Array<Projection>} projections1 Projections with equal\n *     meaning.\n * @param {Array<Projection>} projections2 Projections with equal\n *     meaning.\n * @param {TransformFunction} forwardTransform Transformation from any\n *   projection in projection1 to any projection in projection2.\n * @param {TransformFunction} inverseTransform Transform from any projection\n *   in projection2 to any projection in projection1..\n */\nexport function addEquivalentTransforms(projections1, projections2, forwardTransform, inverseTransform) {\n    projections1.forEach(function (projection1) {\n        projections2.forEach(function (projection2) {\n            addTransformFunc(projection1, projection2, forwardTransform);\n            addTransformFunc(projection2, projection1, inverseTransform);\n        });\n    });\n}\n/**\n * Clear all cached projections and transforms.\n */\nexport function clearAllProjections() {\n    projections.clear();\n    clearTransformFuncs();\n}\n/**\n * @param {Projection|string|undefined} projection Projection.\n * @param {string} defaultCode Default code.\n * @return {Projection} Projection.\n */\nexport function createProjection(projection, defaultCode) {\n    if (!projection) {\n        return get(defaultCode);\n    }\n    else if (typeof projection === 'string') {\n        return get(projection);\n    }\n    else {\n        return (\n        /** @type {Projection} */ (projection));\n    }\n}\n/**\n * Creates a {@link module:ol/proj~TransformFunction} from a simple 2D coordinate transform\n * function.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} coordTransform Coordinate\n *     transform.\n * @return {TransformFunction} Transform function.\n */\nexport function createTransformFromCoordinateTransform(coordTransform) {\n    return (\n    /**\n     * @param {Array<number>} input Input.\n     * @param {Array<number>=} opt_output Output.\n     * @param {number=} opt_dimension Dimension.\n     * @return {Array<number>} Output.\n     */\n    function (input, opt_output, opt_dimension) {\n        var length = input.length;\n        var dimension = opt_dimension !== undefined ? opt_dimension : 2;\n        var output = opt_output !== undefined ? opt_output : new Array(length);\n        for (var i = 0; i < length; i += dimension) {\n            var point = coordTransform([input[i], input[i + 1]]);\n            output[i] = point[0];\n            output[i + 1] = point[1];\n            for (var j = dimension - 1; j >= 2; --j) {\n                output[i + j] = input[i + j];\n            }\n        }\n        return output;\n    });\n}\n/**\n * Registers coordinate transform functions to convert coordinates between the\n * source projection and the destination projection.\n * The forward and inverse functions convert coordinate pairs; this function\n * converts these into the functions used internally which also handle\n * extents and coordinate arrays.\n *\n * @param {ProjectionLike} source Source projection.\n * @param {ProjectionLike} destination Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} forward The forward transform\n *     function (that is, from the source projection to the destination\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} inverse The inverse transform\n *     function (that is, from the destination projection to the source\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @api\n */\nexport function addCoordinateTransforms(source, destination, forward, inverse) {\n    var sourceProj = get(source);\n    var destProj = get(destination);\n    addTransformFunc(sourceProj, destProj, createTransformFromCoordinateTransform(forward));\n    addTransformFunc(destProj, sourceProj, createTransformFromCoordinateTransform(inverse));\n}\n/**\n * Transforms a coordinate from longitude/latitude to a different projection.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate as longitude and latitude, i.e.\n *     an array with longitude as 1st and latitude as 2nd element.\n * @param {ProjectionLike=} opt_projection Target projection. The\n *     default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate projected to the target projection.\n * @api\n */\nexport function fromLonLat(coordinate, opt_projection) {\n    return transform(coordinate, 'EPSG:4326', opt_projection !== undefined ? opt_projection : 'EPSG:3857');\n}\n/**\n * Transforms a coordinate to longitude/latitude.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Projected coordinate.\n * @param {ProjectionLike=} opt_projection Projection of the coordinate.\n *     The default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate as longitude and latitude, i.e. an array\n *     with longitude as 1st and latitude as 2nd element.\n * @api\n */\nexport function toLonLat(coordinate, opt_projection) {\n    var lonLat = transform(coordinate, opt_projection !== undefined ? opt_projection : 'EPSG:3857', 'EPSG:4326');\n    var lon = lonLat[0];\n    if (lon < -180 || lon > 180) {\n        lonLat[0] = modulo(lon + 180, 360) - 180;\n    }\n    return lonLat;\n}\n/**\n * Checks if two projections are the same, that is every coordinate in one\n * projection does represent the same geographic point as the same coordinate in\n * the other projection.\n *\n * @param {Projection} projection1 Projection 1.\n * @param {Projection} projection2 Projection 2.\n * @return {boolean} Equivalent.\n * @api\n */\nexport function equivalent(projection1, projection2) {\n    if (projection1 === projection2) {\n        return true;\n    }\n    var equalUnits = projection1.getUnits() === projection2.getUnits();\n    if (projection1.getCode() === projection2.getCode()) {\n        return equalUnits;\n    }\n    else {\n        var transformFunc = getTransformFromProjections(projection1, projection2);\n        return transformFunc === cloneTransform && equalUnits;\n    }\n}\n/**\n * Searches in the list of transform functions for the function for converting\n * coordinates from the source projection to the destination projection.\n *\n * @param {Projection} sourceProjection Source Projection object.\n * @param {Projection} destinationProjection Destination Projection\n *     object.\n * @return {TransformFunction} Transform function.\n */\nexport function getTransformFromProjections(sourceProjection, destinationProjection) {\n    var sourceCode = sourceProjection.getCode();\n    var destinationCode = destinationProjection.getCode();\n    var transformFunc = getTransformFunc(sourceCode, destinationCode);\n    if (!transformFunc) {\n        transformFunc = identityTransform;\n    }\n    return transformFunc;\n}\n/**\n * Given the projection-like objects, searches for a transformation\n * function to convert a coordinates array from the source projection to the\n * destination projection.\n *\n * @param {ProjectionLike} source Source.\n * @param {ProjectionLike} destination Destination.\n * @return {TransformFunction} Transform function.\n * @api\n */\nexport function getTransform(source, destination) {\n    var sourceProjection = get(source);\n    var destinationProjection = get(destination);\n    return getTransformFromProjections(sourceProjection, destinationProjection);\n}\n/**\n * Transforms a coordinate from source projection to destination projection.\n * This returns a new coordinate (and does not modify the original).\n *\n * See {@link module:ol/proj~transformExtent} for extent transformation.\n * See the transform method of {@link module:ol/geom/Geometry~Geometry} and its\n * subclasses for geometry transforms.\n *\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n * @api\n */\nexport function transform(coordinate, source, destination) {\n    var transformFunc = getTransform(source, destination);\n    return transformFunc(coordinate, undefined, coordinate.length);\n}\n/**\n * Transforms an extent from source projection to destination projection.  This\n * returns a new extent (and does not modify the original).\n *\n * @param {import(\"./extent.js\").Extent} extent The extent to transform.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @return {import(\"./extent.js\").Extent} The transformed extent.\n * @api\n */\nexport function transformExtent(extent, source, destination) {\n    var transformFunc = getTransform(source, destination);\n    return applyTransform(extent, transformFunc);\n}\n/**\n * Transforms the given point to the destination projection.\n *\n * @param {import(\"./coordinate.js\").Coordinate} point Point.\n * @param {Projection} sourceProjection Source projection.\n * @param {Projection} destinationProjection Destination projection.\n * @return {import(\"./coordinate.js\").Coordinate} Point.\n */\nexport function transformWithProjections(point, sourceProjection, destinationProjection) {\n    var transformFunc = getTransformFromProjections(sourceProjection, destinationProjection);\n    return transformFunc(point);\n}\n/**\n * Add transforms to and from EPSG:4326 and EPSG:3857.  This function is called\n * by when this module is executed and should only need to be called again after\n * `clearAllProjections()` is called (e.g. in tests).\n */\nexport function addCommon() {\n    // Add transformations that don't alter coordinates to convert within set of\n    // projections with equal meaning.\n    addEquivalentProjections(EPSG3857_PROJECTIONS);\n    addEquivalentProjections(EPSG4326_PROJECTIONS);\n    // Add transformations to convert EPSG:4326 like coordinates to EPSG:3857 like\n    // coordinates and back.\n    addEquivalentTransforms(EPSG4326_PROJECTIONS, EPSG3857_PROJECTIONS, fromEPSG4326, toEPSG4326);\n}\naddCommon();\n//# sourceMappingURL=proj.js.map","/**\n * @module ol/transform\n */\nimport { assert } from './asserts.js';\n/**\n * An array representing an affine 2d transformation for use with\n * {@link module:ol/transform} functions. The array has 6 elements.\n * @typedef {!Array<number>} Transform\n */\n/**\n * Collection of affine 2d transformation functions. The functions work on an\n * array of 6 elements. The element order is compatible with the [SVGMatrix\n * interface](https://developer.mozilla.org/en-US/docs/Web/API/SVGMatrix) and is\n * a subset (elements a to f) of a 3×3 matrix:\n * ```\n * [ a c e ]\n * [ b d f ]\n * [ 0 0 1 ]\n * ```\n */\n/**\n * @private\n * @type {Transform}\n */\nvar tmp_ = new Array(6);\n/**\n * Create an identity transform.\n * @return {!Transform} Identity transform.\n */\nexport function create() {\n    return [1, 0, 0, 1, 0, 0];\n}\n/**\n * Resets the given transform to an identity transform.\n * @param {!Transform} transform Transform.\n * @return {!Transform} Transform.\n */\nexport function reset(transform) {\n    return set(transform, 1, 0, 0, 1, 0, 0);\n}\n/**\n * Multiply the underlying matrices of two transforms and return the result in\n * the first transform.\n * @param {!Transform} transform1 Transform parameters of matrix 1.\n * @param {!Transform} transform2 Transform parameters of matrix 2.\n * @return {!Transform} transform1 multiplied with transform2.\n */\nexport function multiply(transform1, transform2) {\n    var a1 = transform1[0];\n    var b1 = transform1[1];\n    var c1 = transform1[2];\n    var d1 = transform1[3];\n    var e1 = transform1[4];\n    var f1 = transform1[5];\n    var a2 = transform2[0];\n    var b2 = transform2[1];\n    var c2 = transform2[2];\n    var d2 = transform2[3];\n    var e2 = transform2[4];\n    var f2 = transform2[5];\n    transform1[0] = a1 * a2 + c1 * b2;\n    transform1[1] = b1 * a2 + d1 * b2;\n    transform1[2] = a1 * c2 + c1 * d2;\n    transform1[3] = b1 * c2 + d1 * d2;\n    transform1[4] = a1 * e2 + c1 * f2 + e1;\n    transform1[5] = b1 * e2 + d1 * f2 + f1;\n    return transform1;\n}\n/**\n * Set the transform components a-f on a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} a The a component of the transform.\n * @param {number} b The b component of the transform.\n * @param {number} c The c component of the transform.\n * @param {number} d The d component of the transform.\n * @param {number} e The e component of the transform.\n * @param {number} f The f component of the transform.\n * @return {!Transform} Matrix with transform applied.\n */\nexport function set(transform, a, b, c, d, e, f) {\n    transform[0] = a;\n    transform[1] = b;\n    transform[2] = c;\n    transform[3] = d;\n    transform[4] = e;\n    transform[5] = f;\n    return transform;\n}\n/**\n * Set transform on one matrix from another matrix.\n * @param {!Transform} transform1 Matrix to set transform to.\n * @param {!Transform} transform2 Matrix to set transform from.\n * @return {!Transform} transform1 with transform from transform2 applied.\n */\nexport function setFromArray(transform1, transform2) {\n    transform1[0] = transform2[0];\n    transform1[1] = transform2[1];\n    transform1[2] = transform2[2];\n    transform1[3] = transform2[3];\n    transform1[4] = transform2[4];\n    transform1[5] = transform2[5];\n    return transform1;\n}\n/**\n * Transforms the given coordinate with the given transform returning the\n * resulting, transformed coordinate. The coordinate will be modified in-place.\n *\n * @param {Transform} transform The transformation.\n * @param {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} coordinate The coordinate to transform.\n * @return {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} return coordinate so that operations can be\n *     chained together.\n */\nexport function apply(transform, coordinate) {\n    var x = coordinate[0];\n    var y = coordinate[1];\n    coordinate[0] = transform[0] * x + transform[2] * y + transform[4];\n    coordinate[1] = transform[1] * x + transform[3] * y + transform[5];\n    return coordinate;\n}\n/**\n * Applies rotation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} angle Angle in radians.\n * @return {!Transform} The rotated transform.\n */\nexport function rotate(transform, angle) {\n    var cos = Math.cos(angle);\n    var sin = Math.sin(angle);\n    return multiply(transform, set(tmp_, cos, sin, -sin, cos, 0, 0));\n}\n/**\n * Applies scale to a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scaled transform.\n */\nexport function scale(transform, x, y) {\n    return multiply(transform, set(tmp_, x, 0, 0, y, 0, 0));\n}\n/**\n * Creates a scale transform.\n * @param {!Transform} target Transform to overwrite.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scale transform.\n */\nexport function makeScale(target, x, y) {\n    return set(target, x, 0, 0, y, 0, 0);\n}\n/**\n * Applies translation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} dx Translation x.\n * @param {number} dy Translation y.\n * @return {!Transform} The translated transform.\n */\nexport function translate(transform, dx, dy) {\n    return multiply(transform, set(tmp_, 1, 0, 0, 1, dx, dy));\n}\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative).\n * @param {!Transform} transform The transform (will be modified in place).\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {!Transform} The composite transform.\n */\nexport function compose(transform, dx1, dy1, sx, sy, angle, dx2, dy2) {\n    var sin = Math.sin(angle);\n    var cos = Math.cos(angle);\n    transform[0] = sx * cos;\n    transform[1] = sy * sin;\n    transform[2] = -sx * sin;\n    transform[3] = sy * cos;\n    transform[4] = dx2 * sx * cos - dy2 * sx * sin + dx1;\n    transform[5] = dx2 * sy * sin + dy2 * sy * cos + dy1;\n    return transform;\n}\n/**\n * Invert the given transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (source) transform.\n */\nexport function invert(source) {\n    return makeInverse(source, source);\n}\n/**\n * Invert the given transform.\n * @param {!Transform} target Transform to be set as the inverse of\n *     the source transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (target) transform.\n */\nexport function makeInverse(target, source) {\n    var det = determinant(source);\n    assert(det !== 0, 32); // Transformation matrix cannot be inverted\n    var a = source[0];\n    var b = source[1];\n    var c = source[2];\n    var d = source[3];\n    var e = source[4];\n    var f = source[5];\n    target[0] = d / det;\n    target[1] = -b / det;\n    target[2] = -c / det;\n    target[3] = a / det;\n    target[4] = (c * f - d * e) / det;\n    target[5] = -(a * f - b * e) / det;\n    return target;\n}\n/**\n * Returns the determinant of the given matrix.\n * @param {!Transform} mat Matrix.\n * @return {number} Determinant.\n */\nexport function determinant(mat) {\n    return mat[0] * mat[3] - mat[1] * mat[2];\n}\n/**\n * A string version of the transform.  This can be used\n * for CSS transforms.\n * @param {!Transform} mat Matrix.\n * @return {string} The transform as a string.\n */\nexport function toString(mat) {\n    return 'matrix(' + mat.join(', ') + ')';\n}\n//# sourceMappingURL=transform.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/geom/Geometry\n */\nimport { abstract } from '../util.js';\nimport BaseObject from '../Object.js';\nimport { createEmpty, getHeight, returnOrUpdate } from '../extent.js';\nimport { transform2D } from './flat/transform.js';\nimport { get as getProjection, getTransform } from '../proj.js';\nimport Units from '../proj/Units.js';\nimport { create as createTransform, compose as composeTransform } from '../transform.js';\n/**\n * @type {import(\"../transform.js\").Transform}\n */\nvar tmpTransform = createTransform();\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for vector geometries.\n *\n * To get notified of changes to the geometry, register a listener for the\n * generic `change` event on your geometry instance.\n *\n * @abstract\n * @api\n */\nvar Geometry = /** @class */ (function (_super) {\n    __extends(Geometry, _super);\n    function Geometry() {\n        var _this = _super.call(this) || this;\n        /**\n         * @private\n         * @type {import(\"../extent.js\").Extent}\n         */\n        _this.extent_ = createEmpty();\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.extentRevision_ = -1;\n        /**\n         * @protected\n         * @type {Object<string, Geometry>}\n         */\n        _this.simplifiedGeometryCache = {};\n        /**\n         * @protected\n         * @type {number}\n         */\n        _this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n        /**\n         * @protected\n         * @type {number}\n         */\n        _this.simplifiedGeometryRevision = 0;\n        return _this;\n    }\n    /**\n     * Make a complete copy of the geometry.\n     * @abstract\n     * @return {!Geometry} Clone.\n     */\n    Geometry.prototype.clone = function () {\n        return abstract();\n    };\n    /**\n     * @abstract\n     * @param {number} x X.\n     * @param {number} y Y.\n     * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n     * @param {number} minSquaredDistance Minimum squared distance.\n     * @return {number} Minimum squared distance.\n     */\n    Geometry.prototype.closestPointXY = function (x, y, closestPoint, minSquaredDistance) {\n        return abstract();\n    };\n    /**\n     * @param {number} x X.\n     * @param {number} y Y.\n     * @return {boolean} Contains (x, y).\n     */\n    Geometry.prototype.containsXY = function (x, y) {\n        var coord = this.getClosestPoint([x, y]);\n        return coord[0] === x && coord[1] === y;\n    };\n    /**\n     * Return the closest point of the geometry to the passed point as\n     * {@link module:ol/coordinate~Coordinate coordinate}.\n     * @param {import(\"../coordinate.js\").Coordinate} point Point.\n     * @param {import(\"../coordinate.js\").Coordinate=} opt_closestPoint Closest point.\n     * @return {import(\"../coordinate.js\").Coordinate} Closest point.\n     * @api\n     */\n    Geometry.prototype.getClosestPoint = function (point, opt_closestPoint) {\n        var closestPoint = opt_closestPoint ? opt_closestPoint : [NaN, NaN];\n        this.closestPointXY(point[0], point[1], closestPoint, Infinity);\n        return closestPoint;\n    };\n    /**\n     * Returns true if this geometry includes the specified coordinate. If the\n     * coordinate is on the boundary of the geometry, returns false.\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @return {boolean} Contains coordinate.\n     * @api\n     */\n    Geometry.prototype.intersectsCoordinate = function (coordinate) {\n        return this.containsXY(coordinate[0], coordinate[1]);\n    };\n    /**\n     * @abstract\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @protected\n     * @return {import(\"../extent.js\").Extent} extent Extent.\n     */\n    Geometry.prototype.computeExtent = function (extent) {\n        return abstract();\n    };\n    /**\n     * Get the extent of the geometry.\n     * @param {import(\"../extent.js\").Extent=} opt_extent Extent.\n     * @return {import(\"../extent.js\").Extent} extent Extent.\n     * @api\n     */\n    Geometry.prototype.getExtent = function (opt_extent) {\n        if (this.extentRevision_ != this.getRevision()) {\n            this.extent_ = this.computeExtent(this.extent_);\n            this.extentRevision_ = this.getRevision();\n        }\n        return returnOrUpdate(this.extent_, opt_extent);\n    };\n    /**\n     * Rotate the geometry around a given coordinate. This modifies the geometry\n     * coordinates in place.\n     * @abstract\n     * @param {number} angle Rotation angle in radians.\n     * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n     * @api\n     */\n    Geometry.prototype.rotate = function (angle, anchor) {\n        abstract();\n    };\n    /**\n     * Scale the geometry (with an optional origin).  This modifies the geometry\n     * coordinates in place.\n     * @abstract\n     * @param {number} sx The scaling factor in the x-direction.\n     * @param {number=} opt_sy The scaling factor in the y-direction (defaults to\n     *     sx).\n     * @param {import(\"../coordinate.js\").Coordinate=} opt_anchor The scale origin (defaults to the center\n     *     of the geometry extent).\n     * @api\n     */\n    Geometry.prototype.scale = function (sx, opt_sy, opt_anchor) {\n        abstract();\n    };\n    /**\n     * Create a simplified version of this geometry.  For linestrings, this uses\n     * the the {@link\n     * https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm\n     * Douglas Peucker} algorithm.  For polygons, a quantization-based\n     * simplification is used to preserve topology.\n     * @param {number} tolerance The tolerance distance for simplification.\n     * @return {Geometry} A new, simplified version of the original geometry.\n     * @api\n     */\n    Geometry.prototype.simplify = function (tolerance) {\n        return this.getSimplifiedGeometry(tolerance * tolerance);\n    };\n    /**\n     * Create a simplified version of this geometry using the Douglas Peucker\n     * algorithm.\n     * See https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm.\n     * @abstract\n     * @param {number} squaredTolerance Squared tolerance.\n     * @return {Geometry} Simplified geometry.\n     */\n    Geometry.prototype.getSimplifiedGeometry = function (squaredTolerance) {\n        return abstract();\n    };\n    /**\n     * Get the type of this geometry.\n     * @abstract\n     * @return {import(\"./GeometryType.js\").default} Geometry type.\n     */\n    Geometry.prototype.getType = function () {\n        return abstract();\n    };\n    /**\n     * Apply a transform function to each coordinate of the geometry.\n     * The geometry is modified in place.\n     * If you do not want the geometry modified in place, first `clone()` it and\n     * then use this function on the clone.\n     * @abstract\n     * @param {import(\"../proj.js\").TransformFunction} transformFn Transform.\n     */\n    Geometry.prototype.applyTransform = function (transformFn) {\n        abstract();\n    };\n    /**\n     * Test if the geometry and the passed extent intersect.\n     * @abstract\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @return {boolean} `true` if the geometry and the extent intersect.\n     */\n    Geometry.prototype.intersectsExtent = function (extent) {\n        return abstract();\n    };\n    /**\n     * Translate the geometry.  This modifies the geometry coordinates in place.  If\n     * instead you want a new geometry, first `clone()` this geometry.\n     * @abstract\n     * @param {number} deltaX Delta X.\n     * @param {number} deltaY Delta Y.\n     * @api\n     */\n    Geometry.prototype.translate = function (deltaX, deltaY) {\n        abstract();\n    };\n    /**\n     * Transform each coordinate of the geometry from one coordinate reference\n     * system to another. The geometry is modified in place.\n     * For example, a line will be transformed to a line and a circle to a circle.\n     * If you do not want the geometry modified in place, first `clone()` it and\n     * then use this function on the clone.\n     *\n     * @param {import(\"../proj.js\").ProjectionLike} source The current projection.  Can be a\n     *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n     * @param {import(\"../proj.js\").ProjectionLike} destination The desired projection.  Can be a\n     *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n     * @return {Geometry} This geometry.  Note that original geometry is\n     *     modified in place.\n     * @api\n     */\n    Geometry.prototype.transform = function (source, destination) {\n        /** @type {import(\"../proj/Projection.js\").default} */\n        var sourceProj = getProjection(source);\n        var transformFn = sourceProj.getUnits() == Units.TILE_PIXELS ?\n            function (inCoordinates, outCoordinates, stride) {\n                var pixelExtent = sourceProj.getExtent();\n                var projectedExtent = sourceProj.getWorldExtent();\n                var scale = getHeight(projectedExtent) / getHeight(pixelExtent);\n                composeTransform(tmpTransform, projectedExtent[0], projectedExtent[3], scale, -scale, 0, 0, 0);\n                transform2D(inCoordinates, 0, inCoordinates.length, stride, tmpTransform, outCoordinates);\n                return getTransform(sourceProj, destination)(inCoordinates, outCoordinates, stride);\n            } :\n            getTransform(sourceProj, destination);\n        this.applyTransform(transformFn);\n        return this;\n    };\n    return Geometry;\n}(BaseObject));\nexport default Geometry;\n//# sourceMappingURL=Geometry.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/geom/SimpleGeometry\n */\nimport { abstract } from '../util.js';\nimport { createOrUpdateFromFlatCoordinates, getCenter } from '../extent.js';\nimport Geometry from './Geometry.js';\nimport GeometryLayout from './GeometryLayout.js';\nimport { rotate, scale, translate, transform2D } from './flat/transform.js';\nimport { clear } from '../obj.js';\n/**\n * @classdesc\n * Abstract base class; only used for creating subclasses; do not instantiate\n * in apps, as cannot be rendered.\n *\n * @abstract\n * @api\n */\nvar SimpleGeometry = /** @class */ (function (_super) {\n    __extends(SimpleGeometry, _super);\n    function SimpleGeometry() {\n        var _this = _super.call(this) || this;\n        /**\n         * @protected\n         * @type {GeometryLayout}\n         */\n        _this.layout = GeometryLayout.XY;\n        /**\n         * @protected\n         * @type {number}\n         */\n        _this.stride = 2;\n        /**\n         * @protected\n         * @type {Array<number>}\n         */\n        _this.flatCoordinates = null;\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    SimpleGeometry.prototype.computeExtent = function (extent) {\n        return createOrUpdateFromFlatCoordinates(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, extent);\n    };\n    /**\n     * @abstract\n     * @return {Array<*>} Coordinates.\n     */\n    SimpleGeometry.prototype.getCoordinates = function () {\n        return abstract();\n    };\n    /**\n     * Return the first coordinate of the geometry.\n     * @return {import(\"../coordinate.js\").Coordinate} First coordinate.\n     * @api\n     */\n    SimpleGeometry.prototype.getFirstCoordinate = function () {\n        return this.flatCoordinates.slice(0, this.stride);\n    };\n    /**\n     * @return {Array<number>} Flat coordinates.\n     */\n    SimpleGeometry.prototype.getFlatCoordinates = function () {\n        return this.flatCoordinates;\n    };\n    /**\n     * Return the last coordinate of the geometry.\n     * @return {import(\"../coordinate.js\").Coordinate} Last point.\n     * @api\n     */\n    SimpleGeometry.prototype.getLastCoordinate = function () {\n        return this.flatCoordinates.slice(this.flatCoordinates.length - this.stride);\n    };\n    /**\n     * Return the {@link module:ol/geom/GeometryLayout layout} of the geometry.\n     * @return {GeometryLayout} Layout.\n     * @api\n     */\n    SimpleGeometry.prototype.getLayout = function () {\n        return this.layout;\n    };\n    /**\n     * @inheritDoc\n     */\n    SimpleGeometry.prototype.getSimplifiedGeometry = function (squaredTolerance) {\n        if (this.simplifiedGeometryRevision != this.getRevision()) {\n            clear(this.simplifiedGeometryCache);\n            this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n            this.simplifiedGeometryRevision = this.getRevision();\n        }\n        // If squaredTolerance is negative or if we know that simplification will not\n        // have any effect then just return this.\n        if (squaredTolerance < 0 ||\n            (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n                squaredTolerance <= this.simplifiedGeometryMaxMinSquaredTolerance)) {\n            return this;\n        }\n        var key = squaredTolerance.toString();\n        if (this.simplifiedGeometryCache.hasOwnProperty(key)) {\n            return this.simplifiedGeometryCache[key];\n        }\n        else {\n            var simplifiedGeometry = this.getSimplifiedGeometryInternal(squaredTolerance);\n            var simplifiedFlatCoordinates = simplifiedGeometry.getFlatCoordinates();\n            if (simplifiedFlatCoordinates.length < this.flatCoordinates.length) {\n                this.simplifiedGeometryCache[key] = simplifiedGeometry;\n                return simplifiedGeometry;\n            }\n            else {\n                // Simplification did not actually remove any coordinates.  We now know\n                // that any calls to getSimplifiedGeometry with a squaredTolerance less\n                // than or equal to the current squaredTolerance will also not have any\n                // effect.  This allows us to short circuit simplification (saving CPU\n                // cycles) and prevents the cache of simplified geometries from filling\n                // up with useless identical copies of this geometry (saving memory).\n                this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n                return this;\n            }\n        }\n    };\n    /**\n     * @param {number} squaredTolerance Squared tolerance.\n     * @return {SimpleGeometry} Simplified geometry.\n     * @protected\n     */\n    SimpleGeometry.prototype.getSimplifiedGeometryInternal = function (squaredTolerance) {\n        return this;\n    };\n    /**\n     * @return {number} Stride.\n     */\n    SimpleGeometry.prototype.getStride = function () {\n        return this.stride;\n    };\n    /**\n     * @param {GeometryLayout} layout Layout.\n     * @param {Array<number>} flatCoordinates Flat coordinates.\n     */\n    SimpleGeometry.prototype.setFlatCoordinates = function (layout, flatCoordinates) {\n        this.stride = getStrideForLayout(layout);\n        this.layout = layout;\n        this.flatCoordinates = flatCoordinates;\n    };\n    /**\n     * @abstract\n     * @param {!Array<*>} coordinates Coordinates.\n     * @param {GeometryLayout=} opt_layout Layout.\n     */\n    SimpleGeometry.prototype.setCoordinates = function (coordinates, opt_layout) {\n        abstract();\n    };\n    /**\n     * @param {GeometryLayout|undefined} layout Layout.\n     * @param {Array<*>} coordinates Coordinates.\n     * @param {number} nesting Nesting.\n     * @protected\n     */\n    SimpleGeometry.prototype.setLayout = function (layout, coordinates, nesting) {\n        /** @type {number} */\n        var stride;\n        if (layout) {\n            stride = getStrideForLayout(layout);\n        }\n        else {\n            for (var i = 0; i < nesting; ++i) {\n                if (coordinates.length === 0) {\n                    this.layout = GeometryLayout.XY;\n                    this.stride = 2;\n                    return;\n                }\n                else {\n                    coordinates = /** @type {Array} */ (coordinates[0]);\n                }\n            }\n            stride = coordinates.length;\n            layout = getLayoutForStride(stride);\n        }\n        this.layout = layout;\n        this.stride = stride;\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    SimpleGeometry.prototype.applyTransform = function (transformFn) {\n        if (this.flatCoordinates) {\n            transformFn(this.flatCoordinates, this.flatCoordinates, this.stride);\n            this.changed();\n        }\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    SimpleGeometry.prototype.rotate = function (angle, anchor) {\n        var flatCoordinates = this.getFlatCoordinates();\n        if (flatCoordinates) {\n            var stride = this.getStride();\n            rotate(flatCoordinates, 0, flatCoordinates.length, stride, angle, anchor, flatCoordinates);\n            this.changed();\n        }\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    SimpleGeometry.prototype.scale = function (sx, opt_sy, opt_anchor) {\n        var sy = opt_sy;\n        if (sy === undefined) {\n            sy = sx;\n        }\n        var anchor = opt_anchor;\n        if (!anchor) {\n            anchor = getCenter(this.getExtent());\n        }\n        var flatCoordinates = this.getFlatCoordinates();\n        if (flatCoordinates) {\n            var stride = this.getStride();\n            scale(flatCoordinates, 0, flatCoordinates.length, stride, sx, sy, anchor, flatCoordinates);\n            this.changed();\n        }\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    SimpleGeometry.prototype.translate = function (deltaX, deltaY) {\n        var flatCoordinates = this.getFlatCoordinates();\n        if (flatCoordinates) {\n            var stride = this.getStride();\n            translate(flatCoordinates, 0, flatCoordinates.length, stride, deltaX, deltaY, flatCoordinates);\n            this.changed();\n        }\n    };\n    return SimpleGeometry;\n}(Geometry));\n/**\n * @param {number} stride Stride.\n * @return {GeometryLayout} layout Layout.\n */\nfunction getLayoutForStride(stride) {\n    var layout;\n    if (stride == 2) {\n        layout = GeometryLayout.XY;\n    }\n    else if (stride == 3) {\n        layout = GeometryLayout.XYZ;\n    }\n    else if (stride == 4) {\n        layout = GeometryLayout.XYZM;\n    }\n    return (\n    /** @type {GeometryLayout} */ (layout));\n}\n/**\n * @param {GeometryLayout} layout Layout.\n * @return {number} Stride.\n */\nexport function getStrideForLayout(layout) {\n    var stride;\n    if (layout == GeometryLayout.XY) {\n        stride = 2;\n    }\n    else if (layout == GeometryLayout.XYZ || layout == GeometryLayout.XYM) {\n        stride = 3;\n    }\n    else if (layout == GeometryLayout.XYZM) {\n        stride = 4;\n    }\n    return /** @type {number} */ (stride);\n}\n/**\n * @param {SimpleGeometry} simpleGeometry Simple geometry.\n * @param {import(\"../transform.js\").Transform} transform Transform.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Transformed flat coordinates.\n */\nexport function transformGeom2D(simpleGeometry, transform, opt_dest) {\n    var flatCoordinates = simpleGeometry.getFlatCoordinates();\n    if (!flatCoordinates) {\n        return null;\n    }\n    else {\n        var stride = simpleGeometry.getStride();\n        return transform2D(flatCoordinates, 0, flatCoordinates.length, stride, transform, opt_dest);\n    }\n}\nexport default SimpleGeometry;\n//# sourceMappingURL=SimpleGeometry.js.map","/**\n * @module ol/geom/flat/area\n */\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRing(flatCoordinates, offset, end, stride) {\n    var twiceArea = 0;\n    var x1 = flatCoordinates[end - stride];\n    var y1 = flatCoordinates[end - stride + 1];\n    for (; offset < end; offset += stride) {\n        var x2 = flatCoordinates[offset];\n        var y2 = flatCoordinates[offset + 1];\n        twiceArea += y1 * x2 - x1 * y2;\n        x1 = x2;\n        y1 = y2;\n    }\n    return twiceArea / 2;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRings(flatCoordinates, offset, ends, stride) {\n    var area = 0;\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n        var end = ends[i];\n        area += linearRing(flatCoordinates, offset, end, stride);\n        offset = end;\n    }\n    return area;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n    var area = 0;\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        area += linearRings(flatCoordinates, offset, ends, stride);\n        offset = ends[ends.length - 1];\n    }\n    return area;\n}\n//# sourceMappingURL=area.js.map","/**\n * @module ol/geom/flat/closest\n */\nimport { lerp, squaredDistance as squaredDx } from '../../math.js';\n/**\n * Returns the point on the 2D line segment flatCoordinates[offset1] to\n * flatCoordinates[offset2] that is closest to the point (x, y).  Extra\n * dimensions are linearly interpolated.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset1 Offset 1.\n * @param {number} offset2 Offset 2.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n */\nfunction assignClosest(flatCoordinates, offset1, offset2, stride, x, y, closestPoint) {\n    var x1 = flatCoordinates[offset1];\n    var y1 = flatCoordinates[offset1 + 1];\n    var dx = flatCoordinates[offset2] - x1;\n    var dy = flatCoordinates[offset2 + 1] - y1;\n    var offset;\n    if (dx === 0 && dy === 0) {\n        offset = offset1;\n    }\n    else {\n        var t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n        if (t > 1) {\n            offset = offset2;\n        }\n        else if (t > 0) {\n            for (var i = 0; i < stride; ++i) {\n                closestPoint[i] = lerp(flatCoordinates[offset1 + i], flatCoordinates[offset2 + i], t);\n            }\n            closestPoint.length = stride;\n            return;\n        }\n        else {\n            offset = offset1;\n        }\n    }\n    for (var i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[offset + i];\n    }\n    closestPoint.length = stride;\n}\n/**\n * Return the squared of the largest distance between any pair of consecutive\n * coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function maxSquaredDelta(flatCoordinates, offset, end, stride, max) {\n    var x1 = flatCoordinates[offset];\n    var y1 = flatCoordinates[offset + 1];\n    for (offset += stride; offset < end; offset += stride) {\n        var x2 = flatCoordinates[offset];\n        var y2 = flatCoordinates[offset + 1];\n        var squaredDelta = squaredDx(x1, y1, x2, y2);\n        if (squaredDelta > max) {\n            max = squaredDelta;\n        }\n        x1 = x2;\n        y1 = y2;\n    }\n    return max;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function arrayMaxSquaredDelta(flatCoordinates, offset, ends, stride, max) {\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n        var end = ends[i];\n        max = maxSquaredDelta(flatCoordinates, offset, end, stride, max);\n        offset = end;\n    }\n    return max;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function multiArrayMaxSquaredDelta(flatCoordinates, offset, endss, stride, max) {\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        max = arrayMaxSquaredDelta(flatCoordinates, offset, ends, stride, max);\n        offset = ends[ends.length - 1];\n    }\n    return max;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>=} opt_tmpPoint Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestPoint(flatCoordinates, offset, end, stride, maxDelta, isRing, x, y, closestPoint, minSquaredDistance, opt_tmpPoint) {\n    if (offset == end) {\n        return minSquaredDistance;\n    }\n    var i, squaredDistance;\n    if (maxDelta === 0) {\n        // All points are identical, so just test the first point.\n        squaredDistance = squaredDx(x, y, flatCoordinates[offset], flatCoordinates[offset + 1]);\n        if (squaredDistance < minSquaredDistance) {\n            for (i = 0; i < stride; ++i) {\n                closestPoint[i] = flatCoordinates[offset + i];\n            }\n            closestPoint.length = stride;\n            return squaredDistance;\n        }\n        else {\n            return minSquaredDistance;\n        }\n    }\n    var tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n    var index = offset + stride;\n    while (index < end) {\n        assignClosest(flatCoordinates, index - stride, index, stride, x, y, tmpPoint);\n        squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n        if (squaredDistance < minSquaredDistance) {\n            minSquaredDistance = squaredDistance;\n            for (i = 0; i < stride; ++i) {\n                closestPoint[i] = tmpPoint[i];\n            }\n            closestPoint.length = stride;\n            index += stride;\n        }\n        else {\n            // Skip ahead multiple points, because we know that all the skipped\n            // points cannot be any closer than the closest point we have found so\n            // far.  We know this because we know how close the current point is, how\n            // close the closest point we have found so far is, and the maximum\n            // distance between consecutive points.  For example, if we're currently\n            // at distance 10, the best we've found so far is 3, and that the maximum\n            // distance between consecutive points is 2, then we'll need to skip at\n            // least (10 - 3) / 2 == 3 (rounded down) points to have any chance of\n            // finding a closer point.  We use Math.max(..., 1) to ensure that we\n            // always advance at least one point, to avoid an infinite loop.\n            index += stride * Math.max(((Math.sqrt(squaredDistance) -\n                Math.sqrt(minSquaredDistance)) / maxDelta) | 0, 1);\n        }\n    }\n    if (isRing) {\n        // Check the closing segment.\n        assignClosest(flatCoordinates, end - stride, offset, stride, x, y, tmpPoint);\n        squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n        if (squaredDistance < minSquaredDistance) {\n            minSquaredDistance = squaredDistance;\n            for (i = 0; i < stride; ++i) {\n                closestPoint[i] = tmpPoint[i];\n            }\n            closestPoint.length = stride;\n        }\n    }\n    return minSquaredDistance;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>=} opt_tmpPoint Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestArrayPoint(flatCoordinates, offset, ends, stride, maxDelta, isRing, x, y, closestPoint, minSquaredDistance, opt_tmpPoint) {\n    var tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n        var end = ends[i];\n        minSquaredDistance = assignClosestPoint(flatCoordinates, offset, end, stride, maxDelta, isRing, x, y, closestPoint, minSquaredDistance, tmpPoint);\n        offset = end;\n    }\n    return minSquaredDistance;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>=} opt_tmpPoint Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestMultiArrayPoint(flatCoordinates, offset, endss, stride, maxDelta, isRing, x, y, closestPoint, minSquaredDistance, opt_tmpPoint) {\n    var tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        minSquaredDistance = assignClosestArrayPoint(flatCoordinates, offset, ends, stride, maxDelta, isRing, x, y, closestPoint, minSquaredDistance, tmpPoint);\n        offset = ends[ends.length - 1];\n    }\n    return minSquaredDistance;\n}\n//# sourceMappingURL=closest.js.map","/**\n * @module ol/geom/flat/deflate\n */\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinate(flatCoordinates, offset, coordinate, stride) {\n    for (var i = 0, ii = coordinate.length; i < ii; ++i) {\n        flatCoordinates[offset++] = coordinate[i];\n    }\n    return offset;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinates(flatCoordinates, offset, coordinates, stride) {\n    for (var i = 0, ii = coordinates.length; i < ii; ++i) {\n        var coordinate = coordinates[i];\n        for (var j = 0; j < stride; ++j) {\n            flatCoordinates[offset++] = coordinate[j];\n        }\n    }\n    return offset;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} coordinatess Coordinatess.\n * @param {number} stride Stride.\n * @param {Array<number>=} opt_ends Ends.\n * @return {Array<number>} Ends.\n */\nexport function deflateCoordinatesArray(flatCoordinates, offset, coordinatess, stride, opt_ends) {\n    var ends = opt_ends ? opt_ends : [];\n    var i = 0;\n    for (var j = 0, jj = coordinatess.length; j < jj; ++j) {\n        var end = deflateCoordinates(flatCoordinates, offset, coordinatess[j], stride);\n        ends[i++] = end;\n        offset = end;\n    }\n    ends.length = i;\n    return ends;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} coordinatesss Coordinatesss.\n * @param {number} stride Stride.\n * @param {Array<Array<number>>=} opt_endss Endss.\n * @return {Array<Array<number>>} Endss.\n */\nexport function deflateMultiCoordinatesArray(flatCoordinates, offset, coordinatesss, stride, opt_endss) {\n    var endss = opt_endss ? opt_endss : [];\n    var i = 0;\n    for (var j = 0, jj = coordinatesss.length; j < jj; ++j) {\n        var ends = deflateCoordinatesArray(flatCoordinates, offset, coordinatesss[j], stride, endss[i]);\n        endss[i++] = ends;\n        offset = ends[ends.length - 1];\n    }\n    endss.length = i;\n    return endss;\n}\n//# sourceMappingURL=deflate.js.map","/**\n * @module ol/geom/flat/inflate\n */\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>=} opt_coordinates Coordinates.\n * @return {Array<import(\"../../coordinate.js\").Coordinate>} Coordinates.\n */\nexport function inflateCoordinates(flatCoordinates, offset, end, stride, opt_coordinates) {\n    var coordinates = opt_coordinates !== undefined ? opt_coordinates : [];\n    var i = 0;\n    for (var j = offset; j < end; j += stride) {\n        coordinates[i++] = flatCoordinates.slice(j, j + stride);\n    }\n    coordinates.length = i;\n    return coordinates;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>=} opt_coordinatess Coordinatess.\n * @return {Array<Array<import(\"../../coordinate.js\").Coordinate>>} Coordinatess.\n */\nexport function inflateCoordinatesArray(flatCoordinates, offset, ends, stride, opt_coordinatess) {\n    var coordinatess = opt_coordinatess !== undefined ? opt_coordinatess : [];\n    var i = 0;\n    for (var j = 0, jj = ends.length; j < jj; ++j) {\n        var end = ends[j];\n        coordinatess[i++] = inflateCoordinates(flatCoordinates, offset, end, stride, coordinatess[i]);\n        offset = end;\n    }\n    coordinatess.length = i;\n    return coordinatess;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>=} opt_coordinatesss\n *     Coordinatesss.\n * @return {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} Coordinatesss.\n */\nexport function inflateMultiCoordinatesArray(flatCoordinates, offset, endss, stride, opt_coordinatesss) {\n    var coordinatesss = opt_coordinatesss !== undefined ? opt_coordinatesss : [];\n    var i = 0;\n    for (var j = 0, jj = endss.length; j < jj; ++j) {\n        var ends = endss[j];\n        coordinatesss[i++] = inflateCoordinatesArray(flatCoordinates, offset, ends, stride, coordinatesss[i]);\n        offset = ends[ends.length - 1];\n    }\n    coordinatesss.length = i;\n    return coordinatesss;\n}\n//# sourceMappingURL=inflate.js.map","/**\n * @module ol/geom/flat/simplify\n */\n// Based on simplify-js https://github.com/mourner/simplify-js\n// Copyright (c) 2012, Vladimir Agafonkin\n// All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are met:\n//\n//    1. Redistributions of source code must retain the above copyright notice,\n//       this list of conditions and the following disclaimer.\n//\n//    2. Redistributions in binary form must reproduce the above copyright\n//       notice, this list of conditions and the following disclaimer in the\n//       documentation and/or other materials provided with the distribution.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n// AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n// ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n// LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n// CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n// SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n// INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n// CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n// ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n// POSSIBILITY OF SUCH DAMAGE.\nimport { squaredSegmentDistance, squaredDistance } from '../../math.js';\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {boolean} highQuality Highest quality.\n * @param {Array<number>=} opt_simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @return {Array<number>} Simplified line string.\n */\nexport function simplifyLineString(flatCoordinates, offset, end, stride, squaredTolerance, highQuality, opt_simplifiedFlatCoordinates) {\n    var simplifiedFlatCoordinates = opt_simplifiedFlatCoordinates !== undefined ?\n        opt_simplifiedFlatCoordinates : [];\n    if (!highQuality) {\n        end = radialDistance(flatCoordinates, offset, end, stride, squaredTolerance, simplifiedFlatCoordinates, 0);\n        flatCoordinates = simplifiedFlatCoordinates;\n        offset = 0;\n        stride = 2;\n    }\n    simplifiedFlatCoordinates.length = douglasPeucker(flatCoordinates, offset, end, stride, squaredTolerance, simplifiedFlatCoordinates, 0);\n    return simplifiedFlatCoordinates;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function douglasPeucker(flatCoordinates, offset, end, stride, squaredTolerance, simplifiedFlatCoordinates, simplifiedOffset) {\n    var n = (end - offset) / stride;\n    if (n < 3) {\n        for (; offset < end; offset += stride) {\n            simplifiedFlatCoordinates[simplifiedOffset++] =\n                flatCoordinates[offset];\n            simplifiedFlatCoordinates[simplifiedOffset++] =\n                flatCoordinates[offset + 1];\n        }\n        return simplifiedOffset;\n    }\n    /** @type {Array<number>} */\n    var markers = new Array(n);\n    markers[0] = 1;\n    markers[n - 1] = 1;\n    /** @type {Array<number>} */\n    var stack = [offset, end - stride];\n    var index = 0;\n    while (stack.length > 0) {\n        var last = stack.pop();\n        var first = stack.pop();\n        var maxSquaredDistance = 0;\n        var x1 = flatCoordinates[first];\n        var y1 = flatCoordinates[first + 1];\n        var x2 = flatCoordinates[last];\n        var y2 = flatCoordinates[last + 1];\n        for (var i = first + stride; i < last; i += stride) {\n            var x = flatCoordinates[i];\n            var y = flatCoordinates[i + 1];\n            var squaredDistance_1 = squaredSegmentDistance(x, y, x1, y1, x2, y2);\n            if (squaredDistance_1 > maxSquaredDistance) {\n                index = i;\n                maxSquaredDistance = squaredDistance_1;\n            }\n        }\n        if (maxSquaredDistance > squaredTolerance) {\n            markers[(index - offset) / stride] = 1;\n            if (first + stride < index) {\n                stack.push(first, index);\n            }\n            if (index + stride < last) {\n                stack.push(index, last);\n            }\n        }\n    }\n    for (var i = 0; i < n; ++i) {\n        if (markers[i]) {\n            simplifiedFlatCoordinates[simplifiedOffset++] =\n                flatCoordinates[offset + i * stride];\n            simplifiedFlatCoordinates[simplifiedOffset++] =\n                flatCoordinates[offset + i * stride + 1];\n        }\n    }\n    return simplifiedOffset;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerArray(flatCoordinates, offset, ends, stride, squaredTolerance, simplifiedFlatCoordinates, simplifiedOffset, simplifiedEnds) {\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n        var end = ends[i];\n        simplifiedOffset = douglasPeucker(flatCoordinates, offset, end, stride, squaredTolerance, simplifiedFlatCoordinates, simplifiedOffset);\n        simplifiedEnds.push(simplifiedOffset);\n        offset = end;\n    }\n    return simplifiedOffset;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerMultiArray(flatCoordinates, offset, endss, stride, squaredTolerance, simplifiedFlatCoordinates, simplifiedOffset, simplifiedEndss) {\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        var simplifiedEnds = [];\n        simplifiedOffset = douglasPeuckerArray(flatCoordinates, offset, ends, stride, squaredTolerance, simplifiedFlatCoordinates, simplifiedOffset, simplifiedEnds);\n        simplifiedEndss.push(simplifiedEnds);\n        offset = ends[ends.length - 1];\n    }\n    return simplifiedOffset;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function radialDistance(flatCoordinates, offset, end, stride, squaredTolerance, simplifiedFlatCoordinates, simplifiedOffset) {\n    if (end <= offset + stride) {\n        // zero or one point, no simplification possible, so copy and return\n        for (; offset < end; offset += stride) {\n            simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n            simplifiedFlatCoordinates[simplifiedOffset++] =\n                flatCoordinates[offset + 1];\n        }\n        return simplifiedOffset;\n    }\n    var x1 = flatCoordinates[offset];\n    var y1 = flatCoordinates[offset + 1];\n    // copy first point\n    simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n    var x2 = x1;\n    var y2 = y1;\n    for (offset += stride; offset < end; offset += stride) {\n        x2 = flatCoordinates[offset];\n        y2 = flatCoordinates[offset + 1];\n        if (squaredDistance(x1, y1, x2, y2) > squaredTolerance) {\n            // copy point at offset\n            simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n            simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n            x1 = x2;\n            y1 = y2;\n        }\n    }\n    if (x2 != x1 || y2 != y1) {\n        // copy last point\n        simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n        simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n    }\n    return simplifiedOffset;\n}\n/**\n * @param {number} value Value.\n * @param {number} tolerance Tolerance.\n * @return {number} Rounded value.\n */\nexport function snap(value, tolerance) {\n    return tolerance * Math.round(value / tolerance);\n}\n/**\n * Simplifies a line string using an algorithm designed by Tim Schaub.\n * Coordinates are snapped to the nearest value in a virtual grid and\n * consecutive duplicate coordinates are discarded.  This effectively preserves\n * topology as the simplification of any subsection of a line string is\n * independent of the rest of the line string.  This means that, for examples,\n * the common edge between two polygons will be simplified to the same line\n * string independently in both polygons.  This implementation uses a single\n * pass over the coordinates and eliminates intermediate collinear points.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function quantize(flatCoordinates, offset, end, stride, tolerance, simplifiedFlatCoordinates, simplifiedOffset) {\n    // do nothing if the line is empty\n    if (offset == end) {\n        return simplifiedOffset;\n    }\n    // snap the first coordinate (P1)\n    var x1 = snap(flatCoordinates[offset], tolerance);\n    var y1 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    // add the first coordinate to the output\n    simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n    // find the next coordinate that does not snap to the same value as the first\n    // coordinate (P2)\n    var x2, y2;\n    do {\n        x2 = snap(flatCoordinates[offset], tolerance);\n        y2 = snap(flatCoordinates[offset + 1], tolerance);\n        offset += stride;\n        if (offset == end) {\n            // all coordinates snap to the same value, the line collapses to a point\n            // push the last snapped value anyway to ensure that the output contains\n            // at least two points\n            // FIXME should we really return at least two points anyway?\n            simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n            simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n            return simplifiedOffset;\n        }\n    } while (x2 == x1 && y2 == y1);\n    while (offset < end) {\n        // snap the next coordinate (P3)\n        var x3 = snap(flatCoordinates[offset], tolerance);\n        var y3 = snap(flatCoordinates[offset + 1], tolerance);\n        offset += stride;\n        // skip P3 if it is equal to P2\n        if (x3 == x2 && y3 == y2) {\n            continue;\n        }\n        // calculate the delta between P1 and P2\n        var dx1 = x2 - x1;\n        var dy1 = y2 - y1;\n        // calculate the delta between P3 and P1\n        var dx2 = x3 - x1;\n        var dy2 = y3 - y1;\n        // if P1, P2, and P3 are colinear and P3 is further from P1 than P2 is from\n        // P1 in the same direction then P2 is on the straight line between P1 and\n        // P3\n        if ((dx1 * dy2 == dy1 * dx2) &&\n            ((dx1 < 0 && dx2 < dx1) || dx1 == dx2 || (dx1 > 0 && dx2 > dx1)) &&\n            ((dy1 < 0 && dy2 < dy1) || dy1 == dy2 || (dy1 > 0 && dy2 > dy1))) {\n            // discard P2 and set P2 = P3\n            x2 = x3;\n            y2 = y3;\n            continue;\n        }\n        // either P1, P2, and P3 are not colinear, or they are colinear but P3 is\n        // between P3 and P1 or on the opposite half of the line to P2.  add P2,\n        // and continue with P1 = P2 and P2 = P3\n        simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n        simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n        x1 = x2;\n        y1 = y2;\n        x2 = x3;\n        y2 = y3;\n    }\n    // add the last point (P2)\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n    return simplifiedOffset;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function quantizeArray(flatCoordinates, offset, ends, stride, tolerance, simplifiedFlatCoordinates, simplifiedOffset, simplifiedEnds) {\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n        var end = ends[i];\n        simplifiedOffset = quantize(flatCoordinates, offset, end, stride, tolerance, simplifiedFlatCoordinates, simplifiedOffset);\n        simplifiedEnds.push(simplifiedOffset);\n        offset = end;\n    }\n    return simplifiedOffset;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function quantizeMultiArray(flatCoordinates, offset, endss, stride, tolerance, simplifiedFlatCoordinates, simplifiedOffset, simplifiedEndss) {\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        var simplifiedEnds = [];\n        simplifiedOffset = quantizeArray(flatCoordinates, offset, ends, stride, tolerance, simplifiedFlatCoordinates, simplifiedOffset, simplifiedEnds);\n        simplifiedEndss.push(simplifiedEnds);\n        offset = ends[ends.length - 1];\n    }\n    return simplifiedOffset;\n}\n//# sourceMappingURL=simplify.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/geom/LinearRing\n */\nimport { closestSquaredDistanceXY } from '../extent.js';\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport { linearRing as linearRingArea } from './flat/area.js';\nimport { assignClosestPoint, maxSquaredDelta } from './flat/closest.js';\nimport { deflateCoordinates } from './flat/deflate.js';\nimport { inflateCoordinates } from './flat/inflate.js';\nimport { douglasPeucker } from './flat/simplify.js';\n/**\n * @classdesc\n * Linear ring geometry. Only used as part of polygon; cannot be rendered\n * on its own.\n *\n * @api\n */\nvar LinearRing = /** @class */ (function (_super) {\n    __extends(LinearRing, _super);\n    /**\n     * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n     *     For internal use, flat coordinates in combination with `opt_layout` are also accepted.\n     * @param {GeometryLayout=} opt_layout Layout.\n     */\n    function LinearRing(coordinates, opt_layout) {\n        var _this = _super.call(this) || this;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.maxDelta_ = -1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.maxDeltaRevision_ = -1;\n        if (opt_layout !== undefined && !Array.isArray(coordinates[0])) {\n            _this.setFlatCoordinates(opt_layout, /** @type {Array<number>} */ (coordinates));\n        }\n        else {\n            _this.setCoordinates(/** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (coordinates), opt_layout);\n        }\n        return _this;\n    }\n    /**\n     * Make a complete copy of the geometry.\n     * @return {!LinearRing} Clone.\n     * @override\n     * @api\n     */\n    LinearRing.prototype.clone = function () {\n        return new LinearRing(this.flatCoordinates.slice(), this.layout);\n    };\n    /**\n     * @inheritDoc\n     */\n    LinearRing.prototype.closestPointXY = function (x, y, closestPoint, minSquaredDistance) {\n        if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n            return minSquaredDistance;\n        }\n        if (this.maxDeltaRevision_ != this.getRevision()) {\n            this.maxDelta_ = Math.sqrt(maxSquaredDelta(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, 0));\n            this.maxDeltaRevision_ = this.getRevision();\n        }\n        return assignClosestPoint(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, this.maxDelta_, true, x, y, closestPoint, minSquaredDistance);\n    };\n    /**\n     * Return the area of the linear ring on projected plane.\n     * @return {number} Area (on projected plane).\n     * @api\n     */\n    LinearRing.prototype.getArea = function () {\n        return linearRingArea(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n    };\n    /**\n     * Return the coordinates of the linear ring.\n     * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n     * @override\n     * @api\n     */\n    LinearRing.prototype.getCoordinates = function () {\n        return inflateCoordinates(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n    };\n    /**\n     * @inheritDoc\n     */\n    LinearRing.prototype.getSimplifiedGeometryInternal = function (squaredTolerance) {\n        var simplifiedFlatCoordinates = [];\n        simplifiedFlatCoordinates.length = douglasPeucker(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, squaredTolerance, simplifiedFlatCoordinates, 0);\n        return new LinearRing(simplifiedFlatCoordinates, GeometryLayout.XY);\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    LinearRing.prototype.getType = function () {\n        return GeometryType.LINEAR_RING;\n    };\n    /**\n     * @inheritDoc\n     */\n    LinearRing.prototype.intersectsExtent = function (extent) {\n        return false;\n    };\n    /**\n     * Set the coordinates of the linear ring.\n     * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n     * @param {GeometryLayout=} opt_layout Layout.\n     * @override\n     * @api\n     */\n    LinearRing.prototype.setCoordinates = function (coordinates, opt_layout) {\n        this.setLayout(opt_layout, coordinates, 1);\n        if (!this.flatCoordinates) {\n            this.flatCoordinates = [];\n        }\n        this.flatCoordinates.length = deflateCoordinates(this.flatCoordinates, 0, coordinates, this.stride);\n        this.changed();\n    };\n    return LinearRing;\n}(SimpleGeometry));\nexport default LinearRing;\n//# sourceMappingURL=LinearRing.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/geom/Point\n */\nimport { createOrUpdateFromCoordinate, containsXY } from '../extent.js';\nimport GeometryType from './GeometryType.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport { deflateCoordinate } from './flat/deflate.js';\nimport { squaredDistance as squaredDx } from '../math.js';\n/**\n * @classdesc\n * Point geometry.\n *\n * @api\n */\nvar Point = /** @class */ (function (_super) {\n    __extends(Point, _super);\n    /**\n     * @param {import(\"../coordinate.js\").Coordinate} coordinates Coordinates.\n     * @param {import(\"./GeometryLayout.js\").default=} opt_layout Layout.\n     */\n    function Point(coordinates, opt_layout) {\n        var _this = _super.call(this) || this;\n        _this.setCoordinates(coordinates, opt_layout);\n        return _this;\n    }\n    /**\n     * Make a complete copy of the geometry.\n     * @return {!Point} Clone.\n     * @override\n     * @api\n     */\n    Point.prototype.clone = function () {\n        var point = new Point(this.flatCoordinates.slice(), this.layout);\n        return point;\n    };\n    /**\n     * @inheritDoc\n     */\n    Point.prototype.closestPointXY = function (x, y, closestPoint, minSquaredDistance) {\n        var flatCoordinates = this.flatCoordinates;\n        var squaredDistance = squaredDx(x, y, flatCoordinates[0], flatCoordinates[1]);\n        if (squaredDistance < minSquaredDistance) {\n            var stride = this.stride;\n            for (var i = 0; i < stride; ++i) {\n                closestPoint[i] = flatCoordinates[i];\n            }\n            closestPoint.length = stride;\n            return squaredDistance;\n        }\n        else {\n            return minSquaredDistance;\n        }\n    };\n    /**\n     * Return the coordinate of the point.\n     * @return {import(\"../coordinate.js\").Coordinate} Coordinates.\n     * @override\n     * @api\n     */\n    Point.prototype.getCoordinates = function () {\n        return !this.flatCoordinates ? [] : this.flatCoordinates.slice();\n    };\n    /**\n     * @inheritDoc\n     */\n    Point.prototype.computeExtent = function (extent) {\n        return createOrUpdateFromCoordinate(this.flatCoordinates, extent);\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    Point.prototype.getType = function () {\n        return GeometryType.POINT;\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    Point.prototype.intersectsExtent = function (extent) {\n        return containsXY(extent, this.flatCoordinates[0], this.flatCoordinates[1]);\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    Point.prototype.setCoordinates = function (coordinates, opt_layout) {\n        this.setLayout(opt_layout, coordinates, 0);\n        if (!this.flatCoordinates) {\n            this.flatCoordinates = [];\n        }\n        this.flatCoordinates.length = deflateCoordinate(this.flatCoordinates, 0, coordinates, this.stride);\n        this.changed();\n    };\n    return Point;\n}(SimpleGeometry));\nexport default Point;\n//# sourceMappingURL=Point.js.map","/**\n * @module ol/geom/flat/contains\n */\nimport { forEachCorner } from '../../extent.js';\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} Contains extent.\n */\nexport function linearRingContainsExtent(flatCoordinates, offset, end, stride, extent) {\n    var outside = forEachCorner(extent, \n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @return {boolean} Contains (x, y).\n     */\n    function (coordinate) {\n        return !linearRingContainsXY(flatCoordinates, offset, end, stride, coordinate[0], coordinate[1]);\n    });\n    return !outside;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingContainsXY(flatCoordinates, offset, end, stride, x, y) {\n    // http://geomalgorithms.com/a03-_inclusion.html\n    // Copyright 2000 softSurfer, 2012 Dan Sunday\n    // This code may be freely used and modified for any purpose\n    // providing that this copyright notice is included with it.\n    // SoftSurfer makes no warranty for this code, and cannot be held\n    // liable for any real or imagined damage resulting from its use.\n    // Users of this code must verify correctness for their application.\n    var wn = 0;\n    var x1 = flatCoordinates[end - stride];\n    var y1 = flatCoordinates[end - stride + 1];\n    for (; offset < end; offset += stride) {\n        var x2 = flatCoordinates[offset];\n        var y2 = flatCoordinates[offset + 1];\n        if (y1 <= y) {\n            if (y2 > y && ((x2 - x1) * (y - y1)) - ((x - x1) * (y2 - y1)) > 0) {\n                wn++;\n            }\n        }\n        else if (y2 <= y && ((x2 - x1) * (y - y1)) - ((x - x1) * (y2 - y1)) < 0) {\n            wn--;\n        }\n        x1 = x2;\n        y1 = y2;\n    }\n    return wn !== 0;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y) {\n    if (ends.length === 0) {\n        return false;\n    }\n    if (!linearRingContainsXY(flatCoordinates, offset, ends[0], stride, x, y)) {\n        return false;\n    }\n    for (var i = 1, ii = ends.length; i < ii; ++i) {\n        if (linearRingContainsXY(flatCoordinates, ends[i - 1], ends[i], stride, x, y)) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingssContainsXY(flatCoordinates, offset, endss, stride, x, y) {\n    if (endss.length === 0) {\n        return false;\n    }\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n            return true;\n        }\n        offset = ends[ends.length - 1];\n    }\n    return false;\n}\n//# sourceMappingURL=contains.js.map","/**\n * @module ol/geom/flat/interiorpoint\n */\nimport { numberSafeCompareFunction } from '../../array.js';\nimport { linearRingsContainsXY } from './contains.js';\n/**\n * Calculates a point that is likely to lie in the interior of the linear rings.\n * Inspired by JTS's com.vividsolutions.jts.geom.Geometry#getInteriorPoint.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @param {number} flatCentersOffset Flat center offset.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Destination point as XYM coordinate, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointOfArray(flatCoordinates, offset, ends, stride, flatCenters, flatCentersOffset, opt_dest) {\n    var i, ii, x, x1, x2, y1, y2;\n    var y = flatCenters[flatCentersOffset + 1];\n    /** @type {Array<number>} */\n    var intersections = [];\n    // Calculate intersections with the horizontal line\n    for (var r = 0, rr = ends.length; r < rr; ++r) {\n        var end = ends[r];\n        x1 = flatCoordinates[end - stride];\n        y1 = flatCoordinates[end - stride + 1];\n        for (i = offset; i < end; i += stride) {\n            x2 = flatCoordinates[i];\n            y2 = flatCoordinates[i + 1];\n            if ((y <= y1 && y2 <= y) || (y1 <= y && y <= y2)) {\n                x = (y - y1) / (y2 - y1) * (x2 - x1) + x1;\n                intersections.push(x);\n            }\n            x1 = x2;\n            y1 = y2;\n        }\n    }\n    // Find the longest segment of the horizontal line that has its center point\n    // inside the linear ring.\n    var pointX = NaN;\n    var maxSegmentLength = -Infinity;\n    intersections.sort(numberSafeCompareFunction);\n    x1 = intersections[0];\n    for (i = 1, ii = intersections.length; i < ii; ++i) {\n        x2 = intersections[i];\n        var segmentLength = Math.abs(x2 - x1);\n        if (segmentLength > maxSegmentLength) {\n            x = (x1 + x2) / 2;\n            if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n                pointX = x;\n                maxSegmentLength = segmentLength;\n            }\n        }\n        x1 = x2;\n    }\n    if (isNaN(pointX)) {\n        // There is no horizontal line that has its center point inside the linear\n        // ring.  Use the center of the the linear ring's extent.\n        pointX = flatCenters[flatCentersOffset];\n    }\n    if (opt_dest) {\n        opt_dest.push(pointX, y, maxSegmentLength);\n        return opt_dest;\n    }\n    else {\n        return [pointX, y, maxSegmentLength];\n    }\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @return {Array<number>} Interior points as XYM coordinates, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointsOfMultiArray(flatCoordinates, offset, endss, stride, flatCenters) {\n    var interiorPoints = [];\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        interiorPoints = getInteriorPointOfArray(flatCoordinates, offset, ends, stride, flatCenters, 2 * i, interiorPoints);\n        offset = ends[ends.length - 1];\n    }\n    return interiorPoints;\n}\n//# sourceMappingURL=interiorpoint.js.map","/**\n * @module ol/geom/flat/segments\n */\n/**\n * This function calls `callback` for each segment of the flat coordinates\n * array. If the callback returns a truthy value the function returns that\n * value immediately. Otherwise the function returns `false`.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {function(import(\"../../coordinate.js\").Coordinate, import(\"../../coordinate.js\").Coordinate): T} callback Function\n *     called for each segment.\n * @return {T|boolean} Value.\n * @template T\n */\nexport function forEach(flatCoordinates, offset, end, stride, callback) {\n    var point1 = [flatCoordinates[offset], flatCoordinates[offset + 1]];\n    var point2 = [];\n    var ret;\n    for (; (offset + stride) < end; offset += stride) {\n        point2[0] = flatCoordinates[offset + stride];\n        point2[1] = flatCoordinates[offset + stride + 1];\n        ret = callback(point1, point2);\n        if (ret) {\n            return ret;\n        }\n        point1[0] = point2[0];\n        point1[1] = point2[1];\n    }\n    return false;\n}\n//# sourceMappingURL=segments.js.map","/**\n * @module ol/geom/flat/intersectsextent\n */\nimport { containsExtent, createEmpty, extendFlatCoordinates, intersects, intersectsSegment } from '../../extent.js';\nimport { linearRingContainsXY, linearRingContainsExtent } from './contains.js';\nimport { forEach as forEachSegment } from './segments.js';\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineString(flatCoordinates, offset, end, stride, extent) {\n    var coordinatesExtent = extendFlatCoordinates(createEmpty(), flatCoordinates, offset, end, stride);\n    if (!intersects(extent, coordinatesExtent)) {\n        return false;\n    }\n    if (containsExtent(extent, coordinatesExtent)) {\n        return true;\n    }\n    if (coordinatesExtent[0] >= extent[0] &&\n        coordinatesExtent[2] <= extent[2]) {\n        return true;\n    }\n    if (coordinatesExtent[1] >= extent[1] &&\n        coordinatesExtent[3] <= extent[3]) {\n        return true;\n    }\n    return forEachSegment(flatCoordinates, offset, end, stride, \n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} point1 Start point.\n     * @param {import(\"../../coordinate.js\").Coordinate} point2 End point.\n     * @return {boolean} `true` if the segment and the extent intersect,\n     *     `false` otherwise.\n     */\n    function (point1, point2) {\n        return intersectsSegment(extent, point1, point2);\n    });\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineStringArray(flatCoordinates, offset, ends, stride, extent) {\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n        if (intersectsLineString(flatCoordinates, offset, ends[i], stride, extent)) {\n            return true;\n        }\n        offset = ends[i];\n    }\n    return false;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRing(flatCoordinates, offset, end, stride, extent) {\n    if (intersectsLineString(flatCoordinates, offset, end, stride, extent)) {\n        return true;\n    }\n    if (linearRingContainsXY(flatCoordinates, offset, end, stride, extent[0], extent[1])) {\n        return true;\n    }\n    if (linearRingContainsXY(flatCoordinates, offset, end, stride, extent[0], extent[3])) {\n        return true;\n    }\n    if (linearRingContainsXY(flatCoordinates, offset, end, stride, extent[2], extent[1])) {\n        return true;\n    }\n    if (linearRingContainsXY(flatCoordinates, offset, end, stride, extent[2], extent[3])) {\n        return true;\n    }\n    return false;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingArray(flatCoordinates, offset, ends, stride, extent) {\n    if (!intersectsLinearRing(flatCoordinates, offset, ends[0], stride, extent)) {\n        return false;\n    }\n    if (ends.length === 1) {\n        return true;\n    }\n    for (var i = 1, ii = ends.length; i < ii; ++i) {\n        if (linearRingContainsExtent(flatCoordinates, ends[i - 1], ends[i], stride, extent)) {\n            if (!intersectsLineString(flatCoordinates, ends[i - 1], ends[i], stride, extent)) {\n                return false;\n            }\n        }\n    }\n    return true;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingMultiArray(flatCoordinates, offset, endss, stride, extent) {\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        if (intersectsLinearRingArray(flatCoordinates, offset, ends, stride, extent)) {\n            return true;\n        }\n        offset = ends[ends.length - 1];\n    }\n    return false;\n}\n//# sourceMappingURL=intersectsextent.js.map","/**\n * @module ol/geom/flat/reverse\n */\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n */\nexport function coordinates(flatCoordinates, offset, end, stride) {\n    while (offset < end - stride) {\n        for (var i = 0; i < stride; ++i) {\n            var tmp = flatCoordinates[offset + i];\n            flatCoordinates[offset + i] = flatCoordinates[end - stride + i];\n            flatCoordinates[end - stride + i] = tmp;\n        }\n        offset += stride;\n        end -= stride;\n    }\n}\n//# sourceMappingURL=reverse.js.map","/**\n * @module ol/geom/flat/orient\n */\nimport { coordinates as reverseCoordinates } from './reverse.js';\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {boolean} Is clockwise.\n */\nexport function linearRingIsClockwise(flatCoordinates, offset, end, stride) {\n    // http://tinyurl.com/clockwise-method\n    // https://github.com/OSGeo/gdal/blob/trunk/gdal/ogr/ogrlinearring.cpp\n    var edge = 0;\n    var x1 = flatCoordinates[end - stride];\n    var y1 = flatCoordinates[end - stride + 1];\n    for (; offset < end; offset += stride) {\n        var x2 = flatCoordinates[offset];\n        var y2 = flatCoordinates[offset + 1];\n        edge += (x2 - x1) * (y2 + y1);\n        x1 = x2;\n        y1 = y2;\n    }\n    return edge > 0;\n}\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean=} opt_right Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingsAreOriented(flatCoordinates, offset, ends, stride, opt_right) {\n    var right = opt_right !== undefined ? opt_right : false;\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n        var end = ends[i];\n        var isClockwise = linearRingIsClockwise(flatCoordinates, offset, end, stride);\n        if (i === 0) {\n            if ((right && isClockwise) || (!right && !isClockwise)) {\n                return false;\n            }\n        }\n        else {\n            if ((right && !isClockwise) || (!right && isClockwise)) {\n                return false;\n            }\n        }\n        offset = end;\n    }\n    return true;\n}\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean=} opt_right Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingssAreOriented(flatCoordinates, offset, endss, stride, opt_right) {\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        if (!linearRingsAreOriented(flatCoordinates, offset, ends, stride, opt_right)) {\n            return false;\n        }\n        if (ends.length) {\n            offset = ends[ends.length - 1];\n        }\n    }\n    return true;\n}\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {boolean=} opt_right Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRings(flatCoordinates, offset, ends, stride, opt_right) {\n    var right = opt_right !== undefined ? opt_right : false;\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n        var end = ends[i];\n        var isClockwise = linearRingIsClockwise(flatCoordinates, offset, end, stride);\n        var reverse = i === 0 ?\n            (right && isClockwise) || (!right && !isClockwise) :\n            (right && !isClockwise) || (!right && isClockwise);\n        if (reverse) {\n            reverseCoordinates(flatCoordinates, offset, end, stride);\n        }\n        offset = end;\n    }\n    return offset;\n}\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean=} opt_right Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRingsArray(flatCoordinates, offset, endss, stride, opt_right) {\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        offset = orientLinearRings(flatCoordinates, offset, endss[i], stride, opt_right);\n    }\n    return offset;\n}\n//# sourceMappingURL=orient.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/geom/Polygon\n */\nimport { extend } from '../array.js';\nimport { closestSquaredDistanceXY, getCenter } from '../extent.js';\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport LinearRing from './LinearRing.js';\nimport Point from './Point.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport { offset as sphereOffset } from '../sphere.js';\nimport { linearRings as linearRingsArea } from './flat/area.js';\nimport { assignClosestArrayPoint, arrayMaxSquaredDelta } from './flat/closest.js';\nimport { linearRingsContainsXY } from './flat/contains.js';\nimport { deflateCoordinatesArray } from './flat/deflate.js';\nimport { inflateCoordinatesArray } from './flat/inflate.js';\nimport { getInteriorPointOfArray } from './flat/interiorpoint.js';\nimport { intersectsLinearRingArray } from './flat/intersectsextent.js';\nimport { linearRingsAreOriented, orientLinearRings } from './flat/orient.js';\nimport { quantizeArray } from './flat/simplify.js';\nimport { modulo } from '../math.js';\n/**\n * @classdesc\n * Polygon geometry.\n *\n * @api\n */\nvar Polygon = /** @class */ (function (_super) {\n    __extends(Polygon, _super);\n    /**\n     * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>|!Array<number>} coordinates\n     *     Array of linear rings that define the polygon. The first linear ring of the\n     *     array defines the outer-boundary or surface of the polygon. Each subsequent\n     *     linear ring defines a hole in the surface of the polygon. A linear ring is\n     *     an array of vertices' coordinates where the first coordinate and the last are\n     *     equivalent. (For internal use, flat coordinates in combination with\n     *     `opt_layout` and `opt_ends` are also accepted.)\n     * @param {GeometryLayout=} opt_layout Layout.\n     * @param {Array<number>=} opt_ends Ends (for internal use with flat coordinates).\n     */\n    function Polygon(coordinates, opt_layout, opt_ends) {\n        var _this = _super.call(this) || this;\n        /**\n         * @type {Array<number>}\n         * @private\n         */\n        _this.ends_ = [];\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.flatInteriorPointRevision_ = -1;\n        /**\n         * @private\n         * @type {import(\"../coordinate.js\").Coordinate}\n         */\n        _this.flatInteriorPoint_ = null;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.maxDelta_ = -1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.maxDeltaRevision_ = -1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.orientedRevision_ = -1;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        _this.orientedFlatCoordinates_ = null;\n        if (opt_layout !== undefined && opt_ends) {\n            _this.setFlatCoordinates(opt_layout, /** @type {Array<number>} */ (coordinates));\n            _this.ends_ = opt_ends;\n        }\n        else {\n            _this.setCoordinates(/** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */ (coordinates), opt_layout);\n        }\n        return _this;\n    }\n    /**\n     * Append the passed linear ring to this polygon.\n     * @param {LinearRing} linearRing Linear ring.\n     * @api\n     */\n    Polygon.prototype.appendLinearRing = function (linearRing) {\n        if (!this.flatCoordinates) {\n            this.flatCoordinates = linearRing.getFlatCoordinates().slice();\n        }\n        else {\n            extend(this.flatCoordinates, linearRing.getFlatCoordinates());\n        }\n        this.ends_.push(this.flatCoordinates.length);\n        this.changed();\n    };\n    /**\n     * Make a complete copy of the geometry.\n     * @return {!Polygon} Clone.\n     * @override\n     * @api\n     */\n    Polygon.prototype.clone = function () {\n        return new Polygon(this.flatCoordinates.slice(), this.layout, this.ends_.slice());\n    };\n    /**\n     * @inheritDoc\n     */\n    Polygon.prototype.closestPointXY = function (x, y, closestPoint, minSquaredDistance) {\n        if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n            return minSquaredDistance;\n        }\n        if (this.maxDeltaRevision_ != this.getRevision()) {\n            this.maxDelta_ = Math.sqrt(arrayMaxSquaredDelta(this.flatCoordinates, 0, this.ends_, this.stride, 0));\n            this.maxDeltaRevision_ = this.getRevision();\n        }\n        return assignClosestArrayPoint(this.flatCoordinates, 0, this.ends_, this.stride, this.maxDelta_, true, x, y, closestPoint, minSquaredDistance);\n    };\n    /**\n     * @inheritDoc\n     */\n    Polygon.prototype.containsXY = function (x, y) {\n        return linearRingsContainsXY(this.getOrientedFlatCoordinates(), 0, this.ends_, this.stride, x, y);\n    };\n    /**\n     * Return the area of the polygon on projected plane.\n     * @return {number} Area (on projected plane).\n     * @api\n     */\n    Polygon.prototype.getArea = function () {\n        return linearRingsArea(this.getOrientedFlatCoordinates(), 0, this.ends_, this.stride);\n    };\n    /**\n     * Get the coordinate array for this geometry.  This array has the structure\n     * of a GeoJSON coordinate array for polygons.\n     *\n     * @param {boolean=} opt_right Orient coordinates according to the right-hand\n     *     rule (counter-clockwise for exterior and clockwise for interior rings).\n     *     If `false`, coordinates will be oriented according to the left-hand rule\n     *     (clockwise for exterior and counter-clockwise for interior rings).\n     *     By default, coordinate orientation will depend on how the geometry was\n     *     constructed.\n     * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\n     * @override\n     * @api\n     */\n    Polygon.prototype.getCoordinates = function (opt_right) {\n        var flatCoordinates;\n        if (opt_right !== undefined) {\n            flatCoordinates = this.getOrientedFlatCoordinates().slice();\n            orientLinearRings(flatCoordinates, 0, this.ends_, this.stride, opt_right);\n        }\n        else {\n            flatCoordinates = this.flatCoordinates;\n        }\n        return inflateCoordinatesArray(flatCoordinates, 0, this.ends_, this.stride);\n    };\n    /**\n     * @return {Array<number>} Ends.\n     */\n    Polygon.prototype.getEnds = function () {\n        return this.ends_;\n    };\n    /**\n     * @return {Array<number>} Interior point.\n     */\n    Polygon.prototype.getFlatInteriorPoint = function () {\n        if (this.flatInteriorPointRevision_ != this.getRevision()) {\n            var flatCenter = getCenter(this.getExtent());\n            this.flatInteriorPoint_ = getInteriorPointOfArray(this.getOrientedFlatCoordinates(), 0, this.ends_, this.stride, flatCenter, 0);\n            this.flatInteriorPointRevision_ = this.getRevision();\n        }\n        return this.flatInteriorPoint_;\n    };\n    /**\n     * Return an interior point of the polygon.\n     * @return {Point} Interior point as XYM coordinate, where M is the\n     * length of the horizontal intersection that the point belongs to.\n     * @api\n     */\n    Polygon.prototype.getInteriorPoint = function () {\n        return new Point(this.getFlatInteriorPoint(), GeometryLayout.XYM);\n    };\n    /**\n     * Return the number of rings of the polygon,  this includes the exterior\n     * ring and any interior rings.\n     *\n     * @return {number} Number of rings.\n     * @api\n     */\n    Polygon.prototype.getLinearRingCount = function () {\n        return this.ends_.length;\n    };\n    /**\n     * Return the Nth linear ring of the polygon geometry. Return `null` if the\n     * given index is out of range.\n     * The exterior linear ring is available at index `0` and the interior rings\n     * at index `1` and beyond.\n     *\n     * @param {number} index Index.\n     * @return {LinearRing} Linear ring.\n     * @api\n     */\n    Polygon.prototype.getLinearRing = function (index) {\n        if (index < 0 || this.ends_.length <= index) {\n            return null;\n        }\n        return new LinearRing(this.flatCoordinates.slice(index === 0 ? 0 : this.ends_[index - 1], this.ends_[index]), this.layout);\n    };\n    /**\n     * Return the linear rings of the polygon.\n     * @return {Array<LinearRing>} Linear rings.\n     * @api\n     */\n    Polygon.prototype.getLinearRings = function () {\n        var layout = this.layout;\n        var flatCoordinates = this.flatCoordinates;\n        var ends = this.ends_;\n        var linearRings = [];\n        var offset = 0;\n        for (var i = 0, ii = ends.length; i < ii; ++i) {\n            var end = ends[i];\n            var linearRing = new LinearRing(flatCoordinates.slice(offset, end), layout);\n            linearRings.push(linearRing);\n            offset = end;\n        }\n        return linearRings;\n    };\n    /**\n     * @return {Array<number>} Oriented flat coordinates.\n     */\n    Polygon.prototype.getOrientedFlatCoordinates = function () {\n        if (this.orientedRevision_ != this.getRevision()) {\n            var flatCoordinates = this.flatCoordinates;\n            if (linearRingsAreOriented(flatCoordinates, 0, this.ends_, this.stride)) {\n                this.orientedFlatCoordinates_ = flatCoordinates;\n            }\n            else {\n                this.orientedFlatCoordinates_ = flatCoordinates.slice();\n                this.orientedFlatCoordinates_.length =\n                    orientLinearRings(this.orientedFlatCoordinates_, 0, this.ends_, this.stride);\n            }\n            this.orientedRevision_ = this.getRevision();\n        }\n        return this.orientedFlatCoordinates_;\n    };\n    /**\n     * @inheritDoc\n     */\n    Polygon.prototype.getSimplifiedGeometryInternal = function (squaredTolerance) {\n        var simplifiedFlatCoordinates = [];\n        var simplifiedEnds = [];\n        simplifiedFlatCoordinates.length = quantizeArray(this.flatCoordinates, 0, this.ends_, this.stride, Math.sqrt(squaredTolerance), simplifiedFlatCoordinates, 0, simplifiedEnds);\n        return new Polygon(simplifiedFlatCoordinates, GeometryLayout.XY, simplifiedEnds);\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    Polygon.prototype.getType = function () {\n        return GeometryType.POLYGON;\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    Polygon.prototype.intersectsExtent = function (extent) {\n        return intersectsLinearRingArray(this.getOrientedFlatCoordinates(), 0, this.ends_, this.stride, extent);\n    };\n    /**\n     * Set the coordinates of the polygon.\n     * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\n     * @param {GeometryLayout=} opt_layout Layout.\n     * @override\n     * @api\n     */\n    Polygon.prototype.setCoordinates = function (coordinates, opt_layout) {\n        this.setLayout(opt_layout, coordinates, 2);\n        if (!this.flatCoordinates) {\n            this.flatCoordinates = [];\n        }\n        var ends = deflateCoordinatesArray(this.flatCoordinates, 0, coordinates, this.stride, this.ends_);\n        this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n        this.changed();\n    };\n    return Polygon;\n}(SimpleGeometry));\nexport default Polygon;\n/**\n * Create an approximation of a circle on the surface of a sphere.\n * @param {import(\"../coordinate.js\").Coordinate} center Center (`[lon, lat]` in degrees).\n * @param {number} radius The great-circle distance from the center to\n *     the polygon vertices.\n * @param {number=} opt_n Optional number of vertices for the resulting\n *     polygon. Default is `32`.\n * @param {number=} opt_sphereRadius Optional radius for the sphere (defaults to\n *     the Earth's mean radius using the WGS84 ellipsoid).\n * @return {Polygon} The \"circular\" polygon.\n * @api\n */\nexport function circular(center, radius, opt_n, opt_sphereRadius) {\n    var n = opt_n ? opt_n : 32;\n    /** @type {Array<number>} */\n    var flatCoordinates = [];\n    for (var i = 0; i < n; ++i) {\n        extend(flatCoordinates, sphereOffset(center, radius, 2 * Math.PI * i / n, opt_sphereRadius));\n    }\n    flatCoordinates.push(flatCoordinates[0], flatCoordinates[1]);\n    return new Polygon(flatCoordinates, GeometryLayout.XY, [flatCoordinates.length]);\n}\n/**\n * Create a polygon from an extent. The layout used is `XY`.\n * @param {import(\"../extent.js\").Extent} extent The extent.\n * @return {Polygon} The polygon.\n * @api\n */\nexport function fromExtent(extent) {\n    var minX = extent[0];\n    var minY = extent[1];\n    var maxX = extent[2];\n    var maxY = extent[3];\n    var flatCoordinates = [minX, minY, minX, maxY, maxX, maxY, maxX, minY, minX, minY];\n    return new Polygon(flatCoordinates, GeometryLayout.XY, [flatCoordinates.length]);\n}\n/**\n * Create a regular polygon from a circle.\n * @param {import(\"./Circle.js\").default} circle Circle geometry.\n * @param {number=} opt_sides Number of sides of the polygon. Default is 32.\n * @param {number=} opt_angle Start angle for the first vertex of the polygon in\n *     radians. Default is 0.\n * @return {Polygon} Polygon geometry.\n * @api\n */\nexport function fromCircle(circle, opt_sides, opt_angle) {\n    var sides = opt_sides ? opt_sides : 32;\n    var stride = circle.getStride();\n    var layout = circle.getLayout();\n    var center = circle.getCenter();\n    var arrayLength = stride * (sides + 1);\n    var flatCoordinates = new Array(arrayLength);\n    for (var i = 0; i < arrayLength; i += stride) {\n        flatCoordinates[i] = 0;\n        flatCoordinates[i + 1] = 0;\n        for (var j = 2; j < stride; j++) {\n            flatCoordinates[i + j] = center[j];\n        }\n    }\n    var ends = [flatCoordinates.length];\n    var polygon = new Polygon(flatCoordinates, layout, ends);\n    makeRegular(polygon, center, circle.getRadius(), opt_angle);\n    return polygon;\n}\n/**\n * Modify the coordinates of a polygon to make it a regular polygon.\n * @param {Polygon} polygon Polygon geometry.\n * @param {import(\"../coordinate.js\").Coordinate} center Center of the regular polygon.\n * @param {number} radius Radius of the regular polygon.\n * @param {number=} opt_angle Start angle for the first vertex of the polygon in\n *     radians. Default is 0.\n */\nexport function makeRegular(polygon, center, radius, opt_angle) {\n    var flatCoordinates = polygon.getFlatCoordinates();\n    var stride = polygon.getStride();\n    var sides = flatCoordinates.length / stride - 1;\n    var startAngle = opt_angle ? opt_angle : 0;\n    for (var i = 0; i <= sides; ++i) {\n        var offset = i * stride;\n        var angle = startAngle + (modulo(i, sides) * 2 * Math.PI / sides);\n        flatCoordinates[offset] = center[0] + (radius * Math.cos(angle));\n        flatCoordinates[offset + 1] = center[1] + (radius * Math.sin(angle));\n    }\n    polygon.changed();\n}\n//# sourceMappingURL=Polygon.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/View\n */\nimport { DEFAULT_TILE_SIZE } from './tilegrid/common.js';\nimport { getUid } from './util.js';\nimport { VOID } from './functions.js';\nimport { createExtent, none as centerNone } from './centerconstraint.js';\nimport BaseObject from './Object.js';\nimport { createSnapToResolutions, createSnapToPower } from './resolutionconstraint.js';\nimport { createSnapToZero, createSnapToN, none as rotationNone, disable } from './rotationconstraint.js';\nimport ViewHint from './ViewHint.js';\nimport ViewProperty from './ViewProperty.js';\nimport { linearFindNearest } from './array.js';\nimport { assert } from './asserts.js';\nimport { add as addCoordinate, rotate as rotateCoordinate, equals as coordinatesEqual } from './coordinate.js';\nimport { inAndOut } from './easing.js';\nimport { getForViewAndSize, getCenter, getHeight, getWidth, isEmpty } from './extent.js';\nimport GeometryType from './geom/GeometryType.js';\nimport { fromExtent as polygonFromExtent } from './geom/Polygon.js';\nimport { clamp, modulo } from './math.js';\nimport { assign } from './obj.js';\nimport { createProjection, METERS_PER_UNIT } from './proj.js';\nimport Units from './proj/Units.js';\nimport { equals } from './coordinate';\nimport { easeOut } from './easing';\nimport { createMinMaxResolution } from './resolutionconstraint';\n/**\n * An animation configuration\n *\n * @typedef {Object} Animation\n * @property {import(\"./coordinate.js\").Coordinate} [sourceCenter]\n * @property {import(\"./coordinate.js\").Coordinate} [targetCenter]\n * @property {number} [sourceResolution]\n * @property {number} [targetResolution]\n * @property {number} [sourceRotation]\n * @property {number} [targetRotation]\n * @property {import(\"./coordinate.js\").Coordinate} [anchor]\n * @property {number} start\n * @property {number} duration\n * @property {boolean} complete\n * @property {function(number):number} easing\n * @property {function(boolean)} callback\n */\n/**\n * @typedef {Object} Constraints\n * @property {import(\"./centerconstraint.js\").Type} center\n * @property {import(\"./resolutionconstraint.js\").Type} resolution\n * @property {import(\"./rotationconstraint.js\").Type} rotation\n */\n/**\n * @typedef {Object} FitOptions\n * @property {import(\"./size.js\").Size} [size] The size in pixels of the box to fit\n * the extent into. Default is the current size of the first map in the DOM that\n * uses this view, or `[100, 100]` if no such map is found.\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in pixels) to be\n * cleared inside the view. Values in the array are top, right, bottom and left\n * padding.\n * @property {boolean} [nearest=false] If the view `constrainResolution` option is `true`,\n * get the nearest extent instead of the closest that actually fits the view.\n * @property {number} [minResolution=0] Minimum resolution that we zoom to.\n * @property {number} [maxZoom] Maximum zoom level that we zoom to. If\n * `minResolution` is given, this property is ignored.\n * @property {number} [duration] The duration of the animation in milliseconds.\n * By default, there is no animation to the target extent.\n * @property {function(number):number} [easing] The easing function used during\n * the animation (defaults to {@link module:ol/easing~inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n * @property {function(boolean)} [callback] Function called when the view is in\n * its final position. The callback will be called with `true` if the animation\n * series completed on its own or `false` if it was cancelled.\n */\n/**\n * @typedef {Object} ViewOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The initial center for\n * the view. The coordinate system for the center is specified with the\n * `projection` option. Layer sources will not be fetched if this is not set,\n * but the center can be set later with {@link #setCenter}.\n * @property {boolean|number} [constrainRotation=true] Rotation constraint.\n * `false` means no constraint. `true` means no constraint, but snap to zero\n * near zero. A number constrains the rotation to that number of values. For\n * example, `4` will constrain the rotation to 0, 90, 180, and 270 degrees.\n * @property {boolean} [enableRotation=true] Enable rotation.\n * If `false`, a rotation constraint that always sets the rotation to zero is\n * used. The `constrainRotation` option has no effect if `enableRotation` is\n * `false`.\n * @property {import(\"./extent.js\").Extent} [extent] The extent that constrains the\n * view, in other words, nothing outside of this extent can be visible on the map.\n * @property {boolean} [constrainOnlyCenter=false] If true, the extent\n * constraint will only apply to the view center and not the whole extent.\n * @property {boolean} [smoothExtentConstraint=true] If true, the extent\n * constraint will be applied smoothly, i.e. allow the view to go slightly outside\n * of the given `extent`.\n * @property {number} [maxResolution] The maximum resolution used to determine\n * the resolution constraint. It is used together with `minResolution` (or\n * `maxZoom`) and `zoomFactor`. If unspecified it is calculated in such a way\n * that the projection's validity extent fits in a 256x256 px tile. If the\n * projection is Spherical Mercator (the default) then `maxResolution` defaults\n * to `40075016.68557849 / 256 = 156543.03392804097`.\n * @property {number} [minResolution] The minimum resolution used to determine\n * the resolution constraint.  It is used together with `maxResolution` (or\n * `minZoom`) and `zoomFactor`.  If unspecified it is calculated assuming 29\n * zoom levels (with a factor of 2). If the projection is Spherical Mercator\n * (the default) then `minResolution` defaults to\n * `40075016.68557849 / 256 / Math.pow(2, 28) = 0.0005831682455839253`.\n * @property {number} [maxZoom=28] The maximum zoom level used to determine the\n * resolution constraint. It is used together with `minZoom` (or\n * `maxResolution`) and `zoomFactor`.  Note that if `minResolution` is also\n * provided, it is given precedence over `maxZoom`.\n * @property {number} [minZoom=0] The minimum zoom level used to determine the\n * resolution constraint. It is used together with `maxZoom` (or\n * `minResolution`) and `zoomFactor`.  Note that if `maxResolution` is also\n * provided, it is given precedence over `minZoom`.\n * @property {boolean} [multiWorld=false] No more than one world is visible.\n * @property {boolean} [constrainResolution=false] If true, the view will always\n * animate to the closest zoom level after an interaction; false means\n * intermediary zoom levels are allowed.\n * @property {boolean} [smoothResolutionConstraint=true] If true, the resolution\n * min/max values will be applied smoothly, i. e. allow the view to exceed slightly\n * the given resolution or zoom bounds.\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857'] The\n * projection. The default is Spherical Mercator.\n * @property {number} [resolution] The initial resolution for the view. The\n * units are `projection` units per pixel (e.g. meters per pixel). An\n * alternative to setting this is to set `zoom`. Layer sources will not be\n * fetched if neither this nor `zoom` are defined, but they can be set later\n * with {@link #setZoom} or {@link #setResolution}.\n * @property {Array<number>} [resolutions] Resolutions to determine the\n * resolution constraint. If set the `maxResolution`, `minResolution`,\n * `minZoom`, `maxZoom`, and `zoomFactor` options are ignored.\n * @property {number} [rotation=0] The initial rotation for the view in radians\n * (positive rotation clockwise, 0 means North).\n * @property {number} [zoom] Only used if `resolution` is not defined. Zoom\n * level used to calculate the initial resolution for the view.\n * @property {number} [zoomFactor=2] The zoom factor used to compute the\n * corresponding resolution.\n */\n/**\n * @typedef {Object} AnimationOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The center of the view at the end of\n * the animation.\n * @property {number} [zoom] The zoom level of the view at the end of the\n * animation. This takes precedence over `resolution`.\n * @property {number} [resolution] The resolution of the view at the end\n * of the animation.  If `zoom` is also provided, this option will be ignored.\n * @property {number} [rotation] The rotation of the view at the end of\n * the animation.\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Optional anchor to remain fixed\n * during a rotation or resolution animation.\n * @property {number} [duration=1000] The duration of the animation in milliseconds.\n * @property {function(number):number} [easing] The easing function used\n * during the animation (defaults to {@link module:ol/easing~inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n */\n/**\n * @typedef {Object} State\n * @property {import(\"./coordinate.js\").Coordinate} center\n * @property {import(\"./proj/Projection.js\").default} projection\n * @property {number} resolution\n * @property {number} rotation\n * @property {number} zoom\n */\n/**\n * Default min zoom level for the map view.\n * @type {number}\n */\nvar DEFAULT_MIN_ZOOM = 0;\n/**\n * @classdesc\n * A View object represents a simple 2D view of the map.\n *\n * This is the object to act upon to change the center, resolution,\n * and rotation of the map.\n *\n * ### The view states\n *\n * An View is determined by three states: `center`, `resolution`,\n * and `rotation`. Each state has a corresponding getter and setter, e.g.\n * `getCenter` and `setCenter` for the `center` state.\n *\n * The `zoom` state is actually not saved on the view: all computations\n * internally use the `resolution` state. Still, the `setZoom` and `getZoom`\n * methods are available, as well as `getResolutionForZoom` and\n * `getZoomForResolution` to switch from one system to the other.\n *\n * A View has a `projection`. The projection determines the\n * coordinate system of the center, and its units determine the units of the\n * resolution (projection units per pixel). The default projection is\n * Spherical Mercator (EPSG:3857).\n *\n * ### The constraints\n *\n * `setCenter`, `setResolution` and `setRotation` can be used to change the\n * states of the view, but any constraint defined in the constructor will\n * be applied along the way.\n *\n * A View object can have a *resolution constraint*, a *rotation constraint*\n * and a *center constraint*.\n *\n * The *resolution constraint* typically restricts min/max values and\n * snaps to specific resolutions. It is determined by the following\n * options: `resolutions`, `maxResolution`, `maxZoom`, and `zoomFactor`.\n * If `resolutions` is set, the other three options are ignored. See\n * documentation for each option for more information. By default, the view\n * only has a min/max restriction and allow intermediary zoom levels when\n * pinch-zooming for example.\n *\n * The *rotation constraint* snaps to specific angles. It is determined\n * by the following options: `enableRotation` and `constrainRotation`.\n * By default the rotation value is snapped to zero when approaching the\n * horizontal.\n *\n * The *center constraint* is determined by the `extent` option. By\n * default the view center is not constrained at all.\n *\n * ### Changing the view state\n *\n * It is important to note that `setZoom`, `setResolution`, `setCenter` and\n * `setRotation` are subject to the above mentioned constraints. As such, it\n * may sometimes not be possible to know in advance the resulting state of the\n * View. For example, calling `setResolution(10)` does not guarantee that\n * `getResolution()` will return `10`.\n *\n * A consequence of this is that, when applying a delta on the view state, one\n * should use `adjustCenter`, `adjustRotation`, `adjustZoom` and `adjustResolution`\n * rather than the corresponding setters. This will let view do its internal\n * computations. Besides, the `adjust*` methods also take an `opt_anchor`\n * argument which allows specifying an origin for the transformation.\n *\n * ### Interacting with the view\n *\n * View constraints are usually only applied when the view is *at rest*, meaning that\n * no interaction or animation is ongoing. As such, if the user puts the view in a\n * state that is not equivalent to a constrained one (e.g. rotating the view when\n * the snap angle is 0), an animation will be triggered at the interaction end to\n * put back the view to a stable state;\n *\n * @api\n */\nvar View = /** @class */ (function (_super) {\n    __extends(View, _super);\n    /**\n     * @param {ViewOptions=} opt_options View options.\n     */\n    function View(opt_options) {\n        var _this = _super.call(this) || this;\n        var options = assign({}, opt_options);\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        _this.hints_ = [0, 0];\n        /**\n         * @private\n         * @type {Array<Array<Animation>>}\n         */\n        _this.animations_ = [];\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.updateAnimationKey_;\n        /**\n         * @private\n         * @const\n         * @type {import(\"./proj/Projection.js\").default}\n         */\n        _this.projection_ = createProjection(options.projection, 'EPSG:3857');\n        /**\n         * @private\n         * @type {import(\"./coordinate.js\").Coordinate|undefined}\n         */\n        _this.targetCenter_ = null;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.targetResolution_;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.targetRotation_;\n        _this.applyOptions_(options);\n        return _this;\n    }\n    /**\n     * Set up the view with the given options.\n     * @param {ViewOptions} options View options.\n     */\n    View.prototype.applyOptions_ = function (options) {\n        /**\n         * @type {Object<string, *>}\n         */\n        var properties = {};\n        var resolutionConstraintInfo = createResolutionConstraint(options);\n        /**\n         * @private\n         * @type {number}\n         */\n        this.maxResolution_ = resolutionConstraintInfo.maxResolution;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.minResolution_ = resolutionConstraintInfo.minResolution;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.zoomFactor_ = resolutionConstraintInfo.zoomFactor;\n        /**\n         * @private\n         * @type {Array<number>|undefined}\n         */\n        this.resolutions_ = options.resolutions;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.minZoom_ = resolutionConstraintInfo.minZoom;\n        var centerConstraint = createCenterConstraint(options);\n        var resolutionConstraint = resolutionConstraintInfo.constraint;\n        var rotationConstraint = createRotationConstraint(options);\n        /**\n         * @private\n         * @type {Constraints}\n         */\n        this.constraints_ = {\n            center: centerConstraint,\n            resolution: resolutionConstraint,\n            rotation: rotationConstraint\n        };\n        this.setRotation(options.rotation !== undefined ? options.rotation : 0);\n        this.setCenter(options.center !== undefined ? options.center : null);\n        if (options.resolution !== undefined) {\n            this.setResolution(options.resolution);\n        }\n        else if (options.zoom !== undefined) {\n            this.setZoom(options.zoom);\n        }\n        this.resolveConstraints(0);\n        this.setProperties(properties);\n        /**\n         * @private\n         * @type {ViewOptions}\n         */\n        this.options_ = options;\n    };\n    /**\n     * Get an updated version of the view options used to construct the view.  The\n     * current resolution (or zoom), center, and rotation are applied to any stored\n     * options.  The provided options can be used to apply new min/max zoom or\n     * resolution limits.\n     * @param {ViewOptions} newOptions New options to be applied.\n     * @return {ViewOptions} New options updated with the current view state.\n     */\n    View.prototype.getUpdatedOptions_ = function (newOptions) {\n        var options = assign({}, this.options_);\n        // preserve resolution (or zoom)\n        if (options.resolution !== undefined) {\n            options.resolution = this.getResolution();\n        }\n        else {\n            options.zoom = this.getZoom();\n        }\n        // preserve center\n        options.center = this.getCenter();\n        // preserve rotation\n        options.rotation = this.getRotation();\n        return assign({}, options, newOptions);\n    };\n    /**\n     * Animate the view.  The view's center, zoom (or resolution), and rotation\n     * can be animated for smooth transitions between view states.  For example,\n     * to animate the view to a new zoom level:\n     *\n     *     view.animate({zoom: view.getZoom() + 1});\n     *\n     * By default, the animation lasts one second and uses in-and-out easing.  You\n     * can customize this behavior by including `duration` (in milliseconds) and\n     * `easing` options (see {@link module:ol/easing}).\n     *\n     * To chain together multiple animations, call the method with multiple\n     * animation objects.  For example, to first zoom and then pan:\n     *\n     *     view.animate({zoom: 10}, {center: [0, 0]});\n     *\n     * If you provide a function as the last argument to the animate method, it\n     * will get called at the end of an animation series.  The callback will be\n     * called with `true` if the animation series completed on its own or `false`\n     * if it was cancelled.\n     *\n     * Animations are cancelled by user interactions (e.g. dragging the map) or by\n     * calling `view.setCenter()`, `view.setResolution()`, or `view.setRotation()`\n     * (or another method that calls one of these).\n     *\n     * @param {...(AnimationOptions|function(boolean): void)} var_args Animation\n     *     options.  Multiple animations can be run in series by passing multiple\n     *     options objects.  To run multiple animations in parallel, call the method\n     *     multiple times.  An optional callback can be provided as a final\n     *     argument.  The callback will be called with a boolean indicating whether\n     *     the animation completed without being cancelled.\n     * @api\n     */\n    View.prototype.animate = function (var_args) {\n        if (this.isDef() && !this.getAnimating()) {\n            this.resolveConstraints(0);\n        }\n        this.animate_.apply(this, arguments);\n    };\n    /**\n     * @private\n     * @param {...(AnimationOptions|function(boolean): void)} var_args Animation options.\n     */\n    View.prototype.animate_ = function (var_args) {\n        var animationCount = arguments.length;\n        var callback;\n        if (animationCount > 1 && typeof arguments[animationCount - 1] === 'function') {\n            callback = arguments[animationCount - 1];\n            --animationCount;\n        }\n        if (!this.isDef()) {\n            // if view properties are not yet set, shortcut to the final state\n            var state = arguments[animationCount - 1];\n            if (state.center) {\n                this.setCenter(state.center);\n            }\n            if (state.zoom !== undefined) {\n                this.setZoom(state.zoom);\n            }\n            if (state.rotation !== undefined) {\n                this.setRotation(state.rotation);\n            }\n            if (callback) {\n                animationCallback(callback, true);\n            }\n            return;\n        }\n        var start = Date.now();\n        var center = this.targetCenter_.slice();\n        var resolution = this.targetResolution_;\n        var rotation = this.targetRotation_;\n        var series = [];\n        for (var i = 0; i < animationCount; ++i) {\n            var options = /** @type {AnimationOptions} */ (arguments[i]);\n            var animation = {\n                start: start,\n                complete: false,\n                anchor: options.anchor,\n                duration: options.duration !== undefined ? options.duration : 1000,\n                easing: options.easing || inAndOut,\n                callback: callback\n            };\n            if (options.center) {\n                animation.sourceCenter = center;\n                animation.targetCenter = options.center.slice();\n                center = animation.targetCenter;\n            }\n            if (options.zoom !== undefined) {\n                animation.sourceResolution = resolution;\n                animation.targetResolution = this.getResolutionForZoom(options.zoom);\n                resolution = animation.targetResolution;\n            }\n            else if (options.resolution) {\n                animation.sourceResolution = resolution;\n                animation.targetResolution = options.resolution;\n                resolution = animation.targetResolution;\n            }\n            if (options.rotation !== undefined) {\n                animation.sourceRotation = rotation;\n                var delta = modulo(options.rotation - rotation + Math.PI, 2 * Math.PI) - Math.PI;\n                animation.targetRotation = rotation + delta;\n                rotation = animation.targetRotation;\n            }\n            // check if animation is a no-op\n            if (isNoopAnimation(animation)) {\n                animation.complete = true;\n                // we still push it onto the series for callback handling\n            }\n            else {\n                start += animation.duration;\n            }\n            series.push(animation);\n        }\n        this.animations_.push(series);\n        this.setHint(ViewHint.ANIMATING, 1);\n        this.updateAnimations_();\n    };\n    /**\n     * Determine if the view is being animated.\n     * @return {boolean} The view is being animated.\n     * @api\n     */\n    View.prototype.getAnimating = function () {\n        return this.hints_[ViewHint.ANIMATING] > 0;\n    };\n    /**\n     * Determine if the user is interacting with the view, such as panning or zooming.\n     * @return {boolean} The view is being interacted with.\n     * @api\n     */\n    View.prototype.getInteracting = function () {\n        return this.hints_[ViewHint.INTERACTING] > 0;\n    };\n    /**\n     * Cancel any ongoing animations.\n     * @api\n     */\n    View.prototype.cancelAnimations = function () {\n        this.setHint(ViewHint.ANIMATING, -this.hints_[ViewHint.ANIMATING]);\n        for (var i = 0, ii = this.animations_.length; i < ii; ++i) {\n            var series = this.animations_[i];\n            if (series[0].callback) {\n                animationCallback(series[0].callback, false);\n            }\n        }\n        this.animations_.length = 0;\n    };\n    /**\n     * Update all animations.\n     */\n    View.prototype.updateAnimations_ = function () {\n        if (this.updateAnimationKey_ !== undefined) {\n            cancelAnimationFrame(this.updateAnimationKey_);\n            this.updateAnimationKey_ = undefined;\n        }\n        if (!this.getAnimating()) {\n            return;\n        }\n        var now = Date.now();\n        var more = false;\n        for (var i = this.animations_.length - 1; i >= 0; --i) {\n            var series = this.animations_[i];\n            var seriesComplete = true;\n            for (var j = 0, jj = series.length; j < jj; ++j) {\n                var animation = series[j];\n                if (animation.complete) {\n                    continue;\n                }\n                var elapsed = now - animation.start;\n                var fraction = animation.duration > 0 ? elapsed / animation.duration : 1;\n                if (fraction >= 1) {\n                    animation.complete = true;\n                    fraction = 1;\n                }\n                else {\n                    seriesComplete = false;\n                }\n                var progress = animation.easing(fraction);\n                if (animation.sourceCenter) {\n                    var x0 = animation.sourceCenter[0];\n                    var y0 = animation.sourceCenter[1];\n                    var x1 = animation.targetCenter[0];\n                    var y1 = animation.targetCenter[1];\n                    var x = x0 + progress * (x1 - x0);\n                    var y = y0 + progress * (y1 - y0);\n                    this.targetCenter_ = [x, y];\n                }\n                if (animation.sourceResolution && animation.targetResolution) {\n                    var resolution = progress === 1 ?\n                        animation.targetResolution :\n                        animation.sourceResolution + progress * (animation.targetResolution - animation.sourceResolution);\n                    if (animation.anchor) {\n                        var size = this.getSizeFromViewport_(this.getRotation());\n                        var constrainedResolution = this.constraints_.resolution(resolution, 0, size, true);\n                        this.targetCenter_ = this.calculateCenterZoom(constrainedResolution, animation.anchor);\n                    }\n                    this.targetResolution_ = resolution;\n                    this.applyTargetState_(true);\n                }\n                if (animation.sourceRotation !== undefined && animation.targetRotation !== undefined) {\n                    var rotation = progress === 1 ?\n                        modulo(animation.targetRotation + Math.PI, 2 * Math.PI) - Math.PI :\n                        animation.sourceRotation + progress * (animation.targetRotation - animation.sourceRotation);\n                    if (animation.anchor) {\n                        var constrainedRotation = this.constraints_.rotation(rotation, true);\n                        this.targetCenter_ = this.calculateCenterRotate(constrainedRotation, animation.anchor);\n                    }\n                    this.targetRotation_ = rotation;\n                }\n                this.applyTargetState_(true);\n                more = true;\n                if (!animation.complete) {\n                    break;\n                }\n            }\n            if (seriesComplete) {\n                this.animations_[i] = null;\n                this.setHint(ViewHint.ANIMATING, -1);\n                var callback = series[0].callback;\n                if (callback) {\n                    animationCallback(callback, true);\n                }\n            }\n        }\n        // prune completed series\n        this.animations_ = this.animations_.filter(Boolean);\n        if (more && this.updateAnimationKey_ === undefined) {\n            this.updateAnimationKey_ = requestAnimationFrame(this.updateAnimations_.bind(this));\n        }\n    };\n    /**\n     * @param {number} rotation Target rotation.\n     * @param {import(\"./coordinate.js\").Coordinate} anchor Rotation anchor.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for rotation and anchor.\n     */\n    View.prototype.calculateCenterRotate = function (rotation, anchor) {\n        var center;\n        var currentCenter = this.getCenter();\n        if (currentCenter !== undefined) {\n            center = [currentCenter[0] - anchor[0], currentCenter[1] - anchor[1]];\n            rotateCoordinate(center, rotation - this.getRotation());\n            addCoordinate(center, anchor);\n        }\n        return center;\n    };\n    /**\n     * @param {number} resolution Target resolution.\n     * @param {import(\"./coordinate.js\").Coordinate} anchor Zoom anchor.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for resolution and anchor.\n     */\n    View.prototype.calculateCenterZoom = function (resolution, anchor) {\n        var center;\n        var currentCenter = this.getCenter();\n        var currentResolution = this.getResolution();\n        if (currentCenter !== undefined && currentResolution !== undefined) {\n            var x = anchor[0] - resolution * (anchor[0] - currentCenter[0]) / currentResolution;\n            var y = anchor[1] - resolution * (anchor[1] - currentCenter[1]) / currentResolution;\n            center = [x, y];\n        }\n        return center;\n    };\n    /**\n     * @private\n     * @param {number=} opt_rotation Take into account the rotation of the viewport when giving the size\n     * @return {import(\"./size.js\").Size} Viewport size or `[100, 100]` when no viewport is found.\n     */\n    View.prototype.getSizeFromViewport_ = function (opt_rotation) {\n        var size = [100, 100];\n        var selector = '.ol-viewport[data-view=\"' + getUid(this) + '\"]';\n        var element = document.querySelector(selector);\n        if (element) {\n            var metrics = getComputedStyle(element);\n            size[0] = parseInt(metrics.width, 10);\n            size[1] = parseInt(metrics.height, 10);\n        }\n        if (opt_rotation) {\n            var w = size[0];\n            var h = size[1];\n            size[0] = Math.abs(w * Math.cos(opt_rotation)) + Math.abs(h * Math.sin(opt_rotation));\n            size[1] = Math.abs(w * Math.sin(opt_rotation)) + Math.abs(h * Math.cos(opt_rotation));\n        }\n        return size;\n    };\n    /**\n     * Get the view center.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n     * @observable\n     * @api\n     */\n    View.prototype.getCenter = function () {\n        return (\n        /** @type {import(\"./coordinate.js\").Coordinate|undefined} */ (this.get(ViewProperty.CENTER)));\n    };\n    /**\n     * @return {Constraints} Constraints.\n     */\n    View.prototype.getConstraints = function () {\n        return this.constraints_;\n    };\n    /**\n     * @param {Array<number>=} opt_hints Destination array.\n     * @return {Array<number>} Hint.\n     */\n    View.prototype.getHints = function (opt_hints) {\n        if (opt_hints !== undefined) {\n            opt_hints[0] = this.hints_[0];\n            opt_hints[1] = this.hints_[1];\n            return opt_hints;\n        }\n        else {\n            return this.hints_.slice();\n        }\n    };\n    /**\n     * Calculate the extent for the current view state and the passed size.\n     * The size is the pixel dimensions of the box into which the calculated extent\n     * should fit. In most cases you want to get the extent of the entire map,\n     * that is `map.getSize()`.\n     * @param {import(\"./size.js\").Size=} opt_size Box pixel size. If not provided, the size of the\n     * first map that uses this view will be used.\n     * @return {import(\"./extent.js\").Extent} Extent.\n     * @api\n     */\n    View.prototype.calculateExtent = function (opt_size) {\n        var size = opt_size || this.getSizeFromViewport_();\n        var center = /** @type {!import(\"./coordinate.js\").Coordinate} */ (this.getCenter());\n        assert(center, 1); // The view center is not defined\n        var resolution = /** @type {!number} */ (this.getResolution());\n        assert(resolution !== undefined, 2); // The view resolution is not defined\n        var rotation = /** @type {!number} */ (this.getRotation());\n        assert(rotation !== undefined, 3); // The view rotation is not defined\n        return getForViewAndSize(center, resolution, rotation, size);\n    };\n    /**\n     * Get the maximum resolution of the view.\n     * @return {number} The maximum resolution of the view.\n     * @api\n     */\n    View.prototype.getMaxResolution = function () {\n        return this.maxResolution_;\n    };\n    /**\n     * Get the minimum resolution of the view.\n     * @return {number} The minimum resolution of the view.\n     * @api\n     */\n    View.prototype.getMinResolution = function () {\n        return this.minResolution_;\n    };\n    /**\n     * Get the maximum zoom level for the view.\n     * @return {number} The maximum zoom level.\n     * @api\n     */\n    View.prototype.getMaxZoom = function () {\n        return /** @type {number} */ (this.getZoomForResolution(this.minResolution_));\n    };\n    /**\n     * Set a new maximum zoom level for the view.\n     * @param {number} zoom The maximum zoom level.\n     * @api\n     */\n    View.prototype.setMaxZoom = function (zoom) {\n        this.applyOptions_(this.getUpdatedOptions_({ maxZoom: zoom }));\n    };\n    /**\n     * Get the minimum zoom level for the view.\n     * @return {number} The minimum zoom level.\n     * @api\n     */\n    View.prototype.getMinZoom = function () {\n        return /** @type {number} */ (this.getZoomForResolution(this.maxResolution_));\n    };\n    /**\n     * Set a new minimum zoom level for the view.\n     * @param {number} zoom The minimum zoom level.\n     * @api\n     */\n    View.prototype.setMinZoom = function (zoom) {\n        this.applyOptions_(this.getUpdatedOptions_({ minZoom: zoom }));\n    };\n    /**\n     * Set whether the view shoud allow intermediary zoom levels.\n     * @param {boolean} enabled Whether the resolution is constrained.\n     * @api\n     */\n    View.prototype.setConstrainResolution = function (enabled) {\n        this.applyOptions_(this.getUpdatedOptions_({ constrainResolution: enabled }));\n    };\n    /**\n     * Get the view projection.\n     * @return {import(\"./proj/Projection.js\").default} The projection of the view.\n     * @api\n     */\n    View.prototype.getProjection = function () {\n        return this.projection_;\n    };\n    /**\n     * Get the view resolution.\n     * @return {number|undefined} The resolution of the view.\n     * @observable\n     * @api\n     */\n    View.prototype.getResolution = function () {\n        return /** @type {number|undefined} */ (this.get(ViewProperty.RESOLUTION));\n    };\n    /**\n     * Get the resolutions for the view. This returns the array of resolutions\n     * passed to the constructor of the View, or undefined if none were given.\n     * @return {Array<number>|undefined} The resolutions of the view.\n     * @api\n     */\n    View.prototype.getResolutions = function () {\n        return this.resolutions_;\n    };\n    /**\n     * Get the resolution for a provided extent (in map units) and size (in pixels).\n     * @param {import(\"./extent.js\").Extent} extent Extent.\n     * @param {import(\"./size.js\").Size=} opt_size Box pixel size.\n     * @return {number} The resolution at which the provided extent will render at\n     *     the given size.\n     * @api\n     */\n    View.prototype.getResolutionForExtent = function (extent, opt_size) {\n        var size = opt_size || this.getSizeFromViewport_();\n        var xResolution = getWidth(extent) / size[0];\n        var yResolution = getHeight(extent) / size[1];\n        return Math.max(xResolution, yResolution);\n    };\n    /**\n     * Return a function that returns a value between 0 and 1 for a\n     * resolution. Exponential scaling is assumed.\n     * @param {number=} opt_power Power.\n     * @return {function(number): number} Resolution for value function.\n     */\n    View.prototype.getResolutionForValueFunction = function (opt_power) {\n        var power = opt_power || 2;\n        var maxResolution = this.maxResolution_;\n        var minResolution = this.minResolution_;\n        var max = Math.log(maxResolution / minResolution) / Math.log(power);\n        return (\n        /**\n         * @param {number} value Value.\n         * @return {number} Resolution.\n         */\n        function (value) {\n            var resolution = maxResolution / Math.pow(power, value * max);\n            return resolution;\n        });\n    };\n    /**\n     * Get the view rotation.\n     * @return {number} The rotation of the view in radians.\n     * @observable\n     * @api\n     */\n    View.prototype.getRotation = function () {\n        return /** @type {number} */ (this.get(ViewProperty.ROTATION));\n    };\n    /**\n     * Return a function that returns a resolution for a value between\n     * 0 and 1. Exponential scaling is assumed.\n     * @param {number=} opt_power Power.\n     * @return {function(number): number} Value for resolution function.\n     */\n    View.prototype.getValueForResolutionFunction = function (opt_power) {\n        var power = opt_power || 2;\n        var maxResolution = this.maxResolution_;\n        var minResolution = this.minResolution_;\n        var max = Math.log(maxResolution / minResolution) / Math.log(power);\n        return (\n        /**\n         * @param {number} resolution Resolution.\n         * @return {number} Value.\n         */\n        function (resolution) {\n            var value = (Math.log(maxResolution / resolution) / Math.log(power)) / max;\n            return value;\n        });\n    };\n    /**\n     * @param {number} pixelRatio Pixel ratio for center rounding.\n     * @return {State} View state.\n     */\n    View.prototype.getState = function (pixelRatio) {\n        var center = /** @type {import(\"./coordinate.js\").Coordinate} */ (this.getCenter());\n        var projection = this.getProjection();\n        var resolution = /** @type {number} */ (this.getResolution());\n        var rotation = this.getRotation();\n        return {\n            center: center.slice(0),\n            projection: projection !== undefined ? projection : null,\n            resolution: resolution,\n            rotation: rotation,\n            zoom: this.getZoom()\n        };\n    };\n    /**\n     * Get the current zoom level. This method may return non-integer zoom levels\n     * if the view does not constrain the resolution, or if an interaction or\n     * animation is underway.\n     * @return {number|undefined} Zoom.\n     * @api\n     */\n    View.prototype.getZoom = function () {\n        var zoom;\n        var resolution = this.getResolution();\n        if (resolution !== undefined) {\n            zoom = this.getZoomForResolution(resolution);\n        }\n        return zoom;\n    };\n    /**\n     * Get the zoom level for a resolution.\n     * @param {number} resolution The resolution.\n     * @return {number|undefined} The zoom level for the provided resolution.\n     * @api\n     */\n    View.prototype.getZoomForResolution = function (resolution) {\n        var offset = this.minZoom_ || 0;\n        var max, zoomFactor;\n        if (this.resolutions_) {\n            var nearest = linearFindNearest(this.resolutions_, resolution, 1);\n            offset = nearest;\n            max = this.resolutions_[nearest];\n            if (nearest == this.resolutions_.length - 1) {\n                zoomFactor = 2;\n            }\n            else {\n                zoomFactor = max / this.resolutions_[nearest + 1];\n            }\n        }\n        else {\n            max = this.maxResolution_;\n            zoomFactor = this.zoomFactor_;\n        }\n        return offset + Math.log(max / resolution) / Math.log(zoomFactor);\n    };\n    /**\n     * Get the resolution for a zoom level.\n     * @param {number} zoom Zoom level.\n     * @return {number} The view resolution for the provided zoom level.\n     * @api\n     */\n    View.prototype.getResolutionForZoom = function (zoom) {\n        if (this.resolutions_) {\n            if (this.resolutions_.length <= 1) {\n                return 0;\n            }\n            var baseLevel = clamp(Math.floor(zoom), 0, this.resolutions_.length - 2);\n            var zoomFactor = this.resolutions_[baseLevel] / this.resolutions_[baseLevel + 1];\n            return this.resolutions_[baseLevel] / Math.pow(zoomFactor, clamp(zoom - baseLevel, 0, 1));\n        }\n        else {\n            return this.maxResolution_ / Math.pow(this.zoomFactor_, zoom - this.minZoom_);\n        }\n    };\n    /**\n     * Fit the given geometry or extent based on the given map size and border.\n     * The size is pixel dimensions of the box to fit the extent into.\n     * In most cases you will want to use the map size, that is `map.getSize()`.\n     * Takes care of the map angle.\n     * @param {import(\"./geom/SimpleGeometry.js\").default|import(\"./extent.js\").Extent} geometryOrExtent The geometry or\n     *     extent to fit the view to.\n     * @param {FitOptions=} opt_options Options.\n     * @api\n     */\n    View.prototype.fit = function (geometryOrExtent, opt_options) {\n        var options = opt_options || {};\n        var size = options.size;\n        if (!size) {\n            size = this.getSizeFromViewport_();\n        }\n        /** @type {import(\"./geom/SimpleGeometry.js\").default} */\n        var geometry;\n        assert(Array.isArray(geometryOrExtent) || typeof /** @type {?} */ (geometryOrExtent).getSimplifiedGeometry === 'function', 24); // Invalid extent or geometry provided as `geometry`\n        if (Array.isArray(geometryOrExtent)) {\n            assert(!isEmpty(geometryOrExtent), 25); // Cannot fit empty extent provided as `geometry`\n            geometry = polygonFromExtent(geometryOrExtent);\n        }\n        else if (geometryOrExtent.getType() === GeometryType.CIRCLE) {\n            geometryOrExtent = geometryOrExtent.getExtent();\n            geometry = polygonFromExtent(geometryOrExtent);\n            geometry.rotate(this.getRotation(), getCenter(geometryOrExtent));\n        }\n        else {\n            geometry = geometryOrExtent;\n        }\n        var padding = options.padding !== undefined ? options.padding : [0, 0, 0, 0];\n        var nearest = options.nearest !== undefined ? options.nearest : false;\n        var minResolution;\n        if (options.minResolution !== undefined) {\n            minResolution = options.minResolution;\n        }\n        else if (options.maxZoom !== undefined) {\n            minResolution = this.getResolutionForZoom(options.maxZoom);\n        }\n        else {\n            minResolution = 0;\n        }\n        var coords = geometry.getFlatCoordinates();\n        // calculate rotated extent\n        var rotation = this.getRotation();\n        var cosAngle = Math.cos(-rotation);\n        var sinAngle = Math.sin(-rotation);\n        var minRotX = +Infinity;\n        var minRotY = +Infinity;\n        var maxRotX = -Infinity;\n        var maxRotY = -Infinity;\n        var stride = geometry.getStride();\n        for (var i = 0, ii = coords.length; i < ii; i += stride) {\n            var rotX = coords[i] * cosAngle - coords[i + 1] * sinAngle;\n            var rotY = coords[i] * sinAngle + coords[i + 1] * cosAngle;\n            minRotX = Math.min(minRotX, rotX);\n            minRotY = Math.min(minRotY, rotY);\n            maxRotX = Math.max(maxRotX, rotX);\n            maxRotY = Math.max(maxRotY, rotY);\n        }\n        // calculate resolution\n        var resolution = this.getResolutionForExtent([minRotX, minRotY, maxRotX, maxRotY], [size[0] - padding[1] - padding[3], size[1] - padding[0] - padding[2]]);\n        resolution = isNaN(resolution) ? minResolution :\n            Math.max(resolution, minResolution);\n        resolution = this.getConstrainedResolution(resolution, nearest ? 0 : 1);\n        // calculate center\n        sinAngle = -sinAngle; // go back to original rotation\n        var centerRotX = (minRotX + maxRotX) / 2;\n        var centerRotY = (minRotY + maxRotY) / 2;\n        centerRotX += (padding[1] - padding[3]) / 2 * resolution;\n        centerRotY += (padding[0] - padding[2]) / 2 * resolution;\n        var centerX = centerRotX * cosAngle - centerRotY * sinAngle;\n        var centerY = centerRotY * cosAngle + centerRotX * sinAngle;\n        var center = [centerX, centerY];\n        var callback = options.callback ? options.callback : VOID;\n        if (options.duration !== undefined) {\n            this.animate_({\n                resolution: resolution,\n                center: this.getConstrainedCenter(center, resolution),\n                duration: options.duration,\n                easing: options.easing\n            }, callback);\n        }\n        else {\n            this.targetResolution_ = resolution;\n            this.targetCenter_ = center;\n            this.applyTargetState_(false, true);\n            animationCallback(callback, true);\n        }\n    };\n    /**\n     * Center on coordinate and view position.\n     * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {import(\"./size.js\").Size} size Box pixel size.\n     * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n     * @api\n     */\n    View.prototype.centerOn = function (coordinate, size, position) {\n        // calculate rotated position\n        var rotation = this.getRotation();\n        var cosAngle = Math.cos(-rotation);\n        var sinAngle = Math.sin(-rotation);\n        var rotX = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n        var rotY = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n        var resolution = this.getResolution();\n        rotX += (size[0] / 2 - position[0]) * resolution;\n        rotY += (position[1] - size[1] / 2) * resolution;\n        // go back to original angle\n        sinAngle = -sinAngle; // go back to original rotation\n        var centerX = rotX * cosAngle - rotY * sinAngle;\n        var centerY = rotY * cosAngle + rotX * sinAngle;\n        this.setCenter([centerX, centerY]);\n    };\n    /**\n     * @return {boolean} Is defined.\n     */\n    View.prototype.isDef = function () {\n        return !!this.getCenter() && this.getResolution() !== undefined;\n    };\n    /**\n     * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n     * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n     * @api\n     */\n    View.prototype.adjustCenter = function (deltaCoordinates) {\n        var center = this.targetCenter_;\n        this.setCenter([center[0] + deltaCoordinates[0], center[1] + deltaCoordinates[1]]);\n    };\n    /**\n     * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n     * constraint will apply.\n     * @param {number} ratio The ratio to apply on the view resolution.\n     * @param {import(\"./coordinate.js\").Coordinate=} opt_anchor The origin of the transformation.\n     * @observable\n     * @api\n     */\n    View.prototype.adjustResolution = function (ratio, opt_anchor) {\n        var isMoving = this.getAnimating() || this.getInteracting();\n        var size = this.getSizeFromViewport_(this.getRotation());\n        var newResolution = this.constraints_.resolution(this.targetResolution_ * ratio, 0, size, isMoving);\n        if (opt_anchor !== undefined) {\n            this.targetCenter_ = this.calculateCenterZoom(newResolution, opt_anchor);\n        }\n        this.targetResolution_ *= ratio;\n        this.applyTargetState_();\n    };\n    /**\n     * Adds a value to the view zoom level, optionally using an anchor. Any resolution\n     * constraint will apply.\n     * @param {number} delta Relative value to add to the zoom level.\n     * @param {import(\"./coordinate.js\").Coordinate=} opt_anchor The origin of the transformation.\n     * @api\n     */\n    View.prototype.adjustZoom = function (delta, opt_anchor) {\n        this.adjustResolution(Math.pow(this.zoomFactor_, -delta), opt_anchor);\n    };\n    /**\n     * Adds a value to the view rotation, optionally using an anchor. Any rotation\n     * constraint will apply.\n     * @param {number} delta Relative value to add to the zoom rotation, in radians.\n     * @param {import(\"./coordinate.js\").Coordinate=} opt_anchor The rotation center.\n     * @observable\n     * @api\n     */\n    View.prototype.adjustRotation = function (delta, opt_anchor) {\n        var isMoving = this.getAnimating() || this.getInteracting();\n        var newRotation = this.constraints_.rotation(this.targetRotation_ + delta, isMoving);\n        if (opt_anchor !== undefined) {\n            this.targetCenter_ = this.calculateCenterRotate(newRotation, opt_anchor);\n        }\n        this.targetRotation_ += delta;\n        this.applyTargetState_();\n    };\n    /**\n     * Set the center of the current view. Any extent constraint will apply.\n     * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n     * @observable\n     * @api\n     */\n    View.prototype.setCenter = function (center) {\n        this.targetCenter_ = center;\n        this.applyTargetState_();\n    };\n    /**\n     * @param {ViewHint} hint Hint.\n     * @param {number} delta Delta.\n     * @return {number} New value.\n     */\n    View.prototype.setHint = function (hint, delta) {\n        this.hints_[hint] += delta;\n        this.changed();\n        return this.hints_[hint];\n    };\n    /**\n     * Set the resolution for this view. Any resolution constraint will apply.\n     * @param {number|undefined} resolution The resolution of the view.\n     * @observable\n     * @api\n     */\n    View.prototype.setResolution = function (resolution) {\n        this.targetResolution_ = resolution;\n        this.applyTargetState_();\n    };\n    /**\n     * Set the rotation for this view. Any rotation constraint will apply.\n     * @param {number} rotation The rotation of the view in radians.\n     * @observable\n     * @api\n     */\n    View.prototype.setRotation = function (rotation) {\n        this.targetRotation_ = rotation;\n        this.applyTargetState_();\n    };\n    /**\n     * Zoom to a specific zoom level. Any resolution constrain will apply.\n     * @param {number} zoom Zoom level.\n     * @api\n     */\n    View.prototype.setZoom = function (zoom) {\n        this.setResolution(this.getResolutionForZoom(zoom));\n    };\n    /**\n     * Recompute rotation/resolution/center based on target values.\n     * Note: we have to compute rotation first, then resolution and center considering that\n     * parameters can influence one another in case a view extent constraint is present.\n     * @param {boolean=} opt_doNotCancelAnims Do not cancel animations.\n     * @param {boolean=} opt_forceMoving Apply constraints as if the view is moving.\n     * @private\n     */\n    View.prototype.applyTargetState_ = function (opt_doNotCancelAnims, opt_forceMoving) {\n        var isMoving = this.getAnimating() || this.getInteracting() || opt_forceMoving;\n        // compute rotation\n        var newRotation = this.constraints_.rotation(this.targetRotation_, isMoving);\n        var size = this.getSizeFromViewport_(newRotation);\n        var newResolution = this.constraints_.resolution(this.targetResolution_, 0, size, isMoving);\n        var newCenter = this.constraints_.center(this.targetCenter_, newResolution, size, isMoving);\n        if (this.get(ViewProperty.ROTATION) !== newRotation) {\n            this.set(ViewProperty.ROTATION, newRotation);\n        }\n        if (this.get(ViewProperty.RESOLUTION) !== newResolution) {\n            this.set(ViewProperty.RESOLUTION, newResolution);\n        }\n        if (!this.get(ViewProperty.CENTER) || !equals(this.get(ViewProperty.CENTER), newCenter)) {\n            this.set(ViewProperty.CENTER, newCenter);\n        }\n        if (this.getAnimating() && !opt_doNotCancelAnims) {\n            this.cancelAnimations();\n        }\n    };\n    /**\n     * If any constraints need to be applied, an animation will be triggered.\n     * This is typically done on interaction end.\n     * Note: calling this with a duration of 0 will apply the constrained values straight away,\n     * without animation.\n     * @param {number=} opt_duration The animation duration in ms.\n     * @param {number=} opt_resolutionDirection Which direction to zoom.\n     * @param {import(\"./coordinate.js\").Coordinate=} opt_anchor The origin of the transformation.\n     */\n    View.prototype.resolveConstraints = function (opt_duration, opt_resolutionDirection, opt_anchor) {\n        var duration = opt_duration !== undefined ? opt_duration : 200;\n        var direction = opt_resolutionDirection || 0;\n        var newRotation = this.constraints_.rotation(this.targetRotation_);\n        var size = this.getSizeFromViewport_(newRotation);\n        var newResolution = this.constraints_.resolution(this.targetResolution_, direction, size);\n        var newCenter = this.constraints_.center(this.targetCenter_, newResolution, size);\n        if (duration === 0) {\n            this.targetResolution_ = newResolution;\n            this.targetRotation_ = newRotation;\n            this.targetCenter_ = newCenter;\n            this.applyTargetState_();\n            return;\n        }\n        if (this.getResolution() !== newResolution ||\n            this.getRotation() !== newRotation ||\n            !this.getCenter() ||\n            !equals(this.getCenter(), newCenter)) {\n            if (this.getAnimating()) {\n                this.cancelAnimations();\n            }\n            this.animate_({\n                rotation: newRotation,\n                center: newCenter,\n                resolution: newResolution,\n                duration: duration,\n                easing: easeOut,\n                anchor: opt_anchor\n            });\n        }\n    };\n    /**\n     * Notify the View that an interaction has started.\n     * The view state will be resolved to a stable one if needed\n     * (depending on its constraints).\n     * @api\n     */\n    View.prototype.beginInteraction = function () {\n        this.resolveConstraints(0);\n        this.setHint(ViewHint.INTERACTING, 1);\n    };\n    /**\n     * Notify the View that an interaction has ended. The view state will be resolved\n     * to a stable one if needed (depending on its constraints).\n     * @param {number=} opt_duration Animation duration in ms.\n     * @param {number=} opt_resolutionDirection Which direction to zoom.\n     * @param {import(\"./coordinate.js\").Coordinate=} opt_anchor The origin of the transformation.\n     * @api\n     */\n    View.prototype.endInteraction = function (opt_duration, opt_resolutionDirection, opt_anchor) {\n        this.setHint(ViewHint.INTERACTING, -1);\n        this.resolveConstraints(opt_duration, opt_resolutionDirection, opt_anchor);\n    };\n    /**\n     * Get a valid position for the view center according to the current constraints.\n     * @param {import(\"./coordinate.js\").Coordinate|undefined} targetCenter Target center position.\n     * @param {number=} opt_targetResolution Target resolution. If not supplied, the current one will be used.\n     * This is useful to guess a valid center position at a different zoom level.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} Valid center position.\n     */\n    View.prototype.getConstrainedCenter = function (targetCenter, opt_targetResolution) {\n        var size = this.getSizeFromViewport_(this.getRotation());\n        return this.constraints_.center(targetCenter, opt_targetResolution || this.getResolution(), size);\n    };\n    /**\n     * Get a valid zoom level according to the current view constraints.\n     * @param {number|undefined} targetZoom Target zoom.\n     * @param {number=} opt_direction Direction. Default is `0`. Specify `-1` or `1` to return\n     * the available value respectively lower or greater than the target one. Leaving `0` will simply choose\n     * the nearest available value.\n     * @return {number|undefined} Valid zoom level.\n     */\n    View.prototype.getConstrainedZoom = function (targetZoom, opt_direction) {\n        var targetRes = this.getResolutionForZoom(targetZoom);\n        return this.getZoomForResolution(this.getConstrainedResolution(targetRes));\n    };\n    /**\n     * Get a valid resolution according to the current view constraints.\n     * @param {number|undefined} targetResolution Target resolution.\n     * @param {number=} opt_direction Direction. Default is `0`. Specify `-1` or `1` to return\n     * the available value respectively lower or greater than the target one. Leaving `0` will simply choose\n     * the nearest available value.\n     * @return {number|undefined} Valid resolution.\n     */\n    View.prototype.getConstrainedResolution = function (targetResolution, opt_direction) {\n        var direction = opt_direction || 0;\n        var size = this.getSizeFromViewport_(this.getRotation());\n        return this.constraints_.resolution(targetResolution, direction, size);\n    };\n    return View;\n}(BaseObject));\n/**\n * @param {Function} callback Callback.\n * @param {*} returnValue Return value.\n */\nfunction animationCallback(callback, returnValue) {\n    setTimeout(function () {\n        callback(returnValue);\n    }, 0);\n}\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./centerconstraint.js\").Type} The constraint.\n */\nexport function createCenterConstraint(options) {\n    if (options.extent !== undefined) {\n        return createExtent(options.extent, options.constrainOnlyCenter, options.smoothExtentConstraint !== undefined ? options.smoothExtentConstraint : true);\n    }\n    else {\n        return centerNone;\n    }\n}\n/**\n * @param {ViewOptions} options View options.\n * @return {{constraint: import(\"./resolutionconstraint.js\").Type, maxResolution: number,\n *     minResolution: number, minZoom: number, zoomFactor: number}} The constraint.\n */\nexport function createResolutionConstraint(options) {\n    var resolutionConstraint;\n    var maxResolution;\n    var minResolution;\n    // TODO: move these to be ol constants\n    // see https://github.com/openlayers/openlayers/issues/2076\n    var defaultMaxZoom = 28;\n    var defaultZoomFactor = 2;\n    var minZoom = options.minZoom !== undefined ?\n        options.minZoom : DEFAULT_MIN_ZOOM;\n    var maxZoom = options.maxZoom !== undefined ?\n        options.maxZoom : defaultMaxZoom;\n    var zoomFactor = options.zoomFactor !== undefined ?\n        options.zoomFactor : defaultZoomFactor;\n    var multiWorld = options.multiWorld !== undefined ?\n        options.multiWorld : false;\n    var smooth = options.smoothResolutionConstraint !== undefined ? options.smoothResolutionConstraint : true;\n    if (options.resolutions !== undefined) {\n        var resolutions = options.resolutions;\n        maxResolution = resolutions[minZoom];\n        minResolution = resolutions[maxZoom] !== undefined ?\n            resolutions[maxZoom] : resolutions[resolutions.length - 1];\n        if (options.constrainResolution) {\n            resolutionConstraint = createSnapToResolutions(resolutions, smooth, !options.constrainOnlyCenter && options.extent);\n        }\n        else {\n            resolutionConstraint = createMinMaxResolution(maxResolution, minResolution, smooth, !options.constrainOnlyCenter && options.extent);\n        }\n    }\n    else {\n        // calculate the default min and max resolution\n        var projection = createProjection(options.projection, 'EPSG:3857');\n        var extent = projection.getExtent();\n        var size = !extent ?\n            // use an extent that can fit the whole world if need be\n            360 * METERS_PER_UNIT[Units.DEGREES] /\n                projection.getMetersPerUnit() :\n            Math.max(getWidth(extent), getHeight(extent));\n        var defaultMaxResolution = size / DEFAULT_TILE_SIZE / Math.pow(defaultZoomFactor, DEFAULT_MIN_ZOOM);\n        var defaultMinResolution = defaultMaxResolution / Math.pow(defaultZoomFactor, defaultMaxZoom - DEFAULT_MIN_ZOOM);\n        // user provided maxResolution takes precedence\n        maxResolution = options.maxResolution;\n        if (maxResolution !== undefined) {\n            minZoom = 0;\n        }\n        else {\n            maxResolution = defaultMaxResolution / Math.pow(zoomFactor, minZoom);\n        }\n        // user provided minResolution takes precedence\n        minResolution = options.minResolution;\n        if (minResolution === undefined) {\n            if (options.maxZoom !== undefined) {\n                if (options.maxResolution !== undefined) {\n                    minResolution = maxResolution / Math.pow(zoomFactor, maxZoom);\n                }\n                else {\n                    minResolution = defaultMaxResolution / Math.pow(zoomFactor, maxZoom);\n                }\n            }\n            else {\n                minResolution = defaultMinResolution;\n            }\n        }\n        // given discrete zoom levels, minResolution may be different than provided\n        maxZoom = minZoom + Math.floor(Math.log(maxResolution / minResolution) / Math.log(zoomFactor));\n        minResolution = maxResolution / Math.pow(zoomFactor, maxZoom - minZoom);\n        if (options.constrainResolution) {\n            resolutionConstraint = createSnapToPower(zoomFactor, maxResolution, minResolution, smooth, !options.constrainOnlyCenter && options.extent);\n        }\n        else {\n            var constrainOnlyCenter = options.constrainOnlyCenter;\n            var extent_1 = options.extent;\n            if (!multiWorld && !extent_1 && projection.isGlobal()) {\n                constrainOnlyCenter = false;\n                extent_1 = projection.getExtent();\n            }\n            resolutionConstraint = createMinMaxResolution(maxResolution, minResolution, smooth, !constrainOnlyCenter && extent_1);\n        }\n    }\n    return { constraint: resolutionConstraint, maxResolution: maxResolution,\n        minResolution: minResolution, minZoom: minZoom, zoomFactor: zoomFactor };\n}\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./rotationconstraint.js\").Type} Rotation constraint.\n */\nexport function createRotationConstraint(options) {\n    var enableRotation = options.enableRotation !== undefined ?\n        options.enableRotation : true;\n    if (enableRotation) {\n        var constrainRotation = options.constrainRotation;\n        if (constrainRotation === undefined || constrainRotation === true) {\n            return createSnapToZero();\n        }\n        else if (constrainRotation === false) {\n            return rotationNone;\n        }\n        else if (typeof constrainRotation === 'number') {\n            return createSnapToN(constrainRotation);\n        }\n        else {\n            return rotationNone;\n        }\n    }\n    else {\n        return disable;\n    }\n}\n/**\n * Determine if an animation involves no view change.\n * @param {Animation} animation The animation.\n * @return {boolean} The animation involves no view change.\n */\nexport function isNoopAnimation(animation) {\n    if (animation.sourceCenter && animation.targetCenter) {\n        if (!coordinatesEqual(animation.sourceCenter, animation.targetCenter)) {\n            return false;\n        }\n    }\n    if (animation.sourceResolution !== animation.targetResolution) {\n        return false;\n    }\n    if (animation.sourceRotation !== animation.targetRotation) {\n        return false;\n    }\n    return true;\n}\nexport default View;\n//# sourceMappingURL=View.js.map","/**\n * @module ol/dom\n */\n/**\n * Create an html canvas element and returns its 2d context.\n * @param {number=} opt_width Canvas width.\n * @param {number=} opt_height Canvas height.\n * @return {CanvasRenderingContext2D} The context.\n */\nexport function createCanvasContext2D(opt_width, opt_height) {\n    var canvas = document.createElement('canvas');\n    if (opt_width) {\n        canvas.width = opt_width;\n    }\n    if (opt_height) {\n        canvas.height = opt_height;\n    }\n    return canvas.getContext('2d');\n}\n/**\n * Get the current computed width for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerWidth(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The width.\n */\nexport function outerWidth(element) {\n    var width = element.offsetWidth;\n    var style = getComputedStyle(element);\n    width += parseInt(style.marginLeft, 10) + parseInt(style.marginRight, 10);\n    return width;\n}\n/**\n * Get the current computed height for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerHeight(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The height.\n */\nexport function outerHeight(element) {\n    var height = element.offsetHeight;\n    var style = getComputedStyle(element);\n    height += parseInt(style.marginTop, 10) + parseInt(style.marginBottom, 10);\n    return height;\n}\n/**\n * @param {Node} newNode Node to replace old node\n * @param {Node} oldNode The node to be replaced\n */\nexport function replaceNode(newNode, oldNode) {\n    var parent = oldNode.parentNode;\n    if (parent) {\n        parent.replaceChild(newNode, oldNode);\n    }\n}\n/**\n * @param {Node} node The node to remove.\n * @returns {Node} The node that was removed or null.\n */\nexport function removeNode(node) {\n    return node && node.parentNode ? node.parentNode.removeChild(node) : null;\n}\n/**\n * @param {Node} node The node to remove the children from.\n */\nexport function removeChildren(node) {\n    while (node.lastChild) {\n        node.removeChild(node.lastChild);\n    }\n}\n/**\n * Transform the children of a parent node so they match the\n * provided list of children.  This function aims to efficiently\n * remove, add, and reorder child nodes while maintaining a simple\n * implementation (it is not guaranteed to minimize DOM operations).\n * @param {Node} node The parent node whose children need reworking.\n * @param {Array<Node>} children The desired children.\n */\nexport function replaceChildren(node, children) {\n    var oldChildren = node.childNodes;\n    for (var i = 0; true; ++i) {\n        var oldChild = oldChildren[i];\n        var newChild = children[i];\n        // check if our work is done\n        if (!oldChild && !newChild) {\n            break;\n        }\n        // check if children match\n        if (oldChild === newChild) {\n            continue;\n        }\n        // check if a new child needs to be added\n        if (!oldChild) {\n            node.appendChild(newChild);\n            continue;\n        }\n        // check if an old child needs to be removed\n        if (!newChild) {\n            node.removeChild(oldChild);\n            --i;\n            continue;\n        }\n        // reorder\n        node.insertBefore(newChild, oldChild);\n    }\n}\n//# sourceMappingURL=dom.js.map","/**\n * @module ol/layer/Property\n */\n/**\n * @enum {string}\n */\nexport default {\n    OPACITY: 'opacity',\n    VISIBLE: 'visible',\n    EXTENT: 'extent',\n    Z_INDEX: 'zIndex',\n    MAX_RESOLUTION: 'maxResolution',\n    MIN_RESOLUTION: 'minResolution',\n    SOURCE: 'source'\n};\n//# sourceMappingURL=Property.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/layer/Base\n */\nimport { abstract } from '../util.js';\nimport BaseObject from '../Object.js';\nimport LayerProperty from './Property.js';\nimport { clamp } from '../math.js';\nimport { assign } from '../obj.js';\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n */\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Note that with {@link module:ol/layer/Base} and all its subclasses, any property set in\n * the options is set as a {@link module:ol/Object} property on the layer object, so\n * is observable, and has get/set accessors.\n *\n * @api\n */\nvar BaseLayer = /** @class */ (function (_super) {\n    __extends(BaseLayer, _super);\n    /**\n     * @param {Options} options Layer options.\n     */\n    function BaseLayer(options) {\n        var _this = _super.call(this) || this;\n        /**\n         * @type {Object<string, *>}\n         */\n        var properties = assign({}, options);\n        properties[LayerProperty.OPACITY] =\n            options.opacity !== undefined ? options.opacity : 1;\n        properties[LayerProperty.VISIBLE] =\n            options.visible !== undefined ? options.visible : true;\n        properties[LayerProperty.Z_INDEX] = options.zIndex;\n        properties[LayerProperty.MAX_RESOLUTION] =\n            options.maxResolution !== undefined ? options.maxResolution : Infinity;\n        properties[LayerProperty.MIN_RESOLUTION] =\n            options.minResolution !== undefined ? options.minResolution : 0;\n        /**\n         * @type {string}\n         * @private\n         */\n        _this.className_ = properties.className !== undefined ? options.className : 'ol-layer';\n        delete properties.className;\n        _this.setProperties(properties);\n        /**\n         * @type {import(\"./Layer.js\").State}\n         * @private\n         */\n        _this.state_ = null;\n        return _this;\n    }\n    /**\n     * @return {string} CSS class name.\n     */\n    BaseLayer.prototype.getClassName = function () {\n        return this.className_;\n    };\n    /**\n     * @return {import(\"./Layer.js\").State} Layer state.\n     */\n    BaseLayer.prototype.getLayerState = function () {\n        /** @type {import(\"./Layer.js\").State} */\n        var state = this.state_ || /** @type {?} */ ({\n            layer: this,\n            managed: true\n        });\n        state.opacity = clamp(Math.round(this.getOpacity() * 100) / 100, 0, 1);\n        state.sourceState = this.getSourceState();\n        state.visible = this.getVisible();\n        state.extent = this.getExtent();\n        state.zIndex = this.getZIndex() || 0;\n        state.maxResolution = this.getMaxResolution();\n        state.minResolution = Math.max(this.getMinResolution(), 0);\n        this.state_ = state;\n        return state;\n    };\n    /**\n     * @abstract\n     * @param {Array<import(\"./Layer.js\").default>=} opt_array Array of layers (to be\n     *     modified in place).\n     * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n     */\n    BaseLayer.prototype.getLayersArray = function (opt_array) {\n        return abstract();\n    };\n    /**\n     * @abstract\n     * @param {Array<import(\"./Layer.js\").State>=} opt_states Optional list of layer\n     *     states (to be modified in place).\n     * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n     */\n    BaseLayer.prototype.getLayerStatesArray = function (opt_states) {\n        return abstract();\n    };\n    /**\n     * Return the {@link module:ol/extent~Extent extent} of the layer or `undefined` if it\n     * will be visible regardless of extent.\n     * @return {import(\"../extent.js\").Extent|undefined} The layer extent.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.getExtent = function () {\n        return (\n        /** @type {import(\"../extent.js\").Extent|undefined} */ (this.get(LayerProperty.EXTENT)));\n    };\n    /**\n     * Return the maximum resolution of the layer.\n     * @return {number} The maximum resolution of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.getMaxResolution = function () {\n        return /** @type {number} */ (this.get(LayerProperty.MAX_RESOLUTION));\n    };\n    /**\n     * Return the minimum resolution of the layer.\n     * @return {number} The minimum resolution of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.getMinResolution = function () {\n        return /** @type {number} */ (this.get(LayerProperty.MIN_RESOLUTION));\n    };\n    /**\n     * Return the opacity of the layer (between 0 and 1).\n     * @return {number} The opacity of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.getOpacity = function () {\n        return /** @type {number} */ (this.get(LayerProperty.OPACITY));\n    };\n    /**\n     * @abstract\n     * @return {import(\"../source/State.js\").default} Source state.\n     */\n    BaseLayer.prototype.getSourceState = function () {\n        return abstract();\n    };\n    /**\n     * Return the visibility of the layer (`true` or `false`).\n     * @return {boolean} The visibility of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.getVisible = function () {\n        return /** @type {boolean} */ (this.get(LayerProperty.VISIBLE));\n    };\n    /**\n     * Return the Z-index of the layer, which is used to order layers before\n     * rendering. The default Z-index is 0.\n     * @return {number} The Z-index of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.getZIndex = function () {\n        return /** @type {number} */ (this.get(LayerProperty.Z_INDEX));\n    };\n    /**\n     * Set the extent at which the layer is visible.  If `undefined`, the layer\n     * will be visible at all extents.\n     * @param {import(\"../extent.js\").Extent|undefined} extent The extent of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.setExtent = function (extent) {\n        this.set(LayerProperty.EXTENT, extent);\n    };\n    /**\n     * Set the maximum resolution at which the layer is visible.\n     * @param {number} maxResolution The maximum resolution of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.setMaxResolution = function (maxResolution) {\n        this.set(LayerProperty.MAX_RESOLUTION, maxResolution);\n    };\n    /**\n     * Set the minimum resolution at which the layer is visible.\n     * @param {number} minResolution The minimum resolution of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.setMinResolution = function (minResolution) {\n        this.set(LayerProperty.MIN_RESOLUTION, minResolution);\n    };\n    /**\n     * Set the opacity of the layer, allowed values range from 0 to 1.\n     * @param {number} opacity The opacity of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.setOpacity = function (opacity) {\n        this.set(LayerProperty.OPACITY, opacity);\n    };\n    /**\n     * Set the visibility of the layer (`true` or `false`).\n     * @param {boolean} visible The visibility of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.setVisible = function (visible) {\n        this.set(LayerProperty.VISIBLE, visible);\n    };\n    /**\n     * Set Z-index of the layer, which is used to order layers before rendering.\n     * The default Z-index is 0.\n     * @param {number} zindex The z-index of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.setZIndex = function (zindex) {\n        this.set(LayerProperty.Z_INDEX, zindex);\n    };\n    return BaseLayer;\n}(BaseObject));\nexport default BaseLayer;\n//# sourceMappingURL=Base.js.map","/**\n * @module ol/source/State\n */\n/**\n * @enum {string}\n * State of the source, one of 'undefined', 'loading', 'ready' or 'error'.\n */\nexport default {\n    UNDEFINED: 'undefined',\n    LOADING: 'loading',\n    READY: 'ready',\n    ERROR: 'error'\n};\n//# sourceMappingURL=State.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/layer/Group\n */\nimport { getUid } from '../util.js';\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport { getChangeEventType } from '../Object.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport { assert } from '../asserts.js';\nimport { listen, unlistenByKey } from '../events.js';\nimport EventType from '../events/EventType.js';\nimport { getIntersection } from '../extent.js';\nimport BaseLayer from './Base.js';\nimport { assign, clear } from '../obj.js';\nimport SourceState from '../source/State.js';\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {Array<import(\"./Base.js\").default>|import(\"../Collection.js\").default<import(\"./Base.js\").default>} [layers] Child layers.\n */\n/**\n * @enum {string}\n * @private\n */\nvar Property = {\n    LAYERS: 'layers'\n};\n/**\n * @classdesc\n * A {@link module:ol/Collection~Collection} of layers that are handled together.\n *\n * A generic `change` event is triggered when the group/Collection changes.\n *\n * @api\n */\nvar LayerGroup = /** @class */ (function (_super) {\n    __extends(LayerGroup, _super);\n    /**\n     * @param {Options=} opt_options Layer options.\n     */\n    function LayerGroup(opt_options) {\n        var _this = this;\n        var options = opt_options || {};\n        var baseOptions = /** @type {Options} */ (assign({}, options));\n        delete baseOptions.layers;\n        var layers = options.layers;\n        _this = _super.call(this, baseOptions) || this;\n        /**\n         * @private\n         * @type {Array<import(\"../events.js\").EventsKey>}\n         */\n        _this.layersListenerKeys_ = [];\n        /**\n         * @private\n         * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n         */\n        _this.listenerKeys_ = {};\n        listen(_this, getChangeEventType(Property.LAYERS), _this.handleLayersChanged_, _this);\n        if (layers) {\n            if (Array.isArray(layers)) {\n                layers = new Collection(layers.slice(), { unique: true });\n            }\n            else {\n                assert(typeof /** @type {?} */ (layers).getArray === 'function', 43); // Expected `layers` to be an array or a `Collection`\n            }\n        }\n        else {\n            layers = new Collection(undefined, { unique: true });\n        }\n        _this.setLayers(layers);\n        return _this;\n    }\n    /**\n     * @private\n     */\n    LayerGroup.prototype.handleLayerChange_ = function () {\n        this.changed();\n    };\n    /**\n     * @private\n     */\n    LayerGroup.prototype.handleLayersChanged_ = function () {\n        this.layersListenerKeys_.forEach(unlistenByKey);\n        this.layersListenerKeys_.length = 0;\n        var layers = this.getLayers();\n        this.layersListenerKeys_.push(listen(layers, CollectionEventType.ADD, this.handleLayersAdd_, this), listen(layers, CollectionEventType.REMOVE, this.handleLayersRemove_, this));\n        for (var id in this.listenerKeys_) {\n            this.listenerKeys_[id].forEach(unlistenByKey);\n        }\n        clear(this.listenerKeys_);\n        var layersArray = layers.getArray();\n        for (var i = 0, ii = layersArray.length; i < ii; i++) {\n            var layer = layersArray[i];\n            this.listenerKeys_[getUid(layer)] = [\n                listen(layer, ObjectEventType.PROPERTYCHANGE, this.handleLayerChange_, this),\n                listen(layer, EventType.CHANGE, this.handleLayerChange_, this)\n            ];\n        }\n        this.changed();\n    };\n    /**\n     * @param {import(\"../Collection.js\").CollectionEvent} collectionEvent CollectionEvent.\n     * @private\n     */\n    LayerGroup.prototype.handleLayersAdd_ = function (collectionEvent) {\n        var layer = /** @type {import(\"./Base.js\").default} */ (collectionEvent.element);\n        this.listenerKeys_[getUid(layer)] = [\n            listen(layer, ObjectEventType.PROPERTYCHANGE, this.handleLayerChange_, this),\n            listen(layer, EventType.CHANGE, this.handleLayerChange_, this)\n        ];\n        this.changed();\n    };\n    /**\n     * @param {import(\"../Collection.js\").CollectionEvent} collectionEvent CollectionEvent.\n     * @private\n     */\n    LayerGroup.prototype.handleLayersRemove_ = function (collectionEvent) {\n        var layer = /** @type {import(\"./Base.js\").default} */ (collectionEvent.element);\n        var key = getUid(layer);\n        this.listenerKeys_[key].forEach(unlistenByKey);\n        delete this.listenerKeys_[key];\n        this.changed();\n    };\n    /**\n     * Returns the {@link module:ol/Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n     * in this group.\n     * @return {!import(\"../Collection.js\").default<import(\"./Base.js\").default>} Collection of\n     *   {@link module:ol/layer/Base layers} that are part of this group.\n     * @observable\n     * @api\n     */\n    LayerGroup.prototype.getLayers = function () {\n        return (\n        /** @type {!import(\"../Collection.js\").default<import(\"./Base.js\").default>} */ (this.get(Property.LAYERS)));\n    };\n    /**\n     * Set the {@link module:ol/Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n     * in this group.\n     * @param {!import(\"../Collection.js\").default<import(\"./Base.js\").default>} layers Collection of\n     *   {@link module:ol/layer/Base layers} that are part of this group.\n     * @observable\n     * @api\n     */\n    LayerGroup.prototype.setLayers = function (layers) {\n        this.set(Property.LAYERS, layers);\n    };\n    /**\n     * @inheritDoc\n     */\n    LayerGroup.prototype.getLayersArray = function (opt_array) {\n        var array = opt_array !== undefined ? opt_array : [];\n        this.getLayers().forEach(function (layer) {\n            layer.getLayersArray(array);\n        });\n        return array;\n    };\n    /**\n     * @inheritDoc\n     */\n    LayerGroup.prototype.getLayerStatesArray = function (opt_states) {\n        var states = opt_states !== undefined ? opt_states : [];\n        var pos = states.length;\n        this.getLayers().forEach(function (layer) {\n            layer.getLayerStatesArray(states);\n        });\n        var ownLayerState = this.getLayerState();\n        for (var i = pos, ii = states.length; i < ii; i++) {\n            var layerState = states[i];\n            layerState.opacity *= ownLayerState.opacity;\n            layerState.visible = layerState.visible && ownLayerState.visible;\n            layerState.maxResolution = Math.min(layerState.maxResolution, ownLayerState.maxResolution);\n            layerState.minResolution = Math.max(layerState.minResolution, ownLayerState.minResolution);\n            if (ownLayerState.extent !== undefined) {\n                if (layerState.extent !== undefined) {\n                    layerState.extent = getIntersection(layerState.extent, ownLayerState.extent);\n                }\n                else {\n                    layerState.extent = ownLayerState.extent;\n                }\n            }\n        }\n        return states;\n    };\n    /**\n     * @inheritDoc\n     */\n    LayerGroup.prototype.getSourceState = function () {\n        return SourceState.READY;\n    };\n    return LayerGroup;\n}(BaseLayer));\nexport default LayerGroup;\n//# sourceMappingURL=Group.js.map","/**\n * @module ol/size\n */\n/**\n * An array of numbers representing a size: `[width, height]`.\n * @typedef {Array<number>} Size\n * @api\n */\n/**\n * Returns a buffered size.\n * @param {Size} size Size.\n * @param {number} num The amount by which to buffer.\n * @param {Size=} opt_size Optional reusable size array.\n * @return {Size} The buffered size.\n */\nexport function buffer(size, num, opt_size) {\n    if (opt_size === undefined) {\n        opt_size = [0, 0];\n    }\n    opt_size[0] = size[0] + 2 * num;\n    opt_size[1] = size[1] + 2 * num;\n    return opt_size;\n}\n/**\n * Determines if a size has a positive area.\n * @param {Size} size The size to test.\n * @return {boolean} The size has a positive area.\n */\nexport function hasArea(size) {\n    return size[0] > 0 && size[1] > 0;\n}\n/**\n * Returns a size scaled by a ratio. The result will be an array of integers.\n * @param {Size} size Size.\n * @param {number} ratio Ratio.\n * @param {Size=} opt_size Optional reusable size array.\n * @return {Size} The scaled size.\n */\nexport function scale(size, ratio, opt_size) {\n    if (opt_size === undefined) {\n        opt_size = [0, 0];\n    }\n    opt_size[0] = (size[0] * ratio + 0.5) | 0;\n    opt_size[1] = (size[1] * ratio + 0.5) | 0;\n    return opt_size;\n}\n/**\n * Returns an `Size` array for the passed in number (meaning: square) or\n * `Size` array.\n * (meaning: non-square),\n * @param {number|Size} size Width and height.\n * @param {Size=} opt_size Optional reusable size array.\n * @return {Size} Size.\n * @api\n */\nexport function toSize(size, opt_size) {\n    if (Array.isArray(size)) {\n        return size;\n    }\n    else {\n        if (opt_size === undefined) {\n            opt_size = [size, size];\n        }\n        else {\n            opt_size[0] = opt_size[1] = /** @type {number} */ (size);\n        }\n        return opt_size;\n    }\n}\n//# sourceMappingURL=size.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/PluggableMap\n */\nimport { getUid } from './util.js';\nimport Collection from './Collection.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventHandler from './MapBrowserEventHandler.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport MapEvent from './MapEvent.js';\nimport MapEventType from './MapEventType.js';\nimport MapProperty from './MapProperty.js';\nimport RenderEventType from './render/EventType.js';\nimport BaseObject, { getChangeEventType } from './Object.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport TileQueue from './TileQueue.js';\nimport View from './View.js';\nimport ViewHint from './ViewHint.js';\nimport { assert } from './asserts.js';\nimport { removeNode } from './dom.js';\nimport { listen, unlistenByKey, unlisten } from './events.js';\nimport EventType from './events/EventType.js';\nimport { createEmpty, clone, createOrUpdateEmpty, equals, getForViewAndSize, isEmpty } from './extent.js';\nimport { TRUE } from './functions.js';\nimport { DEVICE_PIXEL_RATIO, TOUCH } from './has.js';\nimport LayerGroup from './layer/Group.js';\nimport { hasArea } from './size.js';\nimport { DROP } from './structs/PriorityQueue.js';\nimport { create as createTransform, apply as applyTransform } from './transform.js';\n/**\n * State of the current frame. Only `pixelRatio`, `time` and `viewState` should\n * be used in applications.\n * @typedef {Object} FrameState\n * @property {number} pixelRatio The pixel ratio of the frame.\n * @property {number} time The time when rendering of the frame was requested.\n * @property {import(\"./View.js\").State} viewState The state of the current view.\n * @property {boolean} animate\n * @property {import(\"./transform.js\").Transform} coordinateToPixelTransform\n * @property {null|import(\"./extent.js\").Extent} extent\n * @property {import(\"./coordinate.js\").Coordinate} focus\n * @property {number} index\n * @property {Array<import(\"./layer/Layer.js\").State>} layerStatesArray\n * @property {import(\"./transform.js\").Transform} pixelToCoordinateTransform\n * @property {Array<PostRenderFunction>} postRenderFunctions\n * @property {import(\"./size.js\").Size} size\n * @property {!Object<string, boolean>} skippedFeatureUids\n * @property {TileQueue} tileQueue\n * @property {!Object<string, Object<string, boolean>>} usedTiles\n * @property {Array<number>} viewHints\n * @property {!Object<string, Object<string, boolean>>} wantedTiles\n */\n/**\n * @typedef {function(PluggableMap, ?FrameState): any} PostRenderFunction\n */\n/**\n * @typedef {Object} AtPixelOptions\n * @property {undefined|function(import(\"./layer/Layer.js\").default): boolean} [layerFilter] Layer filter\n * function. The filter function will receive one argument, the\n * {@link module:ol/layer/Layer layer-candidate} and it should return a boolean value.\n * Only layers which are visible and for which this function returns `true`\n * will be tested for features. By default, all visible layers will be tested.\n * @property {number} [hitTolerance=0] Hit-detection tolerance in pixels. Pixels\n * inside the radius around the given position will be checked for features.\n */\n/**\n * @typedef {Object} MapOptionsInternal\n * @property {Collection<import(\"./control/Control.js\").default>} [controls]\n * @property {Collection<import(\"./interaction/Interaction.js\").default>} [interactions]\n * @property {HTMLElement|Document} keyboardEventTarget\n * @property {Collection<import(\"./Overlay.js\").default>} overlays\n * @property {Object<string, *>} values\n */\n/**\n * Object literal with config options for the map.\n * @typedef {Object} MapOptions\n * @property {Collection<import(\"./control/Control.js\").default>|Array<import(\"./control/Control.js\").default>} [controls]\n * Controls initially added to the map. If not specified,\n * {@link module:ol/control~defaults} is used.\n * @property {number} [pixelRatio=window.devicePixelRatio] The ratio between\n * physical pixels and device-independent pixels (dips) on the device.\n * @property {Collection<import(\"./interaction/Interaction.js\").default>|Array<import(\"./interaction/Interaction.js\").default>} [interactions]\n * Interactions that are initially added to the map. If not specified,\n * {@link module:ol/interaction~defaults} is used.\n * @property {HTMLElement|Document|string} [keyboardEventTarget] The element to\n * listen to keyboard events on. This determines when the `KeyboardPan` and\n * `KeyboardZoom` interactions trigger. For example, if this option is set to\n * `document` the keyboard interactions will always trigger. If this option is\n * not specified, the element the library listens to keyboard events on is the\n * map target (i.e. the user-provided div for the map). If this is not\n * `document`, the target element needs to be focused for key events to be\n * emitted, requiring that the target element has a `tabindex` attribute.\n * @property {Array<import(\"./layer/Base.js\").default>|Collection<import(\"./layer/Base.js\").default>|LayerGroup} [layers]\n * Layers. If this is not defined, a map with no layers will be rendered. Note\n * that layers are rendered in the order supplied, so if you want, for example,\n * a vector layer to appear on top of a tile layer, it must come after the tile\n * layer.\n * @property {number} [maxTilesLoading=16] Maximum number tiles to load\n * simultaneously.\n * @property {number} [moveTolerance=1] The minimum distance in pixels the\n * cursor must move to be detected as a map move event instead of a click.\n * Increasing this value can make it easier to click on the map.\n * @property {Collection<import(\"./Overlay.js\").default>|Array<import(\"./Overlay.js\").default>} [overlays]\n * Overlays initially added to the map. By default, no overlays are added.\n * @property {HTMLElement|string} [target] The container for the map, either the\n * element itself or the `id` of the element. If not specified at construction\n * time, {@link module:ol/Map~Map#setTarget} must be called for the map to be\n * rendered.\n * @property {View} [view] The map's view.  No layer sources will be\n * fetched unless this is specified at construction time or through\n * {@link module:ol/Map~Map#setView}.\n */\n/**\n * @fires import(\"./MapBrowserEvent.js\").MapBrowserEvent\n * @fires import(\"./MapEvent.js\").MapEvent\n * @fires import(\"./render/Event.js\").default#precompose\n * @fires import(\"./render/Event.js\").default#postcompose\n * @fires import(\"./render/Event.js\").default#rendercomplete\n * @api\n */\nvar PluggableMap = /** @class */ (function (_super) {\n    __extends(PluggableMap, _super);\n    /**\n     * @param {MapOptions} options Map options.\n     */\n    function PluggableMap(options) {\n        var _this = _super.call(this) || this;\n        var optionsInternal = createOptionsInternal(options);\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.maxTilesLoading_ = options.maxTilesLoading !== undefined ? options.maxTilesLoading : 16;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.pixelRatio_ = options.pixelRatio !== undefined ?\n            options.pixelRatio : DEVICE_PIXEL_RATIO;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.animationDelayKey_;\n        /**\n         * @private\n         */\n        _this.animationDelay_ = function () {\n            this.animationDelayKey_ = undefined;\n            this.renderFrame_(Date.now());\n        }.bind(_this);\n        /**\n         * @private\n         * @type {import(\"./transform.js\").Transform}\n         */\n        _this.coordinateToPixelTransform_ = createTransform();\n        /**\n         * @private\n         * @type {import(\"./transform.js\").Transform}\n         */\n        _this.pixelToCoordinateTransform_ = createTransform();\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.frameIndex_ = 0;\n        /**\n         * @private\n         * @type {?FrameState}\n         */\n        _this.frameState_ = null;\n        /**\n         * The extent at the previous 'moveend' event.\n         * @private\n         * @type {import(\"./extent.js\").Extent}\n         */\n        _this.previousExtent_ = null;\n        /**\n         * @private\n         * @type {?import(\"./events.js\").EventsKey}\n         */\n        _this.viewPropertyListenerKey_ = null;\n        /**\n         * @private\n         * @type {?import(\"./events.js\").EventsKey}\n         */\n        _this.viewChangeListenerKey_ = null;\n        /**\n         * @private\n         * @type {Array<import(\"./events.js\").EventsKey>}\n         */\n        _this.layerGroupPropertyListenerKeys_ = null;\n        /**\n         * @private\n         * @type {!HTMLElement}\n         */\n        _this.viewport_ = document.createElement('div');\n        _this.viewport_.className = 'ol-viewport' + (TOUCH ? ' ol-touch' : '');\n        _this.viewport_.style.position = 'relative';\n        _this.viewport_.style.overflow = 'hidden';\n        _this.viewport_.style.width = '100%';\n        _this.viewport_.style.height = '100%';\n        // prevent page zoom on IE >= 10 browsers\n        _this.viewport_.style.msTouchAction = 'none';\n        _this.viewport_.style.touchAction = 'none';\n        /**\n         * @private\n         * @type {!HTMLElement}\n         */\n        _this.overlayContainer_ = document.createElement('div');\n        _this.overlayContainer_.style.position = 'absolute';\n        _this.overlayContainer_.style.zIndex = '0';\n        _this.overlayContainer_.style.width = '100%';\n        _this.overlayContainer_.style.height = '100%';\n        _this.overlayContainer_.className = 'ol-overlaycontainer';\n        _this.viewport_.appendChild(_this.overlayContainer_);\n        /**\n         * @private\n         * @type {!HTMLElement}\n         */\n        _this.overlayContainerStopEvent_ = document.createElement('div');\n        _this.overlayContainerStopEvent_.style.position = 'absolute';\n        _this.overlayContainerStopEvent_.style.zIndex = '0';\n        _this.overlayContainerStopEvent_.style.width = '100%';\n        _this.overlayContainerStopEvent_.style.height = '100%';\n        _this.overlayContainerStopEvent_.className = 'ol-overlaycontainer-stopevent';\n        _this.viewport_.appendChild(_this.overlayContainerStopEvent_);\n        /**\n         * @private\n         * @type {MapBrowserEventHandler}\n         */\n        _this.mapBrowserEventHandler_ = new MapBrowserEventHandler(_this, options.moveTolerance);\n        for (var key in MapBrowserEventType) {\n            listen(_this.mapBrowserEventHandler_, MapBrowserEventType[key], _this.handleMapBrowserEvent, _this);\n        }\n        /**\n         * @private\n         * @type {HTMLElement|Document}\n         */\n        _this.keyboardEventTarget_ = optionsInternal.keyboardEventTarget;\n        /**\n         * @private\n         * @type {Array<import(\"./events.js\").EventsKey>}\n         */\n        _this.keyHandlerKeys_ = null;\n        listen(_this.viewport_, EventType.CONTEXTMENU, _this.handleBrowserEvent, _this);\n        listen(_this.viewport_, EventType.WHEEL, _this.handleBrowserEvent, _this);\n        listen(_this.viewport_, EventType.MOUSEWHEEL, _this.handleBrowserEvent, _this);\n        /**\n         * @type {Collection<import(\"./control/Control.js\").default>}\n         * @protected\n         */\n        _this.controls = optionsInternal.controls || new Collection();\n        /**\n         * @type {Collection<import(\"./interaction/Interaction.js\").default>}\n         * @protected\n         */\n        _this.interactions = optionsInternal.interactions || new Collection();\n        /**\n         * @type {Collection<import(\"./Overlay.js\").default>}\n         * @private\n         */\n        _this.overlays_ = optionsInternal.overlays;\n        /**\n         * A lookup of overlays by id.\n         * @private\n         * @type {Object<string, import(\"./Overlay.js\").default>}\n         */\n        _this.overlayIdIndex_ = {};\n        /**\n         * @type {import(\"./renderer/Map.js\").default}\n         * @private\n         */\n        _this.renderer_ = _this.createRenderer();\n        /**\n         * @type {function(Event): void|undefined}\n         * @private\n         */\n        _this.handleResize_;\n        /**\n         * @private\n         * @type {import(\"./coordinate.js\").Coordinate}\n         */\n        _this.focus_ = null;\n        /**\n         * @private\n         * @type {!Array<PostRenderFunction>}\n         */\n        _this.postRenderFunctions_ = [];\n        /**\n         * @private\n         * @type {TileQueue}\n         */\n        _this.tileQueue_ = new TileQueue(_this.getTilePriority.bind(_this), _this.handleTileChange_.bind(_this));\n        /**\n         * Uids of features to skip at rendering time.\n         * @type {Object<string, boolean>}\n         * @private\n         */\n        _this.skippedFeatureUids_ = {};\n        listen(_this, getChangeEventType(MapProperty.LAYERGROUP), _this.handleLayerGroupChanged_, _this);\n        listen(_this, getChangeEventType(MapProperty.VIEW), _this.handleViewChanged_, _this);\n        listen(_this, getChangeEventType(MapProperty.SIZE), _this.handleSizeChanged_, _this);\n        listen(_this, getChangeEventType(MapProperty.TARGET), _this.handleTargetChanged_, _this);\n        // setProperties will trigger the rendering of the map if the map\n        // is \"defined\" already.\n        _this.setProperties(optionsInternal.values);\n        _this.controls.forEach(\n        /**\n         * @param {import(\"./control/Control.js\").default} control Control.\n         * @this {PluggableMap}\n         */\n        (function (control) {\n            control.setMap(this);\n        }).bind(_this));\n        listen(_this.controls, CollectionEventType.ADD, \n        /**\n         * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n         */\n        function (event) {\n            event.element.setMap(this);\n        }, _this);\n        listen(_this.controls, CollectionEventType.REMOVE, \n        /**\n         * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n         */\n        function (event) {\n            event.element.setMap(null);\n        }, _this);\n        _this.interactions.forEach(\n        /**\n         * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction.\n         * @this {PluggableMap}\n         */\n        (function (interaction) {\n            interaction.setMap(this);\n        }).bind(_this));\n        listen(_this.interactions, CollectionEventType.ADD, \n        /**\n         * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n         */\n        function (event) {\n            event.element.setMap(this);\n        }, _this);\n        listen(_this.interactions, CollectionEventType.REMOVE, \n        /**\n         * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n         */\n        function (event) {\n            event.element.setMap(null);\n        }, _this);\n        _this.overlays_.forEach(_this.addOverlayInternal_.bind(_this));\n        listen(_this.overlays_, CollectionEventType.ADD, \n        /**\n         * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n         */\n        function (event) {\n            this.addOverlayInternal_(/** @type {import(\"./Overlay.js\").default} */ (event.element));\n        }, _this);\n        listen(_this.overlays_, CollectionEventType.REMOVE, \n        /**\n         * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n         */\n        function (event) {\n            var overlay = /** @type {import(\"./Overlay.js\").default} */ (event.element);\n            var id = overlay.getId();\n            if (id !== undefined) {\n                delete this.overlayIdIndex_[id.toString()];\n            }\n            event.element.setMap(null);\n        }, _this);\n        return _this;\n    }\n    /**\n     * @abstract\n     * @return {import(\"./renderer/Map.js\").default} The map renderer\n     */\n    PluggableMap.prototype.createRenderer = function () {\n        throw new Error('Use a map type that has a createRenderer method');\n    };\n    /**\n     * Add the given control to the map.\n     * @param {import(\"./control/Control.js\").default} control Control.\n     * @api\n     */\n    PluggableMap.prototype.addControl = function (control) {\n        this.getControls().push(control);\n    };\n    /**\n     * Add the given interaction to the map. If you want to add an interaction\n     * at another point of the collection use `getInteraction()` and the methods\n     * available on {@link module:ol/Collection~Collection}. This can be used to\n     * stop the event propagation from the handleEvent function. The interactions\n     * get to handle the events in the reverse order of this collection.\n     * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to add.\n     * @api\n     */\n    PluggableMap.prototype.addInteraction = function (interaction) {\n        this.getInteractions().push(interaction);\n    };\n    /**\n     * Adds the given layer to the top of this map. If you want to add a layer\n     * elsewhere in the stack, use `getLayers()` and the methods available on\n     * {@link module:ol/Collection~Collection}.\n     * @param {import(\"./layer/Base.js\").default} layer Layer.\n     * @api\n     */\n    PluggableMap.prototype.addLayer = function (layer) {\n        var layers = this.getLayerGroup().getLayers();\n        layers.push(layer);\n    };\n    /**\n     * Add the given overlay to the map.\n     * @param {import(\"./Overlay.js\").default} overlay Overlay.\n     * @api\n     */\n    PluggableMap.prototype.addOverlay = function (overlay) {\n        this.getOverlays().push(overlay);\n    };\n    /**\n     * This deals with map's overlay collection changes.\n     * @param {import(\"./Overlay.js\").default} overlay Overlay.\n     * @private\n     */\n    PluggableMap.prototype.addOverlayInternal_ = function (overlay) {\n        var id = overlay.getId();\n        if (id !== undefined) {\n            this.overlayIdIndex_[id.toString()] = overlay;\n        }\n        overlay.setMap(this);\n    };\n    /**\n     *\n     * @inheritDoc\n     */\n    PluggableMap.prototype.disposeInternal = function () {\n        this.mapBrowserEventHandler_.dispose();\n        unlisten(this.viewport_, EventType.CONTEXTMENU, this.handleBrowserEvent, this);\n        unlisten(this.viewport_, EventType.WHEEL, this.handleBrowserEvent, this);\n        unlisten(this.viewport_, EventType.MOUSEWHEEL, this.handleBrowserEvent, this);\n        if (this.handleResize_ !== undefined) {\n            removeEventListener(EventType.RESIZE, this.handleResize_, false);\n            this.handleResize_ = undefined;\n        }\n        if (this.animationDelayKey_) {\n            cancelAnimationFrame(this.animationDelayKey_);\n            this.animationDelayKey_ = undefined;\n        }\n        this.setTarget(null);\n        _super.prototype.disposeInternal.call(this);\n    };\n    /**\n     * Detect features that intersect a pixel on the viewport, and execute a\n     * callback with each intersecting feature. Layers included in the detection can\n     * be configured through the `layerFilter` option in `opt_options`.\n     * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n     * @param {function(this: S, import(\"./Feature.js\").FeatureLike,\n     *     import(\"./layer/Layer.js\").default): T} callback Feature callback. The callback will be\n     *     called with two arguments. The first argument is one\n     *     {@link module:ol/Feature feature} or\n     *     {@link module:ol/render/Feature render feature} at the pixel, the second is\n     *     the {@link module:ol/layer/Layer layer} of the feature and will be null for\n     *     unmanaged layers. To stop detection, callback functions can return a\n     *     truthy value.\n     * @param {AtPixelOptions=} opt_options Optional options.\n     * @return {T|undefined} Callback result, i.e. the return value of last\n     * callback execution, or the first truthy callback return value.\n     * @template S,T\n     * @api\n     */\n    PluggableMap.prototype.forEachFeatureAtPixel = function (pixel, callback, opt_options) {\n        if (!this.frameState_) {\n            return;\n        }\n        var coordinate = this.getCoordinateFromPixel(pixel);\n        opt_options = opt_options !== undefined ? opt_options :\n            /** @type {AtPixelOptions} */ ({});\n        var hitTolerance = opt_options.hitTolerance !== undefined ?\n            opt_options.hitTolerance * this.frameState_.pixelRatio : 0;\n        var layerFilter = opt_options.layerFilter !== undefined ?\n            opt_options.layerFilter : TRUE;\n        return this.renderer_.forEachFeatureAtCoordinate(coordinate, this.frameState_, hitTolerance, callback, null, layerFilter, null);\n    };\n    /**\n     * Get all features that intersect a pixel on the viewport.\n     * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n     * @param {AtPixelOptions=} opt_options Optional options.\n     * @return {Array<import(\"./Feature.js\").FeatureLike>} The detected features or\n     * `null` if none were found.\n     * @api\n     */\n    PluggableMap.prototype.getFeaturesAtPixel = function (pixel, opt_options) {\n        var features = null;\n        this.forEachFeatureAtPixel(pixel, function (feature) {\n            if (!features) {\n                features = [];\n            }\n            features.push(feature);\n        }, opt_options);\n        return features;\n    };\n    /**\n     * Detect layers that have a color value at a pixel on the viewport, and\n     * execute a callback with each matching layer. Layers included in the\n     * detection can be configured through `opt_layerFilter`.\n     * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n     * @param {function(this: S, import(\"./layer/Layer.js\").default, (Uint8ClampedArray|Uint8Array)): T} callback\n     *     Layer callback. This callback will receive two arguments: first is the\n     *     {@link module:ol/layer/Layer layer}, second argument is an array representing\n     *     [R, G, B, A] pixel values (0 - 255) and will be `null` for layer types\n     *     that do not currently support this argument. To stop detection, callback\n     *     functions can return a truthy value.\n     * @param {AtPixelOptions=} opt_options Configuration options.\n     * @return {T|undefined} Callback result, i.e. the return value of last\n     * callback execution, or the first truthy callback return value.\n     * @template S,T\n     * @api\n     */\n    PluggableMap.prototype.forEachLayerAtPixel = function (pixel, callback, opt_options) {\n        if (!this.frameState_) {\n            return;\n        }\n        var options = opt_options || /** @type {AtPixelOptions} */ ({});\n        var hitTolerance = options.hitTolerance !== undefined ?\n            opt_options.hitTolerance * this.frameState_.pixelRatio : 0;\n        var layerFilter = options.layerFilter || TRUE;\n        return this.renderer_.forEachLayerAtPixel(pixel, this.frameState_, hitTolerance, callback, layerFilter);\n    };\n    /**\n     * Detect if features intersect a pixel on the viewport. Layers included in the\n     * detection can be configured through `opt_layerFilter`.\n     * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n     * @param {AtPixelOptions=} opt_options Optional options.\n     * @return {boolean} Is there a feature at the given pixel?\n     * @api\n     */\n    PluggableMap.prototype.hasFeatureAtPixel = function (pixel, opt_options) {\n        if (!this.frameState_) {\n            return false;\n        }\n        var coordinate = this.getCoordinateFromPixel(pixel);\n        opt_options = opt_options !== undefined ? opt_options :\n            /** @type {AtPixelOptions} */ ({});\n        var layerFilter = opt_options.layerFilter !== undefined ? opt_options.layerFilter : TRUE;\n        var hitTolerance = opt_options.hitTolerance !== undefined ?\n            opt_options.hitTolerance * this.frameState_.pixelRatio : 0;\n        return this.renderer_.hasFeatureAtCoordinate(coordinate, this.frameState_, hitTolerance, layerFilter, null);\n    };\n    /**\n     * Returns the coordinate in view projection for a browser event.\n     * @param {Event} event Event.\n     * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n     * @api\n     */\n    PluggableMap.prototype.getEventCoordinate = function (event) {\n        return this.getCoordinateFromPixel(this.getEventPixel(event));\n    };\n    /**\n     * Returns the map pixel position for a browser event relative to the viewport.\n     * @param {Event|TouchEvent} event Event.\n     * @return {import(\"./pixel.js\").Pixel} Pixel.\n     * @api\n     */\n    PluggableMap.prototype.getEventPixel = function (event) {\n        var viewportPosition = this.viewport_.getBoundingClientRect();\n        var eventPosition = 'changedTouches' in event ?\n            /** @type {TouchEvent} */ (event).changedTouches[0] :\n            /** @type {MouseEvent} */ (event);\n        return [\n            eventPosition.clientX - viewportPosition.left,\n            eventPosition.clientY - viewportPosition.top\n        ];\n    };\n    /**\n     * Get the target in which this map is rendered.\n     * Note that this returns what is entered as an option or in setTarget:\n     * if that was an element, it returns an element; if a string, it returns that.\n     * @return {HTMLElement|string|undefined} The Element or id of the Element that the\n     *     map is rendered in.\n     * @observable\n     * @api\n     */\n    PluggableMap.prototype.getTarget = function () {\n        return /** @type {HTMLElement|string|undefined} */ (this.get(MapProperty.TARGET));\n    };\n    /**\n     * Get the DOM element into which this map is rendered. In contrast to\n     * `getTarget` this method always return an `Element`, or `null` if the\n     * map has no target.\n     * @return {HTMLElement} The element that the map is rendered in.\n     * @api\n     */\n    PluggableMap.prototype.getTargetElement = function () {\n        var target = this.getTarget();\n        if (target !== undefined) {\n            return typeof target === 'string' ? document.getElementById(target) : target;\n        }\n        else {\n            return null;\n        }\n    };\n    /**\n     * Get the coordinate for a given pixel.  This returns a coordinate in the\n     * map view projection.\n     * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n     * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n     * @api\n     */\n    PluggableMap.prototype.getCoordinateFromPixel = function (pixel) {\n        var frameState = this.frameState_;\n        if (!frameState) {\n            return null;\n        }\n        else {\n            return applyTransform(frameState.pixelToCoordinateTransform, pixel.slice());\n        }\n    };\n    /**\n     * Get the map controls. Modifying this collection changes the controls\n     * associated with the map.\n     * @return {Collection<import(\"./control/Control.js\").default>} Controls.\n     * @api\n     */\n    PluggableMap.prototype.getControls = function () {\n        return this.controls;\n    };\n    /**\n     * Get the map overlays. Modifying this collection changes the overlays\n     * associated with the map.\n     * @return {Collection<import(\"./Overlay.js\").default>} Overlays.\n     * @api\n     */\n    PluggableMap.prototype.getOverlays = function () {\n        return this.overlays_;\n    };\n    /**\n     * Get an overlay by its identifier (the value returned by overlay.getId()).\n     * Note that the index treats string and numeric identifiers as the same. So\n     * `map.getOverlayById(2)` will return an overlay with id `'2'` or `2`.\n     * @param {string|number} id Overlay identifier.\n     * @return {import(\"./Overlay.js\").default} Overlay.\n     * @api\n     */\n    PluggableMap.prototype.getOverlayById = function (id) {\n        var overlay = this.overlayIdIndex_[id.toString()];\n        return overlay !== undefined ? overlay : null;\n    };\n    /**\n     * Get the map interactions. Modifying this collection changes the interactions\n     * associated with the map.\n     *\n     * Interactions are used for e.g. pan, zoom and rotate.\n     * @return {Collection<import(\"./interaction/Interaction.js\").default>} Interactions.\n     * @api\n     */\n    PluggableMap.prototype.getInteractions = function () {\n        return this.interactions;\n    };\n    /**\n     * Get the layergroup associated with this map.\n     * @return {LayerGroup} A layer group containing the layers in this map.\n     * @observable\n     * @api\n     */\n    PluggableMap.prototype.getLayerGroup = function () {\n        return (\n        /** @type {LayerGroup} */ (this.get(MapProperty.LAYERGROUP)));\n    };\n    /**\n     * Get the collection of layers associated with this map.\n     * @return {!Collection<import(\"./layer/Base.js\").default>} Layers.\n     * @api\n     */\n    PluggableMap.prototype.getLayers = function () {\n        var layers = this.getLayerGroup().getLayers();\n        return layers;\n    };\n    /**\n     * Get the pixel for a coordinate.  This takes a coordinate in the map view\n     * projection and returns the corresponding pixel.\n     * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n     * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n     * @api\n     */\n    PluggableMap.prototype.getPixelFromCoordinate = function (coordinate) {\n        var frameState = this.frameState_;\n        if (!frameState) {\n            return null;\n        }\n        else {\n            return applyTransform(frameState.coordinateToPixelTransform, coordinate.slice(0, 2));\n        }\n    };\n    /**\n     * Get the map renderer.\n     * @return {import(\"./renderer/Map.js\").default} Renderer\n     */\n    PluggableMap.prototype.getRenderer = function () {\n        return this.renderer_;\n    };\n    /**\n     * Get the size of this map.\n     * @return {import(\"./size.js\").Size|undefined} The size in pixels of the map in the DOM.\n     * @observable\n     * @api\n     */\n    PluggableMap.prototype.getSize = function () {\n        return (\n        /** @type {import(\"./size.js\").Size|undefined} */ (this.get(MapProperty.SIZE)));\n    };\n    /**\n     * Get the view associated with this map. A view manages properties such as\n     * center and resolution.\n     * @return {View} The view that controls this map.\n     * @observable\n     * @api\n     */\n    PluggableMap.prototype.getView = function () {\n        return (\n        /** @type {View} */ (this.get(MapProperty.VIEW)));\n    };\n    /**\n     * Get the element that serves as the map viewport.\n     * @return {HTMLElement} Viewport.\n     * @api\n     */\n    PluggableMap.prototype.getViewport = function () {\n        return this.viewport_;\n    };\n    /**\n     * Get the element that serves as the container for overlays.  Elements added to\n     * this container will let mousedown and touchstart events through to the map,\n     * so clicks and gestures on an overlay will trigger {@link module:ol/MapBrowserEvent~MapBrowserEvent}\n     * events.\n     * @return {!HTMLElement} The map's overlay container.\n     */\n    PluggableMap.prototype.getOverlayContainer = function () {\n        return this.overlayContainer_;\n    };\n    /**\n     * Get the element that serves as a container for overlays that don't allow\n     * event propagation. Elements added to this container won't let mousedown and\n     * touchstart events through to the map, so clicks and gestures on an overlay\n     * don't trigger any {@link module:ol/MapBrowserEvent~MapBrowserEvent}.\n     * @return {!HTMLElement} The map's overlay container that stops events.\n     */\n    PluggableMap.prototype.getOverlayContainerStopEvent = function () {\n        return this.overlayContainerStopEvent_;\n    };\n    /**\n     * @param {import(\"./Tile.js\").default} tile Tile.\n     * @param {string} tileSourceKey Tile source key.\n     * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n     * @param {number} tileResolution Tile resolution.\n     * @return {number} Tile priority.\n     */\n    PluggableMap.prototype.getTilePriority = function (tile, tileSourceKey, tileCenter, tileResolution) {\n        // Filter out tiles at higher zoom levels than the current zoom level, or that\n        // are outside the visible extent.\n        var frameState = this.frameState_;\n        if (!frameState || !(tileSourceKey in frameState.wantedTiles)) {\n            return DROP;\n        }\n        if (!frameState.wantedTiles[tileSourceKey][tile.getKey()]) {\n            return DROP;\n        }\n        // Prioritize the highest zoom level tiles closest to the focus.\n        // Tiles at higher zoom levels are prioritized using Math.log(tileResolution).\n        // Within a zoom level, tiles are prioritized by the distance in pixels\n        // between the center of the tile and the focus.  The factor of 65536 means\n        // that the prioritization should behave as desired for tiles up to\n        // 65536 * Math.log(2) = 45426 pixels from the focus.\n        var deltaX = tileCenter[0] - frameState.focus[0];\n        var deltaY = tileCenter[1] - frameState.focus[1];\n        return 65536 * Math.log(tileResolution) +\n            Math.sqrt(deltaX * deltaX + deltaY * deltaY) / tileResolution;\n    };\n    /**\n     * @param {Event} browserEvent Browser event.\n     * @param {string=} opt_type Type.\n     */\n    PluggableMap.prototype.handleBrowserEvent = function (browserEvent, opt_type) {\n        var type = opt_type || browserEvent.type;\n        var mapBrowserEvent = new MapBrowserEvent(type, this, browserEvent);\n        this.handleMapBrowserEvent(mapBrowserEvent);\n    };\n    /**\n     * @param {MapBrowserEvent} mapBrowserEvent The event to handle.\n     */\n    PluggableMap.prototype.handleMapBrowserEvent = function (mapBrowserEvent) {\n        if (!this.frameState_) {\n            // With no view defined, we cannot translate pixels into geographical\n            // coordinates so interactions cannot be used.\n            return;\n        }\n        var target = mapBrowserEvent.originalEvent.target;\n        while (target instanceof HTMLElement) {\n            if (target.parentElement === this.overlayContainerStopEvent_) {\n                return;\n            }\n            target = target.parentElement;\n        }\n        this.focus_ = mapBrowserEvent.coordinate;\n        mapBrowserEvent.frameState = this.frameState_;\n        var interactionsArray = this.getInteractions().getArray();\n        if (this.dispatchEvent(mapBrowserEvent) !== false) {\n            for (var i = interactionsArray.length - 1; i >= 0; i--) {\n                var interaction = interactionsArray[i];\n                if (!interaction.getActive()) {\n                    continue;\n                }\n                var cont = interaction.handleEvent(mapBrowserEvent);\n                if (!cont) {\n                    break;\n                }\n            }\n        }\n    };\n    /**\n     * @protected\n     */\n    PluggableMap.prototype.handlePostRender = function () {\n        var frameState = this.frameState_;\n        // Manage the tile queue\n        // Image loads are expensive and a limited resource, so try to use them\n        // efficiently:\n        // * When the view is static we allow a large number of parallel tile loads\n        //   to complete the frame as quickly as possible.\n        // * When animating or interacting, image loads can cause janks, so we reduce\n        //   the maximum number of loads per frame and limit the number of parallel\n        //   tile loads to remain reactive to view changes and to reduce the chance of\n        //   loading tiles that will quickly disappear from view.\n        var tileQueue = this.tileQueue_;\n        if (!tileQueue.isEmpty()) {\n            var maxTotalLoading = this.maxTilesLoading_;\n            var maxNewLoads = maxTotalLoading;\n            if (frameState) {\n                var hints = frameState.viewHints;\n                if (hints[ViewHint.ANIMATING] || hints[ViewHint.INTERACTING]) {\n                    var lowOnFrameBudget = Date.now() - frameState.time > 8;\n                    maxTotalLoading = lowOnFrameBudget ? 0 : 8;\n                    maxNewLoads = lowOnFrameBudget ? 0 : 2;\n                }\n            }\n            if (tileQueue.getTilesLoading() < maxTotalLoading) {\n                tileQueue.reprioritize(); // FIXME only call if view has changed\n                tileQueue.loadMoreTiles(maxTotalLoading, maxNewLoads);\n            }\n        }\n        if (frameState && this.hasListener(RenderEventType.RENDERCOMPLETE) && !frameState.animate &&\n            !this.tileQueue_.getTilesLoading() && !getLoading(this.getLayers().getArray())) {\n            this.renderer_.dispatchRenderEvent(RenderEventType.RENDERCOMPLETE, frameState);\n        }\n        var postRenderFunctions = this.postRenderFunctions_;\n        for (var i = 0, ii = postRenderFunctions.length; i < ii; ++i) {\n            postRenderFunctions[i](this, frameState);\n        }\n        postRenderFunctions.length = 0;\n    };\n    /**\n     * @private\n     */\n    PluggableMap.prototype.handleSizeChanged_ = function () {\n        if (this.getView()) {\n            this.getView().resolveConstraints(0);\n        }\n        this.render();\n    };\n    /**\n     * @private\n     */\n    PluggableMap.prototype.handleTargetChanged_ = function () {\n        // target may be undefined, null, a string or an Element.\n        // If it's a string we convert it to an Element before proceeding.\n        // If it's not now an Element we remove the viewport from the DOM.\n        // If it's an Element we append the viewport element to it.\n        var targetElement;\n        if (this.getTarget()) {\n            targetElement = this.getTargetElement();\n        }\n        if (this.keyHandlerKeys_) {\n            for (var i = 0, ii = this.keyHandlerKeys_.length; i < ii; ++i) {\n                unlistenByKey(this.keyHandlerKeys_[i]);\n            }\n            this.keyHandlerKeys_ = null;\n        }\n        if (!targetElement) {\n            this.renderer_.removeLayerRenderers();\n            removeNode(this.viewport_);\n            if (this.handleResize_ !== undefined) {\n                removeEventListener(EventType.RESIZE, this.handleResize_, false);\n                this.handleResize_ = undefined;\n            }\n        }\n        else {\n            targetElement.appendChild(this.viewport_);\n            var keyboardEventTarget = !this.keyboardEventTarget_ ?\n                targetElement : this.keyboardEventTarget_;\n            this.keyHandlerKeys_ = [\n                listen(keyboardEventTarget, EventType.KEYDOWN, this.handleBrowserEvent, this),\n                listen(keyboardEventTarget, EventType.KEYPRESS, this.handleBrowserEvent, this)\n            ];\n            if (!this.handleResize_) {\n                this.handleResize_ = this.updateSize.bind(this);\n                addEventListener(EventType.RESIZE, this.handleResize_, false);\n            }\n        }\n        this.updateSize();\n        // updateSize calls setSize, so no need to call this.render\n        // ourselves here.\n    };\n    /**\n     * @private\n     */\n    PluggableMap.prototype.handleTileChange_ = function () {\n        this.render();\n    };\n    /**\n     * @private\n     */\n    PluggableMap.prototype.handleViewPropertyChanged_ = function () {\n        this.render();\n    };\n    /**\n     * @private\n     */\n    PluggableMap.prototype.handleViewChanged_ = function () {\n        if (this.viewPropertyListenerKey_) {\n            unlistenByKey(this.viewPropertyListenerKey_);\n            this.viewPropertyListenerKey_ = null;\n        }\n        if (this.viewChangeListenerKey_) {\n            unlistenByKey(this.viewChangeListenerKey_);\n            this.viewChangeListenerKey_ = null;\n        }\n        var view = this.getView();\n        if (view) {\n            this.viewport_.setAttribute('data-view', getUid(view));\n            this.viewPropertyListenerKey_ = listen(view, ObjectEventType.PROPERTYCHANGE, this.handleViewPropertyChanged_, this);\n            this.viewChangeListenerKey_ = listen(view, EventType.CHANGE, this.handleViewPropertyChanged_, this);\n            view.resolveConstraints(0);\n        }\n        this.render();\n    };\n    /**\n     * @private\n     */\n    PluggableMap.prototype.handleLayerGroupChanged_ = function () {\n        if (this.layerGroupPropertyListenerKeys_) {\n            this.layerGroupPropertyListenerKeys_.forEach(unlistenByKey);\n            this.layerGroupPropertyListenerKeys_ = null;\n        }\n        var layerGroup = this.getLayerGroup();\n        if (layerGroup) {\n            this.layerGroupPropertyListenerKeys_ = [\n                listen(layerGroup, ObjectEventType.PROPERTYCHANGE, this.render, this),\n                listen(layerGroup, EventType.CHANGE, this.render, this)\n            ];\n        }\n        this.render();\n    };\n    /**\n     * @return {boolean} Is rendered.\n     */\n    PluggableMap.prototype.isRendered = function () {\n        return !!this.frameState_;\n    };\n    /**\n     * Requests an immediate render in a synchronous manner.\n     * @api\n     */\n    PluggableMap.prototype.renderSync = function () {\n        if (this.animationDelayKey_) {\n            cancelAnimationFrame(this.animationDelayKey_);\n        }\n        this.animationDelay_();\n    };\n    /**\n     * Request a map rendering (at the next animation frame).\n     * @api\n     */\n    PluggableMap.prototype.render = function () {\n        if (this.animationDelayKey_ === undefined) {\n            this.animationDelayKey_ = requestAnimationFrame(this.animationDelay_);\n        }\n    };\n    /**\n     * Remove the given control from the map.\n     * @param {import(\"./control/Control.js\").default} control Control.\n     * @return {import(\"./control/Control.js\").default|undefined} The removed control (or undefined\n     *     if the control was not found).\n     * @api\n     */\n    PluggableMap.prototype.removeControl = function (control) {\n        return this.getControls().remove(control);\n    };\n    /**\n     * Remove the given interaction from the map.\n     * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to remove.\n     * @return {import(\"./interaction/Interaction.js\").default|undefined} The removed interaction (or\n     *     undefined if the interaction was not found).\n     * @api\n     */\n    PluggableMap.prototype.removeInteraction = function (interaction) {\n        return this.getInteractions().remove(interaction);\n    };\n    /**\n     * Removes the given layer from the map.\n     * @param {import(\"./layer/Base.js\").default} layer Layer.\n     * @return {import(\"./layer/Base.js\").default|undefined} The removed layer (or undefined if the\n     *     layer was not found).\n     * @api\n     */\n    PluggableMap.prototype.removeLayer = function (layer) {\n        var layers = this.getLayerGroup().getLayers();\n        return layers.remove(layer);\n    };\n    /**\n     * Remove the given overlay from the map.\n     * @param {import(\"./Overlay.js\").default} overlay Overlay.\n     * @return {import(\"./Overlay.js\").default|undefined} The removed overlay (or undefined\n     *     if the overlay was not found).\n     * @api\n     */\n    PluggableMap.prototype.removeOverlay = function (overlay) {\n        return this.getOverlays().remove(overlay);\n    };\n    /**\n     * @param {number} time Time.\n     * @private\n     */\n    PluggableMap.prototype.renderFrame_ = function (time) {\n        var viewState;\n        var size = this.getSize();\n        var view = this.getView();\n        var extent = createEmpty();\n        var previousFrameState = this.frameState_;\n        /** @type {?FrameState} */\n        var frameState = null;\n        if (size !== undefined && hasArea(size) && view && view.isDef()) {\n            var viewHints = view.getHints(this.frameState_ ? this.frameState_.viewHints : undefined);\n            viewState = view.getState(this.pixelRatio_);\n            frameState = /** @type {FrameState} */ ({\n                animate: false,\n                coordinateToPixelTransform: this.coordinateToPixelTransform_,\n                extent: extent,\n                focus: this.focus_ ? this.focus_ : viewState.center,\n                index: this.frameIndex_++,\n                layerStatesArray: this.getLayerGroup().getLayerStatesArray(),\n                pixelRatio: this.pixelRatio_,\n                pixelToCoordinateTransform: this.pixelToCoordinateTransform_,\n                postRenderFunctions: [],\n                size: size,\n                skippedFeatureUids: this.skippedFeatureUids_,\n                tileQueue: this.tileQueue_,\n                time: time,\n                usedTiles: {},\n                viewState: viewState,\n                viewHints: viewHints,\n                wantedTiles: {}\n            });\n        }\n        if (frameState) {\n            frameState.extent = getForViewAndSize(viewState.center, viewState.resolution, viewState.rotation, frameState.size, extent);\n        }\n        this.frameState_ = frameState;\n        this.renderer_.renderFrame(frameState);\n        if (frameState) {\n            if (frameState.animate) {\n                this.render();\n            }\n            Array.prototype.push.apply(this.postRenderFunctions_, frameState.postRenderFunctions);\n            if (previousFrameState) {\n                var moveStart = !this.previousExtent_ ||\n                    (!isEmpty(this.previousExtent_) &&\n                        !equals(frameState.extent, this.previousExtent_));\n                if (moveStart) {\n                    this.dispatchEvent(new MapEvent(MapEventType.MOVESTART, this, previousFrameState));\n                    this.previousExtent_ = createOrUpdateEmpty(this.previousExtent_);\n                }\n            }\n            var idle = this.previousExtent_ &&\n                !frameState.viewHints[ViewHint.ANIMATING] &&\n                !frameState.viewHints[ViewHint.INTERACTING] &&\n                !equals(frameState.extent, this.previousExtent_);\n            if (idle) {\n                this.dispatchEvent(new MapEvent(MapEventType.MOVEEND, this, frameState));\n                clone(frameState.extent, this.previousExtent_);\n            }\n        }\n        this.dispatchEvent(new MapEvent(MapEventType.POSTRENDER, this, frameState));\n        setTimeout(this.handlePostRender.bind(this), 0);\n    };\n    /**\n     * Sets the layergroup of this map.\n     * @param {LayerGroup} layerGroup A layer group containing the layers in this map.\n     * @observable\n     * @api\n     */\n    PluggableMap.prototype.setLayerGroup = function (layerGroup) {\n        this.set(MapProperty.LAYERGROUP, layerGroup);\n    };\n    /**\n     * Set the size of this map.\n     * @param {import(\"./size.js\").Size|undefined} size The size in pixels of the map in the DOM.\n     * @observable\n     * @api\n     */\n    PluggableMap.prototype.setSize = function (size) {\n        this.set(MapProperty.SIZE, size);\n    };\n    /**\n     * Set the target element to render this map into.\n     * @param {HTMLElement|string|undefined} target The Element or id of the Element\n     *     that the map is rendered in.\n     * @observable\n     * @api\n     */\n    PluggableMap.prototype.setTarget = function (target) {\n        this.set(MapProperty.TARGET, target);\n    };\n    /**\n     * Set the view for this map.\n     * @param {View} view The view that controls this map.\n     * @observable\n     * @api\n     */\n    PluggableMap.prototype.setView = function (view) {\n        this.set(MapProperty.VIEW, view);\n    };\n    /**\n     * @param {import(\"./Feature.js\").default} feature Feature.\n     */\n    PluggableMap.prototype.skipFeature = function (feature) {\n        this.skippedFeatureUids_[getUid(feature)] = true;\n        this.render();\n    };\n    /**\n     * Force a recalculation of the map viewport size.  This should be called when\n     * third-party code changes the size of the map viewport.\n     * @api\n     */\n    PluggableMap.prototype.updateSize = function () {\n        var targetElement = this.getTargetElement();\n        if (!targetElement) {\n            this.setSize(undefined);\n        }\n        else {\n            var computedStyle = getComputedStyle(targetElement);\n            this.setSize([\n                targetElement.offsetWidth -\n                    parseFloat(computedStyle['borderLeftWidth']) -\n                    parseFloat(computedStyle['paddingLeft']) -\n                    parseFloat(computedStyle['paddingRight']) -\n                    parseFloat(computedStyle['borderRightWidth']),\n                targetElement.offsetHeight -\n                    parseFloat(computedStyle['borderTopWidth']) -\n                    parseFloat(computedStyle['paddingTop']) -\n                    parseFloat(computedStyle['paddingBottom']) -\n                    parseFloat(computedStyle['borderBottomWidth'])\n            ]);\n        }\n    };\n    /**\n     * @param {import(\"./Feature.js\").default} feature Feature.\n     */\n    PluggableMap.prototype.unskipFeature = function (feature) {\n        delete this.skippedFeatureUids_[getUid(feature)];\n        this.render();\n    };\n    return PluggableMap;\n}(BaseObject));\n/**\n * @param {MapOptions} options Map options.\n * @return {MapOptionsInternal} Internal map options.\n */\nfunction createOptionsInternal(options) {\n    /**\n     * @type {HTMLElement|Document}\n     */\n    var keyboardEventTarget = null;\n    if (options.keyboardEventTarget !== undefined) {\n        keyboardEventTarget = typeof options.keyboardEventTarget === 'string' ?\n            document.getElementById(options.keyboardEventTarget) :\n            options.keyboardEventTarget;\n    }\n    /**\n     * @type {Object<string, *>}\n     */\n    var values = {};\n    var layerGroup = options.layers && typeof /** @type {?} */ (options.layers).getLayers === 'function' ?\n        /** @type {LayerGroup} */ (options.layers) : new LayerGroup({ layers: /** @type {Collection} */ (options.layers) });\n    values[MapProperty.LAYERGROUP] = layerGroup;\n    values[MapProperty.TARGET] = options.target;\n    values[MapProperty.VIEW] = options.view !== undefined ?\n        options.view : new View();\n    var controls;\n    if (options.controls !== undefined) {\n        if (Array.isArray(options.controls)) {\n            controls = new Collection(options.controls.slice());\n        }\n        else {\n            assert(typeof /** @type {?} */ (options.controls).getArray === 'function', 47); // Expected `controls` to be an array or an `import(\"./Collection.js\").Collection`\n            controls = /** @type {Collection} */ (options.controls);\n        }\n    }\n    var interactions;\n    if (options.interactions !== undefined) {\n        if (Array.isArray(options.interactions)) {\n            interactions = new Collection(options.interactions.slice());\n        }\n        else {\n            assert(typeof /** @type {?} */ (options.interactions).getArray === 'function', 48); // Expected `interactions` to be an array or an `import(\"./Collection.js\").Collection`\n            interactions = /** @type {Collection} */ (options.interactions);\n        }\n    }\n    var overlays;\n    if (options.overlays !== undefined) {\n        if (Array.isArray(options.overlays)) {\n            overlays = new Collection(options.overlays.slice());\n        }\n        else {\n            assert(typeof /** @type {?} */ (options.overlays).getArray === 'function', 49); // Expected `overlays` to be an array or an `import(\"./Collection.js\").Collection`\n            overlays = options.overlays;\n        }\n    }\n    else {\n        overlays = new Collection();\n    }\n    return {\n        controls: controls,\n        interactions: interactions,\n        keyboardEventTarget: keyboardEventTarget,\n        overlays: overlays,\n        values: values\n    };\n}\nexport default PluggableMap;\n/**\n * @param  {Array<import(\"./layer/Base.js\").default>} layers Layers.\n * @return {boolean} Layers have sources that are still loading.\n */\nfunction getLoading(layers) {\n    for (var i = 0, ii = layers.length; i < ii; ++i) {\n        var layer = layers[i];\n        if (typeof /** @type {?} */ (layer).getLayers === 'function') {\n            return getLoading(/** @type {LayerGroup} */ (layer).getLayers().getArray());\n        }\n        else {\n            var source = /** @type {import(\"./layer/Layer.js\").default} */ (layer).getSource();\n            if (source && source.loading) {\n                return true;\n            }\n        }\n    }\n    return false;\n}\n//# sourceMappingURL=PluggableMap.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/control/Control\n */\nimport { VOID } from '../functions.js';\nimport MapEventType from '../MapEventType.js';\nimport BaseObject from '../Object.js';\nimport { removeNode } from '../dom.js';\nimport { listen, unlistenByKey } from '../events.js';\n/**\n * @typedef {Object} Options\n * @property {HTMLElement} [element] The element is the control's\n * container element. This only needs to be specified if you're developing\n * a custom control.\n * @property {function(import(\"../MapEvent.js\").default)} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n * @property {HTMLElement|string} [target] Specify a target if you want\n * the control to be rendered outside of the map's viewport.\n */\n/**\n * @classdesc\n * A control is a visible widget with a DOM element in a fixed position on the\n * screen. They can involve user input (buttons), or be informational only;\n * the position is determined using CSS. By default these are placed in the\n * container with CSS class name `ol-overlaycontainer-stopevent`, but can use\n * any outside DOM element.\n *\n * This is the base class for controls. You can use it for simple custom\n * controls by creating the element with listeners, creating an instance:\n * ```js\n * var myControl = new Control({element: myElement});\n * ```\n * and then adding this to the map.\n *\n * The main advantage of having this as a control rather than a simple separate\n * DOM element is that preventing propagation is handled for you. Controls\n * will also be objects in a {@link module:ol/Collection~Collection}, so you can use their methods.\n *\n * You can also extend this base for your own control class. See\n * examples/custom-controls for an example of how to do this.\n *\n * @api\n */\nvar Control = /** @class */ (function (_super) {\n    __extends(Control, _super);\n    /**\n     * @param {Options} options Control options.\n     */\n    function Control(options) {\n        var _this = _super.call(this) || this;\n        /**\n         * @protected\n         * @type {HTMLElement}\n         */\n        _this.element = options.element ? options.element : null;\n        /**\n         * @private\n         * @type {HTMLElement}\n         */\n        _this.target_ = null;\n        /**\n         * @private\n         * @type {import(\"../PluggableMap.js\").default}\n         */\n        _this.map_ = null;\n        /**\n         * @protected\n         * @type {!Array<import(\"../events.js\").EventsKey>}\n         */\n        _this.listenerKeys = [];\n        /**\n         * @type {function(import(\"../MapEvent.js\").default): void}\n         */\n        _this.render = options.render ? options.render : VOID;\n        if (options.target) {\n            _this.setTarget(options.target);\n        }\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    Control.prototype.disposeInternal = function () {\n        removeNode(this.element);\n        _super.prototype.disposeInternal.call(this);\n    };\n    /**\n     * Get the map associated with this control.\n     * @return {import(\"../PluggableMap.js\").default} Map.\n     * @api\n     */\n    Control.prototype.getMap = function () {\n        return this.map_;\n    };\n    /**\n     * Remove the control from its current map and attach it to the new map.\n     * Subclasses may set up event handlers to get notified about changes to\n     * the map here.\n     * @param {import(\"../PluggableMap.js\").default} map Map.\n     * @api\n     */\n    Control.prototype.setMap = function (map) {\n        if (this.map_) {\n            removeNode(this.element);\n        }\n        for (var i = 0, ii = this.listenerKeys.length; i < ii; ++i) {\n            unlistenByKey(this.listenerKeys[i]);\n        }\n        this.listenerKeys.length = 0;\n        this.map_ = map;\n        if (this.map_) {\n            var target = this.target_ ?\n                this.target_ : map.getOverlayContainerStopEvent();\n            target.appendChild(this.element);\n            if (this.render !== VOID) {\n                this.listenerKeys.push(listen(map, MapEventType.POSTRENDER, this.render, this));\n            }\n            map.render();\n        }\n    };\n    /**\n     * This function is used to set a target element for the control. It has no\n     * effect if it is called after the control has been added to the map (i.e.\n     * after `setMap` is called on the control). If no `target` is set in the\n     * options passed to the control constructor and if `setTarget` is not called\n     * then the control is added to the map's overlay container.\n     * @param {HTMLElement|string} target Target.\n     * @api\n     */\n    Control.prototype.setTarget = function (target) {\n        this.target_ = typeof target === 'string' ?\n            document.getElementById(target) :\n            target;\n    };\n    return Control;\n}(BaseObject));\nexport default Control;\n//# sourceMappingURL=Control.js.map","/**\n * @module ol/css\n */\n/**\n * The CSS class for hidden feature.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_HIDDEN = 'ol-hidden';\n/**\n * The CSS class that we'll give the DOM elements to have them selectable.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_SELECTABLE = 'ol-selectable';\n/**\n * The CSS class that we'll give the DOM elements to have them unselectable.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_UNSELECTABLE = 'ol-unselectable';\n/**\n * The CSS class for unsupported feature.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_UNSUPPORTED = 'ol-unsupported';\n/**\n * The CSS class for controls.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_CONTROL = 'ol-control';\n/**\n * The CSS class that we'll give the DOM elements that are collapsed, i.e.\n * to those elements which usually can be expanded.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_COLLAPSED = 'ol-collapsed';\n/**\n * Get the list of font families from a font spec.  Note that this doesn't work\n * for font families that have commas in them.\n * @param {string} The CSS font property.\n * @return {Object<string>} The font families (or null if the input spec is invalid).\n */\nexport var getFontFamilies = (function () {\n    var style;\n    var cache = {};\n    return function (font) {\n        if (!style) {\n            style = document.createElement('div').style;\n        }\n        if (!(font in cache)) {\n            style.font = font;\n            var family = style.fontFamily;\n            style.font = '';\n            if (!family) {\n                return null;\n            }\n            cache[font] = family.split(/,\\s?/);\n        }\n        return cache[font];\n    };\n})();\n//# sourceMappingURL=css.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/layer/Layer\n */\nimport { listen, unlistenByKey } from '../events.js';\nimport EventType from '../events/EventType.js';\nimport { getChangeEventType } from '../Object.js';\nimport BaseLayer from './Base.js';\nimport LayerProperty from './Property.js';\nimport { assign } from '../obj.js';\nimport RenderEventType from '../render/EventType.js';\nimport SourceState from '../source/State.js';\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {import(\"../source/Source.js\").default} [source] Source for this layer.  If not provided to the constructor,\n * the source can be set by calling {@link module:ol/layer/Layer#setSource layer.setSource(source)} after\n * construction.\n * @property {import(\"../PluggableMap.js\").default} [map] Map.\n */\n/**\n * @typedef {Object} State\n * @property {import(\"./Base.js\").default} layer\n * @property {number} opacity Opacity, the value is rounded to two digits to appear after the decimal point.\n * @property {SourceState} sourceState\n * @property {boolean} visible\n * @property {boolean} managed\n * @property {import(\"../extent.js\").Extent} [extent]\n * @property {number} zIndex\n * @property {number} maxResolution\n * @property {number} minResolution\n */\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * A visual representation of raster or vector map data.\n * Layers group together those properties that pertain to how the data is to be\n * displayed, irrespective of the source of that data.\n *\n * Layers are usually added to a map with {@link module:ol/Map#addLayer}. Components\n * like {@link module:ol/interaction/Select~Select} use unmanaged layers\n * internally. These unmanaged layers are associated with the map using\n * {@link module:ol/layer/Layer~Layer#setMap} instead.\n *\n * A generic `change` event is fired when the state of the source changes.\n *\n * @fires import(\"../render/Event.js\").RenderEvent#prerender\n * @fires import(\"../render/Event.js\").RenderEvent#postrender\n *\n * @template {import(\"../source/Source.js\").default} SourceType\n */\nvar Layer = /** @class */ (function (_super) {\n    __extends(Layer, _super);\n    /**\n     * @param {Options} options Layer options.\n     */\n    function Layer(options) {\n        var _this = this;\n        var baseOptions = assign({}, options);\n        delete baseOptions.source;\n        _this = _super.call(this, baseOptions) || this;\n        /**\n         * @private\n         * @type {?import(\"../events.js\").EventsKey}\n         */\n        _this.mapPrecomposeKey_ = null;\n        /**\n         * @private\n         * @type {?import(\"../events.js\").EventsKey}\n         */\n        _this.mapRenderKey_ = null;\n        /**\n         * @private\n         * @type {?import(\"../events.js\").EventsKey}\n         */\n        _this.sourceChangeKey_ = null;\n        /**\n         * @private\n         * @type {import(\"../renderer/Layer.js\").default}\n         */\n        _this.renderer_ = null;\n        if (options.map) {\n            _this.setMap(options.map);\n        }\n        listen(_this, getChangeEventType(LayerProperty.SOURCE), _this.handleSourcePropertyChange_, _this);\n        var source = options.source ? /** @type {SourceType} */ (options.source) : null;\n        _this.setSource(source);\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    Layer.prototype.getLayersArray = function (opt_array) {\n        var array = opt_array ? opt_array : [];\n        array.push(this);\n        return array;\n    };\n    /**\n     * @inheritDoc\n     */\n    Layer.prototype.getLayerStatesArray = function (opt_states) {\n        var states = opt_states ? opt_states : [];\n        states.push(this.getLayerState());\n        return states;\n    };\n    /**\n     * Get the layer source.\n     * @return {SourceType} The layer source (or `null` if not yet set).\n     * @observable\n     * @api\n     */\n    Layer.prototype.getSource = function () {\n        return /** @type {SourceType} */ (this.get(LayerProperty.SOURCE)) || null;\n    };\n    /**\n      * @inheritDoc\n      */\n    Layer.prototype.getSourceState = function () {\n        var source = this.getSource();\n        return !source ? SourceState.UNDEFINED : source.getState();\n    };\n    /**\n     * @private\n     */\n    Layer.prototype.handleSourceChange_ = function () {\n        this.changed();\n    };\n    /**\n     * @private\n     */\n    Layer.prototype.handleSourcePropertyChange_ = function () {\n        if (this.sourceChangeKey_) {\n            unlistenByKey(this.sourceChangeKey_);\n            this.sourceChangeKey_ = null;\n        }\n        var source = this.getSource();\n        if (source) {\n            this.sourceChangeKey_ = listen(source, EventType.CHANGE, this.handleSourceChange_, this);\n        }\n        this.changed();\n    };\n    /**\n     * In charge to manage the rendering of the layer. One layer type is\n     * bounded with one layer renderer.\n     * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     * @return {HTMLElement} The rendered element.\n     */\n    Layer.prototype.render = function (frameState) {\n        var layerRenderer = this.getRenderer();\n        var layerState = this.getLayerState();\n        if (layerRenderer.prepareFrame(frameState, layerState)) {\n            return layerRenderer.renderFrame(frameState, layerState);\n        }\n    };\n    /**\n     * Sets the layer to be rendered on top of other layers on a map. The map will\n     * not manage this layer in its layers collection, and the callback in\n     * {@link module:ol/Map#forEachLayerAtPixel} will receive `null` as layer. This\n     * is useful for temporary layers. To remove an unmanaged layer from the map,\n     * use `#setMap(null)`.\n     *\n     * To add the layer to a map and have it managed by the map, use\n     * {@link module:ol/Map#addLayer} instead.\n     * @param {import(\"../PluggableMap.js\").default} map Map.\n     * @api\n     */\n    Layer.prototype.setMap = function (map) {\n        if (this.mapPrecomposeKey_) {\n            unlistenByKey(this.mapPrecomposeKey_);\n            this.mapPrecomposeKey_ = null;\n        }\n        if (!map) {\n            this.changed();\n        }\n        if (this.mapRenderKey_) {\n            unlistenByKey(this.mapRenderKey_);\n            this.mapRenderKey_ = null;\n        }\n        if (map) {\n            this.mapPrecomposeKey_ = listen(map, RenderEventType.PRECOMPOSE, function (evt) {\n                var renderEvent = /** @type {import(\"../render/Event.js\").default} */ (evt);\n                var layerState = this.getLayerState();\n                layerState.managed = false;\n                if (this.getZIndex() === undefined) {\n                    layerState.zIndex = Infinity;\n                }\n                renderEvent.frameState.layerStatesArray.push(layerState);\n            }, this);\n            this.mapRenderKey_ = listen(this, EventType.CHANGE, map.render, map);\n            this.changed();\n        }\n    };\n    /**\n     * Set the layer source.\n     * @param {SourceType} source The layer source.\n     * @observable\n     * @api\n     */\n    Layer.prototype.setSource = function (source) {\n        this.set(LayerProperty.SOURCE, source);\n    };\n    /**\n     * Get the renderer for this layer.\n     * @return {import(\"../renderer/Layer.js\").default} The layer renderer.\n     */\n    Layer.prototype.getRenderer = function () {\n        if (!this.renderer_) {\n            this.renderer_ = this.createRenderer();\n        }\n        return this.renderer_;\n    };\n    /**\n     * Create a renderer for this layer.\n     * @return {import(\"../renderer/Layer.js\").default} A layer renderer.\n     * @protected\n     */\n    Layer.prototype.createRenderer = function () {\n        return null;\n    };\n    return Layer;\n}(BaseLayer));\n/**\n * Return `true` if the layer is visible, and if the passed resolution is\n * between the layer's minResolution and maxResolution. The comparison is\n * inclusive for `minResolution` and exclusive for `maxResolution`.\n * @param {State} layerState Layer state.\n * @param {number} resolution Resolution.\n * @return {boolean} The layer is visible at the given resolution.\n */\nexport function visibleAtResolution(layerState, resolution) {\n    return layerState.visible && resolution >= layerState.minResolution &&\n        resolution < layerState.maxResolution;\n}\nexport default Layer;\n//# sourceMappingURL=Layer.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/control/Attribution\n */\nimport { equals } from '../array.js';\nimport Control from './Control.js';\nimport { CLASS_CONTROL, CLASS_UNSELECTABLE, CLASS_COLLAPSED } from '../css.js';\nimport { removeChildren, replaceNode } from '../dom.js';\nimport { listen } from '../events.js';\nimport EventType from '../events/EventType.js';\nimport { visibleAtResolution } from '../layer/Layer.js';\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-attribution'] CSS class name.\n * @property {HTMLElement|string} [target] Specify a target if you\n * want the control to be rendered outside of the map's\n * viewport.\n * @property {boolean} [collapsible] Specify if attributions can\n * be collapsed. If not specified, sources control this behavior with their\n * `attributionsCollapsible` setting.\n * @property {boolean} [collapsed=true] Specify if attributions should\n * be collapsed at startup.\n * @property {string} [tipLabel='Attributions'] Text label to use for the button tip.\n * @property {string} [label='i'] Text label to use for the\n * collapsed attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string|HTMLElement} [collapseLabel='»'] Text label to use\n * for the expanded attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {function(import(\"../MapEvent.js\").default)} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n */\n/**\n * @classdesc\n * Control to show all the attributions associated with the layer sources\n * in the map. This control is one of the default controls included in maps.\n * By default it will show in the bottom right portion of the map, but this can\n * be changed by using a css selector for `.ol-attribution`.\n *\n * @api\n */\nvar Attribution = /** @class */ (function (_super) {\n    __extends(Attribution, _super);\n    /**\n     * @param {Options=} opt_options Attribution options.\n     */\n    function Attribution(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        _this = _super.call(this, {\n            element: document.createElement('div'),\n            render: options.render || render,\n            target: options.target\n        }) || this;\n        /**\n         * @private\n         * @type {HTMLElement}\n         */\n        _this.ulElement_ = document.createElement('ul');\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.collapsed_ = options.collapsed !== undefined ? options.collapsed : true;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.overrideCollapsible_ = options.collapsible !== undefined;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.collapsible_ = options.collapsible !== undefined ?\n            options.collapsible : true;\n        if (!_this.collapsible_) {\n            _this.collapsed_ = false;\n        }\n        var className = options.className !== undefined ? options.className : 'ol-attribution';\n        var tipLabel = options.tipLabel !== undefined ? options.tipLabel : 'Attributions';\n        var collapseLabel = options.collapseLabel !== undefined ? options.collapseLabel : '\\u00BB';\n        if (typeof collapseLabel === 'string') {\n            /**\n             * @private\n             * @type {HTMLElement}\n             */\n            _this.collapseLabel_ = document.createElement('span');\n            _this.collapseLabel_.textContent = collapseLabel;\n        }\n        else {\n            _this.collapseLabel_ = collapseLabel;\n        }\n        var label = options.label !== undefined ? options.label : 'i';\n        if (typeof label === 'string') {\n            /**\n             * @private\n             * @type {HTMLElement}\n             */\n            _this.label_ = document.createElement('span');\n            _this.label_.textContent = label;\n        }\n        else {\n            _this.label_ = label;\n        }\n        var activeLabel = (_this.collapsible_ && !_this.collapsed_) ?\n            _this.collapseLabel_ : _this.label_;\n        var button = document.createElement('button');\n        button.setAttribute('type', 'button');\n        button.title = tipLabel;\n        button.appendChild(activeLabel);\n        listen(button, EventType.CLICK, _this.handleClick_, _this);\n        var cssClasses = className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL +\n            (_this.collapsed_ && _this.collapsible_ ? ' ' + CLASS_COLLAPSED : '') +\n            (_this.collapsible_ ? '' : ' ol-uncollapsible');\n        var element = _this.element;\n        element.className = cssClasses;\n        element.appendChild(_this.ulElement_);\n        element.appendChild(button);\n        /**\n         * A list of currently rendered resolutions.\n         * @type {Array<string>}\n         * @private\n         */\n        _this.renderedAttributions_ = [];\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.renderedVisible_ = true;\n        return _this;\n    }\n    /**\n     * Collect a list of visible attributions and set the collapsible state.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     * @return {Array<string>} Attributions.\n     * @private\n     */\n    Attribution.prototype.collectSourceAttributions_ = function (frameState) {\n        /**\n         * Used to determine if an attribution already exists.\n         * @type {!Object<string, boolean>}\n         */\n        var lookup = {};\n        /**\n         * A list of visible attributions.\n         * @type {Array<string>}\n         */\n        var visibleAttributions = [];\n        var layerStatesArray = frameState.layerStatesArray;\n        var resolution = frameState.viewState.resolution;\n        for (var i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n            var layerState = layerStatesArray[i];\n            if (!visibleAtResolution(layerState, resolution)) {\n                continue;\n            }\n            var source = /** @type {import(\"../layer/Layer.js\").default} */ (layerState.layer).getSource();\n            if (!source) {\n                continue;\n            }\n            var attributionGetter = source.getAttributions();\n            if (!attributionGetter) {\n                continue;\n            }\n            var attributions = attributionGetter(frameState);\n            if (!attributions) {\n                continue;\n            }\n            if (!this.overrideCollapsible_ && source.getAttributionsCollapsible() === false) {\n                this.setCollapsible(false);\n            }\n            if (Array.isArray(attributions)) {\n                for (var j = 0, jj = attributions.length; j < jj; ++j) {\n                    if (!(attributions[j] in lookup)) {\n                        visibleAttributions.push(attributions[j]);\n                        lookup[attributions[j]] = true;\n                    }\n                }\n            }\n            else {\n                if (!(attributions in lookup)) {\n                    visibleAttributions.push(attributions);\n                    lookup[attributions] = true;\n                }\n            }\n        }\n        return visibleAttributions;\n    };\n    /**\n     * @private\n     * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     */\n    Attribution.prototype.updateElement_ = function (frameState) {\n        if (!frameState) {\n            if (this.renderedVisible_) {\n                this.element.style.display = 'none';\n                this.renderedVisible_ = false;\n            }\n            return;\n        }\n        var attributions = this.collectSourceAttributions_(frameState);\n        var visible = attributions.length > 0;\n        if (this.renderedVisible_ != visible) {\n            this.element.style.display = visible ? '' : 'none';\n            this.renderedVisible_ = visible;\n        }\n        if (equals(attributions, this.renderedAttributions_)) {\n            return;\n        }\n        removeChildren(this.ulElement_);\n        // append the attributions\n        for (var i = 0, ii = attributions.length; i < ii; ++i) {\n            var element = document.createElement('li');\n            element.innerHTML = attributions[i];\n            this.ulElement_.appendChild(element);\n        }\n        this.renderedAttributions_ = attributions;\n    };\n    /**\n     * @param {MouseEvent} event The event to handle\n     * @private\n     */\n    Attribution.prototype.handleClick_ = function (event) {\n        event.preventDefault();\n        this.handleToggle_();\n    };\n    /**\n     * @private\n     */\n    Attribution.prototype.handleToggle_ = function () {\n        this.element.classList.toggle(CLASS_COLLAPSED);\n        if (this.collapsed_) {\n            replaceNode(this.collapseLabel_, this.label_);\n        }\n        else {\n            replaceNode(this.label_, this.collapseLabel_);\n        }\n        this.collapsed_ = !this.collapsed_;\n    };\n    /**\n     * Return `true` if the attribution is collapsible, `false` otherwise.\n     * @return {boolean} True if the widget is collapsible.\n     * @api\n     */\n    Attribution.prototype.getCollapsible = function () {\n        return this.collapsible_;\n    };\n    /**\n     * Set whether the attribution should be collapsible.\n     * @param {boolean} collapsible True if the widget is collapsible.\n     * @api\n     */\n    Attribution.prototype.setCollapsible = function (collapsible) {\n        if (this.collapsible_ === collapsible) {\n            return;\n        }\n        this.collapsible_ = collapsible;\n        this.element.classList.toggle('ol-uncollapsible');\n        if (!collapsible && this.collapsed_) {\n            this.handleToggle_();\n        }\n    };\n    /**\n     * Collapse or expand the attribution according to the passed parameter. Will\n     * not do anything if the attribution isn't collapsible or if the current\n     * collapsed state is already the one requested.\n     * @param {boolean} collapsed True if the widget is collapsed.\n     * @api\n     */\n    Attribution.prototype.setCollapsed = function (collapsed) {\n        if (!this.collapsible_ || this.collapsed_ === collapsed) {\n            return;\n        }\n        this.handleToggle_();\n    };\n    /**\n     * Return `true` when the attribution is currently collapsed or `false`\n     * otherwise.\n     * @return {boolean} True if the widget is collapsed.\n     * @api\n     */\n    Attribution.prototype.getCollapsed = function () {\n        return this.collapsed_;\n    };\n    return Attribution;\n}(Control));\n/**\n * Update the attribution element.\n * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n * @this {Attribution}\n * @api\n */\nexport function render(mapEvent) {\n    this.updateElement_(mapEvent.frameState);\n}\nexport default Attribution;\n//# sourceMappingURL=Attribution.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/control/Rotate\n */\nimport Control from './Control.js';\nimport { CLASS_CONTROL, CLASS_HIDDEN, CLASS_UNSELECTABLE } from '../css.js';\nimport { easeOut } from '../easing.js';\nimport { listen } from '../events.js';\nimport EventType from '../events/EventType.js';\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-rotate'] CSS class name.\n * @property {string|HTMLElement} [label='⇧'] Text label to use for the rotate button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [tipLabel='Reset rotation'] Text label to use for the rotate tip.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {boolean} [autoHide=true] Hide the control when rotation is 0.\n * @property {function(import(\"../MapEvent.js\").default)} [render] Function called when the control should\n * be re-rendered. This is called in a `requestAnimationFrame` callback.\n * @property {function()} [resetNorth] Function called when the control is clicked.\n * This will override the default `resetNorth`.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n/**\n * @classdesc\n * A button control to reset rotation to 0.\n * To style this control use css selector `.ol-rotate`. A `.ol-hidden` css\n * selector is added to the button when the rotation is 0.\n *\n * @api\n */\nvar Rotate = /** @class */ (function (_super) {\n    __extends(Rotate, _super);\n    /**\n     * @param {Options=} opt_options Rotate options.\n     */\n    function Rotate(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        _this = _super.call(this, {\n            element: document.createElement('div'),\n            render: options.render || render,\n            target: options.target\n        }) || this;\n        var className = options.className !== undefined ? options.className : 'ol-rotate';\n        var label = options.label !== undefined ? options.label : '\\u21E7';\n        /**\n         * @type {HTMLElement}\n         * @private\n         */\n        _this.label_ = null;\n        if (typeof label === 'string') {\n            _this.label_ = document.createElement('span');\n            _this.label_.className = 'ol-compass';\n            _this.label_.textContent = label;\n        }\n        else {\n            _this.label_ = label;\n            _this.label_.classList.add('ol-compass');\n        }\n        var tipLabel = options.tipLabel ? options.tipLabel : 'Reset rotation';\n        var button = document.createElement('button');\n        button.className = className + '-reset';\n        button.setAttribute('type', 'button');\n        button.title = tipLabel;\n        button.appendChild(_this.label_);\n        listen(button, EventType.CLICK, _this.handleClick_, _this);\n        var cssClasses = className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n        var element = _this.element;\n        element.className = cssClasses;\n        element.appendChild(button);\n        _this.callResetNorth_ = options.resetNorth ? options.resetNorth : undefined;\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.duration_ = options.duration !== undefined ? options.duration : 250;\n        /**\n         * @type {boolean}\n         * @private\n         */\n        _this.autoHide_ = options.autoHide !== undefined ? options.autoHide : true;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.rotation_ = undefined;\n        if (_this.autoHide_) {\n            _this.element.classList.add(CLASS_HIDDEN);\n        }\n        return _this;\n    }\n    /**\n     * @param {MouseEvent} event The event to handle\n     * @private\n     */\n    Rotate.prototype.handleClick_ = function (event) {\n        event.preventDefault();\n        if (this.callResetNorth_ !== undefined) {\n            this.callResetNorth_();\n        }\n        else {\n            this.resetNorth_();\n        }\n    };\n    /**\n     * @private\n     */\n    Rotate.prototype.resetNorth_ = function () {\n        var map = this.getMap();\n        var view = map.getView();\n        if (!view) {\n            // the map does not have a view, so we can't act\n            // upon it\n            return;\n        }\n        if (view.getRotation() !== undefined) {\n            if (this.duration_ > 0) {\n                view.animate({\n                    rotation: 0,\n                    duration: this.duration_,\n                    easing: easeOut\n                });\n            }\n            else {\n                view.setRotation(0);\n            }\n        }\n    };\n    return Rotate;\n}(Control));\n/**\n * Update the rotate control element.\n * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n * @this {Rotate}\n * @api\n */\nexport function render(mapEvent) {\n    var frameState = mapEvent.frameState;\n    if (!frameState) {\n        return;\n    }\n    var rotation = frameState.viewState.rotation;\n    if (rotation != this.rotation_) {\n        var transform = 'rotate(' + rotation + 'rad)';\n        if (this.autoHide_) {\n            var contains = this.element.classList.contains(CLASS_HIDDEN);\n            if (!contains && rotation === 0) {\n                this.element.classList.add(CLASS_HIDDEN);\n            }\n            else if (contains && rotation !== 0) {\n                this.element.classList.remove(CLASS_HIDDEN);\n            }\n        }\n        this.label_.style.transform = transform;\n    }\n    this.rotation_ = rotation;\n}\nexport default Rotate;\n//# sourceMappingURL=Rotate.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/control/Zoom\n */\nimport { listen } from '../events.js';\nimport EventType from '../events/EventType.js';\nimport Control from './Control.js';\nimport { CLASS_CONTROL, CLASS_UNSELECTABLE } from '../css.js';\nimport { easeOut } from '../easing.js';\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {string} [className='ol-zoom'] CSS class name.\n * @property {string|HTMLElement} [zoomInLabel='+'] Text label to use for the zoom-in\n * button. Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string|HTMLElement} [zoomOutLabel='-'] Text label to use for the zoom-out button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [zoomInTipLabel='Zoom in'] Text label to use for the button tip.\n * @property {string} [zoomOutTipLabel='Zoom out'] Text label to use for the button tip.\n * @property {number} [delta=1] The zoom delta applied on each click.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n/**\n * @classdesc\n * A control with 2 buttons, one for zoom in and one for zoom out.\n * This control is one of the default controls of a map. To style this control\n * use css selectors `.ol-zoom-in` and `.ol-zoom-out`.\n *\n * @api\n */\nvar Zoom = /** @class */ (function (_super) {\n    __extends(Zoom, _super);\n    /**\n     * @param {Options=} opt_options Zoom options.\n     */\n    function Zoom(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        _this = _super.call(this, {\n            element: document.createElement('div'),\n            target: options.target\n        }) || this;\n        var className = options.className !== undefined ? options.className : 'ol-zoom';\n        var delta = options.delta !== undefined ? options.delta : 1;\n        var zoomInLabel = options.zoomInLabel !== undefined ? options.zoomInLabel : '+';\n        var zoomOutLabel = options.zoomOutLabel !== undefined ? options.zoomOutLabel : '\\u2212';\n        var zoomInTipLabel = options.zoomInTipLabel !== undefined ?\n            options.zoomInTipLabel : 'Zoom in';\n        var zoomOutTipLabel = options.zoomOutTipLabel !== undefined ?\n            options.zoomOutTipLabel : 'Zoom out';\n        var inElement = document.createElement('button');\n        inElement.className = className + '-in';\n        inElement.setAttribute('type', 'button');\n        inElement.title = zoomInTipLabel;\n        inElement.appendChild(typeof zoomInLabel === 'string' ? document.createTextNode(zoomInLabel) : zoomInLabel);\n        listen(inElement, EventType.CLICK, _this.handleClick_.bind(_this, delta));\n        var outElement = document.createElement('button');\n        outElement.className = className + '-out';\n        outElement.setAttribute('type', 'button');\n        outElement.title = zoomOutTipLabel;\n        outElement.appendChild(typeof zoomOutLabel === 'string' ? document.createTextNode(zoomOutLabel) : zoomOutLabel);\n        listen(outElement, EventType.CLICK, _this.handleClick_.bind(_this, -delta));\n        var cssClasses = className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n        var element = _this.element;\n        element.className = cssClasses;\n        element.appendChild(inElement);\n        element.appendChild(outElement);\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.duration_ = options.duration !== undefined ? options.duration : 250;\n        return _this;\n    }\n    /**\n     * @param {number} delta Zoom delta.\n     * @param {MouseEvent} event The event to handle\n     * @private\n     */\n    Zoom.prototype.handleClick_ = function (delta, event) {\n        event.preventDefault();\n        this.zoomByDelta_(delta);\n    };\n    /**\n     * @param {number} delta Zoom delta.\n     * @private\n     */\n    Zoom.prototype.zoomByDelta_ = function (delta) {\n        var map = this.getMap();\n        var view = map.getView();\n        if (!view) {\n            // the map does not have a view, so we can't act\n            // upon it\n            return;\n        }\n        var currentZoom = view.getZoom();\n        if (currentZoom !== undefined) {\n            var newZoom = view.getConstrainedZoom(currentZoom + delta);\n            if (this.duration_ > 0) {\n                if (view.getAnimating()) {\n                    view.cancelAnimations();\n                }\n                view.animate({\n                    zoom: newZoom,\n                    duration: this.duration_,\n                    easing: easeOut\n                });\n            }\n            else {\n                view.setZoom(newZoom);\n            }\n        }\n    };\n    return Zoom;\n}(Control));\nexport default Zoom;\n//# sourceMappingURL=Zoom.js.map","/**\n * @module ol/Kinetic\n */\n/**\n * @classdesc\n * Implementation of inertial deceleration for map movement.\n *\n * @api\n */\nvar Kinetic = /** @class */ (function () {\n    /**\n     * @param {number} decay Rate of decay (must be negative).\n     * @param {number} minVelocity Minimum velocity (pixels/millisecond).\n     * @param {number} delay Delay to consider to calculate the kinetic\n     *     initial values (milliseconds).\n     */\n    function Kinetic(decay, minVelocity, delay) {\n        /**\n         * @private\n         * @type {number}\n         */\n        this.decay_ = decay;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.minVelocity_ = minVelocity;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.delay_ = delay;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        this.points_ = [];\n        /**\n         * @private\n         * @type {number}\n         */\n        this.angle_ = 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.initialVelocity_ = 0;\n    }\n    /**\n     * FIXME empty description for jsdoc\n     */\n    Kinetic.prototype.begin = function () {\n        this.points_.length = 0;\n        this.angle_ = 0;\n        this.initialVelocity_ = 0;\n    };\n    /**\n     * @param {number} x X.\n     * @param {number} y Y.\n     */\n    Kinetic.prototype.update = function (x, y) {\n        this.points_.push(x, y, Date.now());\n    };\n    /**\n     * @return {boolean} Whether we should do kinetic animation.\n     */\n    Kinetic.prototype.end = function () {\n        if (this.points_.length < 6) {\n            // at least 2 points are required (i.e. there must be at least 6 elements\n            // in the array)\n            return false;\n        }\n        var delay = Date.now() - this.delay_;\n        var lastIndex = this.points_.length - 3;\n        if (this.points_[lastIndex + 2] < delay) {\n            // the last tracked point is too old, which means that the user stopped\n            // panning before releasing the map\n            return false;\n        }\n        // get the first point which still falls into the delay time\n        var firstIndex = lastIndex - 3;\n        while (firstIndex > 0 && this.points_[firstIndex + 2] > delay) {\n            firstIndex -= 3;\n        }\n        var duration = this.points_[lastIndex + 2] - this.points_[firstIndex + 2];\n        // we don't want a duration of 0 (divide by zero)\n        // we also make sure the user panned for a duration of at least one frame\n        // (1/60s) to compute sane displacement values\n        if (duration < 1000 / 60) {\n            return false;\n        }\n        var dx = this.points_[lastIndex] - this.points_[firstIndex];\n        var dy = this.points_[lastIndex + 1] - this.points_[firstIndex + 1];\n        this.angle_ = Math.atan2(dy, dx);\n        this.initialVelocity_ = Math.sqrt(dx * dx + dy * dy) / duration;\n        return this.initialVelocity_ > this.minVelocity_;\n    };\n    /**\n     * @return {number} Total distance travelled (pixels).\n     */\n    Kinetic.prototype.getDistance = function () {\n        return (this.minVelocity_ - this.initialVelocity_) / this.decay_;\n    };\n    /**\n     * @return {number} Angle of the kinetic panning animation (radians).\n     */\n    Kinetic.prototype.getAngle = function () {\n        return this.angle_;\n    };\n    return Kinetic;\n}());\nexport default Kinetic;\n//# sourceMappingURL=Kinetic.js.map","/**\n * @module ol/interaction/Property\n */\n/**\n * @enum {string}\n */\nexport default {\n    ACTIVE: 'active'\n};\n//# sourceMappingURL=Property.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/Interaction\n */\nimport BaseObject from '../Object.js';\nimport { easeOut, linear } from '../easing.js';\nimport InteractionProperty from './Property.js';\n/**\n * Object literal with config options for interactions.\n * @typedef {Object} InteractionOptions\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} handleEvent\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. If the function returns a falsy value, propagation of\n * the event to other interactions in the map's interactions chain will be\n * prevented (this includes functions with no explicit return). The interactions\n * are traversed in reverse order of the interactions collection of the map.\n */\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * User actions that change the state of the map. Some are similar to controls,\n * but are not associated with a DOM element.\n * For example, {@link module:ol/interaction/KeyboardZoom~KeyboardZoom} is\n * functionally the same as {@link module:ol/control/Zoom~Zoom}, but triggered\n * by a keyboard event not a button element event.\n * Although interactions do not have a DOM element, some of them do render\n * vectors and so are visible on the screen.\n * @api\n */\nvar Interaction = /** @class */ (function (_super) {\n    __extends(Interaction, _super);\n    /**\n     * @param {InteractionOptions} options Options.\n     */\n    function Interaction(options) {\n        var _this = _super.call(this) || this;\n        if (options.handleEvent) {\n            _this.handleEvent = options.handleEvent;\n        }\n        /**\n         * @private\n         * @type {import(\"../PluggableMap.js\").default}\n         */\n        _this.map_ = null;\n        _this.setActive(true);\n        return _this;\n    }\n    /**\n     * Return whether the interaction is currently active.\n     * @return {boolean} `true` if the interaction is active, `false` otherwise.\n     * @observable\n     * @api\n     */\n    Interaction.prototype.getActive = function () {\n        return /** @type {boolean} */ (this.get(InteractionProperty.ACTIVE));\n    };\n    /**\n     * Get the map associated with this interaction.\n     * @return {import(\"../PluggableMap.js\").default} Map.\n     * @api\n     */\n    Interaction.prototype.getMap = function () {\n        return this.map_;\n    };\n    /**\n     * Handles the {@link module:ol/MapBrowserEvent map browser event}.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n     * @return {boolean} `false` to stop event propagation.\n     * @api\n     */\n    Interaction.prototype.handleEvent = function (mapBrowserEvent) {\n        return true;\n    };\n    /**\n     * Activate or deactivate the interaction.\n     * @param {boolean} active Active.\n     * @observable\n     * @api\n     */\n    Interaction.prototype.setActive = function (active) {\n        this.set(InteractionProperty.ACTIVE, active);\n    };\n    /**\n     * Remove the interaction from its current map and attach it to the new map.\n     * Subclasses may set up event handlers to get notified about changes to\n     * the map here.\n     * @param {import(\"../PluggableMap.js\").default} map Map.\n     */\n    Interaction.prototype.setMap = function (map) {\n        this.map_ = map;\n    };\n    return Interaction;\n}(BaseObject));\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {import(\"../coordinate.js\").Coordinate} delta Delta.\n * @param {number=} opt_duration Duration.\n */\nexport function pan(view, delta, opt_duration) {\n    var currentCenter = view.getCenter();\n    if (currentCenter) {\n        var center = [currentCenter[0] + delta[0], currentCenter[1] + delta[1]];\n        view.animate_({\n            duration: opt_duration !== undefined ? opt_duration : 250,\n            easing: linear,\n            center: view.getConstrainedCenter(center)\n        });\n    }\n}\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {number} delta Delta from previous zoom level.\n * @param {import(\"../coordinate.js\").Coordinate=} opt_anchor Anchor coordinate.\n * @param {number=} opt_duration Duration.\n */\nexport function zoomByDelta(view, delta, opt_anchor, opt_duration) {\n    var currentZoom = view.getZoom();\n    if (currentZoom === undefined) {\n        return;\n    }\n    var newZoom = view.getConstrainedZoom(currentZoom + delta);\n    var newResolution = view.getResolutionForZoom(newZoom);\n    if (view.getAnimating()) {\n        view.cancelAnimations();\n    }\n    view.animate({\n        resolution: newResolution,\n        anchor: opt_anchor,\n        duration: opt_duration !== undefined ? opt_duration : 250,\n        easing: easeOut\n    });\n}\nexport default Interaction;\n//# sourceMappingURL=Interaction.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/DoubleClickZoom\n */\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport Interaction, { zoomByDelta } from './Interaction.js';\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [delta=1] The zoom delta applied on each double click.\n */\n/**\n * @classdesc\n * Allows the user to zoom by double-clicking on the map.\n * @api\n */\nvar DoubleClickZoom = /** @class */ (function (_super) {\n    __extends(DoubleClickZoom, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function DoubleClickZoom(opt_options) {\n        var _this = _super.call(this, {\n            handleEvent: handleEvent\n        }) || this;\n        var options = opt_options ? opt_options : {};\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.delta_ = options.delta ? options.delta : 1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.duration_ = options.duration !== undefined ? options.duration : 250;\n        return _this;\n    }\n    return DoubleClickZoom;\n}(Interaction));\n/**\n * Handles the {@link module:ol/MapBrowserEvent map browser event} (if it was a\n * doubleclick) and eventually zooms the map.\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} `false` to stop event propagation.\n * @this {DoubleClickZoom}\n */\nfunction handleEvent(mapBrowserEvent) {\n    var stopEvent = false;\n    if (mapBrowserEvent.type == MapBrowserEventType.DBLCLICK) {\n        var browserEvent = /** @type {MouseEvent} */ (mapBrowserEvent.originalEvent);\n        var map = mapBrowserEvent.map;\n        var anchor = mapBrowserEvent.coordinate;\n        var delta = browserEvent.shiftKey ? -this.delta_ : this.delta_;\n        var view = map.getView();\n        zoomByDelta(view, delta, anchor, this.duration_);\n        mapBrowserEvent.preventDefault();\n        stopEvent = true;\n    }\n    return !stopEvent;\n}\nexport default DoubleClickZoom;\n//# sourceMappingURL=DoubleClickZoom.js.map","/**\n * @module ol/events/condition\n */\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport { assert } from '../asserts.js';\nimport { TRUE, FALSE } from '../functions.js';\nimport { WEBKIT, MAC } from '../has.js';\n/**\n * A function that takes an {@link module:ol/MapBrowserEvent} and returns a\n * `{boolean}`. If the condition is met, true should be returned.\n *\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default): boolean} Condition\n */\n/**\n * Return `true` if only the alt-key is pressed, `false` otherwise (e.g. when\n * additionally the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt key is pressed.\n * @api\n */\nexport var altKeyOnly = function (mapBrowserEvent) {\n    var originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n    return (originalEvent.altKey &&\n        !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n        !originalEvent.shiftKey);\n};\n/**\n * Return `true` if only the alt-key and shift-key is pressed, `false` otherwise\n * (e.g. when additionally the platform-modifier-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt and shift keys are pressed.\n * @api\n */\nexport var altShiftKeysOnly = function (mapBrowserEvent) {\n    var originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n    return (originalEvent.altKey &&\n        !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n        originalEvent.shiftKey);\n};\n/**\n * Return `true` if the map has the focus. This condition requires a map target\n * element with a `tabindex` attribute, e.g. `<div id=\"map\" tabindex=\"1\">`.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map has the focus.\n * @api\n */\nexport var focus = function (event) {\n    return event.target.getTargetElement() === document.activeElement;\n};\n/**\n * Return always true.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True.\n * @api\n */\nexport var always = TRUE;\n/**\n * Return `true` if the event is a `click` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `click` event.\n * @api\n */\nexport var click = function (mapBrowserEvent) {\n    return mapBrowserEvent.type == MapBrowserEventType.CLICK;\n};\n/**\n * Return `true` if the event has an \"action\"-producing mouse button.\n *\n * By definition, this includes left-click on windows/linux, and left-click\n * without the ctrl key on Macs.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} The result.\n */\nexport var mouseActionButton = function (mapBrowserEvent) {\n    var originalEvent = /** @type {MouseEvent} */ (mapBrowserEvent.originalEvent);\n    return originalEvent.button == 0 &&\n        !(WEBKIT && MAC && originalEvent.ctrlKey);\n};\n/**\n * Return always false.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} False.\n * @api\n */\nexport var never = FALSE;\n/**\n * Return `true` if the browser event is a `pointermove` event, `false`\n * otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the browser event is a `pointermove` event.\n * @api\n */\nexport var pointerMove = function (mapBrowserEvent) {\n    return mapBrowserEvent.type == 'pointermove';\n};\n/**\n * Return `true` if the event is a map `singleclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `singleclick` event.\n * @api\n */\nexport var singleClick = function (mapBrowserEvent) {\n    return mapBrowserEvent.type == MapBrowserEventType.SINGLECLICK;\n};\n/**\n * Return `true` if the event is a map `dblclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `dblclick` event.\n * @api\n */\nexport var doubleClick = function (mapBrowserEvent) {\n    return mapBrowserEvent.type == MapBrowserEventType.DBLCLICK;\n};\n/**\n * Return `true` if no modifier key (alt-, shift- or platform-modifier-key) is\n * pressed.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if there no modifier keys are pressed.\n * @api\n */\nexport var noModifierKeys = function (mapBrowserEvent) {\n    var originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n    return (!originalEvent.altKey &&\n        !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n        !originalEvent.shiftKey);\n};\n/**\n * Return `true` if only the platform-modifier-key (the meta-key on Mac,\n * ctrl-key otherwise) is pressed, `false` otherwise (e.g. when additionally\n * the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the platform modifier key is pressed.\n * @api\n */\nexport var platformModifierKeyOnly = function (mapBrowserEvent) {\n    var originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n    return !originalEvent.altKey &&\n        (MAC ? originalEvent.metaKey : originalEvent.ctrlKey) &&\n        !originalEvent.shiftKey;\n};\n/**\n * Return `true` if only the shift-key is pressed, `false` otherwise (e.g. when\n * additionally the alt-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the shift key is pressed.\n * @api\n */\nexport var shiftKeyOnly = function (mapBrowserEvent) {\n    var originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n    return (!originalEvent.altKey &&\n        !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n        originalEvent.shiftKey);\n};\n/**\n * Return `true` if the target element is not editable, i.e. not a `<input>`-,\n * `<select>`- or `<textarea>`-element, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if the target element is not editable.\n * @api\n */\nexport var targetNotEditable = function (mapBrowserEvent) {\n    var target = mapBrowserEvent.originalEvent.target;\n    var tagName = /** @type {Element} */ (target).tagName;\n    return (tagName !== 'INPUT' &&\n        tagName !== 'SELECT' &&\n        tagName !== 'TEXTAREA');\n};\n/**\n * Return `true` if the event originates from a mouse device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a mouse device.\n * @api\n */\nexport var mouseOnly = function (mapBrowserEvent) {\n    var pointerEvent = /** @type {import(\"../MapBrowserPointerEvent\").default} */ (mapBrowserEvent).pointerEvent;\n    assert(pointerEvent !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n    // see http://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n    return pointerEvent.pointerType == 'mouse';\n};\n/**\n * Return `true` if the event originates from a touchable device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a touchable device.\n * @api\n */\nexport var touchOnly = function (mapBrowserEvent) {\n    var pointerEvt = /** @type {import(\"../MapBrowserPointerEvent\").default} */ (mapBrowserEvent).pointerEvent;\n    assert(pointerEvt !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n    // see http://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n    return pointerEvt.pointerType === 'touch';\n};\n/**\n * Return `true` if the event originates from a digital pen.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a digital pen.\n * @api\n */\nexport var penOnly = function (mapBrowserEvent) {\n    var pointerEvt = /** @type {import(\"../MapBrowserPointerEvent\").default} */ (mapBrowserEvent).pointerEvent;\n    assert(pointerEvt !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n    // see http://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n    return pointerEvt.pointerType === 'pen';\n};\n/**\n * Return `true` if the event originates from a primary pointer in\n * contact with the surface or if the left mouse button is pressed.\n * See http://www.w3.org/TR/pointerevents/#button-states.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a primary pointer.\n * @api\n */\nexport var primaryAction = function (mapBrowserEvent) {\n    var pointerEvent = /** @type {import(\"../MapBrowserPointerEvent\").default} */ (mapBrowserEvent).pointerEvent;\n    assert(pointerEvent !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n    return pointerEvent.isPrimary && pointerEvent.button === 0;\n};\n//# sourceMappingURL=condition.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/Pointer\n */\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport Interaction from './Interaction.js';\nimport { getValues } from '../obj.js';\n/**\n * @typedef {Object} Options\n * @property {function(import(\"../MapBrowserPointerEvent.js\").default):boolean} [handleDownEvent]\n * Function handling \"down\" events. If the function returns `true` then a drag\n * sequence is started.\n * @property {function(import(\"../MapBrowserPointerEvent.js\").default)} [handleDragEvent]\n * Function handling \"drag\" events. This function is called on \"move\" events\n * during a drag sequence.\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleEvent]\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. The function may return `false` to prevent the\n * propagation of the event to other interactions in the map's interactions\n * chain.\n * @property {function(import(\"../MapBrowserPointerEvent.js\").default)} [handleMoveEvent]\n * Function handling \"move\" events. This function is called on \"move\" events,\n * also during a drag sequence (so during a drag sequence both the\n * `handleDragEvent` function and this function are called).\n * @property {function(import(\"../MapBrowserPointerEvent.js\").default):boolean} [handleUpEvent]\n *  Function handling \"up\" events. If the function returns `false` then the\n * current drag sequence is stopped.\n * @property {function(boolean):boolean} [stopDown]\n * Should the down event be propagated to other interactions, or should be\n * stopped?\n */\n/**\n * @classdesc\n * Base class that calls user-defined functions on `down`, `move` and `up`\n * events. This class also manages \"drag sequences\".\n *\n * When the `handleDownEvent` user function returns `true` a drag sequence is\n * started. During a drag sequence the `handleDragEvent` user function is\n * called on `move` events. The drag sequence ends when the `handleUpEvent`\n * user function is called and returns `false`.\n * @api\n */\nvar PointerInteraction = /** @class */ (function (_super) {\n    __extends(PointerInteraction, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function PointerInteraction(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        _this = _super.call(this, /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options)) || this;\n        if (options.handleDownEvent) {\n            _this.handleDownEvent = options.handleDownEvent;\n        }\n        if (options.handleDragEvent) {\n            _this.handleDragEvent = options.handleDragEvent;\n        }\n        if (options.handleMoveEvent) {\n            _this.handleMoveEvent = options.handleMoveEvent;\n        }\n        if (options.handleUpEvent) {\n            _this.handleUpEvent = options.handleUpEvent;\n        }\n        if (options.stopDown) {\n            _this.stopDown = options.stopDown;\n        }\n        /**\n         * @type {boolean}\n         * @protected\n         */\n        _this.handlingDownUpSequence = false;\n        /**\n         * @type {!Object<string, import(\"../pointer/PointerEvent.js\").default>}\n         * @private\n         */\n        _this.trackedPointers_ = {};\n        /**\n         * @type {Array<import(\"../pointer/PointerEvent.js\").default>}\n         * @protected\n         */\n        _this.targetPointers = [];\n        return _this;\n    }\n    /**\n     * Handle pointer down events.\n     * @param {import(\"../MapBrowserPointerEvent.js\").default} mapBrowserEvent Event.\n     * @return {boolean} If the event was consumed.\n     * @protected\n     */\n    PointerInteraction.prototype.handleDownEvent = function (mapBrowserEvent) {\n        return false;\n    };\n    /**\n     * Handle pointer drag events.\n     * @param {import(\"../MapBrowserPointerEvent.js\").default} mapBrowserEvent Event.\n     * @protected\n     */\n    PointerInteraction.prototype.handleDragEvent = function (mapBrowserEvent) { };\n    /**\n     * Handles the {@link module:ol/MapBrowserEvent map browser event} and may call into\n     * other functions, if event sequences like e.g. 'drag' or 'down-up' etc. are\n     * detected.\n     * @override\n     * @api\n     */\n    PointerInteraction.prototype.handleEvent = function (mapBrowserEvent) {\n        if (!( /** @type {import(\"../MapBrowserPointerEvent.js\").default} */(mapBrowserEvent).pointerEvent)) {\n            return true;\n        }\n        var stopEvent = false;\n        this.updateTrackedPointers_(mapBrowserEvent);\n        if (this.handlingDownUpSequence) {\n            if (mapBrowserEvent.type == MapBrowserEventType.POINTERDRAG) {\n                this.handleDragEvent(mapBrowserEvent);\n            }\n            else if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n                var handledUp = this.handleUpEvent(mapBrowserEvent);\n                this.handlingDownUpSequence = handledUp && this.targetPointers.length > 0;\n            }\n        }\n        else {\n            if (mapBrowserEvent.type == MapBrowserEventType.POINTERDOWN) {\n                var handled = this.handleDownEvent(mapBrowserEvent);\n                if (handled) {\n                    mapBrowserEvent.preventDefault();\n                }\n                this.handlingDownUpSequence = handled;\n                stopEvent = this.stopDown(handled);\n            }\n            else if (mapBrowserEvent.type == MapBrowserEventType.POINTERMOVE) {\n                this.handleMoveEvent(mapBrowserEvent);\n            }\n        }\n        return !stopEvent;\n    };\n    /**\n     * Handle pointer move events.\n     * @param {import(\"../MapBrowserPointerEvent.js\").default} mapBrowserEvent Event.\n     * @protected\n     */\n    PointerInteraction.prototype.handleMoveEvent = function (mapBrowserEvent) { };\n    /**\n     * Handle pointer up events.\n     * @param {import(\"../MapBrowserPointerEvent.js\").default} mapBrowserEvent Event.\n     * @return {boolean} If the event was consumed.\n     * @protected\n     */\n    PointerInteraction.prototype.handleUpEvent = function (mapBrowserEvent) {\n        return false;\n    };\n    /**\n     * This function is used to determine if \"down\" events should be propagated\n     * to other interactions or should be stopped.\n     * @param {boolean} handled Was the event handled by the interaction?\n     * @return {boolean} Should the `down` event be stopped?\n     */\n    PointerInteraction.prototype.stopDown = function (handled) {\n        return handled;\n    };\n    /**\n     * @param {import(\"../MapBrowserPointerEvent.js\").default} mapBrowserEvent Event.\n     * @private\n     */\n    PointerInteraction.prototype.updateTrackedPointers_ = function (mapBrowserEvent) {\n        if (isPointerDraggingEvent(mapBrowserEvent)) {\n            var event_1 = mapBrowserEvent.pointerEvent;\n            var id = event_1.pointerId.toString();\n            if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n                delete this.trackedPointers_[id];\n            }\n            else if (mapBrowserEvent.type ==\n                MapBrowserEventType.POINTERDOWN) {\n                this.trackedPointers_[id] = event_1;\n            }\n            else if (id in this.trackedPointers_) {\n                // update only when there was a pointerdown event for this pointer\n                this.trackedPointers_[id] = event_1;\n            }\n            this.targetPointers = getValues(this.trackedPointers_);\n        }\n    };\n    return PointerInteraction;\n}(Interaction));\n/**\n * @param {Array<import(\"../pointer/PointerEvent.js\").default>} pointerEvents List of events.\n * @return {import(\"../pixel.js\").Pixel} Centroid pixel.\n */\nexport function centroid(pointerEvents) {\n    var length = pointerEvents.length;\n    var clientX = 0;\n    var clientY = 0;\n    for (var i = 0; i < length; i++) {\n        clientX += pointerEvents[i].clientX;\n        clientY += pointerEvents[i].clientY;\n    }\n    return [clientX / length, clientY / length];\n}\n/**\n * @param {import(\"../MapBrowserPointerEvent.js\").default} mapBrowserEvent Event.\n * @return {boolean} Whether the event is a pointerdown, pointerdrag\n *     or pointerup event.\n */\nfunction isPointerDraggingEvent(mapBrowserEvent) {\n    var type = mapBrowserEvent.type;\n    return type === MapBrowserEventType.POINTERDOWN ||\n        type === MapBrowserEventType.POINTERDRAG ||\n        type === MapBrowserEventType.POINTERUP;\n}\nexport default PointerInteraction;\n//# sourceMappingURL=Pointer.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/DragPan\n */\nimport { scale as scaleCoordinate, rotate as rotateCoordinate } from '../coordinate.js';\nimport { easeOut } from '../easing.js';\nimport { noModifierKeys } from '../events/condition.js';\nimport { FALSE } from '../functions.js';\nimport PointerInteraction, { centroid as centroidFromPointers } from './Pointer.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition~noModifierKeys}.\n * @property {import(\"../Kinetic.js\").default} [kinetic] Kinetic inertia to apply to the pan.\n */\n/**\n * @classdesc\n * Allows the user to pan the map by dragging the map.\n * @api\n */\nvar DragPan = /** @class */ (function (_super) {\n    __extends(DragPan, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function DragPan(opt_options) {\n        var _this = _super.call(this, {\n            stopDown: FALSE\n        }) || this;\n        var options = opt_options ? opt_options : {};\n        /**\n         * @private\n         * @type {import(\"../Kinetic.js\").default|undefined}\n         */\n        _this.kinetic_ = options.kinetic;\n        /**\n         * @type {import(\"../pixel.js\").Pixel}\n         */\n        _this.lastCentroid = null;\n        /**\n         * @type {number}\n         */\n        _this.lastPointersCount_;\n        /**\n         * @type {boolean}\n         */\n        _this.panning_ = false;\n        /**\n         * @private\n         * @type {import(\"../events/condition.js\").Condition}\n         */\n        _this.condition_ = options.condition ? options.condition : noModifierKeys;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.noKinetic_ = false;\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    DragPan.prototype.handleDragEvent = function (mapBrowserEvent) {\n        var targetPointers = this.targetPointers;\n        var centroid = centroidFromPointers(targetPointers);\n        if (targetPointers.length == this.lastPointersCount_) {\n            if (this.kinetic_) {\n                this.kinetic_.update(centroid[0], centroid[1]);\n            }\n            if (this.lastCentroid) {\n                var delta = [\n                    this.lastCentroid[0] - centroid[0],\n                    centroid[1] - this.lastCentroid[1]\n                ];\n                var map = mapBrowserEvent.map;\n                var view = map.getView();\n                scaleCoordinate(delta, view.getResolution());\n                rotateCoordinate(delta, view.getRotation());\n                view.adjustCenter(delta);\n            }\n        }\n        else if (this.kinetic_) {\n            // reset so we don't overestimate the kinetic energy after\n            // after one finger down, tiny drag, second finger down\n            this.kinetic_.begin();\n        }\n        this.lastCentroid = centroid;\n        this.lastPointersCount_ = targetPointers.length;\n    };\n    /**\n     * @inheritDoc\n     */\n    DragPan.prototype.handleUpEvent = function (mapBrowserEvent) {\n        var map = mapBrowserEvent.map;\n        var view = map.getView();\n        if (this.targetPointers.length === 0) {\n            if (!this.noKinetic_ && this.kinetic_ && this.kinetic_.end()) {\n                var distance = this.kinetic_.getDistance();\n                var angle = this.kinetic_.getAngle();\n                var center = /** @type {!import(\"../coordinate.js\").Coordinate} */ (view.getCenter());\n                var centerpx = map.getPixelFromCoordinate(center);\n                var dest = map.getCoordinateFromPixel([\n                    centerpx[0] - distance * Math.cos(angle),\n                    centerpx[1] - distance * Math.sin(angle)\n                ]);\n                view.animate({\n                    center: view.getConstrainedCenter(dest),\n                    duration: 500,\n                    easing: easeOut\n                });\n            }\n            if (this.panning_) {\n                this.panning_ = false;\n                view.endInteraction();\n            }\n            return false;\n        }\n        else {\n            if (this.kinetic_) {\n                // reset so we don't overestimate the kinetic energy after\n                // after one finger up, tiny drag, second finger up\n                this.kinetic_.begin();\n            }\n            this.lastCentroid = null;\n            return true;\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    DragPan.prototype.handleDownEvent = function (mapBrowserEvent) {\n        if (this.targetPointers.length > 0 && this.condition_(mapBrowserEvent)) {\n            var map = mapBrowserEvent.map;\n            var view = map.getView();\n            this.lastCentroid = null;\n            // stop any current animation\n            if (view.getAnimating()) {\n                view.cancelAnimations();\n            }\n            if (!this.panning_) {\n                this.panning_ = true;\n                this.getMap().getView().beginInteraction();\n            }\n            if (this.kinetic_) {\n                this.kinetic_.begin();\n            }\n            // No kinetic as soon as more than one pointer on the screen is\n            // detected. This is to prevent nasty pans after pinch.\n            this.noKinetic_ = this.targetPointers.length > 1;\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    return DragPan;\n}(PointerInteraction));\nexport default DragPan;\n//# sourceMappingURL=DragPan.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/DragRotate\n */\nimport { disable } from '../rotationconstraint.js';\nimport { altShiftKeysOnly, mouseOnly, mouseActionButton } from '../events/condition.js';\nimport { FALSE } from '../functions.js';\nimport PointerInteraction from './Pointer.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an\n * {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition~altShiftKeysOnly}.\n * @property {number} [duration=250] Animation duration in milliseconds.\n */\n/**\n * @classdesc\n * Allows the user to rotate the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the alt and shift keys are held down.\n *\n * This interaction is only supported for mouse devices.\n * @api\n */\nvar DragRotate = /** @class */ (function (_super) {\n    __extends(DragRotate, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function DragRotate(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        _this = _super.call(this, {\n            stopDown: FALSE\n        }) || this;\n        /**\n         * @private\n         * @type {import(\"../events/condition.js\").Condition}\n         */\n        _this.condition_ = options.condition ? options.condition : altShiftKeysOnly;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.lastAngle_ = undefined;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.duration_ = options.duration !== undefined ? options.duration : 250;\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    DragRotate.prototype.handleDragEvent = function (mapBrowserEvent) {\n        if (!mouseOnly(mapBrowserEvent)) {\n            return;\n        }\n        var map = mapBrowserEvent.map;\n        var view = map.getView();\n        if (view.getConstraints().rotation === disable) {\n            return;\n        }\n        var size = map.getSize();\n        var offset = mapBrowserEvent.pixel;\n        var theta = Math.atan2(size[1] / 2 - offset[1], offset[0] - size[0] / 2);\n        if (this.lastAngle_ !== undefined) {\n            var delta = theta - this.lastAngle_;\n            view.adjustRotation(-delta);\n        }\n        this.lastAngle_ = theta;\n    };\n    /**\n     * @inheritDoc\n     */\n    DragRotate.prototype.handleUpEvent = function (mapBrowserEvent) {\n        if (!mouseOnly(mapBrowserEvent)) {\n            return true;\n        }\n        var map = mapBrowserEvent.map;\n        var view = map.getView();\n        view.endInteraction(this.duration_);\n        return false;\n    };\n    /**\n     * @inheritDoc\n     */\n    DragRotate.prototype.handleDownEvent = function (mapBrowserEvent) {\n        if (!mouseOnly(mapBrowserEvent)) {\n            return false;\n        }\n        if (mouseActionButton(mapBrowserEvent) && this.condition_(mapBrowserEvent)) {\n            var map = mapBrowserEvent.map;\n            map.getView().beginInteraction();\n            this.lastAngle_ = undefined;\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    return DragRotate;\n}(PointerInteraction));\nexport default DragRotate;\n//# sourceMappingURL=DragRotate.js.map","/**\n * @module ol/render/Box\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport Disposable from '../Disposable.js';\nimport Polygon from '../geom/Polygon.js';\nvar RenderBox = /** @class */ (function (_super) {\n    __extends(RenderBox, _super);\n    /**\n     * @param {string} className CSS class name.\n     */\n    function RenderBox(className) {\n        var _this = _super.call(this) || this;\n        /**\n         * @type {import(\"../geom/Polygon.js\").default}\n         * @private\n         */\n        _this.geometry_ = null;\n        /**\n         * @type {HTMLDivElement}\n         * @private\n         */\n        _this.element_ = document.createElement('div');\n        _this.element_.style.position = 'absolute';\n        _this.element_.className = 'ol-box ' + className;\n        /**\n         * @private\n         * @type {import(\"../PluggableMap.js\").default}\n         */\n        _this.map_ = null;\n        /**\n         * @private\n         * @type {import(\"../pixel.js\").Pixel}\n         */\n        _this.startPixel_ = null;\n        /**\n         * @private\n         * @type {import(\"../pixel.js\").Pixel}\n         */\n        _this.endPixel_ = null;\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    RenderBox.prototype.disposeInternal = function () {\n        this.setMap(null);\n    };\n    /**\n     * @private\n     */\n    RenderBox.prototype.render_ = function () {\n        var startPixel = this.startPixel_;\n        var endPixel = this.endPixel_;\n        var px = 'px';\n        var style = this.element_.style;\n        style.left = Math.min(startPixel[0], endPixel[0]) + px;\n        style.top = Math.min(startPixel[1], endPixel[1]) + px;\n        style.width = Math.abs(endPixel[0] - startPixel[0]) + px;\n        style.height = Math.abs(endPixel[1] - startPixel[1]) + px;\n    };\n    /**\n     * @param {import(\"../PluggableMap.js\").default} map Map.\n     */\n    RenderBox.prototype.setMap = function (map) {\n        if (this.map_) {\n            this.map_.getOverlayContainer().removeChild(this.element_);\n            var style = this.element_.style;\n            style.left = style.top = style.width = style.height = 'inherit';\n        }\n        this.map_ = map;\n        if (this.map_) {\n            this.map_.getOverlayContainer().appendChild(this.element_);\n        }\n    };\n    /**\n     * @param {import(\"../pixel.js\").Pixel} startPixel Start pixel.\n     * @param {import(\"../pixel.js\").Pixel} endPixel End pixel.\n     */\n    RenderBox.prototype.setPixels = function (startPixel, endPixel) {\n        this.startPixel_ = startPixel;\n        this.endPixel_ = endPixel;\n        this.createOrUpdateGeometry();\n        this.render_();\n    };\n    /**\n     * Creates or updates the cached geometry.\n     */\n    RenderBox.prototype.createOrUpdateGeometry = function () {\n        var startPixel = this.startPixel_;\n        var endPixel = this.endPixel_;\n        var pixels = [\n            startPixel,\n            [startPixel[0], endPixel[1]],\n            endPixel,\n            [endPixel[0], startPixel[1]]\n        ];\n        var coordinates = pixels.map(this.map_.getCoordinateFromPixel, this.map_);\n        // close the polygon\n        coordinates[4] = coordinates[0].slice();\n        if (!this.geometry_) {\n            this.geometry_ = new Polygon([coordinates]);\n        }\n        else {\n            this.geometry_.setCoordinates([coordinates]);\n        }\n    };\n    /**\n     * @return {import(\"../geom/Polygon.js\").default} Geometry.\n     */\n    RenderBox.prototype.getGeometry = function () {\n        return this.geometry_;\n    };\n    return RenderBox;\n}(Disposable));\nexport default RenderBox;\n//# sourceMappingURL=Box.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/DragBox\n */\n// FIXME draw drag box\nimport Event from '../events/Event.js';\nimport { always, mouseOnly, mouseActionButton } from '../events/condition.js';\nimport { VOID } from '../functions.js';\nimport PointerInteraction from './Pointer.js';\nimport RenderBox from '../render/Box.js';\n/**\n * A function that takes a {@link module:ol/MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s and returns a `{boolean}`. If the condition is met,\n * true should be returned.\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default, import(\"../pixel.js\").Pixel, import(\"../pixel.js\").Pixel):boolean} EndCondition\n */\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragbox'] CSS class name for styling the box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link ol/events/condition~always}.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the default\n * `boxEndCondition` function.\n * @property {EndCondition} [boxEndCondition] A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s to indicate whether a `boxend` event should be fired.\n * Default is `true` if the area of the box is bigger than the `minArea` option.\n * @property {function(this:DragBox, import(\"../MapBrowserEvent.js\").default)} [onBoxEnd] Code to execute just\n * before `boxend` is fired.\n */\n/**\n * @enum {string}\n */\nvar DragBoxEventType = {\n    /**\n     * Triggered upon drag box start.\n     * @event DragBoxEvent#boxstart\n     * @api\n     */\n    BOXSTART: 'boxstart',\n    /**\n     * Triggered on drag when box is active.\n     * @event DragBoxEvent#boxdrag\n     * @api\n     */\n    BOXDRAG: 'boxdrag',\n    /**\n     * Triggered upon drag box end.\n     * @event DragBoxEvent#boxend\n     * @api\n     */\n    BOXEND: 'boxend'\n};\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/DragBox~DragBox} instances are instances of\n * this type.\n */\nvar DragBoxEvent = /** @class */ (function (_super) {\n    __extends(DragBoxEvent, _super);\n    /**\n     * @param {string} type The event type.\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate The event coordinate.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Originating event.\n     */\n    function DragBoxEvent(type, coordinate, mapBrowserEvent) {\n        var _this = _super.call(this, type) || this;\n        /**\n         * The coordinate of the drag event.\n         * @const\n         * @type {import(\"../coordinate.js\").Coordinate}\n         * @api\n         */\n        _this.coordinate = coordinate;\n        /**\n         * @const\n         * @type {import(\"../MapBrowserEvent.js\").default}\n         * @api\n         */\n        _this.mapBrowserEvent = mapBrowserEvent;\n        return _this;\n    }\n    return DragBoxEvent;\n}(Event));\n/**\n * @classdesc\n * Allows the user to draw a vector box by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the shift or other key is held down. This is used, for example,\n * for zooming to a specific area of the map\n * (see {@link module:ol/interaction/DragZoom~DragZoom} and\n * {@link module:ol/interaction/DragRotateAndZoom}).\n *\n * This interaction is only supported for mouse devices.\n *\n * @fires DragBoxEvent\n * @api\n */\nvar DragBox = /** @class */ (function (_super) {\n    __extends(DragBox, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function DragBox(opt_options) {\n        var _this = _super.call(this) || this;\n        var options = opt_options ? opt_options : {};\n        /**\n         * @type {import(\"../render/Box.js\").default}\n         * @private\n         */\n        _this.box_ = new RenderBox(options.className || 'ol-dragbox');\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.minArea_ = options.minArea !== undefined ? options.minArea : 64;\n        /**\n         * Function to execute just before `onboxend` is fired\n         * @type {function(this:DragBox, import(\"../MapBrowserEvent.js\").default): void}\n         * @private\n         */\n        _this.onBoxEnd_ = options.onBoxEnd ? options.onBoxEnd : VOID;\n        /**\n         * @type {import(\"../pixel.js\").Pixel}\n         * @private\n         */\n        _this.startPixel_ = null;\n        /**\n         * @private\n         * @type {import(\"../events/condition.js\").Condition}\n         */\n        _this.condition_ = options.condition ? options.condition : always;\n        /**\n         * @private\n         * @type {EndCondition}\n         */\n        _this.boxEndCondition_ = options.boxEndCondition ?\n            options.boxEndCondition : _this.defaultBoxEndCondition;\n        return _this;\n    }\n    /**\n     * The default condition for determining whether the boxend event\n     * should fire.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent The originating MapBrowserEvent\n     *     leading to the box end.\n     * @param {import(\"../pixel.js\").Pixel} startPixel The starting pixel of the box.\n     * @param {import(\"../pixel.js\").Pixel} endPixel The end pixel of the box.\n     * @return {boolean} Whether or not the boxend condition should be fired.\n     */\n    DragBox.prototype.defaultBoxEndCondition = function (mapBrowserEvent, startPixel, endPixel) {\n        var width = endPixel[0] - startPixel[0];\n        var height = endPixel[1] - startPixel[1];\n        return width * width + height * height >= this.minArea_;\n    };\n    /**\n     * Returns geometry of last drawn box.\n     * @return {import(\"../geom/Polygon.js\").default} Geometry.\n     * @api\n     */\n    DragBox.prototype.getGeometry = function () {\n        return this.box_.getGeometry();\n    };\n    /**\n     * @inheritDoc\n     */\n    DragBox.prototype.handleDragEvent = function (mapBrowserEvent) {\n        if (!mouseOnly(mapBrowserEvent)) {\n            return;\n        }\n        this.box_.setPixels(this.startPixel_, mapBrowserEvent.pixel);\n        this.dispatchEvent(new DragBoxEvent(DragBoxEventType.BOXDRAG, mapBrowserEvent.coordinate, mapBrowserEvent));\n    };\n    /**\n     * @inheritDoc\n     */\n    DragBox.prototype.handleUpEvent = function (mapBrowserEvent) {\n        if (!mouseOnly(mapBrowserEvent)) {\n            return true;\n        }\n        this.box_.setMap(null);\n        if (this.boxEndCondition_(mapBrowserEvent, this.startPixel_, mapBrowserEvent.pixel)) {\n            this.onBoxEnd_(mapBrowserEvent);\n            this.dispatchEvent(new DragBoxEvent(DragBoxEventType.BOXEND, mapBrowserEvent.coordinate, mapBrowserEvent));\n        }\n        return false;\n    };\n    /**\n     * @inheritDoc\n     */\n    DragBox.prototype.handleDownEvent = function (mapBrowserEvent) {\n        if (!mouseOnly(mapBrowserEvent)) {\n            return false;\n        }\n        if (mouseActionButton(mapBrowserEvent) &&\n            this.condition_(mapBrowserEvent)) {\n            this.startPixel_ = mapBrowserEvent.pixel;\n            this.box_.setMap(mapBrowserEvent.map);\n            this.box_.setPixels(this.startPixel_, this.startPixel_);\n            this.dispatchEvent(new DragBoxEvent(DragBoxEventType.BOXSTART, mapBrowserEvent.coordinate, mapBrowserEvent));\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    return DragBox;\n}(PointerInteraction));\nexport default DragBox;\n//# sourceMappingURL=DragBox.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/DragZoom\n */\nimport { easeOut } from '../easing.js';\nimport { shiftKeyOnly } from '../events/condition.js';\nimport { createOrUpdateFromCoordinates, getBottomLeft, getCenter, getTopRight, scaleFromCenter } from '../extent.js';\nimport DragBox from './DragBox.js';\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragzoom'] CSS class name for styling the\n * box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition~shiftKeyOnly}.\n * @property {number} [duration=200] Animation duration in milliseconds.\n * @property {boolean} [out=false] Use interaction for zooming out.\n */\n/**\n * @classdesc\n * Allows the user to zoom the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when a key, shift by default, is held down.\n *\n * To change the style of the box, use CSS and the `.ol-dragzoom` selector, or\n * your custom one configured with `className`.\n * @api\n */\nvar DragZoom = /** @class */ (function (_super) {\n    __extends(DragZoom, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function DragZoom(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        var condition = options.condition ? options.condition : shiftKeyOnly;\n        _this = _super.call(this, {\n            condition: condition,\n            className: options.className || 'ol-dragzoom',\n            onBoxEnd: onBoxEnd\n        }) || this;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.duration_ = options.duration !== undefined ? options.duration : 200;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.out_ = options.out !== undefined ? options.out : false;\n        return _this;\n    }\n    return DragZoom;\n}(DragBox));\n/**\n * @this {DragZoom}\n */\nfunction onBoxEnd() {\n    var map = this.getMap();\n    var view = /** @type {!import(\"../View.js\").default} */ (map.getView());\n    var size = /** @type {!import(\"../size.js\").Size} */ (map.getSize());\n    var extent = this.getGeometry().getExtent();\n    if (this.out_) {\n        var mapExtent = view.calculateExtent(size);\n        var boxPixelExtent = createOrUpdateFromCoordinates([\n            map.getPixelFromCoordinate(getBottomLeft(extent)),\n            map.getPixelFromCoordinate(getTopRight(extent))\n        ]);\n        var factor = view.getResolutionForExtent(boxPixelExtent, size);\n        scaleFromCenter(mapExtent, 1 / factor);\n        extent = mapExtent;\n    }\n    var resolution = view.getConstrainedResolution(view.getResolutionForExtent(extent, size));\n    var center = view.getConstrainedCenter(getCenter(extent), resolution);\n    view.animate({\n        resolution: resolution,\n        center: center,\n        duration: this.duration_,\n        easing: easeOut\n    });\n}\nexport default DragZoom;\n//# sourceMappingURL=DragZoom.js.map","/**\n * @module ol/events/KeyCode\n */\n/**\n * @enum {number}\n * @const\n */\nexport default {\n    LEFT: 37,\n    UP: 38,\n    RIGHT: 39,\n    DOWN: 40\n};\n//# sourceMappingURL=KeyCode.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/KeyboardPan\n */\nimport { rotate as rotateCoordinate } from '../coordinate.js';\nimport EventType from '../events/EventType.js';\nimport KeyCode from '../events/KeyCode.js';\nimport { noModifierKeys, targetNotEditable } from '../events/condition.js';\nimport Interaction, { pan } from './Interaction.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition~noModifierKeys} and\n * {@link module:ol/events/condition~targetNotEditable}.\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {number} [pixelDelta=128] The amount of pixels to pan on each key\n * press.\n */\n/**\n * @classdesc\n * Allows the user to pan the map using keyboard arrows.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}.\n * @api\n */\nvar KeyboardPan = /** @class */ (function (_super) {\n    __extends(KeyboardPan, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function KeyboardPan(opt_options) {\n        var _this = _super.call(this, {\n            handleEvent: handleEvent\n        }) || this;\n        var options = opt_options || {};\n        /**\n         * @private\n         * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Browser event.\n         * @return {boolean} Combined condition result.\n         */\n        _this.defaultCondition_ = function (mapBrowserEvent) {\n            return noModifierKeys(mapBrowserEvent) &&\n                targetNotEditable(mapBrowserEvent);\n        };\n        /**\n         * @private\n         * @type {import(\"../events/condition.js\").Condition}\n         */\n        _this.condition_ = options.condition !== undefined ?\n            options.condition : _this.defaultCondition_;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.duration_ = options.duration !== undefined ? options.duration : 100;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.pixelDelta_ = options.pixelDelta !== undefined ?\n            options.pixelDelta : 128;\n        return _this;\n    }\n    return KeyboardPan;\n}(Interaction));\n/**\n * Handles the {@link module:ol/MapBrowserEvent map browser event} if it was a\n * `KeyEvent`, and decides the direction to pan to (if an arrow key was\n * pressed).\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} `false` to stop event propagation.\n * @this {KeyboardPan}\n */\nfunction handleEvent(mapBrowserEvent) {\n    var stopEvent = false;\n    if (mapBrowserEvent.type == EventType.KEYDOWN) {\n        var keyEvent = /** @type {KeyboardEvent} */ (mapBrowserEvent.originalEvent);\n        var keyCode = keyEvent.keyCode;\n        if (this.condition_(mapBrowserEvent) &&\n            (keyCode == KeyCode.DOWN ||\n                keyCode == KeyCode.LEFT ||\n                keyCode == KeyCode.RIGHT ||\n                keyCode == KeyCode.UP)) {\n            var map = mapBrowserEvent.map;\n            var view = map.getView();\n            var mapUnitsDelta = view.getResolution() * this.pixelDelta_;\n            var deltaX = 0, deltaY = 0;\n            if (keyCode == KeyCode.DOWN) {\n                deltaY = -mapUnitsDelta;\n            }\n            else if (keyCode == KeyCode.LEFT) {\n                deltaX = -mapUnitsDelta;\n            }\n            else if (keyCode == KeyCode.RIGHT) {\n                deltaX = mapUnitsDelta;\n            }\n            else {\n                deltaY = mapUnitsDelta;\n            }\n            var delta = [deltaX, deltaY];\n            rotateCoordinate(delta, view.getRotation());\n            pan(view, delta, this.duration_);\n            mapBrowserEvent.preventDefault();\n            stopEvent = true;\n        }\n    }\n    return !stopEvent;\n}\nexport default KeyboardPan;\n//# sourceMappingURL=KeyboardPan.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/KeyboardZoom\n */\nimport EventType from '../events/EventType.js';\nimport { targetNotEditable } from '../events/condition.js';\nimport Interaction, { zoomByDelta } from './Interaction.js';\n/**\n * @typedef {Object} Options\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition~targetNotEditable}.\n * @property {number} [delta=1] The zoom level delta on each key press.\n */\n/**\n * @classdesc\n * Allows the user to zoom the map using keyboard + and -.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardPan~KeyboardPan}.\n * @api\n */\nvar KeyboardZoom = /** @class */ (function (_super) {\n    __extends(KeyboardZoom, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function KeyboardZoom(opt_options) {\n        var _this = _super.call(this, {\n            handleEvent: handleEvent\n        }) || this;\n        var options = opt_options ? opt_options : {};\n        /**\n         * @private\n         * @type {import(\"../events/condition.js\").Condition}\n         */\n        _this.condition_ = options.condition ? options.condition : targetNotEditable;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.delta_ = options.delta ? options.delta : 1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.duration_ = options.duration !== undefined ? options.duration : 100;\n        return _this;\n    }\n    return KeyboardZoom;\n}(Interaction));\n/**\n * Handles the {@link module:ol/MapBrowserEvent map browser event} if it was a\n * `KeyEvent`, and decides whether to zoom in or out (depending on whether the\n * key pressed was '+' or '-').\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} `false` to stop event propagation.\n * @this {KeyboardZoom}\n */\nfunction handleEvent(mapBrowserEvent) {\n    var stopEvent = false;\n    if (mapBrowserEvent.type == EventType.KEYDOWN ||\n        mapBrowserEvent.type == EventType.KEYPRESS) {\n        var keyEvent = /** @type {KeyboardEvent} */ (mapBrowserEvent.originalEvent);\n        var charCode = keyEvent.charCode;\n        if (this.condition_(mapBrowserEvent) &&\n            (charCode == '+'.charCodeAt(0) || charCode == '-'.charCodeAt(0))) {\n            var map = mapBrowserEvent.map;\n            var delta = (charCode == '+'.charCodeAt(0)) ? this.delta_ : -this.delta_;\n            var view = map.getView();\n            zoomByDelta(view, delta, undefined, this.duration_);\n            mapBrowserEvent.preventDefault();\n            stopEvent = true;\n        }\n    }\n    return !stopEvent;\n}\nexport default KeyboardZoom;\n//# sourceMappingURL=KeyboardZoom.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/MouseWheelZoom\n */\nimport { always } from '../events/condition.js';\nimport EventType from '../events/EventType.js';\nimport { DEVICE_PIXEL_RATIO, FIREFOX, SAFARI } from '../has.js';\nimport Interaction, { zoomByDelta } from './Interaction.js';\nimport { clamp } from '../math.js';\n/**\n * @enum {string}\n */\nexport var Mode = {\n    TRACKPAD: 'trackpad',\n    WHEEL: 'wheel'\n};\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition~always}.\n * @property {number} [maxDelta=1] Maximum mouse wheel delta.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [timeout=80] Mouse wheel timeout duration in milliseconds.\n * @property {boolean} [useAnchor=true] Enable zooming using the mouse's\n * location as the anchor. When set to `false`, zooming in and out will zoom to\n * the center of the screen instead of zooming on the mouse's location.\n */\n/**\n * @classdesc\n * Allows the user to zoom the map by scrolling the mouse wheel.\n * @api\n */\nvar MouseWheelZoom = /** @class */ (function (_super) {\n    __extends(MouseWheelZoom, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function MouseWheelZoom(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        _this = _super.call(this, /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options)) || this;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.totalDelta_ = 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.lastDelta_ = 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.maxDelta_ = options.maxDelta !== undefined ? options.maxDelta : 1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.duration_ = options.duration !== undefined ? options.duration : 250;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.timeout_ = options.timeout !== undefined ? options.timeout : 80;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.useAnchor_ = options.useAnchor !== undefined ? options.useAnchor : true;\n        /**\n         * @private\n         * @type {import(\"../events/condition.js\").Condition}\n         */\n        _this.condition_ = options.condition ? options.condition : always;\n        /**\n         * @private\n         * @type {?import(\"../coordinate.js\").Coordinate}\n         */\n        _this.lastAnchor_ = null;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.startTime_ = undefined;\n        /**\n         * @private\n         * @type {?}\n         */\n        _this.timeoutId_;\n        /**\n         * @private\n         * @type {Mode|undefined}\n         */\n        _this.mode_ = undefined;\n        /**\n         * Trackpad events separated by this delay will be considered separate\n         * interactions.\n         * @type {number}\n         */\n        _this.trackpadEventGap_ = 400;\n        /**\n         * @type {?}\n         */\n        _this.trackpadTimeoutId_;\n        /**\n         * The number of delta values per zoom level\n         * @private\n         * @type {number}\n         */\n        _this.trackpadDeltaPerZoom_ = 300;\n        return _this;\n    }\n    /**\n     * @private\n     */\n    MouseWheelZoom.prototype.endInteraction_ = function () {\n        this.trackpadTimeoutId_ = undefined;\n        var view = this.getMap().getView();\n        view.endInteraction(undefined, Math.sign(this.lastDelta_), this.lastAnchor_);\n    };\n    /**\n     * Handles the {@link module:ol/MapBrowserEvent map browser event} (if it was a mousewheel-event) and eventually\n     * zooms the map.\n     * @override\n     */\n    MouseWheelZoom.prototype.handleEvent = function (mapBrowserEvent) {\n        if (!this.condition_(mapBrowserEvent)) {\n            return true;\n        }\n        var type = mapBrowserEvent.type;\n        if (type !== EventType.WHEEL && type !== EventType.MOUSEWHEEL) {\n            return true;\n        }\n        mapBrowserEvent.preventDefault();\n        var map = mapBrowserEvent.map;\n        var wheelEvent = /** @type {WheelEvent} */ (mapBrowserEvent.originalEvent);\n        if (this.useAnchor_) {\n            this.lastAnchor_ = mapBrowserEvent.coordinate;\n        }\n        // Delta normalisation inspired by\n        // https://github.com/mapbox/mapbox-gl-js/blob/001c7b9/js/ui/handler/scroll_zoom.js\n        var delta;\n        if (mapBrowserEvent.type == EventType.WHEEL) {\n            delta = wheelEvent.deltaY;\n            if (FIREFOX &&\n                wheelEvent.deltaMode === WheelEvent.DOM_DELTA_PIXEL) {\n                delta /= DEVICE_PIXEL_RATIO;\n            }\n            if (wheelEvent.deltaMode === WheelEvent.DOM_DELTA_LINE) {\n                delta *= 40;\n            }\n        }\n        else if (mapBrowserEvent.type == EventType.MOUSEWHEEL) {\n            delta = -wheelEvent.wheelDeltaY;\n            if (SAFARI) {\n                delta /= 3;\n            }\n        }\n        if (delta === 0) {\n            return false;\n        }\n        else {\n            this.lastDelta_ = delta;\n        }\n        var now = Date.now();\n        if (this.startTime_ === undefined) {\n            this.startTime_ = now;\n        }\n        if (!this.mode_ || now - this.startTime_ > this.trackpadEventGap_) {\n            this.mode_ = Math.abs(delta) < 4 ?\n                Mode.TRACKPAD :\n                Mode.WHEEL;\n        }\n        if (this.mode_ === Mode.TRACKPAD) {\n            var view = map.getView();\n            if (this.trackpadTimeoutId_) {\n                clearTimeout(this.trackpadTimeoutId_);\n            }\n            else {\n                view.beginInteraction();\n            }\n            this.trackpadTimeoutId_ = setTimeout(this.endInteraction_.bind(this), this.trackpadEventGap_);\n            view.adjustZoom(-delta / this.trackpadDeltaPerZoom_, this.lastAnchor_);\n            this.startTime_ = now;\n            return false;\n        }\n        this.totalDelta_ += delta;\n        var timeLeft = Math.max(this.timeout_ - (now - this.startTime_), 0);\n        clearTimeout(this.timeoutId_);\n        this.timeoutId_ = setTimeout(this.handleWheelZoom_.bind(this, map), timeLeft);\n        return false;\n    };\n    /**\n     * @private\n     * @param {import(\"../PluggableMap.js\").default} map Map.\n     */\n    MouseWheelZoom.prototype.handleWheelZoom_ = function (map) {\n        var view = map.getView();\n        if (view.getAnimating()) {\n            view.cancelAnimations();\n        }\n        var delta = clamp(this.totalDelta_, -this.maxDelta_, this.maxDelta_);\n        zoomByDelta(view, -delta, this.lastAnchor_, this.duration_);\n        this.mode_ = undefined;\n        this.totalDelta_ = 0;\n        this.lastAnchor_ = null;\n        this.startTime_ = undefined;\n        this.timeoutId_ = undefined;\n    };\n    /**\n     * Enable or disable using the mouse's location as an anchor when zooming\n     * @param {boolean} useAnchor true to zoom to the mouse's location, false\n     * to zoom to the center of the map\n     * @api\n     */\n    MouseWheelZoom.prototype.setMouseAnchor = function (useAnchor) {\n        this.useAnchor_ = useAnchor;\n        if (!useAnchor) {\n            this.lastAnchor_ = null;\n        }\n    };\n    return MouseWheelZoom;\n}(Interaction));\nexport default MouseWheelZoom;\n//# sourceMappingURL=MouseWheelZoom.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/PinchRotate\n */\nimport { FALSE } from '../functions.js';\nimport PointerInteraction, { centroid as centroidFromPointers } from './Pointer.js';\nimport { disable } from '../rotationconstraint.js';\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] The duration of the animation in\n * milliseconds.\n * @property {number} [threshold=0.3] Minimal angle in radians to start a rotation.\n */\n/**\n * @classdesc\n * Allows the user to rotate the map by twisting with two fingers\n * on a touch screen.\n * @api\n */\nvar PinchRotate = /** @class */ (function (_super) {\n    __extends(PinchRotate, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function PinchRotate(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        var pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (options);\n        if (!pointerOptions.stopDown) {\n            pointerOptions.stopDown = FALSE;\n        }\n        _this = _super.call(this, pointerOptions) || this;\n        /**\n         * @private\n         * @type {import(\"../coordinate.js\").Coordinate}\n         */\n        _this.anchor_ = null;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.lastAngle_ = undefined;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.rotating_ = false;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.rotationDelta_ = 0.0;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.threshold_ = options.threshold !== undefined ? options.threshold : 0.3;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.duration_ = options.duration !== undefined ? options.duration : 250;\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    PinchRotate.prototype.handleDragEvent = function (mapBrowserEvent) {\n        var rotationDelta = 0.0;\n        var touch0 = this.targetPointers[0];\n        var touch1 = this.targetPointers[1];\n        // angle between touches\n        var angle = Math.atan2(touch1.clientY - touch0.clientY, touch1.clientX - touch0.clientX);\n        if (this.lastAngle_ !== undefined) {\n            var delta = angle - this.lastAngle_;\n            this.rotationDelta_ += delta;\n            if (!this.rotating_ &&\n                Math.abs(this.rotationDelta_) > this.threshold_) {\n                this.rotating_ = true;\n            }\n            rotationDelta = delta;\n        }\n        this.lastAngle_ = angle;\n        var map = mapBrowserEvent.map;\n        var view = map.getView();\n        if (view.getConstraints().rotation === disable) {\n            return;\n        }\n        // rotate anchor point.\n        // FIXME: should be the intersection point between the lines:\n        //     touch0,touch1 and previousTouch0,previousTouch1\n        var viewportPosition = map.getViewport().getBoundingClientRect();\n        var centroid = centroidFromPointers(this.targetPointers);\n        centroid[0] -= viewportPosition.left;\n        centroid[1] -= viewportPosition.top;\n        this.anchor_ = map.getCoordinateFromPixel(centroid);\n        // rotate\n        if (this.rotating_) {\n            map.render();\n            view.adjustRotation(rotationDelta, this.anchor_);\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    PinchRotate.prototype.handleUpEvent = function (mapBrowserEvent) {\n        if (this.targetPointers.length < 2) {\n            var map = mapBrowserEvent.map;\n            var view = map.getView();\n            view.endInteraction(this.duration_);\n            return false;\n        }\n        else {\n            return true;\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    PinchRotate.prototype.handleDownEvent = function (mapBrowserEvent) {\n        if (this.targetPointers.length >= 2) {\n            var map = mapBrowserEvent.map;\n            this.anchor_ = null;\n            this.lastAngle_ = undefined;\n            this.rotating_ = false;\n            this.rotationDelta_ = 0.0;\n            if (!this.handlingDownUpSequence) {\n                map.getView().beginInteraction();\n            }\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    return PinchRotate;\n}(PointerInteraction));\nexport default PinchRotate;\n//# sourceMappingURL=PinchRotate.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/PinchZoom\n */\nimport { FALSE } from '../functions.js';\nimport PointerInteraction, { centroid as centroidFromPointers } from './Pointer.js';\n/**\n * @typedef {Object} Options\n * @property {number} [duration=400] Animation duration in milliseconds.\n */\n/**\n * @classdesc\n * Allows the user to zoom the map by pinching with two fingers\n * on a touch screen.\n * @api\n */\nvar PinchZoom = /** @class */ (function (_super) {\n    __extends(PinchZoom, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function PinchZoom(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        var pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (options);\n        if (!pointerOptions.stopDown) {\n            pointerOptions.stopDown = FALSE;\n        }\n        _this = _super.call(this, pointerOptions) || this;\n        /**\n         * @private\n         * @type {import(\"../coordinate.js\").Coordinate}\n         */\n        _this.anchor_ = null;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.duration_ = options.duration !== undefined ? options.duration : 400;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.lastDistance_ = undefined;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.lastScaleDelta_ = 1;\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    PinchZoom.prototype.handleDragEvent = function (mapBrowserEvent) {\n        var scaleDelta = 1.0;\n        var touch0 = this.targetPointers[0];\n        var touch1 = this.targetPointers[1];\n        var dx = touch0.clientX - touch1.clientX;\n        var dy = touch0.clientY - touch1.clientY;\n        // distance between touches\n        var distance = Math.sqrt(dx * dx + dy * dy);\n        if (this.lastDistance_ !== undefined) {\n            scaleDelta = this.lastDistance_ / distance;\n        }\n        this.lastDistance_ = distance;\n        var map = mapBrowserEvent.map;\n        var view = map.getView();\n        if (scaleDelta != 1.0) {\n            this.lastScaleDelta_ = scaleDelta;\n        }\n        // scale anchor point.\n        var viewportPosition = map.getViewport().getBoundingClientRect();\n        var centroid = centroidFromPointers(this.targetPointers);\n        centroid[0] -= viewportPosition.left;\n        centroid[1] -= viewportPosition.top;\n        this.anchor_ = map.getCoordinateFromPixel(centroid);\n        // scale, bypass the resolution constraint\n        map.render();\n        view.adjustResolution(scaleDelta, this.anchor_);\n    };\n    /**\n     * @inheritDoc\n     */\n    PinchZoom.prototype.handleUpEvent = function (mapBrowserEvent) {\n        if (this.targetPointers.length < 2) {\n            var map = mapBrowserEvent.map;\n            var view = map.getView();\n            var direction = this.lastScaleDelta_ > 1 ? 1 : -1;\n            view.endInteraction(this.duration_, direction);\n            return false;\n        }\n        else {\n            return true;\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    PinchZoom.prototype.handleDownEvent = function (mapBrowserEvent) {\n        if (this.targetPointers.length >= 2) {\n            var map = mapBrowserEvent.map;\n            this.anchor_ = null;\n            this.lastDistance_ = undefined;\n            this.lastScaleDelta_ = 1;\n            if (!this.handlingDownUpSequence) {\n                map.getView().beginInteraction();\n            }\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    return PinchZoom;\n}(PointerInteraction));\nexport default PinchZoom;\n//# sourceMappingURL=PinchZoom.js.map","/**\n * @module ol/render/Event\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport Event from '../events/Event.js';\nvar RenderEvent = /** @class */ (function (_super) {\n    __extends(RenderEvent, _super);\n    /**\n     * @param {import(\"./EventType.js\").default} type Type.\n     * @param {import(\"../transform.js\").Transform=} opt_inversePixelTransform Transform for\n     *     CSS pixels to rendered pixels.\n     * @param {import(\"../PluggableMap.js\").FrameState=} opt_frameState Frame state.\n     * @param {?CanvasRenderingContext2D=} opt_context Context.\n     * @param {?import(\"../webgl/Helper.js\").default=} opt_glContext WebGL Context.\n     */\n    function RenderEvent(type, opt_inversePixelTransform, opt_frameState, opt_context, opt_glContext) {\n        var _this = _super.call(this, type) || this;\n        /**\n         * Transform from CSS pixels (relative to the top-left corner of the map viewport)\n         * to rendered pixels on this event's `context`.\n         * @type {import(\"../transform.js\").Transform|undefined}\n         * @api\n         */\n        _this.inversePixelTransform = opt_inversePixelTransform;\n        /**\n         * An object representing the current render frame state.\n         * @type {import(\"../PluggableMap.js\").FrameState|undefined}\n         * @api\n         */\n        _this.frameState = opt_frameState;\n        /**\n         * Canvas context. Only available when a Canvas renderer is used, null\n         * otherwise.\n         * @type {CanvasRenderingContext2D|null|undefined}\n         * @api\n         */\n        _this.context = opt_context;\n        /**\n         * WebGL context. Only available when a WebGL renderer is used, null\n         * otherwise.\n         * @type {import(\"../webgl/Helper.js\").default|null|undefined}\n         * @api\n         */\n        _this.glContext = opt_glContext;\n        return _this;\n    }\n    return RenderEvent;\n}(Event));\nexport default RenderEvent;\n//# sourceMappingURL=Event.js.map","/**\n * @module ol/color\n */\nimport { assert } from './asserts.js';\nimport { clamp } from './math.js';\n/**\n * A color represented as a short array [red, green, blue, alpha].\n * red, green, and blue should be integers in the range 0..255 inclusive.\n * alpha should be a float in the range 0..1 inclusive. If no alpha value is\n * given then `1` will be used.\n * @typedef {Array<number>} Color\n * @api\n */\n/**\n * This RegExp matches # followed by 3, 4, 6, or 8 hex digits.\n * @const\n * @type {RegExp}\n * @private\n */\nvar HEX_COLOR_RE_ = /^#([a-f0-9]{3}|[a-f0-9]{4}(?:[a-f0-9]{2}){0,2})$/i;\n/**\n * Regular expression for matching potential named color style strings.\n * @const\n * @type {RegExp}\n * @private\n */\nvar NAMED_COLOR_RE_ = /^([a-z]*)$/i;\n/**\n * Return the color as an rgba string.\n * @param {Color|string} color Color.\n * @return {string} Rgba string.\n * @api\n */\nexport function asString(color) {\n    if (typeof color === 'string') {\n        return color;\n    }\n    else {\n        return toString(color);\n    }\n}\n/**\n * Return named color as an rgba string.\n * @param {string} color Named color.\n * @return {string} Rgb string.\n */\nfunction fromNamed(color) {\n    var el = document.createElement('div');\n    el.style.color = color;\n    if (el.style.color !== '') {\n        document.body.appendChild(el);\n        var rgb = getComputedStyle(el).color;\n        document.body.removeChild(el);\n        return rgb;\n    }\n    else {\n        return '';\n    }\n}\n/**\n * @param {string} s String.\n * @return {Color} Color.\n */\nexport var fromString = (function () {\n    // We maintain a small cache of parsed strings.  To provide cheap LRU-like\n    // semantics, whenever the cache grows too large we simply delete an\n    // arbitrary 25% of the entries.\n    /**\n     * @const\n     * @type {number}\n     */\n    var MAX_CACHE_SIZE = 1024;\n    /**\n     * @type {Object<string, Color>}\n     */\n    var cache = {};\n    /**\n     * @type {number}\n     */\n    var cacheSize = 0;\n    return (\n    /**\n     * @param {string} s String.\n     * @return {Color} Color.\n     */\n    function (s) {\n        var color;\n        if (cache.hasOwnProperty(s)) {\n            color = cache[s];\n        }\n        else {\n            if (cacheSize >= MAX_CACHE_SIZE) {\n                var i = 0;\n                for (var key in cache) {\n                    if ((i++ & 3) === 0) {\n                        delete cache[key];\n                        --cacheSize;\n                    }\n                }\n            }\n            color = fromStringInternal_(s);\n            cache[s] = color;\n            ++cacheSize;\n        }\n        return color;\n    });\n})();\n/**\n * Return the color as an array. This function maintains a cache of calculated\n * arrays which means the result should not be modified.\n * @param {Color|string} color Color.\n * @return {Color} Color.\n * @api\n */\nexport function asArray(color) {\n    if (Array.isArray(color)) {\n        return color;\n    }\n    else {\n        return fromString(color);\n    }\n}\n/**\n * @param {string} s String.\n * @private\n * @return {Color} Color.\n */\nfunction fromStringInternal_(s) {\n    var r, g, b, a, color;\n    if (NAMED_COLOR_RE_.exec(s)) {\n        s = fromNamed(s);\n    }\n    if (HEX_COLOR_RE_.exec(s)) { // hex\n        var n = s.length - 1; // number of hex digits\n        var d = // number of digits per channel\n         void 0; // number of digits per channel\n        if (n <= 4) {\n            d = 1;\n        }\n        else {\n            d = 2;\n        }\n        var hasAlpha = n === 4 || n === 8;\n        r = parseInt(s.substr(1 + 0 * d, d), 16);\n        g = parseInt(s.substr(1 + 1 * d, d), 16);\n        b = parseInt(s.substr(1 + 2 * d, d), 16);\n        if (hasAlpha) {\n            a = parseInt(s.substr(1 + 3 * d, d), 16);\n        }\n        else {\n            a = 255;\n        }\n        if (d == 1) {\n            r = (r << 4) + r;\n            g = (g << 4) + g;\n            b = (b << 4) + b;\n            if (hasAlpha) {\n                a = (a << 4) + a;\n            }\n        }\n        color = [r, g, b, a / 255];\n    }\n    else if (s.indexOf('rgba(') == 0) { // rgba()\n        color = s.slice(5, -1).split(',').map(Number);\n        normalize(color);\n    }\n    else if (s.indexOf('rgb(') == 0) { // rgb()\n        color = s.slice(4, -1).split(',').map(Number);\n        color.push(1);\n        normalize(color);\n    }\n    else {\n        assert(false, 14); // Invalid color\n    }\n    return color;\n}\n/**\n * TODO this function is only used in the test, we probably shouldn't export it\n * @param {Color} color Color.\n * @return {Color} Clamped color.\n */\nexport function normalize(color) {\n    color[0] = clamp((color[0] + 0.5) | 0, 0, 255);\n    color[1] = clamp((color[1] + 0.5) | 0, 0, 255);\n    color[2] = clamp((color[2] + 0.5) | 0, 0, 255);\n    color[3] = clamp(color[3], 0, 1);\n    return color;\n}\n/**\n * @param {Color} color Color.\n * @return {string} String.\n */\nexport function toString(color) {\n    var r = color[0];\n    if (r != (r | 0)) {\n        r = (r + 0.5) | 0;\n    }\n    var g = color[1];\n    if (g != (g | 0)) {\n        g = (g + 0.5) | 0;\n    }\n    var b = color[2];\n    if (b != (b | 0)) {\n        b = (b + 0.5) | 0;\n    }\n    var a = color[3] === undefined ? 1 : color[3];\n    return 'rgba(' + r + ',' + g + ',' + b + ',' + a + ')';\n}\n//# sourceMappingURL=color.js.map","/**\n * @module ol/style/IconImageCache\n */\nimport { asString } from '../color.js';\n/**\n * @classdesc\n * Singleton class. Available through {@link module:ol/style/IconImageCache~shared}.\n */\nvar IconImageCache = /** @class */ (function () {\n    function IconImageCache() {\n        /**\n        * @type {!Object<string, import(\"./IconImage.js\").default>}\n        * @private\n        */\n        this.cache_ = {};\n        /**\n        * @type {number}\n        * @private\n        */\n        this.cacheSize_ = 0;\n        /**\n        * @type {number}\n        * @private\n        */\n        this.maxCacheSize_ = 32;\n    }\n    /**\n    * FIXME empty description for jsdoc\n    */\n    IconImageCache.prototype.clear = function () {\n        this.cache_ = {};\n        this.cacheSize_ = 0;\n    };\n    /**\n     * @return {boolean} Can expire cache.\n     */\n    IconImageCache.prototype.canExpireCache = function () {\n        return this.cacheSize_ > this.maxCacheSize_;\n    };\n    /**\n    * FIXME empty description for jsdoc\n    */\n    IconImageCache.prototype.expire = function () {\n        if (this.canExpireCache()) {\n            var i = 0;\n            for (var key in this.cache_) {\n                var iconImage = this.cache_[key];\n                if ((i++ & 3) === 0 && !iconImage.hasListener()) {\n                    delete this.cache_[key];\n                    --this.cacheSize_;\n                }\n            }\n        }\n    };\n    /**\n    * @param {string} src Src.\n    * @param {?string} crossOrigin Cross origin.\n    * @param {import(\"../color.js\").Color} color Color.\n    * @return {import(\"./IconImage.js\").default} Icon image.\n    */\n    IconImageCache.prototype.get = function (src, crossOrigin, color) {\n        var key = getKey(src, crossOrigin, color);\n        return key in this.cache_ ? this.cache_[key] : null;\n    };\n    /**\n    * @param {string} src Src.\n    * @param {?string} crossOrigin Cross origin.\n    * @param {import(\"../color.js\").Color} color Color.\n    * @param {import(\"./IconImage.js\").default} iconImage Icon image.\n    */\n    IconImageCache.prototype.set = function (src, crossOrigin, color, iconImage) {\n        var key = getKey(src, crossOrigin, color);\n        this.cache_[key] = iconImage;\n        ++this.cacheSize_;\n    };\n    /**\n    * Set the cache size of the icon cache. Default is `32`. Change this value when\n    * your map uses more than 32 different icon images and you are not caching icon\n    * styles on the application level.\n    * @param {number} maxCacheSize Cache max size.\n    * @api\n    */\n    IconImageCache.prototype.setSize = function (maxCacheSize) {\n        this.maxCacheSize_ = maxCacheSize;\n        this.expire();\n    };\n    return IconImageCache;\n}());\n/**\n * @param {string} src Src.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../color.js\").Color} color Color.\n * @return {string} Cache key.\n */\nfunction getKey(src, crossOrigin, color) {\n    var colorString = color ? asString(color) : 'null';\n    return crossOrigin + ':' + src + ':' + colorString;\n}\nexport default IconImageCache;\n/**\n * The {@link module:ol/style/IconImageCache~IconImageCache} for\n * {@link module:ol/style/Icon~Icon} images.\n * @api\n */\nexport var shared = new IconImageCache();\n//# sourceMappingURL=IconImageCache.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/renderer/Map\n */\nimport { abstract, getUid } from '../util.js';\nimport Disposable from '../Disposable.js';\nimport { listen, unlistenByKey } from '../events.js';\nimport EventType from '../events/EventType.js';\nimport { getWidth } from '../extent.js';\nimport { TRUE } from '../functions.js';\nimport { visibleAtResolution } from '../layer/Layer.js';\nimport { shared as iconImageCache } from '../style/IconImageCache.js';\nimport { compose as composeTransform, makeInverse } from '../transform.js';\n/**\n * @abstract\n */\nvar MapRenderer = /** @class */ (function (_super) {\n    __extends(MapRenderer, _super);\n    /**\n     * @param {import(\"../PluggableMap.js\").default} map Map.\n     */\n    function MapRenderer(map) {\n        var _this = _super.call(this) || this;\n        /**\n         * @private\n         * @type {import(\"../PluggableMap.js\").default}\n         */\n        _this.map_ = map;\n        /**\n         * @private\n         * @type {!Object<string, import(\"./Layer.js\").default>}\n         */\n        _this.layerRenderers_ = {};\n        /**\n         * @private\n         * @type {Object<string, import(\"../events.js\").EventsKey>}\n         */\n        _this.layerRendererListeners_ = {};\n        return _this;\n    }\n    /**\n     * @abstract\n     * @param {import(\"../render/EventType.js\").default} type Event type.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     */\n    MapRenderer.prototype.dispatchRenderEvent = function (type, frameState) {\n        abstract();\n    };\n    /**\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n     * @protected\n     */\n    MapRenderer.prototype.calculateMatrices2D = function (frameState) {\n        var viewState = frameState.viewState;\n        var coordinateToPixelTransform = frameState.coordinateToPixelTransform;\n        var pixelToCoordinateTransform = frameState.pixelToCoordinateTransform;\n        composeTransform(coordinateToPixelTransform, frameState.size[0] / 2, frameState.size[1] / 2, 1 / viewState.resolution, -1 / viewState.resolution, -viewState.rotation, -viewState.center[0], -viewState.center[1]);\n        makeInverse(pixelToCoordinateTransform, coordinateToPixelTransform);\n    };\n    /**\n     * Removes all layer renderers.\n     */\n    MapRenderer.prototype.removeLayerRenderers = function () {\n        for (var key in this.layerRenderers_) {\n            this.removeLayerRendererByKey_(key).dispose();\n        }\n    };\n    /**\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n     * @param {number} hitTolerance Hit tolerance in pixels.\n     * @param {function(this: S, import(\"../Feature.js\").FeatureLike,\n     *     import(\"../layer/Layer.js\").default): T} callback Feature callback.\n     * @param {S} thisArg Value to use as `this` when executing `callback`.\n     * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n     *     function, only layers which are visible and for which this function\n     *     returns `true` will be tested for features.  By default, all visible\n     *     layers will be tested.\n     * @param {U} thisArg2 Value to use as `this` when executing `layerFilter`.\n     * @return {T|undefined} Callback result.\n     * @template S,T,U\n     */\n    MapRenderer.prototype.forEachFeatureAtCoordinate = function (coordinate, frameState, hitTolerance, callback, thisArg, layerFilter, thisArg2) {\n        var result;\n        var viewState = frameState.viewState;\n        var viewResolution = viewState.resolution;\n        /**\n         * @param {boolean} managed Managed layer.\n         * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n         * @param {import(\"../layer/Layer.js\").default} layer Layer.\n         * @return {?} Callback result.\n         */\n        function forEachFeatureAtCoordinate(managed, feature, layer) {\n            if (!(getUid(feature) in frameState.skippedFeatureUids && !managed)) {\n                return callback.call(thisArg, feature, managed ? layer : null);\n            }\n        }\n        var projection = viewState.projection;\n        var translatedCoordinate = coordinate;\n        if (projection.canWrapX()) {\n            var projectionExtent = projection.getExtent();\n            var worldWidth = getWidth(projectionExtent);\n            var x = coordinate[0];\n            if (x < projectionExtent[0] || x > projectionExtent[2]) {\n                var worldsAway = Math.ceil((projectionExtent[0] - x) / worldWidth);\n                translatedCoordinate = [x + worldWidth * worldsAway, coordinate[1]];\n            }\n        }\n        var layerStates = frameState.layerStatesArray;\n        var numLayers = layerStates.length;\n        var i;\n        for (i = numLayers - 1; i >= 0; --i) {\n            var layerState = layerStates[i];\n            var layer = /** @type {import(\"../layer/Layer.js\").default} */ (layerState.layer);\n            if (visibleAtResolution(layerState, viewResolution) && layerFilter.call(thisArg2, layer)) {\n                var layerRenderer = this.getLayerRenderer(layer);\n                var source = layer.getSource();\n                if (layerRenderer && source) {\n                    var callback_1 = forEachFeatureAtCoordinate.bind(null, layerState.managed);\n                    result = layerRenderer.forEachFeatureAtCoordinate(source.getWrapX() ? translatedCoordinate : coordinate, frameState, hitTolerance, callback_1);\n                }\n                if (result) {\n                    return result;\n                }\n            }\n        }\n        return undefined;\n    };\n    /**\n     * @abstract\n     * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n     * @param {number} hitTolerance Hit tolerance in pixels.\n     * @param {function(this: S, import(\"../layer/Layer.js\").default, (Uint8ClampedArray|Uint8Array)): T} callback Layer\n     *     callback.\n     * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n     *     function, only layers which are visible and for which this function\n     *     returns `true` will be tested for features.  By default, all visible\n     *     layers will be tested.\n     * @return {T|undefined} Callback result.\n     * @template S,T,U\n     */\n    MapRenderer.prototype.forEachLayerAtPixel = function (pixel, frameState, hitTolerance, callback, layerFilter) {\n        return abstract();\n    };\n    /**\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n     * @param {number} hitTolerance Hit tolerance in pixels.\n     * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n     *     function, only layers which are visible and for which this function\n     *     returns `true` will be tested for features.  By default, all visible\n     *     layers will be tested.\n     * @param {U} thisArg Value to use as `this` when executing `layerFilter`.\n     * @return {boolean} Is there a feature at the given coordinate?\n     * @template U\n     */\n    MapRenderer.prototype.hasFeatureAtCoordinate = function (coordinate, frameState, hitTolerance, layerFilter, thisArg) {\n        var hasFeature = this.forEachFeatureAtCoordinate(coordinate, frameState, hitTolerance, TRUE, this, layerFilter, thisArg);\n        return hasFeature !== undefined;\n    };\n    /**\n     * @param {import(\"../layer/Layer.js\").default} layer Layer.\n     * @protected\n     * @return {import(\"./Layer.js\").default} Layer renderer. May return null.\n     */\n    MapRenderer.prototype.getLayerRenderer = function (layer) {\n        var layerKey = getUid(layer);\n        if (layerKey in this.layerRenderers_) {\n            return this.layerRenderers_[layerKey];\n        }\n        var renderer = layer.getRenderer();\n        if (!renderer) {\n            return null;\n        }\n        this.layerRenderers_[layerKey] = renderer;\n        this.layerRendererListeners_[layerKey] = listen(renderer, EventType.CHANGE, this.handleLayerRendererChange_, this);\n        return renderer;\n    };\n    /**\n     * @protected\n     * @return {Object<string, import(\"./Layer.js\").default>} Layer renderers.\n     */\n    MapRenderer.prototype.getLayerRenderers = function () {\n        return this.layerRenderers_;\n    };\n    /**\n     * @return {import(\"../PluggableMap.js\").default} Map.\n     */\n    MapRenderer.prototype.getMap = function () {\n        return this.map_;\n    };\n    /**\n     * Handle changes in a layer renderer.\n     * @private\n     */\n    MapRenderer.prototype.handleLayerRendererChange_ = function () {\n        this.map_.render();\n    };\n    /**\n     * @param {string} layerKey Layer key.\n     * @return {import(\"./Layer.js\").default} Layer renderer.\n     * @private\n     */\n    MapRenderer.prototype.removeLayerRendererByKey_ = function (layerKey) {\n        var layerRenderer = this.layerRenderers_[layerKey];\n        delete this.layerRenderers_[layerKey];\n        unlistenByKey(this.layerRendererListeners_[layerKey]);\n        delete this.layerRendererListeners_[layerKey];\n        return layerRenderer;\n    };\n    /**\n     * Render.\n     * @abstract\n     * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     */\n    MapRenderer.prototype.renderFrame = function (frameState) {\n        abstract();\n    };\n    /**\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     * @protected\n     */\n    MapRenderer.prototype.scheduleExpireIconCache = function (frameState) {\n        if (iconImageCache.canExpireCache()) {\n            frameState.postRenderFunctions.push(expireIconCache);\n        }\n    };\n    /**\n     * @param {!import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     * @protected\n     */\n    MapRenderer.prototype.scheduleRemoveUnusedLayerRenderers = function (frameState) {\n        var layerStatesMap = getLayerStatesMap(frameState.layerStatesArray);\n        var _loop_1 = function (layerKey) {\n            if (!(layerKey in layerStatesMap)) {\n                frameState.postRenderFunctions.push(function () {\n                    this.removeLayerRendererByKey_(layerKey).dispose();\n                }.bind(this_1));\n            }\n        };\n        var this_1 = this;\n        for (var layerKey in this.layerRenderers_) {\n            _loop_1(layerKey);\n        }\n    };\n    return MapRenderer;\n}(Disposable));\n/**\n * @param {import(\"../PluggableMap.js\").default} map Map.\n * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n */\nfunction expireIconCache(map, frameState) {\n    iconImageCache.expire();\n}\n/**\n * @param {Array<import(\"../layer/Layer.js\").State>} layerStatesArray Layer states array.\n * @return {Object<string, import(\"../layer/Layer.js\").State>} States mapped by layer uid.\n */\nfunction getLayerStatesMap(layerStatesArray) {\n    return layerStatesArray.reduce(function (acc, state) {\n        acc[getUid(state.layer)] = state;\n        return acc;\n    }, {});\n}\nexport default MapRenderer;\n//# sourceMappingURL=Map.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/renderer/Composite\n */\nimport { CLASS_UNSELECTABLE } from '../css.js';\nimport { visibleAtResolution } from '../layer/Layer.js';\nimport RenderEvent from '../render/Event.js';\nimport RenderEventType from '../render/EventType.js';\nimport MapRenderer from './Map.js';\nimport SourceState from '../source/State.js';\nimport { replaceChildren } from '../dom.js';\n/**\n * @classdesc\n * Canvas map renderer.\n * @api\n */\nvar CompositeMapRenderer = /** @class */ (function (_super) {\n    __extends(CompositeMapRenderer, _super);\n    /**\n     * @param {import(\"../PluggableMap.js\").default} map Map.\n     */\n    function CompositeMapRenderer(map) {\n        var _this = _super.call(this, map) || this;\n        /**\n         * @private\n         * @type {HTMLDivElement}\n         */\n        _this.element_ = document.createElement('div');\n        var style = _this.element_.style;\n        style.position = 'absolute';\n        style.width = '100%';\n        style.height = '100%';\n        style.zIndex = '0';\n        _this.element_.className = CLASS_UNSELECTABLE + ' ol-layers';\n        var container = map.getViewport();\n        container.insertBefore(_this.element_, container.firstChild || null);\n        /**\n         * @private\n         * @type {Array<HTMLElement>}\n         */\n        _this.children_ = [];\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.renderedVisible_ = true;\n        return _this;\n    }\n    /**\n     * @param {import(\"../render/EventType.js\").default} type Event type.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     */\n    CompositeMapRenderer.prototype.dispatchRenderEvent = function (type, frameState) {\n        var map = this.getMap();\n        if (map.hasListener(type)) {\n            var event_1 = new RenderEvent(type, undefined, frameState);\n            map.dispatchEvent(event_1);\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    CompositeMapRenderer.prototype.renderFrame = function (frameState) {\n        if (!frameState) {\n            if (this.renderedVisible_) {\n                this.element_.style.display = 'none';\n                this.renderedVisible_ = false;\n            }\n            return;\n        }\n        this.calculateMatrices2D(frameState);\n        this.dispatchRenderEvent(RenderEventType.PRECOMPOSE, frameState);\n        var layerStatesArray = frameState.layerStatesArray;\n        var viewResolution = frameState.viewState.resolution;\n        this.children_.length = 0;\n        for (var i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n            var layerState = layerStatesArray[i];\n            if (!visibleAtResolution(layerState, viewResolution) || layerState.sourceState != SourceState.READY) {\n                continue;\n            }\n            var layer = layerState.layer;\n            var element = layer.render(frameState);\n            if (element) {\n                var zIndex = layerState.zIndex;\n                if (zIndex !== element.style.zIndex) {\n                    element.style.zIndex = zIndex;\n                }\n                this.children_.push(element);\n            }\n        }\n        replaceChildren(this.element_, this.children_);\n        this.dispatchRenderEvent(RenderEventType.POSTCOMPOSE, frameState);\n        if (!this.renderedVisible_) {\n            this.element_.style.display = '';\n            this.renderedVisible_ = true;\n        }\n        this.scheduleRemoveUnusedLayerRenderers(frameState);\n        this.scheduleExpireIconCache(frameState);\n    };\n    /**\n     * @inheritDoc\n     */\n    CompositeMapRenderer.prototype.forEachLayerAtPixel = function (pixel, frameState, hitTolerance, callback, layerFilter) {\n        var viewState = frameState.viewState;\n        var viewResolution = viewState.resolution;\n        var layerStates = frameState.layerStatesArray;\n        var numLayers = layerStates.length;\n        for (var i = numLayers - 1; i >= 0; --i) {\n            var layerState = layerStates[i];\n            var layer = layerState.layer;\n            if (visibleAtResolution(layerState, viewResolution) && layerFilter(layer)) {\n                var layerRenderer = this.getLayerRenderer(layer);\n                if (!layerRenderer) {\n                    continue;\n                }\n                var data = layerRenderer.getDataAtPixel(pixel, frameState, hitTolerance);\n                if (data) {\n                    var result = callback(layer, data);\n                    if (result) {\n                        return result;\n                    }\n                }\n            }\n        }\n        return undefined;\n    };\n    return CompositeMapRenderer;\n}(MapRenderer));\nexport default CompositeMapRenderer;\n//# sourceMappingURL=Composite.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/Map\n */\nimport PluggableMap from './PluggableMap.js';\nimport { defaults as defaultControls } from './control/util.js';\nimport { defaults as defaultInteractions } from './interaction.js';\nimport { assign } from './obj.js';\nimport CompositeMapRenderer from './renderer/Composite.js';\n/**\n * @classdesc\n * The map is the core component of OpenLayers. For a map to render, a view,\n * one or more layers, and a target container are needed:\n *\n *     import Map from 'ol/Map';\n *     import View from 'ol/View';\n *     import TileLayer from 'ol/layer/Tile';\n *     import OSM from 'ol/source/OSM';\n *\n *     var map = new Map({\n *       view: new View({\n *         center: [0, 0],\n *         zoom: 1\n *       }),\n *       layers: [\n *         new TileLayer({\n *           source: new OSM()\n *         })\n *       ],\n *       target: 'map'\n *     });\n *\n * The above snippet creates a map using a {@link module:ol/layer/Tile} to\n * display {@link module:ol/source/OSM~OSM} OSM data and render it to a DOM\n * element with the id `map`.\n *\n * The constructor places a viewport container (with CSS class name\n * `ol-viewport`) in the target element (see `getViewport()`), and then two\n * further elements within the viewport: one with CSS class name\n * `ol-overlaycontainer-stopevent` for controls and some overlays, and one with\n * CSS class name `ol-overlaycontainer` for other overlays (see the `stopEvent`\n * option of {@link module:ol/Overlay~Overlay} for the difference). The map\n * itself is placed in a further element within the viewport.\n *\n * Layers are stored as a {@link module:ol/Collection~Collection} in\n * layerGroups. A top-level group is provided by the library. This is what is\n * accessed by `getLayerGroup` and `setLayerGroup`. Layers entered in the\n * options are added to this group, and `addLayer` and `removeLayer` change the\n * layer collection in the group. `getLayers` is a convenience function for\n * `getLayerGroup().getLayers()`. Note that {@link module:ol/layer/Group~Group}\n * is a subclass of {@link module:ol/layer/Base}, so layers entered in the\n * options or added with `addLayer` can be groups, which can contain further\n * groups, and so on.\n *\n * @api\n */\nvar Map = /** @class */ (function (_super) {\n    __extends(Map, _super);\n    /**\n     * @param {import(\"./PluggableMap.js\").MapOptions} options Map options.\n     */\n    function Map(options) {\n        var _this = this;\n        options = assign({}, options);\n        if (!options.controls) {\n            options.controls = defaultControls();\n        }\n        if (!options.interactions) {\n            options.interactions = defaultInteractions();\n        }\n        _this = _super.call(this, options) || this;\n        return _this;\n    }\n    Map.prototype.createRenderer = function () {\n        return new CompositeMapRenderer(this);\n    };\n    return Map;\n}(PluggableMap));\nexport default Map;\n//# sourceMappingURL=Map.js.map","/**\n * @module ol/control/util\n */\nimport Collection from '../Collection.js';\nimport Attribution from './Attribution.js';\nimport Rotate from './Rotate.js';\nimport Zoom from './Zoom.js';\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [attribution=true] Include\n * {@link module:ol/control/Attribution~Attribution}.\n * @property {import(\"./Attribution.js\").Options} [attributionOptions]\n * Options for {@link module:ol/control/Attribution~Attribution}.\n * @property {boolean} [rotate=true] Include\n * {@link module:ol/control/Rotate~Rotate}.\n * @property {import(\"./Rotate.js\").Options} [rotateOptions] Options\n * for {@link module:ol/control/Rotate~Rotate}.\n * @property {boolean} [zoom] Include {@link module:ol/control/Zoom~Zoom}.\n * @property {import(\"./Zoom.js\").Options} [zoomOptions] Options for\n * {@link module:ol/control/Zoom~Zoom}.\n * @api\n */\n/**\n * Set of controls included in maps by default. Unless configured otherwise,\n * this returns a collection containing an instance of each of the following\n * controls:\n * * {@link module:ol/control/Zoom~Zoom}\n * * {@link module:ol/control/Rotate~Rotate}\n * * {@link module:ol/control/Attribution~Attribution}\n *\n * @param {DefaultsOptions=} opt_options\n * Defaults options.\n * @return {Collection<import(\"./Control.js\").default>}\n * Controls.\n * @function module:ol/control.defaults\n * @api\n */\nexport function defaults(opt_options) {\n    var options = opt_options ? opt_options : {};\n    var controls = new Collection();\n    var zoomControl = options.zoom !== undefined ? options.zoom : true;\n    if (zoomControl) {\n        controls.push(new Zoom(options.zoomOptions));\n    }\n    var rotateControl = options.rotate !== undefined ? options.rotate : true;\n    if (rotateControl) {\n        controls.push(new Rotate(options.rotateOptions));\n    }\n    var attributionControl = options.attribution !== undefined ?\n        options.attribution : true;\n    if (attributionControl) {\n        controls.push(new Attribution(options.attributionOptions));\n    }\n    return controls;\n}\n//# sourceMappingURL=util.js.map","/**\n * @module ol/interaction\n */\nimport Collection from './Collection.js';\nimport Kinetic from './Kinetic.js';\nimport DoubleClickZoom from './interaction/DoubleClickZoom.js';\nimport DragPan from './interaction/DragPan.js';\nimport DragRotate from './interaction/DragRotate.js';\nimport DragZoom from './interaction/DragZoom.js';\nimport KeyboardPan from './interaction/KeyboardPan.js';\nimport KeyboardZoom from './interaction/KeyboardZoom.js';\nimport MouseWheelZoom from './interaction/MouseWheelZoom.js';\nimport PinchRotate from './interaction/PinchRotate.js';\nimport PinchZoom from './interaction/PinchZoom.js';\nimport { focus } from './events/condition.js';\nexport { default as DoubleClickZoom } from './interaction/DoubleClickZoom.js';\nexport { default as DragAndDrop } from './interaction/DragAndDrop.js';\nexport { default as DragBox } from './interaction/DragBox.js';\nexport { default as DragPan } from './interaction/DragPan.js';\nexport { default as DragRotate } from './interaction/DragRotate.js';\nexport { default as DragRotateAndZoom } from './interaction/DragRotateAndZoom.js';\nexport { default as DragZoom } from './interaction/DragZoom.js';\nexport { default as Draw } from './interaction/Draw.js';\nexport { default as Extent } from './interaction/Extent.js';\nexport { default as Interaction } from './interaction/Interaction.js';\nexport { default as KeyboardPan } from './interaction/KeyboardPan.js';\nexport { default as KeyboardZoom } from './interaction/KeyboardZoom.js';\nexport { default as Modify } from './interaction/Modify.js';\nexport { default as MouseWheelZoom } from './interaction/MouseWheelZoom.js';\nexport { default as PinchRotate } from './interaction/PinchRotate.js';\nexport { default as PinchZoom } from './interaction/PinchZoom.js';\nexport { default as Pointer } from './interaction/Pointer.js';\nexport { default as Select } from './interaction/Select.js';\nexport { default as Snap } from './interaction/Snap.js';\nexport { default as Translate } from './interaction/Translate.js';\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [altShiftDragRotate=true] Whether Alt-Shift-drag rotate is\n * desired.\n * @property {boolean} [onFocusOnly=false] Interact only when the map has the\n * focus. This affects the `MouseWheelZoom` and `DragPan` interactions and is\n * useful when page scroll is desired for maps that do not have the browser's\n * focus.\n * @property {boolean} [doubleClickZoom=true] Whether double click zoom is\n * desired.\n * @property {boolean} [keyboard=true] Whether keyboard interaction is desired.\n * @property {boolean} [mouseWheelZoom=true] Whether mousewheel zoom is desired.\n * @property {boolean} [shiftDragZoom=true] Whether Shift-drag zoom is desired.\n * @property {boolean} [dragPan=true] Whether drag pan is desired.\n * @property {boolean} [pinchRotate=true] Whether pinch rotate is desired.\n * @property {boolean} [pinchZoom=true] Whether pinch zoom is desired.\n * @property {number} [zoomDelta] Zoom level delta when using keyboard or double click zoom.\n * @property {number} [zoomDuration] Duration of the zoom animation in\n * milliseconds.\n */\n/**\n * Set of interactions included in maps by default. Specific interactions can be\n * excluded by setting the appropriate option to false in the constructor\n * options, but the order of the interactions is fixed.  If you want to specify\n * a different order for interactions, you will need to create your own\n * {@link module:ol/interaction/Interaction} instances and insert\n * them into a {@link module:ol/Collection} in the order you want\n * before creating your {@link module:ol/Map~Map} instance. Changing the order can\n * be of interest if the event propagation needs to be stopped at a point.\n * The default set of interactions, in sequence, is:\n * * {@link module:ol/interaction/DragRotate~DragRotate}\n * * {@link module:ol/interaction/DoubleClickZoom~DoubleClickZoom}\n * * {@link module:ol/interaction/DragPan~DragPan}\n * * {@link module:ol/interaction/PinchRotate~PinchRotate}\n * * {@link module:ol/interaction/PinchZoom~PinchZoom}\n * * {@link module:ol/interaction/KeyboardPan~KeyboardPan}\n * * {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}\n * * {@link module:ol/interaction/MouseWheelZoom~MouseWheelZoom}\n * * {@link module:ol/interaction/DragZoom~DragZoom}\n *\n * @param {DefaultsOptions=} opt_options Defaults options.\n * @return {import(\"./Collection.js\").default<import(\"./interaction/Interaction.js\").default>}\n * A collection of interactions to be used with the {@link module:ol/Map~Map}\n * constructor's `interactions` option.\n * @api\n */\nexport function defaults(opt_options) {\n    var options = opt_options ? opt_options : {};\n    var interactions = new Collection();\n    var kinetic = new Kinetic(-0.005, 0.05, 100);\n    var altShiftDragRotate = options.altShiftDragRotate !== undefined ?\n        options.altShiftDragRotate : true;\n    if (altShiftDragRotate) {\n        interactions.push(new DragRotate());\n    }\n    var doubleClickZoom = options.doubleClickZoom !== undefined ?\n        options.doubleClickZoom : true;\n    if (doubleClickZoom) {\n        interactions.push(new DoubleClickZoom({\n            delta: options.zoomDelta,\n            duration: options.zoomDuration\n        }));\n    }\n    var dragPan = options.dragPan !== undefined ? options.dragPan : true;\n    if (dragPan) {\n        interactions.push(new DragPan({\n            condition: options.onFocusOnly ? focus : undefined,\n            kinetic: kinetic\n        }));\n    }\n    var pinchRotate = options.pinchRotate !== undefined ? options.pinchRotate :\n        true;\n    if (pinchRotate) {\n        interactions.push(new PinchRotate());\n    }\n    var pinchZoom = options.pinchZoom !== undefined ? options.pinchZoom : true;\n    if (pinchZoom) {\n        interactions.push(new PinchZoom({\n            duration: options.zoomDuration\n        }));\n    }\n    var keyboard = options.keyboard !== undefined ? options.keyboard : true;\n    if (keyboard) {\n        interactions.push(new KeyboardPan());\n        interactions.push(new KeyboardZoom({\n            delta: options.zoomDelta,\n            duration: options.zoomDuration\n        }));\n    }\n    var mouseWheelZoom = options.mouseWheelZoom !== undefined ?\n        options.mouseWheelZoom : true;\n    if (mouseWheelZoom) {\n        interactions.push(new MouseWheelZoom({\n            condition: options.onFocusOnly ? focus : undefined,\n            duration: options.zoomDuration\n        }));\n    }\n    var shiftDragZoom = options.shiftDragZoom !== undefined ?\n        options.shiftDragZoom : true;\n    if (shiftDragZoom) {\n        interactions.push(new DragZoom({\n            duration: options.zoomDuration\n        }));\n    }\n    return interactions;\n}\n//# sourceMappingURL=interaction.js.map","/**\n * @module ol/layer/TileProperty\n */\n/**\n * @enum {string}\n */\nexport default {\n    PRELOAD: 'preload',\n    USE_INTERIM_TILES_ON_ERROR: 'useInterimTilesOnError'\n};\n//# sourceMappingURL=TileProperty.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/layer/BaseTile\n */\nimport Layer from './Layer.js';\nimport TileProperty from './TileProperty.js';\nimport { assign } from '../obj.js';\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [preload=0] Preload. Load low-resolution tiles up to `preload` levels. `0`\n * means no preloading.\n * @property {import(\"../source/Tile.js\").default} [source] Source for this layer.\n * @property {import(\"../PluggableMap.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link module:ol/Map#addLayer}.\n * @property {boolean} [useInterimTilesOnError=true] Use interim tiles on error.\n */\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @extends {Layer<import(\"../source/Tile.js\").default>}\n * @api\n */\nvar BaseTileLayer = /** @class */ (function (_super) {\n    __extends(BaseTileLayer, _super);\n    /**\n     * @param {Options=} opt_options Tile layer options.\n     */\n    function BaseTileLayer(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        var baseOptions = assign({}, options);\n        delete baseOptions.preload;\n        delete baseOptions.useInterimTilesOnError;\n        _this = _super.call(this, baseOptions) || this;\n        _this.setPreload(options.preload !== undefined ? options.preload : 0);\n        _this.setUseInterimTilesOnError(options.useInterimTilesOnError !== undefined ?\n            options.useInterimTilesOnError : true);\n        return _this;\n    }\n    /**\n    * Return the level as number to which we will preload tiles up to.\n    * @return {number} The level to preload tiles up to.\n    * @observable\n    * @api\n    */\n    BaseTileLayer.prototype.getPreload = function () {\n        return /** @type {number} */ (this.get(TileProperty.PRELOAD));\n    };\n    /**\n    * Set the level as number to which we will preload tiles up to.\n    * @param {number} preload The level to preload tiles up to.\n    * @observable\n    * @api\n    */\n    BaseTileLayer.prototype.setPreload = function (preload) {\n        this.set(TileProperty.PRELOAD, preload);\n    };\n    /**\n    * Whether we use interim tiles on error.\n    * @return {boolean} Use interim tiles on error.\n    * @observable\n    * @api\n    */\n    BaseTileLayer.prototype.getUseInterimTilesOnError = function () {\n        return /** @type {boolean} */ (this.get(TileProperty.USE_INTERIM_TILES_ON_ERROR));\n    };\n    /**\n    * Set whether we use interim tiles on error.\n    * @param {boolean} useInterimTilesOnError Use interim tiles on error.\n    * @observable\n    * @api\n    */\n    BaseTileLayer.prototype.setUseInterimTilesOnError = function (useInterimTilesOnError) {\n        this.set(TileProperty.USE_INTERIM_TILES_ON_ERROR, useInterimTilesOnError);\n    };\n    return BaseTileLayer;\n}(Layer));\nexport default BaseTileLayer;\n//# sourceMappingURL=BaseTile.js.map","/**\n * @module ol/TileRange\n */\n/**\n * A representation of a contiguous block of tiles.  A tile range is specified\n * by its min/max tile coordinates and is inclusive of coordinates.\n */\nvar TileRange = /** @class */ (function () {\n    /**\n     * @param {number} minX Minimum X.\n     * @param {number} maxX Maximum X.\n     * @param {number} minY Minimum Y.\n     * @param {number} maxY Maximum Y.\n     */\n    function TileRange(minX, maxX, minY, maxY) {\n        /**\n         * @type {number}\n         */\n        this.minX = minX;\n        /**\n         * @type {number}\n         */\n        this.maxX = maxX;\n        /**\n         * @type {number}\n         */\n        this.minY = minY;\n        /**\n         * @type {number}\n         */\n        this.maxY = maxY;\n    }\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @return {boolean} Contains tile coordinate.\n     */\n    TileRange.prototype.contains = function (tileCoord) {\n        return this.containsXY(tileCoord[1], tileCoord[2]);\n    };\n    /**\n     * @param {TileRange} tileRange Tile range.\n     * @return {boolean} Contains.\n     */\n    TileRange.prototype.containsTileRange = function (tileRange) {\n        return this.minX <= tileRange.minX && tileRange.maxX <= this.maxX &&\n            this.minY <= tileRange.minY && tileRange.maxY <= this.maxY;\n    };\n    /**\n     * @param {number} x Tile coordinate x.\n     * @param {number} y Tile coordinate y.\n     * @return {boolean} Contains coordinate.\n     */\n    TileRange.prototype.containsXY = function (x, y) {\n        return this.minX <= x && x <= this.maxX && this.minY <= y && y <= this.maxY;\n    };\n    /**\n     * @param {TileRange} tileRange Tile range.\n     * @return {boolean} Equals.\n     */\n    TileRange.prototype.equals = function (tileRange) {\n        return this.minX == tileRange.minX && this.minY == tileRange.minY &&\n            this.maxX == tileRange.maxX && this.maxY == tileRange.maxY;\n    };\n    /**\n     * @param {TileRange} tileRange Tile range.\n     */\n    TileRange.prototype.extend = function (tileRange) {\n        if (tileRange.minX < this.minX) {\n            this.minX = tileRange.minX;\n        }\n        if (tileRange.maxX > this.maxX) {\n            this.maxX = tileRange.maxX;\n        }\n        if (tileRange.minY < this.minY) {\n            this.minY = tileRange.minY;\n        }\n        if (tileRange.maxY > this.maxY) {\n            this.maxY = tileRange.maxY;\n        }\n    };\n    /**\n     * @return {number} Height.\n     */\n    TileRange.prototype.getHeight = function () {\n        return this.maxY - this.minY + 1;\n    };\n    /**\n     * @return {import(\"./size.js\").Size} Size.\n     */\n    TileRange.prototype.getSize = function () {\n        return [this.getWidth(), this.getHeight()];\n    };\n    /**\n     * @return {number} Width.\n     */\n    TileRange.prototype.getWidth = function () {\n        return this.maxX - this.minX + 1;\n    };\n    /**\n     * @param {TileRange} tileRange Tile range.\n     * @return {boolean} Intersects.\n     */\n    TileRange.prototype.intersects = function (tileRange) {\n        return this.minX <= tileRange.maxX &&\n            this.maxX >= tileRange.minX &&\n            this.minY <= tileRange.maxY &&\n            this.maxY >= tileRange.minY;\n    };\n    return TileRange;\n}());\n/**\n * @param {number} minX Minimum X.\n * @param {number} maxX Maximum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxY Maximum Y.\n * @param {TileRange=} tileRange TileRange.\n * @return {TileRange} Tile range.\n */\nexport function createOrUpdate(minX, maxX, minY, maxY, tileRange) {\n    if (tileRange !== undefined) {\n        tileRange.minX = minX;\n        tileRange.maxX = maxX;\n        tileRange.minY = minY;\n        tileRange.maxY = maxY;\n        return tileRange;\n    }\n    else {\n        return new TileRange(minX, maxX, minY, maxY);\n    }\n}\nexport default TileRange;\n//# sourceMappingURL=TileRange.js.map","/**\n * @module ol/structs/LRUCache\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { assert } from '../asserts.js';\nimport EventTarget from '../events/Target.js';\nimport EventType from '../events/EventType.js';\n/**\n * @typedef {Object} Entry\n * @property {string} key_\n * @property {Object} newer\n * @property {Object} older\n * @property {*} value_\n */\n/**\n * @classdesc\n * Implements a Least-Recently-Used cache where the keys do not conflict with\n * Object's properties (e.g. 'hasOwnProperty' is not allowed as a key). Expiring\n * items from the cache is the responsibility of the user.\n *\n * @fires import(\"../events/Event.js\").Event\n * @template T\n */\nvar LRUCache = /** @class */ (function (_super) {\n    __extends(LRUCache, _super);\n    /**\n     * @param {number=} opt_highWaterMark High water mark.\n     */\n    function LRUCache(opt_highWaterMark) {\n        var _this = _super.call(this) || this;\n        /**\n         * @type {number}\n         */\n        _this.highWaterMark = opt_highWaterMark !== undefined ? opt_highWaterMark : 2048;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.count_ = 0;\n        /**\n         * @private\n         * @type {!Object<string, Entry>}\n         */\n        _this.entries_ = {};\n        /**\n         * @private\n         * @type {?Entry}\n         */\n        _this.oldest_ = null;\n        /**\n         * @private\n         * @type {?Entry}\n         */\n        _this.newest_ = null;\n        return _this;\n    }\n    /**\n     * @return {boolean} Can expire cache.\n     */\n    LRUCache.prototype.canExpireCache = function () {\n        return this.getCount() > this.highWaterMark;\n    };\n    /**\n     * FIXME empty description for jsdoc\n     */\n    LRUCache.prototype.clear = function () {\n        this.count_ = 0;\n        this.entries_ = {};\n        this.oldest_ = null;\n        this.newest_ = null;\n        this.dispatchEvent(EventType.CLEAR);\n    };\n    /**\n     * @param {string} key Key.\n     * @return {boolean} Contains key.\n     */\n    LRUCache.prototype.containsKey = function (key) {\n        return this.entries_.hasOwnProperty(key);\n    };\n    /**\n     * @param {function(T, string, LRUCache): ?} f The function\n     *     to call for every entry from the oldest to the newer. This function takes\n     *     3 arguments (the entry value, the entry key and the LRUCache object).\n     *     The return value is ignored.\n     */\n    LRUCache.prototype.forEach = function (f) {\n        var entry = this.oldest_;\n        while (entry) {\n            f(entry.value_, entry.key_, this);\n            entry = entry.newer;\n        }\n    };\n    /**\n     * @param {string} key Key.\n     * @param {*=} opt_options Options (reserverd for subclasses).\n     * @return {T} Value.\n     */\n    LRUCache.prototype.get = function (key, opt_options) {\n        var entry = this.entries_[key];\n        assert(entry !== undefined, 15); // Tried to get a value for a key that does not exist in the cache\n        if (entry === this.newest_) {\n            return entry.value_;\n        }\n        else if (entry === this.oldest_) {\n            this.oldest_ = /** @type {Entry} */ (this.oldest_.newer);\n            this.oldest_.older = null;\n        }\n        else {\n            entry.newer.older = entry.older;\n            entry.older.newer = entry.newer;\n        }\n        entry.newer = null;\n        entry.older = this.newest_;\n        this.newest_.newer = entry;\n        this.newest_ = entry;\n        return entry.value_;\n    };\n    /**\n     * Remove an entry from the cache.\n     * @param {string} key The entry key.\n     * @return {T} The removed entry.\n     */\n    LRUCache.prototype.remove = function (key) {\n        var entry = this.entries_[key];\n        assert(entry !== undefined, 15); // Tried to get a value for a key that does not exist in the cache\n        if (entry === this.newest_) {\n            this.newest_ = /** @type {Entry} */ (entry.older);\n            if (this.newest_) {\n                this.newest_.newer = null;\n            }\n        }\n        else if (entry === this.oldest_) {\n            this.oldest_ = /** @type {Entry} */ (entry.newer);\n            if (this.oldest_) {\n                this.oldest_.older = null;\n            }\n        }\n        else {\n            entry.newer.older = entry.older;\n            entry.older.newer = entry.newer;\n        }\n        delete this.entries_[key];\n        --this.count_;\n        return entry.value_;\n    };\n    /**\n     * @return {number} Count.\n     */\n    LRUCache.prototype.getCount = function () {\n        return this.count_;\n    };\n    /**\n     * @return {Array<string>} Keys.\n     */\n    LRUCache.prototype.getKeys = function () {\n        var keys = new Array(this.count_);\n        var i = 0;\n        var entry;\n        for (entry = this.newest_; entry; entry = entry.older) {\n            keys[i++] = entry.key_;\n        }\n        return keys;\n    };\n    /**\n     * @return {Array<T>} Values.\n     */\n    LRUCache.prototype.getValues = function () {\n        var values = new Array(this.count_);\n        var i = 0;\n        var entry;\n        for (entry = this.newest_; entry; entry = entry.older) {\n            values[i++] = entry.value_;\n        }\n        return values;\n    };\n    /**\n     * @return {T} Last value.\n     */\n    LRUCache.prototype.peekLast = function () {\n        return this.oldest_.value_;\n    };\n    /**\n     * @return {string} Last key.\n     */\n    LRUCache.prototype.peekLastKey = function () {\n        return this.oldest_.key_;\n    };\n    /**\n     * Get the key of the newest item in the cache.  Throws if the cache is empty.\n     * @return {string} The newest key.\n     */\n    LRUCache.prototype.peekFirstKey = function () {\n        return this.newest_.key_;\n    };\n    /**\n     * @return {T} value Value.\n     */\n    LRUCache.prototype.pop = function () {\n        var entry = this.oldest_;\n        delete this.entries_[entry.key_];\n        if (entry.newer) {\n            entry.newer.older = null;\n        }\n        this.oldest_ = /** @type {Entry} */ (entry.newer);\n        if (!this.oldest_) {\n            this.newest_ = null;\n        }\n        --this.count_;\n        return entry.value_;\n    };\n    /**\n     * @param {string} key Key.\n     * @param {T} value Value.\n     */\n    LRUCache.prototype.replace = function (key, value) {\n        this.get(key); // update `newest_`\n        this.entries_[key].value_ = value;\n    };\n    /**\n     * @param {string} key Key.\n     * @param {T} value Value.\n     */\n    LRUCache.prototype.set = function (key, value) {\n        assert(!(key in this.entries_), 16); // Tried to set a value for a key that is used already\n        var entry = {\n            key_: key,\n            newer: null,\n            older: this.newest_,\n            value_: value\n        };\n        if (!this.newest_) {\n            this.oldest_ = entry;\n        }\n        else {\n            this.newest_.newer = entry;\n        }\n        this.newest_ = entry;\n        this.entries_[key] = entry;\n        ++this.count_;\n    };\n    /**\n     * Set a maximum number of entries for the cache.\n     * @param {number} size Cache size.\n     * @api\n     */\n    LRUCache.prototype.setSize = function (size) {\n        this.highWaterMark = size;\n    };\n    return LRUCache;\n}(EventTarget));\nexport default LRUCache;\n//# sourceMappingURL=LRUCache.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { getUid } from '../../util.js';\nimport LRUCache from '../../structs/LRUCache.js';\n/**\n * @module ol/render/canvas/LabelCache\n */\n/**\n * @classdesc\n * Cache of pre-rendered labels.\n * @fires import(\"../events/Event.js\").Event\n */\nvar LabelCache = /** @class */ (function (_super) {\n    __extends(LabelCache, _super);\n    /**\n     * @inheritDoc\n     */\n    function LabelCache(opt_highWaterMark) {\n        var _this = _super.call(this, opt_highWaterMark) || this;\n        _this.consumers = {};\n        return _this;\n    }\n    LabelCache.prototype.clear = function () {\n        _super.prototype.clear.call(this);\n        this.consumers = {};\n    };\n    /**\n     * @override\n     * @param {string} key Label key.\n     * @param {import(\"./Executor.js\").default} consumer Label consumer.\n     * @return {HTMLCanvasElement} Label.\n     */\n    LabelCache.prototype.get = function (key, consumer) {\n        var canvas = _super.prototype.get.call(this, key);\n        var consumerId = getUid(consumer);\n        if (!(consumerId in this.consumers)) {\n            this.consumers[consumerId] = {};\n        }\n        this.consumers[consumerId][key] = true;\n        return canvas;\n    };\n    LabelCache.prototype.prune = function () {\n        outer: while (this.canExpireCache()) {\n            var key = this.peekLastKey();\n            for (var consumerId in this.consumers) {\n                if (key in this.consumers[consumerId]) {\n                    break outer;\n                }\n            }\n            var canvas = this.pop();\n            canvas.width = canvas.height = 0;\n            for (var consumerId in this.consumers) {\n                delete this.consumers[consumerId][key];\n            }\n        }\n    };\n    /**\n     * @param {import(\"./Executor.js\").default} consumer Label consumer.\n     */\n    LabelCache.prototype.release = function (consumer) {\n        delete this.consumers[getUid(consumer)];\n    };\n    return LabelCache;\n}(LRUCache));\nexport default LabelCache;\n//# sourceMappingURL=LabelCache.js.map","/**\n * @module ol/render/canvas\n */\nimport { getFontFamilies } from '../css.js';\nimport { createCanvasContext2D } from '../dom.js';\nimport { clear } from '../obj.js';\nimport { create as createTransform } from '../transform.js';\nimport LabelCache from './canvas/LabelCache.js';\n/**\n * @typedef {Object} FillState\n * @property {import(\"../colorlike.js\").ColorLike} fillStyle\n */\n/**\n * @typedef {Object} FillStrokeState\n * @property {import(\"../colorlike.js\").ColorLike} [currentFillStyle]\n * @property {import(\"../colorlike.js\").ColorLike} [currentStrokeStyle]\n * @property {string} [currentLineCap]\n * @property {Array<number>} currentLineDash\n * @property {number} [currentLineDashOffset]\n * @property {string} [currentLineJoin]\n * @property {number} [currentLineWidth]\n * @property {number} [currentMiterLimit]\n * @property {number} [lastStroke]\n * @property {import(\"../colorlike.js\").ColorLike} [fillStyle]\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle]\n * @property {string} [lineCap]\n * @property {Array<number>} lineDash\n * @property {number} [lineDashOffset]\n * @property {string} [lineJoin]\n * @property {number} [lineWidth]\n * @property {number} [miterLimit]\n */\n/**\n * @typedef {Object} StrokeState\n * @property {string} lineCap\n * @property {Array<number>} lineDash\n * @property {number} lineDashOffset\n * @property {string} lineJoin\n * @property {number} lineWidth\n * @property {number} miterLimit\n * @property {import(\"../colorlike.js\").ColorLike} strokeStyle\n */\n/**\n * @typedef {Object} TextState\n * @property {string} font\n * @property {string} [textAlign]\n * @property {string} textBaseline\n * @property {string} [placement]\n * @property {number} [maxAngle]\n * @property {boolean} [overflow]\n * @property {import(\"../style/Fill.js\").default} [backgroundFill]\n * @property {import(\"../style/Stroke.js\").default} [backgroundStroke]\n * @property {number} [scale]\n * @property {Array<number>} [padding]\n */\n/**\n * Container for decluttered replay instructions that need to be rendered or\n * omitted together, i.e. when styles render both an image and text, or for the\n * characters that form text along lines. The basic elements of this array are\n * `[minX, minY, maxX, maxY, count]`, where the first four entries are the\n * rendered extent of the group in pixel space. `count` is the number of styles\n * in the group, i.e. 2 when an image and a text are grouped, or 1 otherwise.\n * In addition to these four elements, declutter instruction arrays (i.e. the\n * arguments to {@link module:ol/render/canvas~drawImage} are appended to the array.\n * @typedef {Array<*>} DeclutterGroup\n */\n/**\n * @const\n * @type {string}\n */\nexport var defaultFont = '10px sans-serif';\n/**\n * @const\n * @type {import(\"../colorlike.js\").ColorLike}\n */\nexport var defaultFillStyle = '#000';\n/**\n * @const\n * @type {string}\n */\nexport var defaultLineCap = 'round';\n/**\n * @const\n * @type {Array<number>}\n */\nexport var defaultLineDash = [];\n/**\n * @const\n * @type {number}\n */\nexport var defaultLineDashOffset = 0;\n/**\n * @const\n * @type {string}\n */\nexport var defaultLineJoin = 'round';\n/**\n * @const\n * @type {number}\n */\nexport var defaultMiterLimit = 10;\n/**\n * @const\n * @type {import(\"../colorlike.js\").ColorLike}\n */\nexport var defaultStrokeStyle = '#000';\n/**\n * @const\n * @type {string}\n */\nexport var defaultTextAlign = 'center';\n/**\n * @const\n * @type {string}\n */\nexport var defaultTextBaseline = 'middle';\n/**\n * @const\n * @type {Array<number>}\n */\nexport var defaultPadding = [0, 0, 0, 0];\n/**\n * @const\n * @type {number}\n */\nexport var defaultLineWidth = 1;\n/**\n * The label cache for text rendering. To change the default cache size of 2048\n * entries, use {@link module:ol/structs/LRUCache#setSize}.\n * @type {LabelCache}\n * @api\n */\nexport var labelCache = new LabelCache();\n/**\n * @type {!Object<string, number>}\n */\nexport var checkedFonts = {};\n/**\n * @type {CanvasRenderingContext2D}\n */\nvar measureContext = null;\n/**\n * @type {!Object<string, number>}\n */\nexport var textHeights = {};\n/**\n * Clears the label cache when a font becomes available.\n * @param {string} fontSpec CSS font spec.\n */\nexport var checkFont = (function () {\n    var retries = 60;\n    var checked = checkedFonts;\n    var size = '32px ';\n    var referenceFonts = ['monospace', 'serif'];\n    var len = referenceFonts.length;\n    var text = 'wmytzilWMYTZIL@#/&?$%10\\uF013';\n    var interval, referenceWidth;\n    function isAvailable(font) {\n        var context = getMeasureContext();\n        // Check weight ranges according to\n        // https://developer.mozilla.org/en-US/docs/Web/CSS/font-weight#Fallback_weights\n        for (var weight = 100; weight <= 700; weight += 300) {\n            var fontWeight = weight + ' ';\n            var available = true;\n            for (var i = 0; i < len; ++i) {\n                var referenceFont = referenceFonts[i];\n                context.font = fontWeight + size + referenceFont;\n                referenceWidth = context.measureText(text).width;\n                if (font != referenceFont) {\n                    context.font = fontWeight + size + font + ',' + referenceFont;\n                    var width = context.measureText(text).width;\n                    // If width and referenceWidth are the same, then the fallback was used\n                    // instead of the font we wanted, so the font is not available.\n                    available = available && width != referenceWidth;\n                }\n            }\n            if (available) {\n                // Consider font available when it is available in one weight range.\n                //FIXME With this we miss rare corner cases, so we should consider\n                //FIXME checking availability for each requested weight range.\n                return true;\n            }\n        }\n        return false;\n    }\n    function check() {\n        var done = true;\n        for (var font in checked) {\n            if (checked[font] < retries) {\n                if (isAvailable(font)) {\n                    checked[font] = retries;\n                    clear(textHeights);\n                    // Make sure that loaded fonts are picked up by Safari\n                    measureContext = null;\n                    labelCache.clear();\n                }\n                else {\n                    ++checked[font];\n                    done = false;\n                }\n            }\n        }\n        if (done) {\n            clearInterval(interval);\n            interval = undefined;\n        }\n    }\n    return function (fontSpec) {\n        var fontFamilies = getFontFamilies(fontSpec);\n        if (!fontFamilies) {\n            return;\n        }\n        for (var i = 0, ii = fontFamilies.length; i < ii; ++i) {\n            var fontFamily = fontFamilies[i];\n            if (!(fontFamily in checked)) {\n                checked[fontFamily] = retries;\n                if (!isAvailable(fontFamily)) {\n                    checked[fontFamily] = 0;\n                    if (interval === undefined) {\n                        interval = setInterval(check, 32);\n                    }\n                }\n            }\n        }\n    };\n})();\n/**\n * @return {CanvasRenderingContext2D} Measure context.\n */\nfunction getMeasureContext() {\n    if (!measureContext) {\n        measureContext = createCanvasContext2D(1, 1);\n    }\n    return measureContext;\n}\n/**\n * @param {string} font Font to use for measuring.\n * @return {import(\"../size.js\").Size} Measurement.\n */\nexport var measureTextHeight = (function () {\n    var div;\n    var heights = textHeights;\n    return function (font) {\n        var height = heights[font];\n        if (height == undefined) {\n            if (!div) {\n                div = document.createElement('div');\n                div.innerHTML = 'M';\n                div.style.margin = div.style.padding = '0 !important';\n                div.style.position = 'absolute !important';\n                div.style.left = '-99999px !important';\n            }\n            div.style.font = font;\n            document.body.appendChild(div);\n            height = heights[font] = div.offsetHeight;\n            document.body.removeChild(div);\n        }\n        return height;\n    };\n})();\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {number} Width.\n */\nexport function measureTextWidth(font, text) {\n    var measureContext = getMeasureContext();\n    if (font != measureContext.font) {\n        measureContext.font = font;\n    }\n    return measureContext.measureText(text).width;\n}\n/**\n * Measure text width using a cache.\n * @param {string} font The font.\n * @param {string} text The text to measure.\n * @param {Object<string, number>} cache A lookup of cached widths by text.\n * @returns {number} The text width.\n */\nexport function measureAndCacheTextWidth(font, text, cache) {\n    if (text in cache) {\n        return cache[text];\n    }\n    var width = cache[text] = measureTextWidth(font, text);\n    return width;\n}\n/**\n * @param {string} font Font to use for measuring.\n * @param {Array<string>} lines Lines to measure.\n * @param {Array<number>} widths Array will be populated with the widths of\n * each line.\n * @return {number} Width of the whole text.\n */\nexport function measureTextWidths(font, lines, widths) {\n    var numLines = lines.length;\n    var width = 0;\n    for (var i = 0; i < numLines; ++i) {\n        var currentWidth = measureTextWidth(font, lines[i]);\n        width = Math.max(width, currentWidth);\n        widths.push(currentWidth);\n    }\n    return width;\n}\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {number} rotation Rotation.\n * @param {number} offsetX X offset.\n * @param {number} offsetY Y offset.\n */\nexport function rotateAtOffset(context, rotation, offsetX, offsetY) {\n    if (rotation !== 0) {\n        context.translate(offsetX, offsetY);\n        context.rotate(rotation);\n        context.translate(-offsetX, -offsetY);\n    }\n}\nexport var resetTransform = createTransform();\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {import(\"../transform.js\").Transform|null} transform Transform.\n * @param {number} opacity Opacity.\n * @param {HTMLImageElement|HTMLCanvasElement|HTMLVideoElement} image Image.\n * @param {number} originX Origin X.\n * @param {number} originY Origin Y.\n * @param {number} w Width.\n * @param {number} h Height.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {number} scale Scale.\n */\nexport function drawImage(context, transform, opacity, image, originX, originY, w, h, x, y, scale) {\n    var alpha;\n    if (opacity != 1) {\n        alpha = context.globalAlpha;\n        context.globalAlpha = alpha * opacity;\n    }\n    if (transform) {\n        context.setTransform.apply(context, transform);\n    }\n    context.drawImage(image, originX, originY, w, h, x, y, w * scale, h * scale);\n    if (alpha) {\n        context.globalAlpha = alpha;\n    }\n    if (transform) {\n        context.setTransform.apply(context, resetTransform);\n    }\n}\n//# sourceMappingURL=canvas.js.map","/**\n * @module ol/ImageState\n */\n/**\n * @enum {number}\n */\nexport default {\n    IDLE: 0,\n    LOADING: 1,\n    LOADED: 2,\n    ERROR: 3\n};\n//# sourceMappingURL=ImageState.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/renderer/Layer\n */\nimport { abstract } from '../util.js';\nimport ImageState from '../ImageState.js';\nimport Observable from '../Observable.js';\nimport { listen } from '../events.js';\nimport EventType from '../events/EventType.js';\nimport SourceState from '../source/State.js';\nvar LayerRenderer = /** @class */ (function (_super) {\n    __extends(LayerRenderer, _super);\n    /**\n     * @param {import(\"../layer/Layer.js\").default} layer Layer.\n     */\n    function LayerRenderer(layer) {\n        var _this = _super.call(this) || this;\n        /**\n         * @private\n         * @type {import(\"../layer/Layer.js\").default}\n         */\n        _this.layer_ = layer;\n        return _this;\n    }\n    /**\n     * Determine whether render should be called.\n     * @abstract\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {import(\"../layer/Layer.js\").State} layerState Layer state.\n     * @return {boolean} Layer is ready to be rendered.\n     */\n    LayerRenderer.prototype.prepareFrame = function (frameState, layerState) {\n        return abstract();\n    };\n    /**\n     * Render the layer.\n     * @abstract\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {import(\"../layer/Layer.js\").State} layerState Layer state.\n     * @return {HTMLElement} The rendered element.\n     */\n    LayerRenderer.prototype.renderFrame = function (frameState, layerState) {\n        return abstract();\n    };\n    /**\n     * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n     * @param {number} zoom Zoom level.\n     * @param {import(\"../Tile.js\").default} tile Tile.\n     */\n    LayerRenderer.prototype.loadedTileCallback = function (tiles, zoom, tile) {\n        if (!tiles[zoom]) {\n            tiles[zoom] = {};\n        }\n        tiles[zoom][tile.tileCoord.toString()] = tile;\n    };\n    /**\n     * Create a function that adds loaded tiles to the tile lookup.\n     * @param {import(\"../source/Tile.js\").default} source Tile source.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection of the tiles.\n     * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n     * @return {function(number, import(\"../TileRange.js\").default):boolean} A function that can be\n     *     called with a zoom level and a tile range to add loaded tiles to the lookup.\n     * @protected\n     */\n    LayerRenderer.prototype.createLoadedTileFinder = function (source, projection, tiles) {\n        return (\n        /**\n         * @param {number} zoom Zoom level.\n         * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n         * @return {boolean} The tile range is fully loaded.\n         * @this {LayerRenderer}\n         */\n        function (zoom, tileRange) {\n            var callback = this.loadedTileCallback.bind(this, tiles, zoom);\n            return source.forEachLoadedTile(projection, zoom, tileRange, callback);\n        }).bind(this);\n    };\n    /**\n     * @abstract\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {number} hitTolerance Hit tolerance in pixels.\n     * @param {function(import(\"../Feature.js\").FeatureLike, import(\"../layer/Layer.js\").default): T} callback Feature callback.\n     * @return {T|void} Callback result.\n     * @template T\n     */\n    LayerRenderer.prototype.forEachFeatureAtCoordinate = function (coordinate, frameState, hitTolerance, callback) { };\n    /**\n     * @abstract\n     * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n     * @param {number} hitTolerance Hit tolerance in pixels.\n     * @return {Uint8ClampedArray|Uint8Array} The result.  If there is no data at the pixel\n     *    location, null will be returned.  If there is data, but pixel values cannot be\n     *    returned, and empty array will be returned.\n     */\n    LayerRenderer.prototype.getDataAtPixel = function (pixel, frameState, hitTolerance) {\n        return abstract();\n    };\n    /**\n     * @return {import(\"../layer/Layer.js\").default} Layer.\n     */\n    LayerRenderer.prototype.getLayer = function () {\n        return this.layer_;\n    };\n    /**\n     * Handle changes in image state.\n     * @param {import(\"../events/Event.js\").default} event Image change event.\n     * @private\n     */\n    LayerRenderer.prototype.handleImageChange_ = function (event) {\n        var image = /** @type {import(\"../Image.js\").default} */ (event.target);\n        if (image.getState() === ImageState.LOADED) {\n            this.renderIfReadyAndVisible();\n        }\n    };\n    /**\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     * @return {boolean} Is there a feature at the given coordinate?\n     */\n    LayerRenderer.prototype.hasFeatureAtCoordinate = function (coordinate, frameState) {\n        return false;\n    };\n    /**\n     * Load the image if not already loaded, and register the image change\n     * listener if needed.\n     * @param {import(\"../ImageBase.js\").default} image Image.\n     * @return {boolean} `true` if the image is already loaded, `false` otherwise.\n     * @protected\n     */\n    LayerRenderer.prototype.loadImage = function (image) {\n        var imageState = image.getState();\n        if (imageState != ImageState.LOADED && imageState != ImageState.ERROR) {\n            listen(image, EventType.CHANGE, this.handleImageChange_, this);\n        }\n        if (imageState == ImageState.IDLE) {\n            image.load();\n            imageState = image.getState();\n        }\n        return imageState == ImageState.LOADED;\n    };\n    /**\n     * @protected\n     */\n    LayerRenderer.prototype.renderIfReadyAndVisible = function () {\n        var layer = this.getLayer();\n        if (layer.getVisible() && layer.getSourceState() == SourceState.READY) {\n            layer.changed();\n        }\n    };\n    return LayerRenderer;\n}(Observable));\nexport default LayerRenderer;\n//# sourceMappingURL=Layer.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/renderer/canvas/Layer\n */\nimport { getBottomLeft, getBottomRight, getTopLeft, getTopRight } from '../../extent.js';\nimport { createCanvasContext2D } from '../../dom.js';\nimport RenderEvent from '../../render/Event.js';\nimport RenderEventType from '../../render/EventType.js';\nimport { rotateAtOffset } from '../../render/canvas.js';\nimport LayerRenderer from '../Layer.js';\nimport { create as createTransform, apply as applyTransform, compose as composeTransform } from '../../transform.js';\n/**\n * @abstract\n */\nvar CanvasLayerRenderer = /** @class */ (function (_super) {\n    __extends(CanvasLayerRenderer, _super);\n    /**\n     * @param {import(\"../../layer/Layer.js\").default} layer Layer.\n     */\n    function CanvasLayerRenderer(layer) {\n        var _this = _super.call(this, layer) || this;\n        /**\n         * @protected\n         * @type {number}\n         */\n        _this.renderedResolution;\n        /**\n         * A temporary transform.  The values in this transform should only be used in a\n         * function that sets the values.\n         * @private\n         * @type {import(\"../../transform.js\").Transform}\n         */\n        _this.tempTransform_ = createTransform();\n        /**\n         * The transform for rendered pixels to viewport CSS pixels.  This transform must\n         * be set when rendering a frame and may be used by other functions after rendering.\n         * @private\n         * @type {import(\"../../transform.js\").Transform}\n         */\n        _this.pixelTransform_ = createTransform();\n        /**\n         * The transform for viewport CSS pixels to rendered pixels.  This transform must\n         * be set when rendering a frame and may be used by other functions after rendering.\n         * @private\n         * @type {import(\"../../transform.js\").Transform}\n         */\n        _this.inversePixelTransform_ = createTransform();\n        /**\n         * @protected\n         * @type {CanvasRenderingContext2D}\n         */\n        _this.context = createCanvasContext2D();\n        var canvas = _this.context.canvas;\n        canvas.style.position = 'absolute';\n        canvas.style.transformOrigin = 'top left';\n        canvas.className = _this.getLayer().getClassName();\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    CanvasLayerRenderer.prototype.disposeInternal = function () {\n        this.context.canvas.width = this.context.canvas.height = 0;\n        _super.prototype.disposeInternal.call(this);\n    };\n    /**\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {import(\"../../extent.js\").Extent} extent Clip extent.\n     * @protected\n     */\n    CanvasLayerRenderer.prototype.clip = function (context, frameState, extent) {\n        var pixelRatio = frameState.pixelRatio;\n        var halfWidth = (frameState.size[0] * pixelRatio) / 2;\n        var halfHeight = (frameState.size[1] * pixelRatio) / 2;\n        var rotation = frameState.viewState.rotation;\n        var topLeft = getTopLeft(extent);\n        var topRight = getTopRight(extent);\n        var bottomRight = getBottomRight(extent);\n        var bottomLeft = getBottomLeft(extent);\n        applyTransform(frameState.coordinateToPixelTransform, topLeft);\n        applyTransform(frameState.coordinateToPixelTransform, topRight);\n        applyTransform(frameState.coordinateToPixelTransform, bottomRight);\n        applyTransform(frameState.coordinateToPixelTransform, bottomLeft);\n        context.save();\n        rotateAtOffset(context, -rotation, halfWidth, halfHeight);\n        context.beginPath();\n        context.moveTo(topLeft[0] * pixelRatio, topLeft[1] * pixelRatio);\n        context.lineTo(topRight[0] * pixelRatio, topRight[1] * pixelRatio);\n        context.lineTo(bottomRight[0] * pixelRatio, bottomRight[1] * pixelRatio);\n        context.lineTo(bottomLeft[0] * pixelRatio, bottomLeft[1] * pixelRatio);\n        context.clip();\n        rotateAtOffset(context, rotation, halfWidth, halfHeight);\n    };\n    /**\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {import(\"../../extent.js\").Extent} extent Clip extent.\n     * @protected\n     */\n    CanvasLayerRenderer.prototype.clipUnrotated = function (context, frameState, extent) {\n        var topLeft = getTopLeft(extent);\n        var topRight = getTopRight(extent);\n        var bottomRight = getBottomRight(extent);\n        var bottomLeft = getBottomLeft(extent);\n        applyTransform(frameState.coordinateToPixelTransform, topLeft);\n        applyTransform(frameState.coordinateToPixelTransform, topRight);\n        applyTransform(frameState.coordinateToPixelTransform, bottomRight);\n        applyTransform(frameState.coordinateToPixelTransform, bottomLeft);\n        var inverted = this.inversePixelTransform_;\n        applyTransform(inverted, topLeft);\n        applyTransform(inverted, topRight);\n        applyTransform(inverted, bottomRight);\n        applyTransform(inverted, bottomLeft);\n        context.save();\n        context.beginPath();\n        context.moveTo(Math.round(topLeft[0]), Math.round(topLeft[1]));\n        context.lineTo(Math.round(topRight[0]), Math.round(topRight[1]));\n        context.lineTo(Math.round(bottomRight[0]), Math.round(bottomRight[1]));\n        context.lineTo(Math.round(bottomLeft[0]), Math.round(bottomLeft[1]));\n        context.clip();\n    };\n    /**\n     * @param {import(\"../../render/EventType.js\").default} type Event type.\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @private\n     */\n    CanvasLayerRenderer.prototype.dispatchRenderEvent_ = function (type, context, frameState) {\n        var layer = this.getLayer();\n        if (layer.hasListener(type)) {\n            var event_1 = new RenderEvent(type, this.inversePixelTransform_, frameState, context, null);\n            layer.dispatchEvent(event_1);\n        }\n    };\n    /**\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @protected\n     */\n    CanvasLayerRenderer.prototype.preRender = function (context, frameState) {\n        this.dispatchRenderEvent_(RenderEventType.PRERENDER, context, frameState);\n    };\n    /**\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @protected\n     */\n    CanvasLayerRenderer.prototype.postRender = function (context, frameState) {\n        this.dispatchRenderEvent_(RenderEventType.POSTRENDER, context, frameState);\n    };\n    /**\n     * Creates a transform for rendering to an element that will be rotated after rendering.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {number} width Width of the rendered element (in pixels).\n     * @param {number} height Height of the rendered element (in pixels).\n     * @param {number} offsetX Offset on the x-axis in view coordinates.\n     * @protected\n     * @return {!import(\"../../transform.js\").Transform} Transform.\n     */\n    CanvasLayerRenderer.prototype.getRenderTransform = function (frameState, width, height, offsetX) {\n        var viewState = frameState.viewState;\n        var pixelRatio = frameState.pixelRatio;\n        var dx1 = width / 2;\n        var dy1 = height / 2;\n        var sx = pixelRatio / viewState.resolution;\n        var sy = -sx;\n        var dx2 = -viewState.center[0] + offsetX;\n        var dy2 = -viewState.center[1];\n        return composeTransform(this.tempTransform_, dx1, dy1, sx, sy, -viewState.rotation, dx2, dy2);\n    };\n    /**\n     * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState FrameState.\n     * @param {number} hitTolerance Hit tolerance in pixels.\n     * @return {Uint8ClampedArray|Uint8Array} The result.  If there is no data at the pixel\n     *    location, null will be returned.  If there is data, but pixel values cannot be\n     *    returned, and empty array will be returned.\n     */\n    CanvasLayerRenderer.prototype.getDataAtPixel = function (pixel, frameState, hitTolerance) {\n        var renderPixel = applyTransform(this.inversePixelTransform_, pixel.slice());\n        var context = this.context;\n        var data;\n        try {\n            data = context.getImageData(Math.round(renderPixel[0]), Math.round(renderPixel[1]), 1, 1).data;\n        }\n        catch (err) {\n            if (err.name === 'SecurityError') {\n                // tainted canvas, we assume there is data at the given pixel (although there might not be)\n                return new Uint8Array();\n            }\n            return data;\n        }\n        if (data[3] === 0) {\n            return null;\n        }\n        return data;\n    };\n    return CanvasLayerRenderer;\n}(LayerRenderer));\nexport default CanvasLayerRenderer;\n//# sourceMappingURL=Layer.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/renderer/canvas/TileLayer\n */\nimport { getUid } from '../../util.js';\nimport TileRange from '../../TileRange.js';\nimport TileState from '../../TileState.js';\nimport { createEmpty, equals, getIntersection, getTopLeft } from '../../extent.js';\nimport CanvasLayerRenderer from './Layer.js';\nimport { apply as applyTransform, compose as composeTransform, makeInverse, toString as transformToString } from '../../transform.js';\n/**\n * @classdesc\n * Canvas renderer for tile layers.\n * @api\n */\nvar CanvasTileLayerRenderer = /** @class */ (function (_super) {\n    __extends(CanvasTileLayerRenderer, _super);\n    /**\n     * @param {import(\"../../layer/Tile.js\").default|import(\"../../layer/VectorTile.js\").default} tileLayer Tile layer.\n     */\n    function CanvasTileLayerRenderer(tileLayer) {\n        var _this = _super.call(this, tileLayer) || this;\n        /**\n         * Rendered extent has changed since the previous `renderFrame()` call\n         * @type {boolean}\n         */\n        _this.extentChanged = true;\n        /**\n         * @private\n         * @type {import(\"../../extent.js\").Extent}\n         */\n        _this.renderedExtent_ = null;\n        /**\n         * @protected\n         * @type {number}\n         */\n        _this.renderedRevision;\n        /**\n         * @protected\n         * @type {!Array<import(\"../../Tile.js\").default>}\n         */\n        _this.renderedTiles = [];\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.newTiles_ = false;\n        /**\n         * @protected\n         * @type {import(\"../../extent.js\").Extent}\n         */\n        _this.tmpExtent = createEmpty();\n        /**\n         * @private\n         * @type {import(\"../../TileRange.js\").default}\n         */\n        _this.tmpTileRange_ = new TileRange(0, 0, 0, 0);\n        /**\n         * @protected\n         * @type {number}\n         */\n        _this.zDirection = 0;\n        return _this;\n    }\n    /**\n     * @protected\n     * @param {import(\"../../Tile.js\").default} tile Tile.\n     * @return {boolean} Tile is drawable.\n     */\n    CanvasTileLayerRenderer.prototype.isDrawableTile = function (tile) {\n        var tileLayer = /** @type {import(\"../../layer/Tile.js\").default} */ (this.getLayer());\n        var tileState = tile.getState();\n        var useInterimTilesOnError = tileLayer.getUseInterimTilesOnError();\n        return tileState == TileState.LOADED ||\n            tileState == TileState.EMPTY ||\n            tileState == TileState.ERROR && !useInterimTilesOnError;\n    };\n    /**\n     * @param {number} z Tile coordinate z.\n     * @param {number} x Tile coordinate x.\n     * @param {number} y Tile coordinate y.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @return {!import(\"../../Tile.js\").default} Tile.\n     */\n    CanvasTileLayerRenderer.prototype.getTile = function (z, x, y, frameState) {\n        var pixelRatio = frameState.pixelRatio;\n        var projection = frameState.viewState.projection;\n        var tileLayer = /** @type {import(\"../../layer/Tile.js\").default} */ (this.getLayer());\n        var tileSource = tileLayer.getSource();\n        var tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n        if (tile.getState() == TileState.ERROR) {\n            if (!tileLayer.getUseInterimTilesOnError()) {\n                // When useInterimTilesOnError is false, we consider the error tile as loaded.\n                tile.setState(TileState.LOADED);\n            }\n            else if (tileLayer.getPreload() > 0) {\n                // Preloaded tiles for lower resolutions might have finished loading.\n                this.newTiles_ = true;\n            }\n        }\n        if (!this.isDrawableTile(tile)) {\n            tile = tile.getInterimTile();\n        }\n        return tile;\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasTileLayerRenderer.prototype.loadedTileCallback = function (tiles, zoom, tile) {\n        if (this.isDrawableTile(tile)) {\n            return _super.prototype.loadedTileCallback.call(this, tiles, zoom, tile);\n        }\n        return false;\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasTileLayerRenderer.prototype.prepareFrame = function (frameState, layerState) {\n        return true;\n    };\n    /**\n     * TODO: File a TypeScript issue about inheritDoc not being followed\n     * all the way.  Without this explicit return type, the VectorTileLayer\n     * renderFrame function does not pass.\n     *\n     * @inheritDoc\n     * @returns {HTMLElement} The rendered element.\n     */\n    CanvasTileLayerRenderer.prototype.renderFrame = function (frameState, layerState) {\n        var context = this.context;\n        var viewState = frameState.viewState;\n        var projection = viewState.projection;\n        var viewResolution = viewState.resolution;\n        var viewCenter = viewState.center;\n        var rotation = viewState.rotation;\n        var pixelRatio = frameState.pixelRatio;\n        var tileLayer = /** @type {import(\"../../layer/Tile.js\").default} */ (this.getLayer());\n        var tileSource = tileLayer.getSource();\n        var sourceRevision = tileSource.getRevision();\n        var tileGrid = tileSource.getTileGridForProjection(projection);\n        var zDirection = tileSource.zDirection === undefined ? this.zDirection : tileSource.zDirection;\n        var z = tileGrid.getZForResolution(viewResolution, zDirection);\n        var tileResolution = tileGrid.getResolution(z);\n        var extent = frameState.extent;\n        if (layerState.extent) {\n            extent = getIntersection(extent, layerState.extent);\n        }\n        var tilePixelRatio = tileSource.getTilePixelRatio(pixelRatio);\n        // desired dimensions of the canvas in pixels\n        var width = Math.round(frameState.size[0] * tilePixelRatio);\n        var height = Math.round(frameState.size[1] * tilePixelRatio);\n        if (rotation) {\n            var size = Math.round(Math.sqrt(width * width + height * height));\n            width = height = size;\n        }\n        var dx = tileResolution * width / 2 / tilePixelRatio;\n        var dy = tileResolution * height / 2 / tilePixelRatio;\n        var canvasExtent = [\n            viewCenter[0] - dx,\n            viewCenter[1] - dy,\n            viewCenter[0] + dx,\n            viewCenter[1] + dy\n        ];\n        var tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\n        /**\n         * @type {Object<number, Object<string, import(\"../../Tile.js\").default>>}\n         */\n        var tilesToDrawByZ = {};\n        tilesToDrawByZ[z] = {};\n        var findLoadedTiles = this.createLoadedTileFinder(tileSource, projection, tilesToDrawByZ);\n        var tmpExtent = this.tmpExtent;\n        var tmpTileRange = this.tmpTileRange_;\n        this.newTiles_ = false;\n        for (var x = tileRange.minX; x <= tileRange.maxX; ++x) {\n            for (var y = tileRange.minY; y <= tileRange.maxY; ++y) {\n                var tile = this.getTile(z, x, y, frameState);\n                if (this.isDrawableTile(tile)) {\n                    var uid = getUid(this);\n                    if (tile.getState() == TileState.LOADED) {\n                        tilesToDrawByZ[z][tile.tileCoord.toString()] = tile;\n                        var inTransition = tile.inTransition(uid);\n                        if (!this.newTiles_ && (inTransition || this.renderedTiles.indexOf(tile) === -1)) {\n                            this.newTiles_ = true;\n                        }\n                    }\n                    if (tile.getAlpha(uid, frameState.time) === 1) {\n                        // don't look for alt tiles if alpha is 1\n                        continue;\n                    }\n                }\n                var childTileRange = tileGrid.getTileCoordChildTileRange(tile.tileCoord, tmpTileRange, tmpExtent);\n                var covered = false;\n                if (childTileRange) {\n                    covered = findLoadedTiles(z + 1, childTileRange);\n                }\n                if (!covered) {\n                    tileGrid.forEachTileCoordParentTileRange(tile.tileCoord, findLoadedTiles, tmpTileRange, tmpExtent);\n                }\n            }\n        }\n        var canvas = context.canvas;\n        var canvasScale = tileResolution / viewResolution;\n        // set forward and inverse pixel transforms\n        composeTransform(this.pixelTransform_, frameState.size[0] / 2, frameState.size[1] / 2, 1 / tilePixelRatio, 1 / tilePixelRatio, rotation, -width / 2, -height / 2);\n        makeInverse(this.inversePixelTransform_, this.pixelTransform_);\n        // set scale transform for calculating tile positions on the canvas\n        composeTransform(this.tempTransform_, width / 2, height / 2, canvasScale, canvasScale, 0, -width / 2, -height / 2);\n        if (canvas.width != width || canvas.height != height) {\n            canvas.width = width;\n            canvas.height = height;\n        }\n        else {\n            context.clearRect(0, 0, width, height);\n        }\n        if (layerState.extent) {\n            this.clipUnrotated(context, frameState, layerState.extent);\n        }\n        this.preRender(context, frameState);\n        this.renderedTiles.length = 0;\n        /** @type {Array<number>} */\n        var zs = Object.keys(tilesToDrawByZ).map(Number);\n        zs.sort(function (a, b) {\n            if (a === z) {\n                return 1;\n            }\n            else if (b === z) {\n                return -1;\n            }\n            else {\n                return a > b ? 1 : a < b ? -1 : 0;\n            }\n        });\n        for (var i = 0, ii = zs.length; i < ii; ++i) {\n            var currentZ = zs[i];\n            var currentTilePixelSize = tileSource.getTilePixelSize(currentZ, pixelRatio, projection);\n            var currentResolution = tileGrid.getResolution(currentZ);\n            var currentScale = currentResolution / tileResolution;\n            var dx_1 = currentTilePixelSize[0] * currentScale * canvasScale;\n            var dy_1 = currentTilePixelSize[1] * currentScale * canvasScale;\n            var originTileCoord = tileGrid.getTileCoordForCoordAndZ(getTopLeft(canvasExtent), currentZ);\n            var originTileExtent = tileGrid.getTileCoordExtent(originTileCoord);\n            var origin_1 = applyTransform(this.tempTransform_, [\n                tilePixelRatio * (originTileExtent[0] - canvasExtent[0]) / tileResolution,\n                tilePixelRatio * (canvasExtent[3] - originTileExtent[3]) / tileResolution\n            ]);\n            var tileGutter = tilePixelRatio * tileSource.getGutterForProjection(projection);\n            var tilesToDraw = tilesToDrawByZ[currentZ];\n            for (var tileCoordKey in tilesToDraw) {\n                var tile = tilesToDraw[tileCoordKey];\n                var tileCoord = tile.tileCoord;\n                // Calculate integer positions and sizes so that tiles align\n                var floatX = (origin_1[0] - (originTileCoord[1] - tileCoord[1]) * dx_1);\n                var nextX = Math.round(floatX + dx_1);\n                var floatY = (origin_1[1] - (originTileCoord[2] - tileCoord[2]) * dy_1);\n                var nextY = Math.round(floatY + dy_1);\n                var x = Math.round(floatX);\n                var y = Math.round(floatY);\n                var w = nextX - x;\n                var h = nextY - y;\n                this.drawTileImage(tile, frameState, x, y, w, h, tileGutter, z === currentZ);\n                this.renderedTiles.push(tile);\n                this.updateUsedTiles(frameState.usedTiles, tileSource, tile);\n            }\n        }\n        this.renderedRevision = sourceRevision;\n        this.renderedResolution = tileResolution;\n        this.extentChanged = !this.renderedExtent_ || !equals(this.renderedExtent_, canvasExtent);\n        this.renderedExtent_ = canvasExtent;\n        this.manageTilePyramid(frameState, tileSource, tileGrid, pixelRatio, projection, extent, z, tileLayer.getPreload());\n        this.updateCacheSize_(frameState, tileSource);\n        this.scheduleExpireCache(frameState, tileSource);\n        this.postRender(context, frameState);\n        if (layerState.extent) {\n            context.restore();\n        }\n        var opacity = layerState.opacity;\n        if (opacity !== parseFloat(canvas.style.opacity)) {\n            canvas.style.opacity = opacity;\n        }\n        var canvasTransform = transformToString(this.pixelTransform_);\n        if (canvasTransform !== canvas.style.transform) {\n            canvas.style.transform = canvasTransform;\n        }\n        return canvas;\n    };\n    /**\n     * @param {import(\"../../Tile.js\").default} tile Tile.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {number} x Left of the tile.\n     * @param {number} y Top of the tile.\n     * @param {number} w Width of the tile.\n     * @param {number} h Height of the tile.\n     * @param {number} gutter Tile gutter.\n     * @param {boolean} transition Apply an alpha transition.\n     */\n    CanvasTileLayerRenderer.prototype.drawTileImage = function (tile, frameState, x, y, w, h, gutter, transition) {\n        var image = this.getTileImage(tile);\n        if (!image) {\n            return;\n        }\n        var uid = getUid(this);\n        var alpha = transition ? tile.getAlpha(uid, frameState.time) : 1;\n        var tileLayer = /** @type {import(\"../../layer/Tile.js\").default} */ (this.getLayer());\n        var tileSource = tileLayer.getSource();\n        if (alpha === 1 && !tileSource.getOpaque(frameState.viewState.projection)) {\n            this.context.clearRect(x, y, w, h);\n        }\n        var alphaChanged = alpha !== this.context.globalAlpha;\n        if (alphaChanged) {\n            this.context.save();\n            this.context.globalAlpha = alpha;\n        }\n        this.context.drawImage(image, gutter, gutter, image.width - 2 * gutter, image.height - 2 * gutter, x, y, w, h);\n        if (alphaChanged) {\n            this.context.restore();\n        }\n        if (alpha !== 1) {\n            frameState.animate = true;\n        }\n        else if (transition) {\n            tile.endTransition(uid);\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasTileLayerRenderer.prototype.getImage = function () {\n        var context = this.context;\n        return context ? context.canvas : null;\n    };\n    /**\n     * Get the image from a tile.\n     * @param {import(\"../../Tile.js\").default} tile Tile.\n     * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n     * @protected\n     */\n    CanvasTileLayerRenderer.prototype.getTileImage = function (tile) {\n        return /** @type {import(\"../../ImageTile.js\").default} */ (tile).getImage();\n    };\n    /**\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n     * @protected\n     */\n    CanvasTileLayerRenderer.prototype.scheduleExpireCache = function (frameState, tileSource) {\n        if (tileSource.canExpireCache()) {\n            /**\n             * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n             * @param {import(\"../../PluggableMap.js\").default} map Map.\n             * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n             */\n            var postRenderFunction = function (tileSource, map, frameState) {\n                var tileSourceKey = getUid(tileSource);\n                if (tileSourceKey in frameState.usedTiles) {\n                    tileSource.expireCache(frameState.viewState.projection, frameState.usedTiles[tileSourceKey]);\n                }\n            }.bind(null, tileSource);\n            frameState.postRenderFunctions.push(\n            /** @type {import(\"../../PluggableMap.js\").PostRenderFunction} */ (postRenderFunction));\n        }\n    };\n    /**\n     * @param {!Object<string, !Object<string, boolean>>} usedTiles Used tiles.\n     * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n     * @param {import('../../Tile.js').default} tile Tile.\n     * @protected\n     */\n    CanvasTileLayerRenderer.prototype.updateUsedTiles = function (usedTiles, tileSource, tile) {\n        // FIXME should we use tilesToDrawByZ instead?\n        var tileSourceKey = getUid(tileSource);\n        if (!(tileSourceKey in usedTiles)) {\n            usedTiles[tileSourceKey] = {};\n        }\n        usedTiles[tileSourceKey][tile.getKey()] = true;\n    };\n    /**\n     * Check if the cache is big enough, and increase its size if necessary.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n     * @private\n     */\n    CanvasTileLayerRenderer.prototype.updateCacheSize_ = function (frameState, tileSource) {\n        var tileSourceKey = getUid(tileSource);\n        var size = 0;\n        if (tileSourceKey in frameState.usedTiles) {\n            size += Object.keys(frameState.usedTiles[tileSourceKey]).length;\n        }\n        if (tileSourceKey in frameState.wantedTiles) {\n            size += Object.keys(frameState.wantedTiles[tileSourceKey]).length;\n        }\n        var tileCache = tileSource.tileCache;\n        if (tileCache.highWaterMark < size) {\n            tileCache.highWaterMark = size;\n        }\n    };\n    /**\n     * Manage tile pyramid.\n     * This function performs a number of functions related to the tiles at the\n     * current zoom and lower zoom levels:\n     * - registers idle tiles in frameState.wantedTiles so that they are not\n     *   discarded by the tile queue\n     * - enqueues missing tiles\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n     * @param {import(\"../../tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"../../proj/Projection.js\").default} projection Projection.\n     * @param {import(\"../../extent.js\").Extent} extent Extent.\n     * @param {number} currentZ Current Z.\n     * @param {number} preload Load low resolution tiles up to 'preload' levels.\n     * @param {function(import(\"../../Tile.js\").default)=} opt_tileCallback Tile callback.\n     * @protected\n     */\n    CanvasTileLayerRenderer.prototype.manageTilePyramid = function (frameState, tileSource, tileGrid, pixelRatio, projection, extent, currentZ, preload, opt_tileCallback) {\n        var tileSourceKey = getUid(tileSource);\n        if (!(tileSourceKey in frameState.wantedTiles)) {\n            frameState.wantedTiles[tileSourceKey] = {};\n        }\n        var wantedTiles = frameState.wantedTiles[tileSourceKey];\n        var tileQueue = frameState.tileQueue;\n        var minZoom = tileGrid.getMinZoom();\n        var tile, tileRange, tileResolution, x, y, z;\n        for (z = minZoom; z <= currentZ; ++z) {\n            tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z, tileRange);\n            tileResolution = tileGrid.getResolution(z);\n            for (x = tileRange.minX; x <= tileRange.maxX; ++x) {\n                for (y = tileRange.minY; y <= tileRange.maxY; ++y) {\n                    if (currentZ - z <= preload) {\n                        tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n                        if (tile.getState() == TileState.IDLE) {\n                            wantedTiles[tile.getKey()] = true;\n                            if (!tileQueue.isKeyQueued(tile.getKey())) {\n                                tileQueue.enqueue([tile, tileSourceKey,\n                                    tileGrid.getTileCoordCenter(tile.tileCoord), tileResolution]);\n                            }\n                        }\n                        if (opt_tileCallback !== undefined) {\n                            opt_tileCallback(tile);\n                        }\n                    }\n                    else {\n                        tileSource.useTile(z, x, y, projection);\n                    }\n                }\n            }\n        }\n    };\n    return CanvasTileLayerRenderer;\n}(CanvasLayerRenderer));\n/**\n * @function\n * @return {import(\"../../layer/Tile.js\").default|import(\"../../layer/VectorTile.js\").default}\n */\nCanvasTileLayerRenderer.prototype.getLayer;\nexport default CanvasTileLayerRenderer;\n//# sourceMappingURL=TileLayer.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/layer/Tile\n */\nimport BaseTileLayer from './BaseTile.js';\nimport CanvasTileLayerRenderer from '../renderer/canvas/TileLayer.js';\n/**\n * @typedef {import(\"./BaseTile.js\").Options} Options\n */\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @api\n */\nvar TileLayer = /** @class */ (function (_super) {\n    __extends(TileLayer, _super);\n    /**\n     * @param {Options=} opt_options Tile layer options.\n     */\n    function TileLayer(opt_options) {\n        return _super.call(this, opt_options) || this;\n    }\n    /**\n     * Create a renderer for this layer.\n     * @return {import(\"../renderer/Layer.js\").default} A layer renderer.\n     * @protected\n     */\n    TileLayer.prototype.createRenderer = function () {\n        return new CanvasTileLayerRenderer(this);\n    };\n    return TileLayer;\n}(BaseTileLayer));\nexport default TileLayer;\n//# sourceMappingURL=Tile.js.map","/**\n * @module ol/colorlike\n */\nimport { toString } from './color.js';\n/**\n * A type accepted by CanvasRenderingContext2D.fillStyle\n * or CanvasRenderingContext2D.strokeStyle.\n * Represents a color, pattern, or gradient. The origin for patterns and\n * gradients as fill style is an increment of 512 css pixels from map coordinate\n * `[0, 0]`. For seamless repeat patterns, width and height of the pattern image\n * must be a factor of two (2, 4, 8, ..., 512).\n *\n * @typedef {string|CanvasPattern|CanvasGradient} ColorLike\n * @api\n */\n/**\n * @param {import(\"./color.js\").Color|ColorLike} color Color.\n * @return {ColorLike} The color as an {@link ol/colorlike~ColorLike}.\n * @api\n */\nexport function asColorLike(color) {\n    if (Array.isArray(color)) {\n        return toString(color);\n    }\n    else {\n        return color;\n    }\n}\n//# sourceMappingURL=colorlike.js.map","/**\n * @module ol/style/Image\n */\nimport { abstract } from '../util.js';\n/**\n * @typedef {Object} Options\n * @property {number} opacity\n * @property {boolean} rotateWithView\n * @property {number} rotation\n * @property {number} scale\n */\n/**\n * @classdesc\n * A base class used for creating subclasses and not instantiated in\n * apps. Base class for {@link module:ol/style/Icon~Icon}, {@link module:ol/style/Circle~CircleStyle} and\n * {@link module:ol/style/RegularShape~RegularShape}.\n * @abstract\n * @api\n */\nvar ImageStyle = /** @class */ (function () {\n    /**\n     * @param {Options} options Options.\n     */\n    function ImageStyle(options) {\n        /**\n         * @private\n         * @type {number}\n         */\n        this.opacity_ = options.opacity;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        this.rotateWithView_ = options.rotateWithView;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.rotation_ = options.rotation;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.scale_ = options.scale;\n    }\n    /**\n     * Clones the style.\n     * @return {ImageStyle} The cloned style.\n     * @api\n     */\n    ImageStyle.prototype.clone = function () {\n        return new ImageStyle({\n            opacity: this.getOpacity(),\n            scale: this.getScale(),\n            rotation: this.getRotation(),\n            rotateWithView: this.getRotateWithView()\n        });\n    };\n    /**\n     * Get the symbolizer opacity.\n     * @return {number} Opacity.\n     * @api\n     */\n    ImageStyle.prototype.getOpacity = function () {\n        return this.opacity_;\n    };\n    /**\n     * Determine whether the symbolizer rotates with the map.\n     * @return {boolean} Rotate with map.\n     * @api\n     */\n    ImageStyle.prototype.getRotateWithView = function () {\n        return this.rotateWithView_;\n    };\n    /**\n     * Get the symoblizer rotation.\n     * @return {number} Rotation.\n     * @api\n     */\n    ImageStyle.prototype.getRotation = function () {\n        return this.rotation_;\n    };\n    /**\n     * Get the symbolizer scale.\n     * @return {number} Scale.\n     * @api\n     */\n    ImageStyle.prototype.getScale = function () {\n        return this.scale_;\n    };\n    /**\n     * Get the anchor point in pixels. The anchor determines the center point for the\n     * symbolizer.\n     * @abstract\n     * @return {Array<number>} Anchor.\n     */\n    ImageStyle.prototype.getAnchor = function () {\n        return abstract();\n    };\n    /**\n     * Get the image element for the symbolizer.\n     * @abstract\n     * @param {number} pixelRatio Pixel ratio.\n     * @return {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} Image element.\n     */\n    ImageStyle.prototype.getImage = function (pixelRatio) {\n        return abstract();\n    };\n    /**\n     * @abstract\n     * @param {number} pixelRatio Pixel ratio.\n     * @return {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} Image element.\n     */\n    ImageStyle.prototype.getHitDetectionImage = function (pixelRatio) {\n        return abstract();\n    };\n    /**\n     * @abstract\n     * @return {import(\"../ImageState.js\").default} Image state.\n     */\n    ImageStyle.prototype.getImageState = function () {\n        return abstract();\n    };\n    /**\n     * @abstract\n     * @return {import(\"../size.js\").Size} Image size.\n     */\n    ImageStyle.prototype.getImageSize = function () {\n        return abstract();\n    };\n    /**\n     * @abstract\n     * @return {import(\"../size.js\").Size} Size of the hit-detection image.\n     */\n    ImageStyle.prototype.getHitDetectionImageSize = function () {\n        return abstract();\n    };\n    /**\n     * Get the origin of the symbolizer.\n     * @abstract\n     * @return {Array<number>} Origin.\n     */\n    ImageStyle.prototype.getOrigin = function () {\n        return abstract();\n    };\n    /**\n     * Get the size of the symbolizer (in pixels).\n     * @abstract\n     * @return {import(\"../size.js\").Size} Size.\n     */\n    ImageStyle.prototype.getSize = function () {\n        return abstract();\n    };\n    /**\n     * Set the opacity.\n     *\n     * @param {number} opacity Opacity.\n     * @api\n     */\n    ImageStyle.prototype.setOpacity = function (opacity) {\n        this.opacity_ = opacity;\n    };\n    /**\n     * Set whether to rotate the style with the view.\n     *\n     * @param {boolean} rotateWithView Rotate with map.\n     * @api\n     */\n    ImageStyle.prototype.setRotateWithView = function (rotateWithView) {\n        this.rotateWithView_ = rotateWithView;\n    };\n    /**\n     * Set the rotation.\n     *\n     * @param {number} rotation Rotation.\n     * @api\n     */\n    ImageStyle.prototype.setRotation = function (rotation) {\n        this.rotation_ = rotation;\n    };\n    /**\n     * Set the scale.\n     *\n     * @param {number} scale Scale.\n     * @api\n     */\n    ImageStyle.prototype.setScale = function (scale) {\n        this.scale_ = scale;\n    };\n    /**\n     * @abstract\n     * @param {function(this: T, import(\"../events/Event.js\").default): void} listener Listener function.\n     * @param {T} thisArg Value to use as `this` when executing `listener`.\n     * @return {import(\"../events.js\").EventsKey|undefined} Listener key.\n     * @template T\n     */\n    ImageStyle.prototype.listenImageChange = function (listener, thisArg) {\n        return abstract();\n    };\n    /**\n     * Load not yet loaded URI.\n     * @abstract\n     */\n    ImageStyle.prototype.load = function () {\n        abstract();\n    };\n    /**\n     * @abstract\n     * @param {function(this: T, import(\"../events/Event.js\").default): void} listener Listener function.\n     * @param {T} thisArg Value to use as `this` when executing `listener`.\n     * @template T\n     */\n    ImageStyle.prototype.unlistenImageChange = function (listener, thisArg) {\n        abstract();\n    };\n    return ImageStyle;\n}());\nexport default ImageStyle;\n//# sourceMappingURL=Image.js.map","/**\n * @module ol/style/RegularShape\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { asColorLike } from '../colorlike.js';\nimport { createCanvasContext2D } from '../dom.js';\nimport ImageState from '../ImageState.js';\nimport { defaultStrokeStyle, defaultFillStyle, defaultLineCap, defaultLineWidth, defaultLineJoin, defaultMiterLimit } from '../render/canvas.js';\nimport ImageStyle from './Image.js';\n/**\n * Specify radius for regular polygons, or radius1 and radius2 for stars.\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} points Number of points for stars and regular polygons. In case of a polygon, the number of points\n * is the number of sides.\n * @property {number} [radius] Radius of a regular polygon.\n * @property {number} [radius1] Outer radius of a star.\n * @property {number} [radius2] Inner radius of a star.\n * @property {number} [angle=0] Shape's angle in radians. A value of 0 will have one of the shape's point facing up.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view.\n */\n/**\n * @typedef {Object} RenderOptions\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle]\n * @property {number} strokeWidth\n * @property {number} size\n * @property {string} lineCap\n * @property {Array<number>} lineDash\n * @property {number} lineDashOffset\n * @property {string} lineJoin\n * @property {number} miterLimit\n */\n/**\n * @classdesc\n * Set regular shape style for vector features. The resulting shape will be\n * a regular polygon when `radius` is provided, or a star when `radius1` and\n * `radius2` are provided.\n * @api\n */\nvar RegularShape = /** @class */ (function (_super) {\n    __extends(RegularShape, _super);\n    /**\n     * @param {Options} options Options.\n     */\n    function RegularShape(options) {\n        var _this = this;\n        /**\n         * @type {boolean}\n         */\n        var rotateWithView = options.rotateWithView !== undefined ?\n            options.rotateWithView : false;\n        _this = _super.call(this, {\n            opacity: 1,\n            rotateWithView: rotateWithView,\n            rotation: options.rotation !== undefined ? options.rotation : 0,\n            scale: 1\n        }) || this;\n        /**\n         * @private\n         * @type {HTMLCanvasElement}\n         */\n        _this.canvas_ = null;\n        /**\n         * @private\n         * @type {HTMLCanvasElement}\n         */\n        _this.hitDetectionCanvas_ = null;\n        /**\n         * @private\n         * @type {import(\"./Fill.js\").default}\n         */\n        _this.fill_ = options.fill !== undefined ? options.fill : null;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        _this.origin_ = [0, 0];\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.points_ = options.points;\n        /**\n         * @protected\n         * @type {number}\n         */\n        _this.radius_ = /** @type {number} */ (options.radius !== undefined ?\n            options.radius : options.radius1);\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.radius2_ = options.radius2;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.angle_ = options.angle !== undefined ? options.angle : 0;\n        /**\n         * @private\n         * @type {import(\"./Stroke.js\").default}\n         */\n        _this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        _this.anchor_ = null;\n        /**\n         * @private\n         * @type {import(\"../size.js\").Size}\n         */\n        _this.size_ = null;\n        /**\n         * @private\n         * @type {import(\"../size.js\").Size}\n         */\n        _this.imageSize_ = null;\n        /**\n         * @private\n         * @type {import(\"../size.js\").Size}\n         */\n        _this.hitDetectionImageSize_ = null;\n        _this.render_();\n        return _this;\n    }\n    /**\n     * Clones the style.\n     * @return {RegularShape} The cloned style.\n     * @api\n     */\n    RegularShape.prototype.clone = function () {\n        var style = new RegularShape({\n            fill: this.getFill() ? this.getFill().clone() : undefined,\n            points: this.getPoints(),\n            radius: this.getRadius(),\n            radius2: this.getRadius2(),\n            angle: this.getAngle(),\n            stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n            rotation: this.getRotation(),\n            rotateWithView: this.getRotateWithView()\n        });\n        style.setOpacity(this.getOpacity());\n        style.setScale(this.getScale());\n        return style;\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    RegularShape.prototype.getAnchor = function () {\n        return this.anchor_;\n    };\n    /**\n     * Get the angle used in generating the shape.\n     * @return {number} Shape's rotation in radians.\n     * @api\n     */\n    RegularShape.prototype.getAngle = function () {\n        return this.angle_;\n    };\n    /**\n     * Get the fill style for the shape.\n     * @return {import(\"./Fill.js\").default} Fill style.\n     * @api\n     */\n    RegularShape.prototype.getFill = function () {\n        return this.fill_;\n    };\n    /**\n     * @inheritDoc\n     */\n    RegularShape.prototype.getHitDetectionImage = function (pixelRatio) {\n        return this.hitDetectionCanvas_;\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    RegularShape.prototype.getImage = function (pixelRatio) {\n        return this.canvas_;\n    };\n    /**\n     * @inheritDoc\n     */\n    RegularShape.prototype.getImageSize = function () {\n        return this.imageSize_;\n    };\n    /**\n     * @inheritDoc\n     */\n    RegularShape.prototype.getHitDetectionImageSize = function () {\n        return this.hitDetectionImageSize_;\n    };\n    /**\n     * @inheritDoc\n     */\n    RegularShape.prototype.getImageState = function () {\n        return ImageState.LOADED;\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    RegularShape.prototype.getOrigin = function () {\n        return this.origin_;\n    };\n    /**\n     * Get the number of points for generating the shape.\n     * @return {number} Number of points for stars and regular polygons.\n     * @api\n     */\n    RegularShape.prototype.getPoints = function () {\n        return this.points_;\n    };\n    /**\n     * Get the (primary) radius for the shape.\n     * @return {number} Radius.\n     * @api\n     */\n    RegularShape.prototype.getRadius = function () {\n        return this.radius_;\n    };\n    /**\n     * Get the secondary radius for the shape.\n     * @return {number|undefined} Radius2.\n     * @api\n     */\n    RegularShape.prototype.getRadius2 = function () {\n        return this.radius2_;\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    RegularShape.prototype.getSize = function () {\n        return this.size_;\n    };\n    /**\n     * Get the stroke style for the shape.\n     * @return {import(\"./Stroke.js\").default} Stroke style.\n     * @api\n     */\n    RegularShape.prototype.getStroke = function () {\n        return this.stroke_;\n    };\n    /**\n     * @inheritDoc\n     */\n    RegularShape.prototype.listenImageChange = function (listener, thisArg) {\n        return undefined;\n    };\n    /**\n     * @inheritDoc\n     */\n    RegularShape.prototype.load = function () { };\n    /**\n     * @inheritDoc\n     */\n    RegularShape.prototype.unlistenImageChange = function (listener, thisArg) { };\n    /**\n     * @protected\n     */\n    RegularShape.prototype.render_ = function () {\n        var lineCap = '';\n        var lineJoin = '';\n        var miterLimit = 0;\n        var lineDash = null;\n        var lineDashOffset = 0;\n        var strokeStyle;\n        var strokeWidth = 0;\n        if (this.stroke_) {\n            strokeStyle = this.stroke_.getColor();\n            if (strokeStyle === null) {\n                strokeStyle = defaultStrokeStyle;\n            }\n            strokeStyle = asColorLike(strokeStyle);\n            strokeWidth = this.stroke_.getWidth();\n            if (strokeWidth === undefined) {\n                strokeWidth = defaultLineWidth;\n            }\n            lineDash = this.stroke_.getLineDash();\n            lineDashOffset = this.stroke_.getLineDashOffset();\n            lineJoin = this.stroke_.getLineJoin();\n            if (lineJoin === undefined) {\n                lineJoin = defaultLineJoin;\n            }\n            lineCap = this.stroke_.getLineCap();\n            if (lineCap === undefined) {\n                lineCap = defaultLineCap;\n            }\n            miterLimit = this.stroke_.getMiterLimit();\n            if (miterLimit === undefined) {\n                miterLimit = defaultMiterLimit;\n            }\n        }\n        var size = 2 * (this.radius_ + strokeWidth) + 1;\n        /** @type {RenderOptions} */\n        var renderOptions = {\n            strokeStyle: strokeStyle,\n            strokeWidth: strokeWidth,\n            size: size,\n            lineCap: lineCap,\n            lineDash: lineDash,\n            lineDashOffset: lineDashOffset,\n            lineJoin: lineJoin,\n            miterLimit: miterLimit\n        };\n        var context = createCanvasContext2D(size, size);\n        this.canvas_ = context.canvas;\n        // canvas.width and height are rounded to the closest integer\n        size = this.canvas_.width;\n        var imageSize = size;\n        this.draw_(renderOptions, context, 0, 0);\n        this.createHitDetectionCanvas_(renderOptions);\n        this.anchor_ = [size / 2, size / 2];\n        this.size_ = [size, size];\n        this.imageSize_ = [imageSize, imageSize];\n    };\n    /**\n     * @private\n     * @param {RenderOptions} renderOptions Render options.\n     * @param {CanvasRenderingContext2D} context The rendering context.\n     * @param {number} x The origin for the symbol (x).\n     * @param {number} y The origin for the symbol (y).\n     */\n    RegularShape.prototype.draw_ = function (renderOptions, context, x, y) {\n        var i, angle0, radiusC;\n        // reset transform\n        context.setTransform(1, 0, 0, 1, 0, 0);\n        // then move to (x, y)\n        context.translate(x, y);\n        context.beginPath();\n        var points = this.points_;\n        if (points === Infinity) {\n            context.arc(renderOptions.size / 2, renderOptions.size / 2, this.radius_, 0, 2 * Math.PI, true);\n        }\n        else {\n            var radius2 = (this.radius2_ !== undefined) ? this.radius2_\n                : this.radius_;\n            if (radius2 !== this.radius_) {\n                points = 2 * points;\n            }\n            for (i = 0; i <= points; i++) {\n                angle0 = i * 2 * Math.PI / points - Math.PI / 2 + this.angle_;\n                radiusC = i % 2 === 0 ? this.radius_ : radius2;\n                context.lineTo(renderOptions.size / 2 + radiusC * Math.cos(angle0), renderOptions.size / 2 + radiusC * Math.sin(angle0));\n            }\n        }\n        if (this.fill_) {\n            var color = this.fill_.getColor();\n            if (color === null) {\n                color = defaultFillStyle;\n            }\n            context.fillStyle = asColorLike(color);\n            context.fill();\n        }\n        if (this.stroke_) {\n            context.strokeStyle = renderOptions.strokeStyle;\n            context.lineWidth = renderOptions.strokeWidth;\n            if (context.setLineDash && renderOptions.lineDash) {\n                context.setLineDash(renderOptions.lineDash);\n                context.lineDashOffset = renderOptions.lineDashOffset;\n            }\n            context.lineCap = /** @type {CanvasLineCap} */ (renderOptions.lineCap);\n            context.lineJoin = /** @type {CanvasLineJoin} */ (renderOptions.lineJoin);\n            context.miterLimit = renderOptions.miterLimit;\n            context.stroke();\n        }\n        context.closePath();\n    };\n    /**\n     * @private\n     * @param {RenderOptions} renderOptions Render options.\n     */\n    RegularShape.prototype.createHitDetectionCanvas_ = function (renderOptions) {\n        this.hitDetectionImageSize_ = [renderOptions.size, renderOptions.size];\n        if (this.fill_) {\n            this.hitDetectionCanvas_ = this.canvas_;\n            return;\n        }\n        // if no fill style is set, create an extra hit-detection image with a\n        // default fill style\n        var context = createCanvasContext2D(renderOptions.size, renderOptions.size);\n        this.hitDetectionCanvas_ = context.canvas;\n        this.drawHitDetectionCanvas_(renderOptions, context, 0, 0);\n    };\n    /**\n     * @private\n     * @param {RenderOptions} renderOptions Render options.\n     * @param {CanvasRenderingContext2D} context The context.\n     * @param {number} x The origin for the symbol (x).\n     * @param {number} y The origin for the symbol (y).\n     */\n    RegularShape.prototype.drawHitDetectionCanvas_ = function (renderOptions, context, x, y) {\n        // reset transform\n        context.setTransform(1, 0, 0, 1, 0, 0);\n        // then move to (x, y)\n        context.translate(x, y);\n        context.beginPath();\n        var points = this.points_;\n        if (points === Infinity) {\n            context.arc(renderOptions.size / 2, renderOptions.size / 2, this.radius_, 0, 2 * Math.PI, true);\n        }\n        else {\n            var radius2 = (this.radius2_ !== undefined) ? this.radius2_\n                : this.radius_;\n            if (radius2 !== this.radius_) {\n                points = 2 * points;\n            }\n            var i = void 0, radiusC = void 0, angle0 = void 0;\n            for (i = 0; i <= points; i++) {\n                angle0 = i * 2 * Math.PI / points - Math.PI / 2 + this.angle_;\n                radiusC = i % 2 === 0 ? this.radius_ : radius2;\n                context.lineTo(renderOptions.size / 2 + radiusC * Math.cos(angle0), renderOptions.size / 2 + radiusC * Math.sin(angle0));\n            }\n        }\n        context.fillStyle = defaultFillStyle;\n        context.fill();\n        if (this.stroke_) {\n            context.strokeStyle = renderOptions.strokeStyle;\n            context.lineWidth = renderOptions.strokeWidth;\n            if (renderOptions.lineDash) {\n                context.setLineDash(renderOptions.lineDash);\n                context.lineDashOffset = renderOptions.lineDashOffset;\n            }\n            context.stroke();\n        }\n        context.closePath();\n    };\n    return RegularShape;\n}(ImageStyle));\nexport default RegularShape;\n//# sourceMappingURL=RegularShape.js.map","/**\n * @module ol/style/Circle\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport RegularShape from './RegularShape.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} radius Circle radius.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n */\n/**\n * @classdesc\n * Set circle style for vector features.\n * @api\n */\nvar CircleStyle = /** @class */ (function (_super) {\n    __extends(CircleStyle, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function CircleStyle(opt_options) {\n        var _this = this;\n        var options = opt_options || /** @type {Options} */ ({});\n        _this = _super.call(this, {\n            points: Infinity,\n            fill: options.fill,\n            radius: options.radius,\n            stroke: options.stroke\n        }) || this;\n        return _this;\n    }\n    /**\n    * Clones the style.\n    * @return {CircleStyle} The cloned style.\n    * @override\n    * @api\n    */\n    CircleStyle.prototype.clone = function () {\n        var style = new CircleStyle({\n            fill: this.getFill() ? this.getFill().clone() : undefined,\n            stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n            radius: this.getRadius()\n        });\n        style.setOpacity(this.getOpacity());\n        style.setScale(this.getScale());\n        return style;\n    };\n    /**\n    * Set the circle radius.\n    *\n    * @param {number} radius Circle radius.\n    * @api\n    */\n    CircleStyle.prototype.setRadius = function (radius) {\n        this.radius_ = radius;\n    };\n    return CircleStyle;\n}(RegularShape));\nexport default CircleStyle;\n//# sourceMappingURL=Circle.js.map","/**\n * @module ol/style/Fill\n */\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [color=null] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n */\n/**\n * @classdesc\n * Set fill style for vector features.\n * @api\n */\nvar Fill = /** @class */ (function () {\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function Fill(opt_options) {\n        var options = opt_options || {};\n        /**\n         * @private\n         * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike}\n         */\n        this.color_ = options.color !== undefined ? options.color : null;\n    }\n    /**\n     * Clones the style. The color is not cloned if it is an {@link module:ol/colorlike~ColorLike}.\n     * @return {Fill} The cloned style.\n     * @api\n     */\n    Fill.prototype.clone = function () {\n        var color = this.getColor();\n        return new Fill({\n            color: Array.isArray(color) ? color.slice() : color || undefined\n        });\n    };\n    /**\n     * Get the fill color.\n     * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} Color.\n     * @api\n     */\n    Fill.prototype.getColor = function () {\n        return this.color_;\n    };\n    /**\n     * Set the color.\n     *\n     * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} color Color.\n     * @api\n     */\n    Fill.prototype.setColor = function (color) {\n        this.color_ = color;\n    };\n    return Fill;\n}());\nexport default Fill;\n//# sourceMappingURL=Fill.js.map","/**\n * @module ol/style/Stroke\n */\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [color] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n * @property {string} [lineCap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {string} [lineJoin='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array<number>} [lineDash] Line dash pattern. Default is `undefined` (no dash).\n * Please note that Internet Explorer 10 and lower do not support the `setLineDash` method on\n * the `CanvasRenderingContext2D` and therefore this option will have no visual effect in these browsers.\n * @property {number} [lineDashOffset=0] Line dash offset.\n * @property {number} [miterLimit=10] Miter limit.\n * @property {number} [width] Width.\n */\n/**\n * @classdesc\n * Set stroke style for vector features.\n * Note that the defaults given are the Canvas defaults, which will be used if\n * option is not defined. The `get` functions return whatever was entered in\n * the options; they will not return the default.\n * @api\n */\nvar Stroke = /** @class */ (function () {\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function Stroke(opt_options) {\n        var options = opt_options || {};\n        /**\n         * @private\n         * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike}\n         */\n        this.color_ = options.color !== undefined ? options.color : null;\n        /**\n         * @private\n         * @type {string|undefined}\n         */\n        this.lineCap_ = options.lineCap;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        this.lineDash_ = options.lineDash !== undefined ? options.lineDash : null;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        this.lineDashOffset_ = options.lineDashOffset;\n        /**\n         * @private\n         * @type {string|undefined}\n         */\n        this.lineJoin_ = options.lineJoin;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        this.miterLimit_ = options.miterLimit;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        this.width_ = options.width;\n    }\n    /**\n     * Clones the style.\n     * @return {Stroke} The cloned style.\n     * @api\n     */\n    Stroke.prototype.clone = function () {\n        var color = this.getColor();\n        return new Stroke({\n            color: Array.isArray(color) ? color.slice() : color || undefined,\n            lineCap: this.getLineCap(),\n            lineDash: this.getLineDash() ? this.getLineDash().slice() : undefined,\n            lineDashOffset: this.getLineDashOffset(),\n            lineJoin: this.getLineJoin(),\n            miterLimit: this.getMiterLimit(),\n            width: this.getWidth()\n        });\n    };\n    /**\n     * Get the stroke color.\n     * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} Color.\n     * @api\n     */\n    Stroke.prototype.getColor = function () {\n        return this.color_;\n    };\n    /**\n     * Get the line cap type for the stroke.\n     * @return {string|undefined} Line cap.\n     * @api\n     */\n    Stroke.prototype.getLineCap = function () {\n        return this.lineCap_;\n    };\n    /**\n     * Get the line dash style for the stroke.\n     * @return {Array<number>} Line dash.\n     * @api\n     */\n    Stroke.prototype.getLineDash = function () {\n        return this.lineDash_;\n    };\n    /**\n     * Get the line dash offset for the stroke.\n     * @return {number|undefined} Line dash offset.\n     * @api\n     */\n    Stroke.prototype.getLineDashOffset = function () {\n        return this.lineDashOffset_;\n    };\n    /**\n     * Get the line join type for the stroke.\n     * @return {string|undefined} Line join.\n     * @api\n     */\n    Stroke.prototype.getLineJoin = function () {\n        return this.lineJoin_;\n    };\n    /**\n     * Get the miter limit for the stroke.\n     * @return {number|undefined} Miter limit.\n     * @api\n     */\n    Stroke.prototype.getMiterLimit = function () {\n        return this.miterLimit_;\n    };\n    /**\n     * Get the stroke width.\n     * @return {number|undefined} Width.\n     * @api\n     */\n    Stroke.prototype.getWidth = function () {\n        return this.width_;\n    };\n    /**\n     * Set the color.\n     *\n     * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} color Color.\n     * @api\n     */\n    Stroke.prototype.setColor = function (color) {\n        this.color_ = color;\n    };\n    /**\n     * Set the line cap.\n     *\n     * @param {string|undefined} lineCap Line cap.\n     * @api\n     */\n    Stroke.prototype.setLineCap = function (lineCap) {\n        this.lineCap_ = lineCap;\n    };\n    /**\n     * Set the line dash.\n     *\n     * Please note that Internet Explorer 10 and lower [do not support][mdn] the\n     * `setLineDash` method on the `CanvasRenderingContext2D` and therefore this\n     * property will have no visual effect in these browsers.\n     *\n     * [mdn]: https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/setLineDash#Browser_compatibility\n     *\n     * @param {Array<number>} lineDash Line dash.\n     * @api\n     */\n    Stroke.prototype.setLineDash = function (lineDash) {\n        this.lineDash_ = lineDash;\n    };\n    /**\n     * Set the line dash offset.\n     *\n     * @param {number|undefined} lineDashOffset Line dash offset.\n     * @api\n     */\n    Stroke.prototype.setLineDashOffset = function (lineDashOffset) {\n        this.lineDashOffset_ = lineDashOffset;\n    };\n    /**\n     * Set the line join.\n     *\n     * @param {string|undefined} lineJoin Line join.\n     * @api\n     */\n    Stroke.prototype.setLineJoin = function (lineJoin) {\n        this.lineJoin_ = lineJoin;\n    };\n    /**\n     * Set the miter limit.\n     *\n     * @param {number|undefined} miterLimit Miter limit.\n     * @api\n     */\n    Stroke.prototype.setMiterLimit = function (miterLimit) {\n        this.miterLimit_ = miterLimit;\n    };\n    /**\n     * Set the width.\n     *\n     * @param {number|undefined} width Width.\n     * @api\n     */\n    Stroke.prototype.setWidth = function (width) {\n        this.width_ = width;\n    };\n    return Stroke;\n}());\nexport default Stroke;\n//# sourceMappingURL=Stroke.js.map","/**\n * @module ol/style/Style\n */\n/**\n * Feature styles.\n *\n * If no style is defined, the following default style is used:\n * ```js\n *  import {Fill, Stroke, Circle, Style} from 'ol/style';\n *\n *  var fill = new Fill({\n *    color: 'rgba(255,255,255,0.4)'\n *  });\n *  var stroke = new Stroke({\n *    color: '#3399CC',\n *    width: 1.25\n *  });\n *  var styles = [\n *    new Style({\n *      image: new Circle({\n *        fill: fill,\n *        stroke: stroke,\n *        radius: 5\n *      }),\n *      fill: fill,\n *      stroke: stroke\n *    })\n *  ];\n * ```\n *\n * A separate editing style has the following defaults:\n * ```js\n *  import {Fill, Stroke, Circle, Style} from 'ol/style';\n *  import GeometryType from 'ol/geom/GeometryType';\n *\n *  var white = [255, 255, 255, 1];\n *  var blue = [0, 153, 255, 1];\n *  var width = 3;\n *  styles[GeometryType.POLYGON] = [\n *    new Style({\n *      fill: new Fill({\n *        color: [255, 255, 255, 0.5]\n *      })\n *    })\n *  ];\n *  styles[GeometryType.MULTI_POLYGON] =\n *      styles[GeometryType.POLYGON];\n *  styles[GeometryType.LINE_STRING] = [\n *    new Style({\n *      stroke: new Stroke({\n *        color: white,\n *        width: width + 2\n *      })\n *    }),\n *    new Style({\n *      stroke: new Stroke({\n *        color: blue,\n *        width: width\n *      })\n *    })\n *  ];\n *  styles[GeometryType.MULTI_LINE_STRING] =\n *      styles[GeometryType.LINE_STRING];\n *  styles[GeometryType.POINT] = [\n *    new Style({\n *      image: new Circle({\n *        radius: width * 2,\n *        fill: new Fill({\n *          color: blue\n *        }),\n *        stroke: new Stroke({\n *          color: white,\n *          width: width / 2\n *        })\n *      }),\n *      zIndex: Infinity\n *    })\n *  ];\n *  styles[GeometryType.MULTI_POINT] =\n *      styles[GeometryType.POINT];\n *  styles[GeometryType.GEOMETRY_COLLECTION] =\n *      styles[GeometryType.POLYGON].concat(\n *          styles[GeometryType.LINE_STRING],\n *          styles[GeometryType.POINT]\n *      );\n * ```\n */\nimport { assert } from '../asserts.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport CircleStyle from './Circle.js';\nimport Fill from './Fill.js';\nimport Stroke from './Stroke.js';\n/**\n * A function that takes an {@link module:ol/Feature} and a `{number}`\n * representing the view's resolution. The function should return a\n * {@link module:ol/style/Style} or an array of them. This way e.g. a\n * vector layer can be styled.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike, number):(Style|Array<Style>)} StyleFunction\n */\n/**\n * A {@link Style}, an array of {@link Style}, or a {@link StyleFunction}.\n * @typedef {Style|Array<Style>|StyleFunction} StyleLike\n */\n/**\n * A function that takes an {@link module:ol/Feature} as argument and returns an\n * {@link module:ol/geom/Geometry} that will be rendered and styled for the feature.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike):\n *     (import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined)} GeometryFunction\n */\n/**\n * Custom renderer function. Takes two arguments:\n *\n * 1. The pixel coordinates of the geometry in GeoJSON notation.\n * 2. The {@link module:ol/render~State} of the layer renderer.\n *\n * @typedef {function((import(\"../coordinate.js\").Coordinate|Array<import(\"../coordinate.js\").Coordinate>|Array<Array<import(\"../coordinate.js\").Coordinate>>),import(\"../render.js\").State): void}\n * RenderFunction\n */\n/**\n * @typedef {Object} Options\n * @property {string|import(\"../geom/Geometry.js\").default|GeometryFunction} [geometry] Feature property or geometry\n * or function returning a geometry to render for this style.\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {import(\"./Image.js\").default} [image] Image style.\n * @property {RenderFunction} [renderer] Custom renderer. When configured, `fill`, `stroke` and `image` will be\n * ignored, and the provided function will be called with each render frame for each geometry.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./Text.js\").default} [text] Text style.\n * @property {number} [zIndex] Z index.\n */\n/**\n * @classdesc\n * Container for vector feature rendering styles. Any changes made to the style\n * or its children through `set*()` methods will not take effect until the\n * feature or layer that uses the style is re-rendered.\n * @api\n */\nvar Style = /** @class */ (function () {\n    /**\n     * @param {Options=} opt_options Style options.\n     */\n    function Style(opt_options) {\n        var options = opt_options || {};\n        /**\n         * @private\n         * @type {string|import(\"../geom/Geometry.js\").default|GeometryFunction}\n         */\n        this.geometry_ = null;\n        /**\n         * @private\n         * @type {!GeometryFunction}\n         */\n        this.geometryFunction_ = defaultGeometryFunction;\n        if (options.geometry !== undefined) {\n            this.setGeometry(options.geometry);\n        }\n        /**\n         * @private\n         * @type {import(\"./Fill.js\").default}\n         */\n        this.fill_ = options.fill !== undefined ? options.fill : null;\n        /**\n           * @private\n           * @type {import(\"./Image.js\").default}\n           */\n        this.image_ = options.image !== undefined ? options.image : null;\n        /**\n         * @private\n         * @type {RenderFunction|null}\n         */\n        this.renderer_ = options.renderer !== undefined ? options.renderer : null;\n        /**\n         * @private\n         * @type {import(\"./Stroke.js\").default}\n         */\n        this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n        /**\n         * @private\n         * @type {import(\"./Text.js\").default}\n         */\n        this.text_ = options.text !== undefined ? options.text : null;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        this.zIndex_ = options.zIndex;\n    }\n    /**\n     * Clones the style.\n     * @return {Style} The cloned style.\n     * @api\n     */\n    Style.prototype.clone = function () {\n        var geometry = this.getGeometry();\n        if (geometry && typeof geometry === 'object') {\n            geometry = /** @type {import(\"../geom/Geometry.js\").default} */ (geometry).clone();\n        }\n        return new Style({\n            geometry: geometry,\n            fill: this.getFill() ? this.getFill().clone() : undefined,\n            image: this.getImage() ? this.getImage().clone() : undefined,\n            stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n            text: this.getText() ? this.getText().clone() : undefined,\n            zIndex: this.getZIndex()\n        });\n    };\n    /**\n     * Get the custom renderer function that was configured with\n     * {@link #setRenderer} or the `renderer` constructor option.\n     * @return {RenderFunction|null} Custom renderer function.\n     * @api\n     */\n    Style.prototype.getRenderer = function () {\n        return this.renderer_;\n    };\n    /**\n     * Sets a custom renderer function for this style. When set, `fill`, `stroke`\n     * and `image` options of the style will be ignored.\n     * @param {RenderFunction|null} renderer Custom renderer function.\n     * @api\n     */\n    Style.prototype.setRenderer = function (renderer) {\n        this.renderer_ = renderer;\n    };\n    /**\n     * Get the geometry to be rendered.\n     * @return {string|import(\"../geom/Geometry.js\").default|GeometryFunction}\n     * Feature property or geometry or function that returns the geometry that will\n     * be rendered with this style.\n     * @api\n     */\n    Style.prototype.getGeometry = function () {\n        return this.geometry_;\n    };\n    /**\n     * Get the function used to generate a geometry for rendering.\n     * @return {!GeometryFunction} Function that is called with a feature\n     * and returns the geometry to render instead of the feature's geometry.\n     * @api\n     */\n    Style.prototype.getGeometryFunction = function () {\n        return this.geometryFunction_;\n    };\n    /**\n     * Get the fill style.\n     * @return {import(\"./Fill.js\").default} Fill style.\n     * @api\n     */\n    Style.prototype.getFill = function () {\n        return this.fill_;\n    };\n    /**\n     * Set the fill style.\n     * @param {import(\"./Fill.js\").default} fill Fill style.\n     * @api\n     */\n    Style.prototype.setFill = function (fill) {\n        this.fill_ = fill;\n    };\n    /**\n     * Get the image style.\n     * @return {import(\"./Image.js\").default} Image style.\n     * @api\n     */\n    Style.prototype.getImage = function () {\n        return this.image_;\n    };\n    /**\n     * Set the image style.\n     * @param {import(\"./Image.js\").default} image Image style.\n     * @api\n     */\n    Style.prototype.setImage = function (image) {\n        this.image_ = image;\n    };\n    /**\n     * Get the stroke style.\n     * @return {import(\"./Stroke.js\").default} Stroke style.\n     * @api\n     */\n    Style.prototype.getStroke = function () {\n        return this.stroke_;\n    };\n    /**\n     * Set the stroke style.\n     * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n     * @api\n     */\n    Style.prototype.setStroke = function (stroke) {\n        this.stroke_ = stroke;\n    };\n    /**\n     * Get the text style.\n     * @return {import(\"./Text.js\").default} Text style.\n     * @api\n     */\n    Style.prototype.getText = function () {\n        return this.text_;\n    };\n    /**\n     * Set the text style.\n     * @param {import(\"./Text.js\").default} text Text style.\n     * @api\n     */\n    Style.prototype.setText = function (text) {\n        this.text_ = text;\n    };\n    /**\n     * Get the z-index for the style.\n     * @return {number|undefined} ZIndex.\n     * @api\n     */\n    Style.prototype.getZIndex = function () {\n        return this.zIndex_;\n    };\n    /**\n     * Set a geometry that is rendered instead of the feature's geometry.\n     *\n     * @param {string|import(\"../geom/Geometry.js\").default|GeometryFunction} geometry\n     *     Feature property or geometry or function returning a geometry to render\n     *     for this style.\n     * @api\n     */\n    Style.prototype.setGeometry = function (geometry) {\n        if (typeof geometry === 'function') {\n            this.geometryFunction_ = geometry;\n        }\n        else if (typeof geometry === 'string') {\n            this.geometryFunction_ = function (feature) {\n                return (\n                /** @type {import(\"../geom/Geometry.js\").default} */ (feature.get(geometry)));\n            };\n        }\n        else if (!geometry) {\n            this.geometryFunction_ = defaultGeometryFunction;\n        }\n        else if (geometry !== undefined) {\n            this.geometryFunction_ = function () {\n                return (\n                /** @type {import(\"../geom/Geometry.js\").default} */ (geometry));\n            };\n        }\n        this.geometry_ = geometry;\n    };\n    /**\n     * Set the z-index.\n     *\n     * @param {number|undefined} zIndex ZIndex.\n     * @api\n     */\n    Style.prototype.setZIndex = function (zIndex) {\n        this.zIndex_ = zIndex;\n    };\n    return Style;\n}());\n/**\n * Convert the provided object into a style function.  Functions passed through\n * unchanged.  Arrays of Style or single style objects wrapped in a\n * new style function.\n * @param {StyleFunction|Array<Style>|Style} obj\n *     A style function, a single style, or an array of styles.\n * @return {StyleFunction} A style function.\n */\nexport function toFunction(obj) {\n    var styleFunction;\n    if (typeof obj === 'function') {\n        styleFunction = obj;\n    }\n    else {\n        /**\n         * @type {Array<Style>}\n         */\n        var styles_1;\n        if (Array.isArray(obj)) {\n            styles_1 = obj;\n        }\n        else {\n            assert(typeof /** @type {?} */ (obj).getZIndex === 'function', 41); // Expected an `Style` or an array of `Style`\n            var style = /** @type {Style} */ (obj);\n            styles_1 = [style];\n        }\n        styleFunction = function () {\n            return styles_1;\n        };\n    }\n    return styleFunction;\n}\n/**\n * @type {Array<Style>}\n */\nvar defaultStyles = null;\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} resolution Resolution.\n * @return {Array<Style>} Style.\n */\nexport function createDefaultStyle(feature, resolution) {\n    // We don't use an immediately-invoked function\n    // and a closure so we don't get an error at script evaluation time in\n    // browsers that do not support Canvas. (import(\"./Circle.js\").CircleStyle does\n    // canvas.getContext('2d') at construction time, which will cause an.error\n    // in such browsers.)\n    if (!defaultStyles) {\n        var fill = new Fill({\n            color: 'rgba(255,255,255,0.4)'\n        });\n        var stroke = new Stroke({\n            color: '#3399CC',\n            width: 1.25\n        });\n        defaultStyles = [\n            new Style({\n                image: new CircleStyle({\n                    fill: fill,\n                    stroke: stroke,\n                    radius: 5\n                }),\n                fill: fill,\n                stroke: stroke\n            })\n        ];\n    }\n    return defaultStyles;\n}\n/**\n * Default styles for editing features.\n * @return {Object<import(\"../geom/GeometryType.js\").default, Array<Style>>} Styles\n */\nexport function createEditingStyle() {\n    /** @type {Object<import(\"../geom/GeometryType.js\").default, Array<Style>>} */\n    var styles = {};\n    var white = [255, 255, 255, 1];\n    var blue = [0, 153, 255, 1];\n    var width = 3;\n    styles[GeometryType.POLYGON] = [\n        new Style({\n            fill: new Fill({\n                color: [255, 255, 255, 0.5]\n            })\n        })\n    ];\n    styles[GeometryType.MULTI_POLYGON] =\n        styles[GeometryType.POLYGON];\n    styles[GeometryType.LINE_STRING] = [\n        new Style({\n            stroke: new Stroke({\n                color: white,\n                width: width + 2\n            })\n        }),\n        new Style({\n            stroke: new Stroke({\n                color: blue,\n                width: width\n            })\n        })\n    ];\n    styles[GeometryType.MULTI_LINE_STRING] =\n        styles[GeometryType.LINE_STRING];\n    styles[GeometryType.CIRCLE] =\n        styles[GeometryType.POLYGON].concat(styles[GeometryType.LINE_STRING]);\n    styles[GeometryType.POINT] = [\n        new Style({\n            image: new CircleStyle({\n                radius: width * 2,\n                fill: new Fill({\n                    color: blue\n                }),\n                stroke: new Stroke({\n                    color: white,\n                    width: width / 2\n                })\n            }),\n            zIndex: Infinity\n        })\n    ];\n    styles[GeometryType.MULTI_POINT] =\n        styles[GeometryType.POINT];\n    styles[GeometryType.GEOMETRY_COLLECTION] =\n        styles[GeometryType.POLYGON].concat(styles[GeometryType.LINE_STRING], styles[GeometryType.POINT]);\n    return styles;\n}\n/**\n * Function that is called with a feature and returns its default geometry.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature to get the geometry for.\n * @return {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined} Geometry to render.\n */\nfunction defaultGeometryFunction(feature) {\n    return feature.getGeometry();\n}\nexport default Style;\n//# sourceMappingURL=Style.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/layer/BaseVector\n */\nimport Layer from './Layer.js';\nimport { assign } from '../obj.js';\nimport { createDefaultStyle, toFunction as toStyleFunction } from '../style/Style.js';\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {import(\"../render.js\").OrderFunction} [renderOrder] Render order. Function to be used when sorting\n * features before rendering. By default features are drawn in the order that they are created. Use\n * `null` to avoid the sort, but get an undefined draw order.\n * @property {number} [renderBuffer=100] The buffer in pixels around the viewport extent used by the\n * renderer when getting features from the vector source for the rendering or hit-detection.\n * Recommended value: the size of the largest symbol, line width or label.\n * @property {import(\"../source/Vector.js\").default} [source] Source.\n * @property {import(\"../PluggableMap.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link module:ol/Map#addLayer}.\n * @property {boolean} [declutter=false] Declutter images and text. Decluttering is applied to all\n * image and text styles, and the priority is defined by the z-index of the style. Lower z-index\n * means higher priority.\n * @property {import(\"../style/Style.js\").StyleLike} [style] Layer style. See\n * {@link module:ol/style} for default style which will be used if this is not defined.\n * @property {boolean} [updateWhileAnimating=false] When set to `true`, feature batches will\n * be recreated during animations. This means that no vectors will be shown clipped, but the\n * setting will have a performance impact for large amounts of vector data. When set to `false`,\n * batches will be recreated when no animation is active.\n * @property {boolean} [updateWhileInteracting=false] When set to `true`, feature batches will\n * be recreated during interactions. See also `updateWhileAnimating`.\n */\n/**\n * @enum {string}\n * @private\n */\nvar Property = {\n    RENDER_ORDER: 'renderOrder'\n};\n/**\n * @classdesc\n * Vector data that is rendered client-side.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Vector.js\").default|import(\"../source/VectorTile.js\").default} VectorSourceType\n * @extends {Layer<VectorSourceType>}\n * @api\n */\nvar BaseVectorLayer = /** @class */ (function (_super) {\n    __extends(BaseVectorLayer, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function BaseVectorLayer(opt_options) {\n        var _this = this;\n        var options = opt_options ?\n            opt_options : /** @type {Options} */ ({});\n        var baseOptions = assign({}, options);\n        delete baseOptions.style;\n        delete baseOptions.renderBuffer;\n        delete baseOptions.updateWhileAnimating;\n        delete baseOptions.updateWhileInteracting;\n        _this = _super.call(this, baseOptions) || this;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.declutter_ = options.declutter !== undefined ? options.declutter : false;\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.renderBuffer_ = options.renderBuffer !== undefined ?\n            options.renderBuffer : 100;\n        /**\n         * User provided style.\n         * @type {import(\"../style/Style.js\").StyleLike}\n         * @private\n         */\n        _this.style_ = null;\n        /**\n         * Style function for use within the library.\n         * @type {import(\"../style/Style.js\").StyleFunction|undefined}\n         * @private\n         */\n        _this.styleFunction_ = undefined;\n        _this.setStyle(options.style);\n        /**\n         * @type {boolean}\n         * @private\n         */\n        _this.updateWhileAnimating_ = options.updateWhileAnimating !== undefined ?\n            options.updateWhileAnimating : false;\n        /**\n         * @type {boolean}\n         * @private\n         */\n        _this.updateWhileInteracting_ = options.updateWhileInteracting !== undefined ?\n            options.updateWhileInteracting : false;\n        return _this;\n    }\n    /**\n     * @return {boolean} Declutter.\n     */\n    BaseVectorLayer.prototype.getDeclutter = function () {\n        return this.declutter_;\n    };\n    /**\n     * @return {number|undefined} Render buffer.\n     */\n    BaseVectorLayer.prototype.getRenderBuffer = function () {\n        return this.renderBuffer_;\n    };\n    /**\n     * @return {function(import(\"../Feature.js\").default, import(\"../Feature.js\").default): number|null|undefined} Render\n     *     order.\n     */\n    BaseVectorLayer.prototype.getRenderOrder = function () {\n        return (\n        /** @type {import(\"../render.js\").OrderFunction|null|undefined} */ (this.get(Property.RENDER_ORDER)));\n    };\n    /**\n     * Get the style for features.  This returns whatever was passed to the `style`\n     * option at construction or to the `setStyle` method.\n     * @return {import(\"../style/Style.js\").StyleLike}\n     *     Layer style.\n     * @api\n     */\n    BaseVectorLayer.prototype.getStyle = function () {\n        return this.style_;\n    };\n    /**\n     * Get the style function.\n     * @return {import(\"../style/Style.js\").StyleFunction|undefined} Layer style function.\n     * @api\n     */\n    BaseVectorLayer.prototype.getStyleFunction = function () {\n        return this.styleFunction_;\n    };\n    /**\n     * @return {boolean} Whether the rendered layer should be updated while\n     *     animating.\n     */\n    BaseVectorLayer.prototype.getUpdateWhileAnimating = function () {\n        return this.updateWhileAnimating_;\n    };\n    /**\n     * @return {boolean} Whether the rendered layer should be updated while\n     *     interacting.\n     */\n    BaseVectorLayer.prototype.getUpdateWhileInteracting = function () {\n        return this.updateWhileInteracting_;\n    };\n    /**\n     * @param {import(\"../render.js\").OrderFunction|null|undefined} renderOrder\n     *     Render order.\n     */\n    BaseVectorLayer.prototype.setRenderOrder = function (renderOrder) {\n        this.set(Property.RENDER_ORDER, renderOrder);\n    };\n    /**\n     * Set the style for features.  This can be a single style object, an array\n     * of styles, or a function that takes a feature and resolution and returns\n     * an array of styles. If it is `undefined` the default style is used. If\n     * it is `null` the layer has no style (a `null` style), so only features\n     * that have their own styles will be rendered in the layer. See\n     * {@link module:ol/style} for information on the default style.\n     * @param {import(\"../style/Style.js\").default|Array<import(\"../style/Style.js\").default>|import(\"../style/Style.js\").StyleFunction|null|undefined} style Layer style.\n     * @api\n     */\n    BaseVectorLayer.prototype.setStyle = function (style) {\n        this.style_ = style !== undefined ? style : createDefaultStyle;\n        this.styleFunction_ = style === null ?\n            undefined : toStyleFunction(this.style_);\n        this.changed();\n    };\n    return BaseVectorLayer;\n}(Layer));\nexport default BaseVectorLayer;\n//# sourceMappingURL=BaseVector.js.map","/**\n * @module ol/render/VectorContext\n */\n/**\n * @classdesc\n * Context for drawing geometries.  A vector context is available on render\n * events and does not need to be constructed directly.\n * @api\n */\nvar VectorContext = /** @class */ (function () {\n    function VectorContext() {\n    }\n    /**\n     * Render a geometry with a custom renderer.\n     *\n     * @param {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     * @param {Function} renderer Renderer.\n     */\n    VectorContext.prototype.drawCustom = function (geometry, feature, renderer) { };\n    /**\n     * Render a geometry.\n     *\n     * @param {import(\"../geom/Geometry.js\").default} geometry The geometry to render.\n     */\n    VectorContext.prototype.drawGeometry = function (geometry) { };\n    /**\n     * Set the rendering style.\n     *\n     * @param {import(\"../style/Style.js\").default} style The rendering style.\n     */\n    VectorContext.prototype.setStyle = function (style) { };\n    /**\n     * @param {import(\"../geom/Circle.js\").default} circleGeometry Circle geometry.\n     * @param {import(\"../Feature.js\").default} feature Feature.\n     */\n    VectorContext.prototype.drawCircle = function (circleGeometry, feature) { };\n    /**\n     * @param {import(\"../Feature.js\").default} feature Feature.\n     * @param {import(\"../style/Style.js\").default} style Style.\n     */\n    VectorContext.prototype.drawFeature = function (feature, style) { };\n    /**\n     * @param {import(\"../geom/GeometryCollection.js\").default} geometryCollectionGeometry Geometry collection.\n     * @param {import(\"../Feature.js\").default} feature Feature.\n     */\n    VectorContext.prototype.drawGeometryCollection = function (geometryCollectionGeometry, feature) { };\n    /**\n     * @param {import(\"../geom/LineString.js\").default|import(\"./Feature.js\").default} lineStringGeometry Line string geometry.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     */\n    VectorContext.prototype.drawLineString = function (lineStringGeometry, feature) { };\n    /**\n     * @param {import(\"../geom/MultiLineString.js\").default|import(\"./Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     */\n    VectorContext.prototype.drawMultiLineString = function (multiLineStringGeometry, feature) { };\n    /**\n     * @param {import(\"../geom/MultiPoint.js\").default|import(\"./Feature.js\").default} multiPointGeometry MultiPoint geometry.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     */\n    VectorContext.prototype.drawMultiPoint = function (multiPointGeometry, feature) { };\n    /**\n     * @param {import(\"../geom/MultiPolygon.js\").default} multiPolygonGeometry MultiPolygon geometry.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     */\n    VectorContext.prototype.drawMultiPolygon = function (multiPolygonGeometry, feature) { };\n    /**\n     * @param {import(\"../geom/Point.js\").default|import(\"./Feature.js\").default} pointGeometry Point geometry.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     */\n    VectorContext.prototype.drawPoint = function (pointGeometry, feature) { };\n    /**\n     * @param {import(\"../geom/Polygon.js\").default|import(\"./Feature.js\").default} polygonGeometry Polygon geometry.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     */\n    VectorContext.prototype.drawPolygon = function (polygonGeometry, feature) { };\n    /**\n     * @param {import(\"../geom/Geometry.js\").default|import(\"./Feature.js\").default} geometry Geometry.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     */\n    VectorContext.prototype.drawText = function (geometry, feature) { };\n    /**\n     * @param {import(\"../style/Fill.js\").default} fillStyle Fill style.\n     * @param {import(\"../style/Stroke.js\").default} strokeStyle Stroke style.\n     */\n    VectorContext.prototype.setFillStrokeStyle = function (fillStyle, strokeStyle) { };\n    /**\n     * @param {import(\"../style/Image.js\").default} imageStyle Image style.\n     * @param {import(\"./canvas.js\").DeclutterGroup=} opt_declutterGroup Declutter.\n     */\n    VectorContext.prototype.setImageStyle = function (imageStyle, opt_declutterGroup) { };\n    /**\n     * @param {import(\"../style/Text.js\").default} textStyle Text style.\n     * @param {import(\"./canvas.js\").DeclutterGroup=} opt_declutterGroup Declutter.\n     */\n    VectorContext.prototype.setTextStyle = function (textStyle, opt_declutterGroup) { };\n    return VectorContext;\n}());\nexport default VectorContext;\n//# sourceMappingURL=VectorContext.js.map","/**\n * @module ol/render/canvas/Instruction\n */\n/**\n * @enum {number}\n */\nvar Instruction = {\n    BEGIN_GEOMETRY: 0,\n    BEGIN_PATH: 1,\n    CIRCLE: 2,\n    CLOSE_PATH: 3,\n    CUSTOM: 4,\n    DRAW_CHARS: 5,\n    DRAW_IMAGE: 6,\n    END_GEOMETRY: 7,\n    FILL: 8,\n    MOVE_TO_LINE_TO: 9,\n    SET_FILL_STYLE: 10,\n    SET_STROKE_STYLE: 11,\n    STROKE: 12\n};\n/**\n * @type {Array<Instruction>}\n */\nexport var fillInstruction = [Instruction.FILL];\n/**\n * @type {Array<Instruction>}\n */\nexport var strokeInstruction = [Instruction.STROKE];\n/**\n * @type {Array<Instruction>}\n */\nexport var beginPathInstruction = [Instruction.BEGIN_PATH];\n/**\n * @type {Array<Instruction>}\n */\nexport var closePathInstruction = [Instruction.CLOSE_PATH];\nexport default Instruction;\n//# sourceMappingURL=Instruction.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/render/canvas/Builder\n */\nimport { equals, reverseSubArray } from '../../array.js';\nimport { asColorLike } from '../../colorlike.js';\nimport { buffer, clone, coordinateRelationship } from '../../extent.js';\nimport Relationship from '../../extent/Relationship.js';\nimport GeometryType from '../../geom/GeometryType.js';\nimport { inflateCoordinates, inflateCoordinatesArray, inflateMultiCoordinatesArray } from '../../geom/flat/inflate.js';\nimport VectorContext from '../VectorContext.js';\nimport { defaultFillStyle, defaultStrokeStyle, defaultMiterLimit, defaultLineWidth, defaultLineJoin, defaultLineDashOffset, defaultLineDash, defaultLineCap } from '../canvas.js';\nimport CanvasInstruction from './Instruction.js';\n/**\n * @typedef {Object} SerializableInstructions\n * @property {Array<*>} instructions The rendering instructions.\n * @property {Array<*>} hitDetectionInstructions The rendering hit detection instructions.\n * @property {Array<number>} coordinates The array of all coordinates.\n * @property {!Object<string, import(\"../canvas.js\").TextState>} [textStates] The text states (decluttering).\n * @property {!Object<string, import(\"../canvas.js\").FillState>} [fillStates] The fill states (decluttering).\n * @property {!Object<string, import(\"../canvas.js\").StrokeState>} [strokeStates] The stroke states (decluttering).\n */\nvar CanvasBuilder = /** @class */ (function (_super) {\n    __extends(CanvasBuilder, _super);\n    /**\n     * @param {number} tolerance Tolerance.\n     * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n     * @param {number} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     */\n    function CanvasBuilder(tolerance, maxExtent, resolution, pixelRatio) {\n        var _this = _super.call(this) || this;\n        /**\n         * @protected\n         * @type {number}\n         */\n        _this.tolerance = tolerance;\n        /**\n         * @protected\n         * @const\n         * @type {import(\"../../extent.js\").Extent}\n         */\n        _this.maxExtent = maxExtent;\n        /**\n         * @protected\n         * @type {number}\n         */\n        _this.pixelRatio = pixelRatio;\n        /**\n         * @protected\n         * @type {number}\n         */\n        _this.maxLineWidth = 0;\n        /**\n         * @protected\n         * @const\n         * @type {number}\n         */\n        _this.resolution = resolution;\n        /**\n         * @private\n         * @type {Array<*>}\n         */\n        _this.beginGeometryInstruction1_ = null;\n        /**\n         * @private\n         * @type {Array<*>}\n         */\n        _this.beginGeometryInstruction2_ = null;\n        /**\n         * @private\n         * @type {import(\"../../extent.js\").Extent}\n         */\n        _this.bufferedMaxExtent_ = null;\n        /**\n         * @protected\n         * @type {Array<*>}\n         */\n        _this.instructions = [];\n        /**\n         * @protected\n         * @type {Array<number>}\n         */\n        _this.coordinates = [];\n        /**\n         * @private\n         * @type {import(\"../../coordinate.js\").Coordinate}\n         */\n        _this.tmpCoordinate_ = [];\n        /**\n         * @protected\n         * @type {Array<*>}\n         */\n        _this.hitDetectionInstructions = [];\n        /**\n         * @protected\n         * @type {import(\"../canvas.js\").FillStrokeState}\n         */\n        _this.state = /** @type {import(\"../canvas.js\").FillStrokeState} */ ({});\n        return _this;\n    }\n    /**\n     * @protected\n     * @param {Array<number>} dashArray Dash array.\n     * @return {Array<number>} Dash array with pixel ratio applied\n     */\n    CanvasBuilder.prototype.applyPixelRatio = function (dashArray) {\n        var pixelRatio = this.pixelRatio;\n        return pixelRatio == 1 ? dashArray : dashArray.map(function (dash) {\n            return dash * pixelRatio;\n        });\n    };\n    /**\n     * @param {Array<number>} flatCoordinates Flat coordinates.\n     * @param {number} offset Offset.\n     * @param {number} end End.\n     * @param {number} stride Stride.\n     * @param {boolean} closed Last input coordinate equals first.\n     * @param {boolean} skipFirst Skip first coordinate.\n     * @protected\n     * @return {number} My end.\n     */\n    CanvasBuilder.prototype.appendFlatCoordinates = function (flatCoordinates, offset, end, stride, closed, skipFirst) {\n        var myEnd = this.coordinates.length;\n        var extent = this.getBufferedMaxExtent();\n        if (skipFirst) {\n            offset += stride;\n        }\n        var lastXCoord = flatCoordinates[offset];\n        var lastYCoord = flatCoordinates[offset + 1];\n        var nextCoord = this.tmpCoordinate_;\n        var skipped = true;\n        var i, lastRel, nextRel;\n        for (i = offset + stride; i < end; i += stride) {\n            nextCoord[0] = flatCoordinates[i];\n            nextCoord[1] = flatCoordinates[i + 1];\n            nextRel = coordinateRelationship(extent, nextCoord);\n            if (nextRel !== lastRel) {\n                if (skipped) {\n                    this.coordinates[myEnd++] = lastXCoord;\n                    this.coordinates[myEnd++] = lastYCoord;\n                }\n                this.coordinates[myEnd++] = nextCoord[0];\n                this.coordinates[myEnd++] = nextCoord[1];\n                skipped = false;\n            }\n            else if (nextRel === Relationship.INTERSECTING) {\n                this.coordinates[myEnd++] = nextCoord[0];\n                this.coordinates[myEnd++] = nextCoord[1];\n                skipped = false;\n            }\n            else {\n                skipped = true;\n            }\n            lastXCoord = nextCoord[0];\n            lastYCoord = nextCoord[1];\n            lastRel = nextRel;\n        }\n        // Last coordinate equals first or only one point to append:\n        if ((closed && skipped) || i === offset + stride) {\n            this.coordinates[myEnd++] = lastXCoord;\n            this.coordinates[myEnd++] = lastYCoord;\n        }\n        return myEnd;\n    };\n    /**\n     * @param {Array<number>} flatCoordinates Flat coordinates.\n     * @param {number} offset Offset.\n     * @param {Array<number>} ends Ends.\n     * @param {number} stride Stride.\n     * @param {Array<number>} builderEnds Builder ends.\n     * @return {number} Offset.\n     */\n    CanvasBuilder.prototype.drawCustomCoordinates_ = function (flatCoordinates, offset, ends, stride, builderEnds) {\n        for (var i = 0, ii = ends.length; i < ii; ++i) {\n            var end = ends[i];\n            var builderEnd = this.appendFlatCoordinates(flatCoordinates, offset, end, stride, false, false);\n            builderEnds.push(builderEnd);\n            offset = end;\n        }\n        return offset;\n    };\n    /**\n     * @inheritDoc.\n     */\n    CanvasBuilder.prototype.drawCustom = function (geometry, feature, renderer) {\n        this.beginGeometry(feature);\n        var type = geometry.getType();\n        var stride = geometry.getStride();\n        var builderBegin = this.coordinates.length;\n        var flatCoordinates, builderEnd, builderEnds, builderEndss;\n        var offset;\n        if (type == GeometryType.MULTI_POLYGON) {\n            geometry = /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry);\n            flatCoordinates = geometry.getOrientedFlatCoordinates();\n            builderEndss = [];\n            var endss = geometry.getEndss();\n            offset = 0;\n            for (var i = 0, ii = endss.length; i < ii; ++i) {\n                var myEnds = [];\n                offset = this.drawCustomCoordinates_(flatCoordinates, offset, endss[i], stride, myEnds);\n                builderEndss.push(myEnds);\n            }\n            this.instructions.push([CanvasInstruction.CUSTOM,\n                builderBegin, builderEndss, geometry, renderer, inflateMultiCoordinatesArray]);\n        }\n        else if (type == GeometryType.POLYGON || type == GeometryType.MULTI_LINE_STRING) {\n            builderEnds = [];\n            flatCoordinates = (type == GeometryType.POLYGON) ?\n                /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry).getOrientedFlatCoordinates() :\n                geometry.getFlatCoordinates();\n            offset = this.drawCustomCoordinates_(flatCoordinates, 0, \n            /** @type {import(\"../../geom/Polygon.js\").default|import(\"../../geom/MultiLineString.js\").default} */ (geometry).getEnds(), stride, builderEnds);\n            this.instructions.push([CanvasInstruction.CUSTOM,\n                builderBegin, builderEnds, geometry, renderer, inflateCoordinatesArray]);\n        }\n        else if (type == GeometryType.LINE_STRING || type == GeometryType.MULTI_POINT) {\n            flatCoordinates = geometry.getFlatCoordinates();\n            builderEnd = this.appendFlatCoordinates(flatCoordinates, 0, flatCoordinates.length, stride, false, false);\n            this.instructions.push([CanvasInstruction.CUSTOM,\n                builderBegin, builderEnd, geometry, renderer, inflateCoordinates]);\n        }\n        else if (type == GeometryType.POINT) {\n            flatCoordinates = geometry.getFlatCoordinates();\n            this.coordinates.push(flatCoordinates[0], flatCoordinates[1]);\n            builderEnd = this.coordinates.length;\n            this.instructions.push([CanvasInstruction.CUSTOM,\n                builderBegin, builderEnd, geometry, renderer]);\n        }\n        this.endGeometry(feature);\n    };\n    /**\n     * @protected\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     */\n    CanvasBuilder.prototype.beginGeometry = function (feature) {\n        this.beginGeometryInstruction1_ = [CanvasInstruction.BEGIN_GEOMETRY, feature, 0];\n        this.instructions.push(this.beginGeometryInstruction1_);\n        this.beginGeometryInstruction2_ = [CanvasInstruction.BEGIN_GEOMETRY, feature, 0];\n        this.hitDetectionInstructions.push(this.beginGeometryInstruction2_);\n    };\n    /**\n     * @return {SerializableInstructions} the serializable instructions.\n     */\n    CanvasBuilder.prototype.finish = function () {\n        return {\n            instructions: this.instructions,\n            hitDetectionInstructions: this.hitDetectionInstructions,\n            coordinates: this.coordinates\n        };\n    };\n    /**\n     * Reverse the hit detection instructions.\n     */\n    CanvasBuilder.prototype.reverseHitDetectionInstructions = function () {\n        var hitDetectionInstructions = this.hitDetectionInstructions;\n        // step 1 - reverse array\n        hitDetectionInstructions.reverse();\n        // step 2 - reverse instructions within geometry blocks\n        var i;\n        var n = hitDetectionInstructions.length;\n        var instruction;\n        var type;\n        var begin = -1;\n        for (i = 0; i < n; ++i) {\n            instruction = hitDetectionInstructions[i];\n            type = /** @type {CanvasInstruction} */ (instruction[0]);\n            if (type == CanvasInstruction.END_GEOMETRY) {\n                begin = i;\n            }\n            else if (type == CanvasInstruction.BEGIN_GEOMETRY) {\n                instruction[2] = i;\n                reverseSubArray(this.hitDetectionInstructions, begin, i);\n                begin = -1;\n            }\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasBuilder.prototype.setFillStrokeStyle = function (fillStyle, strokeStyle) {\n        var state = this.state;\n        if (fillStyle) {\n            var fillStyleColor = fillStyle.getColor();\n            state.fillStyle = asColorLike(fillStyleColor ?\n                fillStyleColor : defaultFillStyle);\n        }\n        else {\n            state.fillStyle = undefined;\n        }\n        if (strokeStyle) {\n            var strokeStyleColor = strokeStyle.getColor();\n            state.strokeStyle = asColorLike(strokeStyleColor ?\n                strokeStyleColor : defaultStrokeStyle);\n            var strokeStyleLineCap = strokeStyle.getLineCap();\n            state.lineCap = strokeStyleLineCap !== undefined ?\n                strokeStyleLineCap : defaultLineCap;\n            var strokeStyleLineDash = strokeStyle.getLineDash();\n            state.lineDash = strokeStyleLineDash ?\n                strokeStyleLineDash.slice() : defaultLineDash;\n            var strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n            state.lineDashOffset = strokeStyleLineDashOffset ?\n                strokeStyleLineDashOffset : defaultLineDashOffset;\n            var strokeStyleLineJoin = strokeStyle.getLineJoin();\n            state.lineJoin = strokeStyleLineJoin !== undefined ?\n                strokeStyleLineJoin : defaultLineJoin;\n            var strokeStyleWidth = strokeStyle.getWidth();\n            state.lineWidth = strokeStyleWidth !== undefined ?\n                strokeStyleWidth : defaultLineWidth;\n            var strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n            state.miterLimit = strokeStyleMiterLimit !== undefined ?\n                strokeStyleMiterLimit : defaultMiterLimit;\n            if (state.lineWidth > this.maxLineWidth) {\n                this.maxLineWidth = state.lineWidth;\n                // invalidate the buffered max extent cache\n                this.bufferedMaxExtent_ = null;\n            }\n        }\n        else {\n            state.strokeStyle = undefined;\n            state.lineCap = undefined;\n            state.lineDash = null;\n            state.lineDashOffset = undefined;\n            state.lineJoin = undefined;\n            state.lineWidth = undefined;\n            state.miterLimit = undefined;\n        }\n    };\n    /**\n     * @param {import(\"../canvas.js\").FillStrokeState} state State.\n     * @return {Array<*>} Fill instruction.\n     */\n    CanvasBuilder.prototype.createFill = function (state) {\n        var fillStyle = state.fillStyle;\n        /** @type {Array<*>} */\n        var fillInstruction = [CanvasInstruction.SET_FILL_STYLE, fillStyle];\n        if (typeof fillStyle !== 'string') {\n            // Fill is a pattern or gradient - align it!\n            fillInstruction.push(true);\n        }\n        return fillInstruction;\n    };\n    /**\n     * @param {import(\"../canvas.js\").FillStrokeState} state State.\n     */\n    CanvasBuilder.prototype.applyStroke = function (state) {\n        this.instructions.push(this.createStroke(state));\n    };\n    /**\n     * @param {import(\"../canvas.js\").FillStrokeState} state State.\n     * @return {Array<*>} Stroke instruction.\n     */\n    CanvasBuilder.prototype.createStroke = function (state) {\n        return [\n            CanvasInstruction.SET_STROKE_STYLE,\n            state.strokeStyle, state.lineWidth * this.pixelRatio, state.lineCap,\n            state.lineJoin, state.miterLimit,\n            this.applyPixelRatio(state.lineDash), state.lineDashOffset * this.pixelRatio\n        ];\n    };\n    /**\n     * @param {import(\"../canvas.js\").FillStrokeState} state State.\n     * @param {function(this:CanvasBuilder, import(\"../canvas.js\").FillStrokeState):Array<*>} createFill Create fill.\n     */\n    CanvasBuilder.prototype.updateFillStyle = function (state, createFill) {\n        var fillStyle = state.fillStyle;\n        if (typeof fillStyle !== 'string' || state.currentFillStyle != fillStyle) {\n            if (fillStyle !== undefined) {\n                this.instructions.push(createFill.call(this, state));\n            }\n            state.currentFillStyle = fillStyle;\n        }\n    };\n    /**\n     * @param {import(\"../canvas.js\").FillStrokeState} state State.\n     * @param {function(this:CanvasBuilder, import(\"../canvas.js\").FillStrokeState): void} applyStroke Apply stroke.\n     */\n    CanvasBuilder.prototype.updateStrokeStyle = function (state, applyStroke) {\n        var strokeStyle = state.strokeStyle;\n        var lineCap = state.lineCap;\n        var lineDash = state.lineDash;\n        var lineDashOffset = state.lineDashOffset;\n        var lineJoin = state.lineJoin;\n        var lineWidth = state.lineWidth;\n        var miterLimit = state.miterLimit;\n        if (state.currentStrokeStyle != strokeStyle ||\n            state.currentLineCap != lineCap ||\n            (lineDash != state.currentLineDash && !equals(state.currentLineDash, lineDash)) ||\n            state.currentLineDashOffset != lineDashOffset ||\n            state.currentLineJoin != lineJoin ||\n            state.currentLineWidth != lineWidth ||\n            state.currentMiterLimit != miterLimit) {\n            if (strokeStyle !== undefined) {\n                applyStroke.call(this, state);\n            }\n            state.currentStrokeStyle = strokeStyle;\n            state.currentLineCap = lineCap;\n            state.currentLineDash = lineDash;\n            state.currentLineDashOffset = lineDashOffset;\n            state.currentLineJoin = lineJoin;\n            state.currentLineWidth = lineWidth;\n            state.currentMiterLimit = miterLimit;\n        }\n    };\n    /**\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     */\n    CanvasBuilder.prototype.endGeometry = function (feature) {\n        this.beginGeometryInstruction1_[2] = this.instructions.length;\n        this.beginGeometryInstruction1_ = null;\n        this.beginGeometryInstruction2_[2] = this.hitDetectionInstructions.length;\n        this.beginGeometryInstruction2_ = null;\n        var endGeometryInstruction = [CanvasInstruction.END_GEOMETRY, feature];\n        this.instructions.push(endGeometryInstruction);\n        this.hitDetectionInstructions.push(endGeometryInstruction);\n    };\n    /**\n     * Get the buffered rendering extent.  Rendering will be clipped to the extent\n     * provided to the constructor.  To account for symbolizers that may intersect\n     * this extent, we calculate a buffered extent (e.g. based on stroke width).\n     * @return {import(\"../../extent.js\").Extent} The buffered rendering extent.\n     * @protected\n     */\n    CanvasBuilder.prototype.getBufferedMaxExtent = function () {\n        if (!this.bufferedMaxExtent_) {\n            this.bufferedMaxExtent_ = clone(this.maxExtent);\n            if (this.maxLineWidth > 0) {\n                var width = this.resolution * (this.maxLineWidth + 1) / 2;\n                buffer(this.bufferedMaxExtent_, width, this.bufferedMaxExtent_);\n            }\n        }\n        return this.bufferedMaxExtent_;\n    };\n    return CanvasBuilder;\n}(VectorContext));\nexport default CanvasBuilder;\n//# sourceMappingURL=Builder.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/render/canvas/ImageBuilder\n */\nimport CanvasInstruction from './Instruction.js';\nimport CanvasBuilder from './Builder.js';\nvar CanvasImageBuilder = /** @class */ (function (_super) {\n    __extends(CanvasImageBuilder, _super);\n    /**\n     * @param {number} tolerance Tolerance.\n     * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n     * @param {number} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     */\n    function CanvasImageBuilder(tolerance, maxExtent, resolution, pixelRatio) {\n        var _this = _super.call(this, tolerance, maxExtent, resolution, pixelRatio) || this;\n        /**\n         * @private\n         * @type {import(\"../canvas.js\").DeclutterGroup}\n         */\n        _this.declutterGroup_ = null;\n        /**\n         * @private\n         * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n         */\n        _this.hitDetectionImage_ = null;\n        /**\n         * @private\n         * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n         */\n        _this.image_ = null;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.anchorX_ = undefined;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.anchorY_ = undefined;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.height_ = undefined;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.opacity_ = undefined;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.originX_ = undefined;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.originY_ = undefined;\n        /**\n         * @private\n         * @type {boolean|undefined}\n         */\n        _this.rotateWithView_ = undefined;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.rotation_ = undefined;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.scale_ = undefined;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.width_ = undefined;\n        return _this;\n    }\n    /**\n     * @param {Array<number>} flatCoordinates Flat coordinates.\n     * @param {number} offset Offset.\n     * @param {number} end End.\n     * @param {number} stride Stride.\n     * @private\n     * @return {number} My end.\n     */\n    CanvasImageBuilder.prototype.drawCoordinates_ = function (flatCoordinates, offset, end, stride) {\n        return this.appendFlatCoordinates(flatCoordinates, offset, end, stride, false, false);\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasImageBuilder.prototype.drawPoint = function (pointGeometry, feature) {\n        if (!this.image_) {\n            return;\n        }\n        this.beginGeometry(feature);\n        var flatCoordinates = pointGeometry.getFlatCoordinates();\n        var stride = pointGeometry.getStride();\n        var myBegin = this.coordinates.length;\n        var myEnd = this.drawCoordinates_(flatCoordinates, 0, flatCoordinates.length, stride);\n        this.instructions.push([\n            CanvasInstruction.DRAW_IMAGE, myBegin, myEnd, this.image_,\n            // Remaining arguments to DRAW_IMAGE are in alphabetical order\n            this.anchorX_, this.anchorY_, this.declutterGroup_, this.height_, this.opacity_,\n            this.originX_, this.originY_, this.rotateWithView_, this.rotation_,\n            this.scale_ * this.pixelRatio, this.width_\n        ]);\n        this.hitDetectionInstructions.push([\n            CanvasInstruction.DRAW_IMAGE, myBegin, myEnd, this.hitDetectionImage_,\n            // Remaining arguments to DRAW_IMAGE are in alphabetical order\n            this.anchorX_, this.anchorY_, this.declutterGroup_, this.height_, this.opacity_,\n            this.originX_, this.originY_, this.rotateWithView_, this.rotation_,\n            this.scale_, this.width_\n        ]);\n        this.endGeometry(feature);\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasImageBuilder.prototype.drawMultiPoint = function (multiPointGeometry, feature) {\n        if (!this.image_) {\n            return;\n        }\n        this.beginGeometry(feature);\n        var flatCoordinates = multiPointGeometry.getFlatCoordinates();\n        var stride = multiPointGeometry.getStride();\n        var myBegin = this.coordinates.length;\n        var myEnd = this.drawCoordinates_(flatCoordinates, 0, flatCoordinates.length, stride);\n        this.instructions.push([\n            CanvasInstruction.DRAW_IMAGE, myBegin, myEnd, this.image_,\n            // Remaining arguments to DRAW_IMAGE are in alphabetical order\n            this.anchorX_, this.anchorY_, this.declutterGroup_, this.height_, this.opacity_,\n            this.originX_, this.originY_, this.rotateWithView_, this.rotation_,\n            this.scale_ * this.pixelRatio, this.width_\n        ]);\n        this.hitDetectionInstructions.push([\n            CanvasInstruction.DRAW_IMAGE, myBegin, myEnd, this.hitDetectionImage_,\n            // Remaining arguments to DRAW_IMAGE are in alphabetical order\n            this.anchorX_, this.anchorY_, this.declutterGroup_, this.height_, this.opacity_,\n            this.originX_, this.originY_, this.rotateWithView_, this.rotation_,\n            this.scale_, this.width_\n        ]);\n        this.endGeometry(feature);\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasImageBuilder.prototype.finish = function () {\n        this.reverseHitDetectionInstructions();\n        // FIXME this doesn't really protect us against further calls to draw*Geometry\n        this.anchorX_ = undefined;\n        this.anchorY_ = undefined;\n        this.hitDetectionImage_ = null;\n        this.image_ = null;\n        this.height_ = undefined;\n        this.scale_ = undefined;\n        this.opacity_ = undefined;\n        this.originX_ = undefined;\n        this.originY_ = undefined;\n        this.rotateWithView_ = undefined;\n        this.rotation_ = undefined;\n        this.width_ = undefined;\n        return _super.prototype.finish.call(this);\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasImageBuilder.prototype.setImageStyle = function (imageStyle, declutterGroup) {\n        var anchor = imageStyle.getAnchor();\n        var size = imageStyle.getSize();\n        var hitDetectionImage = imageStyle.getHitDetectionImage(1);\n        var image = imageStyle.getImage(1);\n        var origin = imageStyle.getOrigin();\n        this.anchorX_ = anchor[0];\n        this.anchorY_ = anchor[1];\n        this.declutterGroup_ = /** @type {import(\"../canvas.js\").DeclutterGroup} */ (declutterGroup);\n        this.hitDetectionImage_ = hitDetectionImage;\n        this.image_ = image;\n        this.height_ = size[1];\n        this.opacity_ = imageStyle.getOpacity();\n        this.originX_ = origin[0];\n        this.originY_ = origin[1];\n        this.rotateWithView_ = imageStyle.getRotateWithView();\n        this.rotation_ = imageStyle.getRotation();\n        this.scale_ = imageStyle.getScale();\n        this.width_ = size[0];\n    };\n    return CanvasImageBuilder;\n}(CanvasBuilder));\nexport default CanvasImageBuilder;\n//# sourceMappingURL=ImageBuilder.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/render/canvas/LineStringBuilder\n */\nimport CanvasInstruction, { strokeInstruction, beginPathInstruction } from './Instruction.js';\nimport CanvasBuilder from './Builder.js';\nvar CanvasLineStringBuilder = /** @class */ (function (_super) {\n    __extends(CanvasLineStringBuilder, _super);\n    /**\n     * @param {number} tolerance Tolerance.\n     * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n     * @param {number} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     */\n    function CanvasLineStringBuilder(tolerance, maxExtent, resolution, pixelRatio) {\n        return _super.call(this, tolerance, maxExtent, resolution, pixelRatio) || this;\n    }\n    /**\n     * @param {Array<number>} flatCoordinates Flat coordinates.\n     * @param {number} offset Offset.\n     * @param {number} end End.\n     * @param {number} stride Stride.\n     * @private\n     * @return {number} end.\n     */\n    CanvasLineStringBuilder.prototype.drawFlatCoordinates_ = function (flatCoordinates, offset, end, stride) {\n        var myBegin = this.coordinates.length;\n        var myEnd = this.appendFlatCoordinates(flatCoordinates, offset, end, stride, false, false);\n        var moveToLineToInstruction = [CanvasInstruction.MOVE_TO_LINE_TO, myBegin, myEnd];\n        this.instructions.push(moveToLineToInstruction);\n        this.hitDetectionInstructions.push(moveToLineToInstruction);\n        return end;\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasLineStringBuilder.prototype.drawLineString = function (lineStringGeometry, feature) {\n        var state = this.state;\n        var strokeStyle = state.strokeStyle;\n        var lineWidth = state.lineWidth;\n        if (strokeStyle === undefined || lineWidth === undefined) {\n            return;\n        }\n        this.updateStrokeStyle(state, this.applyStroke);\n        this.beginGeometry(feature);\n        this.hitDetectionInstructions.push([\n            CanvasInstruction.SET_STROKE_STYLE,\n            state.strokeStyle, state.lineWidth, state.lineCap, state.lineJoin,\n            state.miterLimit, state.lineDash, state.lineDashOffset\n        ], beginPathInstruction);\n        var flatCoordinates = lineStringGeometry.getFlatCoordinates();\n        var stride = lineStringGeometry.getStride();\n        this.drawFlatCoordinates_(flatCoordinates, 0, flatCoordinates.length, stride);\n        this.hitDetectionInstructions.push(strokeInstruction);\n        this.endGeometry(feature);\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasLineStringBuilder.prototype.drawMultiLineString = function (multiLineStringGeometry, feature) {\n        var state = this.state;\n        var strokeStyle = state.strokeStyle;\n        var lineWidth = state.lineWidth;\n        if (strokeStyle === undefined || lineWidth === undefined) {\n            return;\n        }\n        this.updateStrokeStyle(state, this.applyStroke);\n        this.beginGeometry(feature);\n        this.hitDetectionInstructions.push([\n            CanvasInstruction.SET_STROKE_STYLE,\n            state.strokeStyle, state.lineWidth, state.lineCap, state.lineJoin,\n            state.miterLimit, state.lineDash, state.lineDashOffset\n        ], beginPathInstruction);\n        var ends = multiLineStringGeometry.getEnds();\n        var flatCoordinates = multiLineStringGeometry.getFlatCoordinates();\n        var stride = multiLineStringGeometry.getStride();\n        var offset = 0;\n        for (var i = 0, ii = ends.length; i < ii; ++i) {\n            offset = this.drawFlatCoordinates_(flatCoordinates, offset, ends[i], stride);\n        }\n        this.hitDetectionInstructions.push(strokeInstruction);\n        this.endGeometry(feature);\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasLineStringBuilder.prototype.finish = function () {\n        var state = this.state;\n        if (state.lastStroke != undefined && state.lastStroke != this.coordinates.length) {\n            this.instructions.push(strokeInstruction);\n        }\n        this.reverseHitDetectionInstructions();\n        this.state = null;\n        return _super.prototype.finish.call(this);\n    };\n    /**\n     * @inheritDoc.\n     */\n    CanvasLineStringBuilder.prototype.applyStroke = function (state) {\n        if (state.lastStroke != undefined && state.lastStroke != this.coordinates.length) {\n            this.instructions.push(strokeInstruction);\n            state.lastStroke = this.coordinates.length;\n        }\n        state.lastStroke = 0;\n        _super.prototype.applyStroke.call(this, state);\n        this.instructions.push(beginPathInstruction);\n    };\n    return CanvasLineStringBuilder;\n}(CanvasBuilder));\nexport default CanvasLineStringBuilder;\n//# sourceMappingURL=LineStringBuilder.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/render/canvas/PolygonBuilder\n */\nimport { snap } from '../../geom/flat/simplify.js';\nimport { defaultFillStyle } from '../canvas.js';\nimport CanvasInstruction, { fillInstruction, strokeInstruction, beginPathInstruction, closePathInstruction } from './Instruction.js';\nimport CanvasBuilder from './Builder.js';\nvar CanvasPolygonBuilder = /** @class */ (function (_super) {\n    __extends(CanvasPolygonBuilder, _super);\n    /**\n     * @param {number} tolerance Tolerance.\n     * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n     * @param {number} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     */\n    function CanvasPolygonBuilder(tolerance, maxExtent, resolution, pixelRatio) {\n        return _super.call(this, tolerance, maxExtent, resolution, pixelRatio) || this;\n    }\n    /**\n     * @param {Array<number>} flatCoordinates Flat coordinates.\n     * @param {number} offset Offset.\n     * @param {Array<number>} ends Ends.\n     * @param {number} stride Stride.\n     * @private\n     * @return {number} End.\n     */\n    CanvasPolygonBuilder.prototype.drawFlatCoordinatess_ = function (flatCoordinates, offset, ends, stride) {\n        var state = this.state;\n        var fill = state.fillStyle !== undefined;\n        var stroke = state.strokeStyle != undefined;\n        var numEnds = ends.length;\n        this.instructions.push(beginPathInstruction);\n        this.hitDetectionInstructions.push(beginPathInstruction);\n        for (var i = 0; i < numEnds; ++i) {\n            var end = ends[i];\n            var myBegin = this.coordinates.length;\n            var myEnd = this.appendFlatCoordinates(flatCoordinates, offset, end, stride, true, !stroke);\n            var moveToLineToInstruction = [CanvasInstruction.MOVE_TO_LINE_TO, myBegin, myEnd];\n            this.instructions.push(moveToLineToInstruction);\n            this.hitDetectionInstructions.push(moveToLineToInstruction);\n            if (stroke) {\n                // Performance optimization: only call closePath() when we have a stroke.\n                // Otherwise the ring is closed already (see appendFlatCoordinates above).\n                this.instructions.push(closePathInstruction);\n                this.hitDetectionInstructions.push(closePathInstruction);\n            }\n            offset = end;\n        }\n        if (fill) {\n            this.instructions.push(fillInstruction);\n            this.hitDetectionInstructions.push(fillInstruction);\n        }\n        if (stroke) {\n            this.instructions.push(strokeInstruction);\n            this.hitDetectionInstructions.push(strokeInstruction);\n        }\n        return offset;\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasPolygonBuilder.prototype.drawCircle = function (circleGeometry, feature) {\n        var state = this.state;\n        var fillStyle = state.fillStyle;\n        var strokeStyle = state.strokeStyle;\n        if (fillStyle === undefined && strokeStyle === undefined) {\n            return;\n        }\n        this.setFillStrokeStyles_();\n        this.beginGeometry(feature);\n        if (state.fillStyle !== undefined) {\n            this.hitDetectionInstructions.push([\n                CanvasInstruction.SET_FILL_STYLE,\n                defaultFillStyle\n            ]);\n        }\n        if (state.strokeStyle !== undefined) {\n            this.hitDetectionInstructions.push([\n                CanvasInstruction.SET_STROKE_STYLE,\n                state.strokeStyle, state.lineWidth, state.lineCap, state.lineJoin,\n                state.miterLimit, state.lineDash, state.lineDashOffset\n            ]);\n        }\n        var flatCoordinates = circleGeometry.getFlatCoordinates();\n        var stride = circleGeometry.getStride();\n        var myBegin = this.coordinates.length;\n        this.appendFlatCoordinates(flatCoordinates, 0, flatCoordinates.length, stride, false, false);\n        var circleInstruction = [CanvasInstruction.CIRCLE, myBegin];\n        this.instructions.push(beginPathInstruction, circleInstruction);\n        this.hitDetectionInstructions.push(beginPathInstruction, circleInstruction);\n        this.hitDetectionInstructions.push(fillInstruction);\n        if (state.fillStyle !== undefined) {\n            this.instructions.push(fillInstruction);\n        }\n        if (state.strokeStyle !== undefined) {\n            this.instructions.push(strokeInstruction);\n            this.hitDetectionInstructions.push(strokeInstruction);\n        }\n        this.endGeometry(feature);\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasPolygonBuilder.prototype.drawPolygon = function (polygonGeometry, feature) {\n        var state = this.state;\n        var fillStyle = state.fillStyle;\n        var strokeStyle = state.strokeStyle;\n        if (fillStyle === undefined && strokeStyle === undefined) {\n            return;\n        }\n        this.setFillStrokeStyles_();\n        this.beginGeometry(feature);\n        if (state.fillStyle !== undefined) {\n            this.hitDetectionInstructions.push([\n                CanvasInstruction.SET_FILL_STYLE,\n                defaultFillStyle\n            ]);\n        }\n        if (state.strokeStyle !== undefined) {\n            this.hitDetectionInstructions.push([\n                CanvasInstruction.SET_STROKE_STYLE,\n                state.strokeStyle, state.lineWidth, state.lineCap, state.lineJoin,\n                state.miterLimit, state.lineDash, state.lineDashOffset\n            ]);\n        }\n        var ends = polygonGeometry.getEnds();\n        var flatCoordinates = polygonGeometry.getOrientedFlatCoordinates();\n        var stride = polygonGeometry.getStride();\n        this.drawFlatCoordinatess_(flatCoordinates, 0, ends, stride);\n        this.endGeometry(feature);\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasPolygonBuilder.prototype.drawMultiPolygon = function (multiPolygonGeometry, feature) {\n        var state = this.state;\n        var fillStyle = state.fillStyle;\n        var strokeStyle = state.strokeStyle;\n        if (fillStyle === undefined && strokeStyle === undefined) {\n            return;\n        }\n        this.setFillStrokeStyles_();\n        this.beginGeometry(feature);\n        if (state.fillStyle !== undefined) {\n            this.hitDetectionInstructions.push([\n                CanvasInstruction.SET_FILL_STYLE,\n                defaultFillStyle\n            ]);\n        }\n        if (state.strokeStyle !== undefined) {\n            this.hitDetectionInstructions.push([\n                CanvasInstruction.SET_STROKE_STYLE,\n                state.strokeStyle, state.lineWidth, state.lineCap, state.lineJoin,\n                state.miterLimit, state.lineDash, state.lineDashOffset\n            ]);\n        }\n        var endss = multiPolygonGeometry.getEndss();\n        var flatCoordinates = multiPolygonGeometry.getOrientedFlatCoordinates();\n        var stride = multiPolygonGeometry.getStride();\n        var offset = 0;\n        for (var i = 0, ii = endss.length; i < ii; ++i) {\n            offset = this.drawFlatCoordinatess_(flatCoordinates, offset, endss[i], stride);\n        }\n        this.endGeometry(feature);\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasPolygonBuilder.prototype.finish = function () {\n        this.reverseHitDetectionInstructions();\n        this.state = null;\n        // We want to preserve topology when drawing polygons.  Polygons are\n        // simplified using quantization and point elimination. However, we might\n        // have received a mix of quantized and non-quantized geometries, so ensure\n        // that all are quantized by quantizing all coordinates in the batch.\n        var tolerance = this.tolerance;\n        if (tolerance !== 0) {\n            var coordinates = this.coordinates;\n            for (var i = 0, ii = coordinates.length; i < ii; ++i) {\n                coordinates[i] = snap(coordinates[i], tolerance);\n            }\n        }\n        return _super.prototype.finish.call(this);\n    };\n    /**\n     * @private\n     */\n    CanvasPolygonBuilder.prototype.setFillStrokeStyles_ = function () {\n        var state = this.state;\n        var fillStyle = state.fillStyle;\n        if (fillStyle !== undefined) {\n            this.updateFillStyle(state, this.createFill);\n        }\n        if (state.strokeStyle !== undefined) {\n            this.updateStrokeStyle(state, this.applyStroke);\n        }\n    };\n    return CanvasPolygonBuilder;\n}(CanvasBuilder));\nexport default CanvasPolygonBuilder;\n//# sourceMappingURL=PolygonBuilder.js.map","/**\n * @module ol/geom/flat/straightchunk\n */\n/**\n * @param {number} maxAngle Maximum acceptable angle delta between segments.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Array<number>} Start and end of the first suitable chunk of the\n * given `flatCoordinates`.\n */\nexport function matchingChunk(maxAngle, flatCoordinates, offset, end, stride) {\n    var chunkStart = offset;\n    var chunkEnd = offset;\n    var chunkM = 0;\n    var m = 0;\n    var start = offset;\n    var acos, i, m12, m23, x1, y1, x12, y12, x23, y23;\n    for (i = offset; i < end; i += stride) {\n        var x2 = flatCoordinates[i];\n        var y2 = flatCoordinates[i + 1];\n        if (x1 !== undefined) {\n            x23 = x2 - x1;\n            y23 = y2 - y1;\n            m23 = Math.sqrt(x23 * x23 + y23 * y23);\n            if (x12 !== undefined) {\n                m += m12;\n                acos = Math.acos((x12 * x23 + y12 * y23) / (m12 * m23));\n                if (acos > maxAngle) {\n                    if (m > chunkM) {\n                        chunkM = m;\n                        chunkStart = start;\n                        chunkEnd = i;\n                    }\n                    m = 0;\n                    start = i - stride;\n                }\n            }\n            m12 = m23;\n            x12 = x23;\n            y12 = y23;\n        }\n        x1 = x2;\n        y1 = y2;\n    }\n    m += m23;\n    return m > chunkM ? [start, i] : [chunkStart, chunkEnd];\n}\n//# sourceMappingURL=straightchunk.js.map","/**\n * @module ol/style/TextPlacement\n */\n/**\n * Text placement. One of `'point'`, `'line'`. Default is `'point'`. Note that\n * `'line'` requires the underlying geometry to be a {@link module:ol/geom/LineString~LineString},\n * {@link module:ol/geom/Polygon~Polygon}, {@link module:ol/geom/MultiLineString~MultiLineString} or\n * {@link module:ol/geom/MultiPolygon~MultiPolygon}.\n * @enum {string}\n */\nexport default {\n    POINT: 'point',\n    LINE: 'line'\n};\n//# sourceMappingURL=TextPlacement.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/render/canvas/TextBuilder\n */\nimport { getUid } from '../../util.js';\nimport { asColorLike } from '../../colorlike.js';\nimport { intersects } from '../../extent.js';\nimport { matchingChunk } from '../../geom/flat/straightchunk.js';\nimport GeometryType from '../../geom/GeometryType.js';\nimport { labelCache, defaultTextAlign, defaultPadding, defaultLineCap, defaultLineDashOffset, defaultLineDash, defaultLineJoin, defaultFillStyle, checkFont, defaultFont, defaultLineWidth, defaultMiterLimit, defaultStrokeStyle, defaultTextBaseline } from '../canvas.js';\nimport CanvasInstruction from './Instruction.js';\nimport CanvasBuilder from './Builder.js';\nimport TextPlacement from '../../style/TextPlacement.js';\n/**\n * @const\n * @enum {number}\n */\nexport var TEXT_ALIGN = {};\nTEXT_ALIGN['left'] = 0;\nTEXT_ALIGN['end'] = 0;\nTEXT_ALIGN['center'] = 0.5;\nTEXT_ALIGN['right'] = 1;\nTEXT_ALIGN['start'] = 1;\nTEXT_ALIGN['top'] = 0;\nTEXT_ALIGN['middle'] = 0.5;\nTEXT_ALIGN['hanging'] = 0.2;\nTEXT_ALIGN['alphabetic'] = 0.8;\nTEXT_ALIGN['ideographic'] = 0.8;\nTEXT_ALIGN['bottom'] = 1;\nvar CanvasTextBuilder = /** @class */ (function (_super) {\n    __extends(CanvasTextBuilder, _super);\n    /**\n     * @param {number} tolerance Tolerance.\n     * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n     * @param {number} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     */\n    function CanvasTextBuilder(tolerance, maxExtent, resolution, pixelRatio) {\n        var _this = _super.call(this, tolerance, maxExtent, resolution, pixelRatio) || this;\n        /**\n         * @private\n         * @type {import(\"../canvas.js\").DeclutterGroup}\n         */\n        _this.declutterGroup_;\n        /**\n         * @private\n         * @type {Array<HTMLCanvasElement>}\n         */\n        _this.labels_ = null;\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.text_ = '';\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.textOffsetX_ = 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.textOffsetY_ = 0;\n        /**\n         * @private\n         * @type {boolean|undefined}\n         */\n        _this.textRotateWithView_ = undefined;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.textRotation_ = 0;\n        /**\n         * @private\n         * @type {?import(\"../canvas.js\").FillState}\n         */\n        _this.textFillState_ = null;\n        /**\n         * @type {!Object<string, import(\"../canvas.js\").FillState>}\n         */\n        _this.fillStates = {};\n        /**\n         * @private\n         * @type {?import(\"../canvas.js\").StrokeState}\n         */\n        _this.textStrokeState_ = null;\n        /**\n         * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n         */\n        _this.strokeStates = {};\n        /**\n         * @private\n         * @type {import(\"../canvas.js\").TextState}\n         */\n        _this.textState_ = /** @type {import(\"../canvas.js\").TextState} */ ({});\n        /**\n         * @type {!Object<string, import(\"../canvas.js\").TextState>}\n         */\n        _this.textStates = {};\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.textKey_ = '';\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.fillKey_ = '';\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.strokeKey_ = '';\n        labelCache.prune();\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    CanvasTextBuilder.prototype.finish = function () {\n        var instructions = _super.prototype.finish.call(this);\n        instructions.textStates = this.textStates;\n        instructions.fillStates = this.fillStates;\n        instructions.strokeStates = this.strokeStates;\n        return instructions;\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasTextBuilder.prototype.drawText = function (geometry, feature) {\n        var fillState = this.textFillState_;\n        var strokeState = this.textStrokeState_;\n        var textState = this.textState_;\n        if (this.text_ === '' || !textState || (!fillState && !strokeState)) {\n            return;\n        }\n        var begin = this.coordinates.length;\n        var geometryType = geometry.getType();\n        var flatCoordinates = null;\n        var end = 2;\n        var stride = 2;\n        var i, ii;\n        if (textState.placement === TextPlacement.LINE) {\n            if (!intersects(this.getBufferedMaxExtent(), geometry.getExtent())) {\n                return;\n            }\n            var ends = void 0;\n            flatCoordinates = geometry.getFlatCoordinates();\n            stride = geometry.getStride();\n            if (geometryType == GeometryType.LINE_STRING) {\n                ends = [flatCoordinates.length];\n            }\n            else if (geometryType == GeometryType.MULTI_LINE_STRING) {\n                ends = geometry.getEnds();\n            }\n            else if (geometryType == GeometryType.POLYGON) {\n                ends = geometry.getEnds().slice(0, 1);\n            }\n            else if (geometryType == GeometryType.MULTI_POLYGON) {\n                var endss = geometry.getEndss();\n                ends = [];\n                for (i = 0, ii = endss.length; i < ii; ++i) {\n                    ends.push(endss[i][0]);\n                }\n            }\n            this.beginGeometry(feature);\n            var textAlign = textState.textAlign;\n            var flatOffset = 0;\n            var flatEnd = void 0;\n            for (var o = 0, oo = ends.length; o < oo; ++o) {\n                if (textAlign == undefined) {\n                    var range = matchingChunk(textState.maxAngle, flatCoordinates, flatOffset, ends[o], stride);\n                    flatOffset = range[0];\n                    flatEnd = range[1];\n                }\n                else {\n                    flatEnd = ends[o];\n                }\n                for (i = flatOffset; i < flatEnd; i += stride) {\n                    this.coordinates.push(flatCoordinates[i], flatCoordinates[i + 1]);\n                }\n                end = this.coordinates.length;\n                flatOffset = ends[o];\n                this.drawChars_(begin, end, this.declutterGroup_);\n                begin = end;\n            }\n            this.endGeometry(feature);\n        }\n        else {\n            var geometryWidths = null;\n            if (!textState.overflow) {\n                geometryWidths = [];\n            }\n            switch (geometryType) {\n                case GeometryType.POINT:\n                case GeometryType.MULTI_POINT:\n                    flatCoordinates = geometry.getFlatCoordinates();\n                    end = flatCoordinates.length;\n                    break;\n                case GeometryType.LINE_STRING:\n                    flatCoordinates = /** @type {import(\"../../geom/LineString.js\").default} */ (geometry).getFlatMidpoint();\n                    break;\n                case GeometryType.CIRCLE:\n                    flatCoordinates = /** @type {import(\"../../geom/Circle.js\").default} */ (geometry).getCenter();\n                    break;\n                case GeometryType.MULTI_LINE_STRING:\n                    flatCoordinates = /** @type {import(\"../../geom/MultiLineString.js\").default} */ (geometry).getFlatMidpoints();\n                    end = flatCoordinates.length;\n                    break;\n                case GeometryType.POLYGON:\n                    flatCoordinates = /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry).getFlatInteriorPoint();\n                    if (!textState.overflow) {\n                        geometryWidths.push(flatCoordinates[2] / this.resolution);\n                    }\n                    stride = 3;\n                    break;\n                case GeometryType.MULTI_POLYGON:\n                    var interiorPoints = /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry).getFlatInteriorPoints();\n                    flatCoordinates = [];\n                    for (i = 0, ii = interiorPoints.length; i < ii; i += 3) {\n                        if (!textState.overflow) {\n                            geometryWidths.push(interiorPoints[i + 2] / this.resolution);\n                        }\n                        flatCoordinates.push(interiorPoints[i], interiorPoints[i + 1]);\n                    }\n                    end = flatCoordinates.length;\n                    if (end == 0) {\n                        return;\n                    }\n                    break;\n                default:\n            }\n            end = this.appendFlatCoordinates(flatCoordinates, 0, end, stride, false, false);\n            this.saveTextStates_();\n            if (textState.backgroundFill || textState.backgroundStroke) {\n                this.setFillStrokeStyle(textState.backgroundFill, textState.backgroundStroke);\n                if (textState.backgroundFill) {\n                    this.updateFillStyle(this.state, this.createFill);\n                    this.hitDetectionInstructions.push(this.createFill(this.state));\n                }\n                if (textState.backgroundStroke) {\n                    this.updateStrokeStyle(this.state, this.applyStroke);\n                    this.hitDetectionInstructions.push(this.createStroke(this.state));\n                }\n            }\n            this.beginGeometry(feature);\n            // The image is unknown at this stage so we pass null; it will be computed at render time.\n            // For clarity, we pass NaN for offsetX, offsetY, width and height, which will be computed at\n            // render time.\n            var pixelRatio_1 = this.pixelRatio;\n            this.instructions.push([CanvasInstruction.DRAW_IMAGE, begin, end,\n                null, NaN, NaN, this.declutterGroup_, NaN, 1, 0, 0,\n                this.textRotateWithView_, this.textRotation_, 1, NaN,\n                textState.padding == defaultPadding ?\n                    defaultPadding : textState.padding.map(function (p) {\n                    return p * pixelRatio_1;\n                }),\n                !!textState.backgroundFill, !!textState.backgroundStroke,\n                this.text_, this.textKey_, this.strokeKey_, this.fillKey_,\n                this.textOffsetX_, this.textOffsetY_, geometryWidths\n            ]);\n            this.hitDetectionInstructions.push([CanvasInstruction.DRAW_IMAGE, begin, end,\n                null, NaN, NaN, this.declutterGroup_, NaN, 1, 0, 0,\n                this.textRotateWithView_, this.textRotation_, 1 / this.pixelRatio, NaN,\n                textState.padding,\n                !!textState.backgroundFill, !!textState.backgroundStroke,\n                this.text_, this.textKey_, this.strokeKey_, this.fillKey_,\n                this.textOffsetX_, this.textOffsetY_, geometryWidths\n            ]);\n            this.endGeometry(feature);\n        }\n    };\n    /**\n     * @private\n     */\n    CanvasTextBuilder.prototype.saveTextStates_ = function () {\n        var strokeState = this.textStrokeState_;\n        var textState = this.textState_;\n        var fillState = this.textFillState_;\n        var strokeKey = this.strokeKey_;\n        if (strokeState) {\n            if (!(strokeKey in this.strokeStates)) {\n                this.strokeStates[strokeKey] = {\n                    strokeStyle: strokeState.strokeStyle,\n                    lineCap: strokeState.lineCap,\n                    lineDashOffset: strokeState.lineDashOffset,\n                    lineWidth: strokeState.lineWidth,\n                    lineJoin: strokeState.lineJoin,\n                    miterLimit: strokeState.miterLimit,\n                    lineDash: strokeState.lineDash\n                };\n            }\n        }\n        var textKey = this.textKey_;\n        if (!(textKey in this.textStates)) {\n            this.textStates[textKey] = {\n                font: textState.font,\n                textAlign: textState.textAlign || defaultTextAlign,\n                textBaseline: textState.textBaseline || defaultTextBaseline,\n                scale: textState.scale\n            };\n        }\n        var fillKey = this.fillKey_;\n        if (fillState) {\n            if (!(fillKey in this.fillStates)) {\n                this.fillStates[fillKey] = {\n                    fillStyle: fillState.fillStyle\n                };\n            }\n        }\n    };\n    /**\n     * @private\n     * @param {number} begin Begin.\n     * @param {number} end End.\n     * @param {import(\"../canvas.js\").DeclutterGroup} declutterGroup Declutter group.\n     */\n    CanvasTextBuilder.prototype.drawChars_ = function (begin, end, declutterGroup) {\n        var strokeState = this.textStrokeState_;\n        var textState = this.textState_;\n        var strokeKey = this.strokeKey_;\n        var textKey = this.textKey_;\n        var fillKey = this.fillKey_;\n        this.saveTextStates_();\n        var pixelRatio = this.pixelRatio;\n        var baseline = TEXT_ALIGN[textState.textBaseline];\n        var offsetY = this.textOffsetY_ * pixelRatio;\n        var text = this.text_;\n        var textScale = textState.scale;\n        var strokeWidth = strokeState ? strokeState.lineWidth * textScale / 2 : 0;\n        this.instructions.push([CanvasInstruction.DRAW_CHARS,\n            begin, end, baseline, declutterGroup,\n            textState.overflow, fillKey, textState.maxAngle,\n            pixelRatio,\n            offsetY, strokeKey, strokeWidth * pixelRatio, text, textKey, 1\n        ]);\n        this.hitDetectionInstructions.push([CanvasInstruction.DRAW_CHARS,\n            begin, end, baseline, declutterGroup,\n            textState.overflow, fillKey, textState.maxAngle,\n            1,\n            offsetY, strokeKey, strokeWidth, text, textKey, 1 / pixelRatio\n        ]);\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasTextBuilder.prototype.setTextStyle = function (textStyle, declutterGroup) {\n        var textState, fillState, strokeState;\n        if (!textStyle) {\n            this.text_ = '';\n        }\n        else {\n            this.declutterGroup_ = /** @type {import(\"../canvas.js\").DeclutterGroup} */ (declutterGroup);\n            var textFillStyle = textStyle.getFill();\n            if (!textFillStyle) {\n                fillState = this.textFillState_ = null;\n            }\n            else {\n                fillState = this.textFillState_;\n                if (!fillState) {\n                    fillState = this.textFillState_ = /** @type {import(\"../canvas.js\").FillState} */ ({});\n                }\n                fillState.fillStyle = asColorLike(textFillStyle.getColor() || defaultFillStyle);\n            }\n            var textStrokeStyle = textStyle.getStroke();\n            if (!textStrokeStyle) {\n                strokeState = this.textStrokeState_ = null;\n            }\n            else {\n                strokeState = this.textStrokeState_;\n                if (!strokeState) {\n                    strokeState = this.textStrokeState_ = /** @type {import(\"../canvas.js\").StrokeState} */ ({});\n                }\n                var lineDash = textStrokeStyle.getLineDash();\n                var lineDashOffset = textStrokeStyle.getLineDashOffset();\n                var lineWidth = textStrokeStyle.getWidth();\n                var miterLimit = textStrokeStyle.getMiterLimit();\n                strokeState.lineCap = textStrokeStyle.getLineCap() || defaultLineCap;\n                strokeState.lineDash = lineDash ? lineDash.slice() : defaultLineDash;\n                strokeState.lineDashOffset =\n                    lineDashOffset === undefined ? defaultLineDashOffset : lineDashOffset;\n                strokeState.lineJoin = textStrokeStyle.getLineJoin() || defaultLineJoin;\n                strokeState.lineWidth =\n                    lineWidth === undefined ? defaultLineWidth : lineWidth;\n                strokeState.miterLimit =\n                    miterLimit === undefined ? defaultMiterLimit : miterLimit;\n                strokeState.strokeStyle = asColorLike(textStrokeStyle.getColor() || defaultStrokeStyle);\n            }\n            textState = this.textState_;\n            var font = textStyle.getFont() || defaultFont;\n            checkFont(font);\n            var textScale = textStyle.getScale();\n            textState.overflow = textStyle.getOverflow();\n            textState.font = font;\n            textState.maxAngle = textStyle.getMaxAngle();\n            textState.placement = textStyle.getPlacement();\n            textState.textAlign = textStyle.getTextAlign();\n            textState.textBaseline = textStyle.getTextBaseline() || defaultTextBaseline;\n            textState.backgroundFill = textStyle.getBackgroundFill();\n            textState.backgroundStroke = textStyle.getBackgroundStroke();\n            textState.padding = textStyle.getPadding() || defaultPadding;\n            textState.scale = textScale === undefined ? 1 : textScale;\n            var textOffsetX = textStyle.getOffsetX();\n            var textOffsetY = textStyle.getOffsetY();\n            var textRotateWithView = textStyle.getRotateWithView();\n            var textRotation = textStyle.getRotation();\n            this.text_ = textStyle.getText() || '';\n            this.textOffsetX_ = textOffsetX === undefined ? 0 : textOffsetX;\n            this.textOffsetY_ = textOffsetY === undefined ? 0 : textOffsetY;\n            this.textRotateWithView_ = textRotateWithView === undefined ? false : textRotateWithView;\n            this.textRotation_ = textRotation === undefined ? 0 : textRotation;\n            this.strokeKey_ = strokeState ?\n                (typeof strokeState.strokeStyle == 'string' ? strokeState.strokeStyle : getUid(strokeState.strokeStyle)) +\n                    strokeState.lineCap + strokeState.lineDashOffset + '|' + strokeState.lineWidth +\n                    strokeState.lineJoin + strokeState.miterLimit + '[' + strokeState.lineDash.join() + ']' :\n                '';\n            this.textKey_ = textState.font + textState.scale + (textState.textAlign || '?');\n            this.fillKey_ = fillState ?\n                (typeof fillState.fillStyle == 'string' ? fillState.fillStyle : ('|' + getUid(fillState.fillStyle))) :\n                '';\n        }\n    };\n    return CanvasTextBuilder;\n}(CanvasBuilder));\nexport default CanvasTextBuilder;\n//# sourceMappingURL=TextBuilder.js.map","/**\n * @module ol/render/canvas/BuilderGroup\n */\nimport { createEmpty } from '../../extent.js';\nimport Builder from './Builder.js';\nimport ImageBuilder from './ImageBuilder.js';\nimport LineStringBuilder from './LineStringBuilder.js';\nimport PolygonBuilder from './PolygonBuilder.js';\nimport TextBuilder from './TextBuilder.js';\n/**\n * @type {Object<import(\"./BuilderType\").default, typeof Builder>}\n */\nvar BATCH_CONSTRUCTORS = {\n    'Circle': PolygonBuilder,\n    'Default': Builder,\n    'Image': ImageBuilder,\n    'LineString': LineStringBuilder,\n    'Polygon': PolygonBuilder,\n    'Text': TextBuilder\n};\nvar BuilderGroup = /** @class */ (function () {\n    /**\n     * @param {number} tolerance Tolerance.\n     * @param {import(\"../../extent.js\").Extent} maxExtent Max extent.\n     * @param {number} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {boolean} declutter Decluttering enabled.\n     */\n    function BuilderGroup(tolerance, maxExtent, resolution, pixelRatio, declutter) {\n        /**\n         * @type {boolean}\n         * @private\n         */\n        this.declutter_ = declutter;\n        /**\n         * @type {import(\"../canvas.js\").DeclutterGroup}\n         * @private\n         */\n        this.declutterGroup_ = null;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.tolerance_ = tolerance;\n        /**\n         * @private\n         * @type {import(\"../../extent.js\").Extent}\n         */\n        this.maxExtent_ = maxExtent;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.pixelRatio_ = pixelRatio;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.resolution_ = resolution;\n        /**\n         * @private\n         * @type {!Object<string, !Object<import(\"./BuilderType\").default, Builder>>}\n         */\n        this.buildersByZIndex_ = {};\n    }\n    /**\n     * @param {boolean} group Group with previous builder.\n     * @return {Array<*>} The resulting instruction group.\n     */\n    BuilderGroup.prototype.addDeclutter = function (group) {\n        var declutter = null;\n        if (this.declutter_) {\n            if (group) {\n                declutter = this.declutterGroup_;\n                /** @type {number} */ (declutter[4])++;\n            }\n            else {\n                declutter = this.declutterGroup_ = createEmpty();\n                declutter.push(1);\n            }\n        }\n        return declutter;\n    };\n    /**\n     * @return {!Object<string, !Object<import(\"./BuilderType\").default, import(\"./Builder.js\").SerializableInstructions>>} The serializable instructions\n     */\n    BuilderGroup.prototype.finish = function () {\n        var builderInstructions = {};\n        for (var zKey in this.buildersByZIndex_) {\n            builderInstructions[zKey] = builderInstructions[zKey] || {};\n            var builders = this.buildersByZIndex_[zKey];\n            for (var builderKey in builders) {\n                var builderInstruction = builders[builderKey].finish();\n                builderInstructions[zKey][builderKey] = builderInstruction;\n            }\n        }\n        return builderInstructions;\n    };\n    /**\n     * @param {number|undefined} zIndex Z index.\n     * @param {import(\"./BuilderType.js\").default} builderType Replay type.\n     * @return {import(\"../VectorContext.js\").default} Replay.\n     */\n    BuilderGroup.prototype.getBuilder = function (zIndex, builderType) {\n        var zIndexKey = zIndex !== undefined ? zIndex.toString() : '0';\n        var replays = this.buildersByZIndex_[zIndexKey];\n        if (replays === undefined) {\n            replays = {};\n            this.buildersByZIndex_[zIndexKey] = replays;\n        }\n        var replay = replays[builderType];\n        if (replay === undefined) {\n            var Constructor = BATCH_CONSTRUCTORS[builderType];\n            replay = new Constructor(this.tolerance_, this.maxExtent_, this.resolution_, this.pixelRatio_);\n            replays[builderType] = replay;\n        }\n        return replay;\n    };\n    return BuilderGroup;\n}());\nexport default BuilderGroup;\n//# sourceMappingURL=BuilderGroup.js.map","/**\n * @module ol/render/canvas/BuilderType\n */\n/**\n * @enum {string}\n */\nexport default {\n    CIRCLE: 'Circle',\n    DEFAULT: 'Default',\n    IMAGE: 'Image',\n    LINE_STRING: 'LineString',\n    POLYGON: 'Polygon',\n    TEXT: 'Text'\n};\n//# sourceMappingURL=BuilderType.js.map","/**\n * @module ol/geom/flat/length\n */\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Length.\n */\nexport function lineStringLength(flatCoordinates, offset, end, stride) {\n    var x1 = flatCoordinates[offset];\n    var y1 = flatCoordinates[offset + 1];\n    var length = 0;\n    for (var i = offset + stride; i < end; i += stride) {\n        var x2 = flatCoordinates[i];\n        var y2 = flatCoordinates[i + 1];\n        length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n        x1 = x2;\n        y1 = y2;\n    }\n    return length;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Perimeter.\n */\nexport function linearRingLength(flatCoordinates, offset, end, stride) {\n    var perimeter = lineStringLength(flatCoordinates, offset, end, stride);\n    var dx = flatCoordinates[end - stride] - flatCoordinates[offset];\n    var dy = flatCoordinates[end - stride + 1] - flatCoordinates[offset + 1];\n    perimeter += Math.sqrt(dx * dx + dy * dy);\n    return perimeter;\n}\n//# sourceMappingURL=length.js.map","/**\n * @module ol/geom/flat/textpath\n */\nimport { lerp } from '../../math.js';\n/**\n * @param {Array<number>} flatCoordinates Path to put text on.\n * @param {number} offset Start offset of the `flatCoordinates`.\n * @param {number} end End offset of the `flatCoordinates`.\n * @param {number} stride Stride.\n * @param {string} text Text to place on the path.\n * @param {number} startM m along the path where the text starts.\n * @param {number} maxAngle Max angle between adjacent chars in radians.\n * @param {number} scale The product of the text scale and the device pixel ratio.\n * @param {function(string, string, Object<string, number>):number} measureAndCacheTextWidth Measure and cache text width.\n * @param {string} font The font.\n * @param {Object<string, number>} cache A cache of measured widths.\n * @return {Array<Array<*>>} The result array of null if `maxAngle` was\n * exceeded. Entries of the array are x, y, anchorX, angle, chunk.\n */\nexport function drawTextOnPath(flatCoordinates, offset, end, stride, text, startM, maxAngle, scale, measureAndCacheTextWidth, font, cache) {\n    var result = [];\n    // Keep text upright\n    var reverse = flatCoordinates[offset] > flatCoordinates[end - stride];\n    var numChars = text.length;\n    var x1 = flatCoordinates[offset];\n    var y1 = flatCoordinates[offset + 1];\n    offset += stride;\n    var x2 = flatCoordinates[offset];\n    var y2 = flatCoordinates[offset + 1];\n    var segmentM = 0;\n    var segmentLength = Math.sqrt(Math.pow(x2 - x1, 2) + Math.pow(y2 - y1, 2));\n    var chunk = '';\n    var chunkLength = 0;\n    var data, index, previousAngle;\n    for (var i = 0; i < numChars; ++i) {\n        index = reverse ? numChars - i - 1 : i;\n        var char = text.charAt(index);\n        chunk = reverse ? char + chunk : chunk + char;\n        var charLength = scale * measureAndCacheTextWidth(font, chunk, cache) - chunkLength;\n        chunkLength += charLength;\n        var charM = startM + charLength / 2;\n        while (offset < end - stride && segmentM + segmentLength < charM) {\n            x1 = x2;\n            y1 = y2;\n            offset += stride;\n            x2 = flatCoordinates[offset];\n            y2 = flatCoordinates[offset + 1];\n            segmentM += segmentLength;\n            segmentLength = Math.sqrt(Math.pow(x2 - x1, 2) + Math.pow(y2 - y1, 2));\n        }\n        var segmentPos = charM - segmentM;\n        var angle = Math.atan2(y2 - y1, x2 - x1);\n        if (reverse) {\n            angle += angle > 0 ? -Math.PI : Math.PI;\n        }\n        if (previousAngle !== undefined) {\n            var delta = angle - previousAngle;\n            delta += (delta > Math.PI) ? -2 * Math.PI : (delta < -Math.PI) ? 2 * Math.PI : 0;\n            if (Math.abs(delta) > maxAngle) {\n                return null;\n            }\n        }\n        var interpolate = segmentPos / segmentLength;\n        var x = lerp(x1, x2, interpolate);\n        var y = lerp(y1, y2, interpolate);\n        if (previousAngle == angle) {\n            if (reverse) {\n                data[0] = x;\n                data[1] = y;\n                data[2] = charLength / 2;\n            }\n            data[4] = chunk;\n        }\n        else {\n            chunk = char;\n            chunkLength = charLength;\n            data = [x, y, charLength / 2, angle, chunk];\n            if (reverse) {\n                result.unshift(data);\n            }\n            else {\n                result.push(data);\n            }\n            previousAngle = angle;\n        }\n        startM += charLength;\n    }\n    return result;\n}\n//# sourceMappingURL=textpath.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/render/canvas/Executor\n */\nimport { getUid } from '../../util.js';\nimport { equals } from '../../array.js';\nimport { createEmpty, createOrUpdate, createOrUpdateEmpty, extend, intersects } from '../../extent.js';\nimport { lineStringLength } from '../../geom/flat/length.js';\nimport { drawTextOnPath } from '../../geom/flat/textpath.js';\nimport { transform2D } from '../../geom/flat/transform.js';\nimport { isEmpty } from '../../obj.js';\nimport { drawImage, defaultPadding, defaultTextBaseline } from '../canvas.js';\nimport CanvasInstruction from './Instruction.js';\nimport { TEXT_ALIGN } from './TextBuilder.js';\nimport { create as createTransform, compose as composeTransform, apply as applyTransform, setFromArray as transformSetFromArray } from '../../transform.js';\nimport { createCanvasContext2D } from '../../dom.js';\nimport { labelCache, defaultTextAlign, measureTextHeight, measureAndCacheTextWidth, measureTextWidths } from '../canvas.js';\nimport Disposable from '../../Disposable.js';\n/**\n * @typedef {Object} SerializableInstructions\n * @property {Array<*>} instructions The rendering instructions.\n * @property {Array<*>} hitDetectionInstructions The rendering hit detection instructions.\n * @property {Array<number>} coordinates The array of all coordinates.\n * @property {!Object<string, import(\"../canvas.js\").TextState>} textStates The text states (decluttering).\n * @property {!Object<string, import(\"../canvas.js\").FillState>} fillStates The fill states (decluttering).\n * @property {!Object<string, import(\"../canvas.js\").StrokeState>} strokeStates The stroke states (decluttering).\n */\n/**\n * @type {import(\"../../extent.js\").Extent}\n */\nvar tmpExtent = createEmpty();\n/**\n * @type {!import(\"../../transform.js\").Transform}\n */\nvar tmpTransform = createTransform();\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nvar p1 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nvar p2 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nvar p3 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nvar p4 = [];\nvar Executor = /** @class */ (function (_super) {\n    __extends(Executor, _super);\n    /**\n     * @param {number} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {boolean} overlaps The replay can have overlapping geometries.\n     * @param {?} declutterTree Declutter tree.\n     * @param {SerializableInstructions} instructions The serializable instructions\n     */\n    function Executor(resolution, pixelRatio, overlaps, declutterTree, instructions) {\n        var _this = _super.call(this) || this;\n        /**\n         * @type {?}\n         */\n        _this.declutterTree = declutterTree;\n        /**\n         * @protected\n         * @type {boolean}\n         */\n        _this.overlaps = overlaps;\n        /**\n         * @protected\n         * @type {number}\n         */\n        _this.pixelRatio = pixelRatio;\n        /**\n         * @protected\n         * @const\n         * @type {number}\n         */\n        _this.resolution = resolution;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.alignFill_;\n        /**\n         * @protected\n         * @type {Array<*>}\n         */\n        _this.instructions = instructions.instructions;\n        /**\n         * @protected\n         * @type {Array<number>}\n         */\n        _this.coordinates = instructions.coordinates;\n        /**\n         * @private\n         * @type {!Object<number,import(\"../../coordinate.js\").Coordinate|Array<import(\"../../coordinate.js\").Coordinate>|Array<Array<import(\"../../coordinate.js\").Coordinate>>>}\n         */\n        _this.coordinateCache_ = {};\n        /**\n         * @private\n         * @type {!import(\"../../transform.js\").Transform}\n         */\n        _this.renderedTransform_ = createTransform();\n        /**\n         * @protected\n         * @type {Array<*>}\n         */\n        _this.hitDetectionInstructions = instructions.hitDetectionInstructions;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        _this.pixelCoordinates_ = null;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.viewRotation_ = 0;\n        /**\n         * @type {!Object<string, import(\"../canvas.js\").FillState>}\n         */\n        _this.fillStates = instructions.fillStates || {};\n        /**\n         * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n         */\n        _this.strokeStates = instructions.strokeStates || {};\n        /**\n         * @type {!Object<string, import(\"../canvas.js\").TextState>}\n         */\n        _this.textStates = instructions.textStates || {};\n        /**\n         * @private\n         * @type {Object<string, Object<string, number>>}\n         */\n        _this.widths_ = {};\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    Executor.prototype.disposeInternal = function () {\n        labelCache.release(this);\n        _super.prototype.disposeInternal.call(this);\n    };\n    /**\n     * @param {string} text Text.\n     * @param {string} textKey Text style key.\n     * @param {string} fillKey Fill style key.\n     * @param {string} strokeKey Stroke style key.\n     * @return {HTMLCanvasElement} Image.\n     */\n    Executor.prototype.getTextImage = function (text, textKey, fillKey, strokeKey) {\n        var label;\n        var key = strokeKey + textKey + text + fillKey + this.pixelRatio;\n        if (!labelCache.containsKey(key)) {\n            var strokeState = strokeKey ? this.strokeStates[strokeKey] : null;\n            var fillState = fillKey ? this.fillStates[fillKey] : null;\n            var textState = this.textStates[textKey];\n            var pixelRatio = this.pixelRatio;\n            var scale = textState.scale * pixelRatio;\n            var align = TEXT_ALIGN[textState.textAlign || defaultTextAlign];\n            var strokeWidth = strokeKey && strokeState.lineWidth ? strokeState.lineWidth : 0;\n            var lines = text.split('\\n');\n            var numLines = lines.length;\n            var widths = [];\n            var width = measureTextWidths(textState.font, lines, widths);\n            var lineHeight = measureTextHeight(textState.font);\n            var height = lineHeight * numLines;\n            var renderWidth = (width + strokeWidth);\n            var context = createCanvasContext2D(Math.ceil(renderWidth * scale), Math.ceil((height + strokeWidth) * scale));\n            label = context.canvas;\n            labelCache.set(key, label);\n            if (scale != 1) {\n                context.scale(scale, scale);\n            }\n            context.font = textState.font;\n            if (strokeKey) {\n                context.strokeStyle = strokeState.strokeStyle;\n                context.lineWidth = strokeWidth;\n                context.lineCap = /** @type {CanvasLineCap} */ (strokeState.lineCap);\n                context.lineJoin = /** @type {CanvasLineJoin} */ (strokeState.lineJoin);\n                context.miterLimit = strokeState.miterLimit;\n                if (context.setLineDash && strokeState.lineDash.length) {\n                    context.setLineDash(strokeState.lineDash);\n                    context.lineDashOffset = strokeState.lineDashOffset;\n                }\n            }\n            if (fillKey) {\n                context.fillStyle = fillState.fillStyle;\n            }\n            context.textBaseline = 'middle';\n            context.textAlign = 'center';\n            var leftRight = (0.5 - align);\n            var x = align * label.width / scale + leftRight * strokeWidth;\n            var i = void 0;\n            if (strokeKey) {\n                for (i = 0; i < numLines; ++i) {\n                    context.strokeText(lines[i], x + leftRight * widths[i], 0.5 * (strokeWidth + lineHeight) + i * lineHeight);\n                }\n            }\n            if (fillKey) {\n                for (i = 0; i < numLines; ++i) {\n                    context.fillText(lines[i], x + leftRight * widths[i], 0.5 * (strokeWidth + lineHeight) + i * lineHeight);\n                }\n            }\n        }\n        return labelCache.get(key, this);\n    };\n    /**\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {import(\"../../coordinate.js\").Coordinate} p1 1st point of the background box.\n     * @param {import(\"../../coordinate.js\").Coordinate} p2 2nd point of the background box.\n     * @param {import(\"../../coordinate.js\").Coordinate} p3 3rd point of the background box.\n     * @param {import(\"../../coordinate.js\").Coordinate} p4 4th point of the background box.\n     * @param {Array<*>} fillInstruction Fill instruction.\n     * @param {Array<*>} strokeInstruction Stroke instruction.\n     */\n    Executor.prototype.replayTextBackground_ = function (context, p1, p2, p3, p4, fillInstruction, strokeInstruction) {\n        context.beginPath();\n        context.moveTo.apply(context, p1);\n        context.lineTo.apply(context, p2);\n        context.lineTo.apply(context, p3);\n        context.lineTo.apply(context, p4);\n        context.lineTo.apply(context, p1);\n        if (fillInstruction) {\n            this.alignFill_ = /** @type {boolean} */ (fillInstruction[2]);\n            this.fill_(context);\n        }\n        if (strokeInstruction) {\n            this.setStrokeStyle_(context, /** @type {Array<*>} */ (strokeInstruction));\n            context.stroke();\n        }\n    };\n    /**\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {number} x X.\n     * @param {number} y Y.\n     * @param {HTMLImageElement|HTMLCanvasElement|HTMLVideoElement} image Image.\n     * @param {number} anchorX Anchor X.\n     * @param {number} anchorY Anchor Y.\n     * @param {import(\"../canvas.js\").DeclutterGroup} declutterGroup Declutter group.\n     * @param {number} height Height.\n     * @param {number} opacity Opacity.\n     * @param {number} originX Origin X.\n     * @param {number} originY Origin Y.\n     * @param {number} rotation Rotation.\n     * @param {number} scale Scale.\n     * @param {boolean} snapToPixel Snap to pixel.\n     * @param {number} width Width.\n     * @param {Array<number>} padding Padding.\n     * @param {Array<*>} fillInstruction Fill instruction.\n     * @param {Array<*>} strokeInstruction Stroke instruction.\n     */\n    Executor.prototype.replayImage_ = function (context, x, y, image, anchorX, anchorY, declutterGroup, height, opacity, originX, originY, rotation, scale, snapToPixel, width, padding, fillInstruction, strokeInstruction) {\n        var fillStroke = fillInstruction || strokeInstruction;\n        anchorX *= scale;\n        anchorY *= scale;\n        x -= anchorX;\n        y -= anchorY;\n        var w = (width + originX > image.width) ? image.width - originX : width;\n        var h = (height + originY > image.height) ? image.height - originY : height;\n        var boxW = padding[3] + w * scale + padding[1];\n        var boxH = padding[0] + h * scale + padding[2];\n        var boxX = x - padding[3];\n        var boxY = y - padding[0];\n        if (fillStroke || rotation !== 0) {\n            p1[0] = p4[0] = boxX;\n            p1[1] = p2[1] = boxY;\n            p2[0] = p3[0] = boxX + boxW;\n            p3[1] = p4[1] = boxY + boxH;\n        }\n        var transform = null;\n        if (rotation !== 0) {\n            var centerX = x + anchorX;\n            var centerY = y + anchorY;\n            transform = composeTransform(tmpTransform, centerX, centerY, 1, 1, rotation, -centerX, -centerY);\n            applyTransform(tmpTransform, p1);\n            applyTransform(tmpTransform, p2);\n            applyTransform(tmpTransform, p3);\n            applyTransform(tmpTransform, p4);\n            createOrUpdate(Math.min(p1[0], p2[0], p3[0], p4[0]), Math.min(p1[1], p2[1], p3[1], p4[1]), Math.max(p1[0], p2[0], p3[0], p4[0]), Math.max(p1[1], p2[1], p3[1], p4[1]), tmpExtent);\n        }\n        else {\n            createOrUpdate(boxX, boxY, boxX + boxW, boxY + boxH, tmpExtent);\n        }\n        var canvas = context.canvas;\n        var strokePadding = strokeInstruction ? (strokeInstruction[2] * scale / 2) : 0;\n        var intersects = tmpExtent[0] - strokePadding <= canvas.width && tmpExtent[2] + strokePadding >= 0 &&\n            tmpExtent[1] - strokePadding <= canvas.height && tmpExtent[3] + strokePadding >= 0;\n        if (snapToPixel) {\n            x = Math.round(x);\n            y = Math.round(y);\n        }\n        if (declutterGroup) {\n            if (!intersects && declutterGroup[4] == 1) {\n                return;\n            }\n            extend(declutterGroup, tmpExtent);\n            var declutterArgs = intersects ?\n                [context, transform ? transform.slice(0) : null, opacity, image, originX, originY, w, h, x, y, scale] :\n                null;\n            if (declutterArgs && fillStroke) {\n                declutterArgs.push(fillInstruction, strokeInstruction, p1, p2, p3, p4);\n            }\n            declutterGroup.push(declutterArgs);\n        }\n        else if (intersects) {\n            if (fillStroke) {\n                this.replayTextBackground_(context, p1, p2, p3, p4, \n                /** @type {Array<*>} */ (fillInstruction), \n                /** @type {Array<*>} */ (strokeInstruction));\n            }\n            drawImage(context, transform, opacity, image, originX, originY, w, h, x, y, scale);\n        }\n    };\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} context Context.\n     */\n    Executor.prototype.fill_ = function (context) {\n        if (this.alignFill_) {\n            var origin_1 = applyTransform(this.renderedTransform_, [0, 0]);\n            var repeatSize = 512 * this.pixelRatio;\n            context.save();\n            context.translate(origin_1[0] % repeatSize, origin_1[1] % repeatSize);\n            context.rotate(this.viewRotation_);\n        }\n        context.fill();\n        if (this.alignFill_) {\n            context.restore();\n        }\n    };\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {Array<*>} instruction Instruction.\n     */\n    Executor.prototype.setStrokeStyle_ = function (context, instruction) {\n        context.strokeStyle = /** @type {import(\"../../colorlike.js\").ColorLike} */ (instruction[1]);\n        context.lineWidth = /** @type {number} */ (instruction[2]);\n        context.lineCap = /** @type {CanvasLineCap} */ (instruction[3]);\n        context.lineJoin = /** @type {CanvasLineJoin} */ (instruction[4]);\n        context.miterLimit = /** @type {number} */ (instruction[5]);\n        if (context.setLineDash) {\n            context.lineDashOffset = /** @type {number} */ (instruction[7]);\n            context.setLineDash(/** @type {Array<number>} */ (instruction[6]));\n        }\n    };\n    /**\n     * @param {import(\"../canvas.js\").DeclutterGroup} declutterGroup Declutter group.\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     */\n    Executor.prototype.renderDeclutter_ = function (declutterGroup, feature) {\n        if (declutterGroup && declutterGroup.length > 5) {\n            var groupCount = declutterGroup[4];\n            if (groupCount == 1 || groupCount == declutterGroup.length - 5) {\n                /** @type {import(\"../../structs/RBush.js\").Entry} */\n                var box = {\n                    minX: /** @type {number} */ (declutterGroup[0]),\n                    minY: /** @type {number} */ (declutterGroup[1]),\n                    maxX: /** @type {number} */ (declutterGroup[2]),\n                    maxY: /** @type {number} */ (declutterGroup[3]),\n                    value: feature\n                };\n                if (!this.declutterTree.collides(box)) {\n                    this.declutterTree.insert(box);\n                    for (var j = 5, jj = declutterGroup.length; j < jj; ++j) {\n                        var declutterData = /** @type {Array} */ (declutterGroup[j]);\n                        if (declutterData) {\n                            if (declutterData.length > 11) {\n                                this.replayTextBackground_(declutterData[0], declutterData[13], declutterData[14], declutterData[15], declutterData[16], declutterData[11], declutterData[12]);\n                            }\n                            drawImage.apply(undefined, declutterData);\n                        }\n                    }\n                }\n                declutterGroup.length = 5;\n                createOrUpdateEmpty(declutterGroup);\n            }\n        }\n    };\n    /**\n     * @private\n     * @param {string} text The text to draw.\n     * @param {string} textKey The key of the text state.\n     * @param {string} strokeKey The key for the stroke state.\n     * @param {string} fillKey The key for the fill state.\n     * @return {{label: HTMLCanvasElement, anchorX: number, anchorY: number}} The text image and its anchor.\n     */\n    Executor.prototype.drawTextImageWithPointPlacement_ = function (text, textKey, strokeKey, fillKey) {\n        var textState = this.textStates[textKey];\n        var label = this.getTextImage(text, textKey, fillKey, strokeKey);\n        var strokeState = this.strokeStates[strokeKey];\n        var pixelRatio = this.pixelRatio;\n        var align = TEXT_ALIGN[textState.textAlign || defaultTextAlign];\n        var baseline = TEXT_ALIGN[textState.textBaseline || defaultTextBaseline];\n        var strokeWidth = strokeState && strokeState.lineWidth ? strokeState.lineWidth : 0;\n        var anchorX = align * label.width / pixelRatio + 2 * (0.5 - align) * strokeWidth;\n        var anchorY = baseline * label.height / pixelRatio + 2 * (0.5 - baseline) * strokeWidth;\n        return {\n            label: label,\n            anchorX: anchorX,\n            anchorY: anchorY\n        };\n    };\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {import(\"../../transform.js\").Transform} transform Transform.\n     * @param {Object<string, boolean>} skippedFeaturesHash Ids of features\n     *     to skip.\n     * @param {Array<*>} instructions Instructions array.\n     * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n     * @param {function(import(\"../../Feature.js\").FeatureLike): T|undefined} featureCallback Feature callback.\n     * @param {import(\"../../extent.js\").Extent=} opt_hitExtent Only check features that intersect this\n     *     extent.\n     * @return {T|undefined} Callback result.\n     * @template T\n     */\n    Executor.prototype.execute_ = function (context, transform, skippedFeaturesHash, instructions, snapToPixel, featureCallback, opt_hitExtent) {\n        /** @type {Array<number>} */\n        var pixelCoordinates;\n        if (this.pixelCoordinates_ && equals(transform, this.renderedTransform_)) {\n            pixelCoordinates = this.pixelCoordinates_;\n        }\n        else {\n            if (!this.pixelCoordinates_) {\n                this.pixelCoordinates_ = [];\n            }\n            pixelCoordinates = transform2D(this.coordinates, 0, this.coordinates.length, 2, transform, this.pixelCoordinates_);\n            transformSetFromArray(this.renderedTransform_, transform);\n        }\n        var skipFeatures = !isEmpty(skippedFeaturesHash);\n        var i = 0; // instruction index\n        var ii = instructions.length; // end of instructions\n        var d = 0; // data index\n        var dd; // end of per-instruction data\n        var anchorX, anchorY, prevX, prevY, roundX, roundY, declutterGroup, image, text, textKey;\n        var strokeKey, fillKey;\n        var pendingFill = 0;\n        var pendingStroke = 0;\n        var lastFillInstruction = null;\n        var lastStrokeInstruction = null;\n        var coordinateCache = this.coordinateCache_;\n        var viewRotation = this.viewRotation_;\n        var state = /** @type {import(\"../../render.js\").State} */ ({\n            context: context,\n            pixelRatio: this.pixelRatio,\n            resolution: this.resolution,\n            rotation: viewRotation\n        });\n        // When the batch size gets too big, performance decreases. 200 is a good\n        // balance between batch size and number of fill/stroke instructions.\n        var batchSize = this.instructions != instructions || this.overlaps ? 0 : 200;\n        var /** @type {import(\"../../Feature.js\").FeatureLike} */ feature;\n        var x, y;\n        while (i < ii) {\n            var instruction = instructions[i];\n            var type = /** @type {CanvasInstruction} */ (instruction[0]);\n            switch (type) {\n                case CanvasInstruction.BEGIN_GEOMETRY:\n                    feature = /** @type {import(\"../../Feature.js\").FeatureLike} */ (instruction[1]);\n                    if ((skipFeatures && skippedFeaturesHash[getUid(feature)]) || !feature.getGeometry()) {\n                        i = /** @type {number} */ (instruction[2]);\n                    }\n                    else if (opt_hitExtent !== undefined && !intersects(opt_hitExtent, feature.getGeometry().getExtent())) {\n                        i = /** @type {number} */ (instruction[2]) + 1;\n                    }\n                    else {\n                        ++i;\n                    }\n                    break;\n                case CanvasInstruction.BEGIN_PATH:\n                    if (pendingFill > batchSize) {\n                        this.fill_(context);\n                        pendingFill = 0;\n                    }\n                    if (pendingStroke > batchSize) {\n                        context.stroke();\n                        pendingStroke = 0;\n                    }\n                    if (!pendingFill && !pendingStroke) {\n                        context.beginPath();\n                        prevX = prevY = NaN;\n                    }\n                    ++i;\n                    break;\n                case CanvasInstruction.CIRCLE:\n                    d = /** @type {number} */ (instruction[1]);\n                    var x1 = pixelCoordinates[d];\n                    var y1 = pixelCoordinates[d + 1];\n                    var x2 = pixelCoordinates[d + 2];\n                    var y2 = pixelCoordinates[d + 3];\n                    var dx = x2 - x1;\n                    var dy = y2 - y1;\n                    var r = Math.sqrt(dx * dx + dy * dy);\n                    context.moveTo(x1 + r, y1);\n                    context.arc(x1, y1, r, 0, 2 * Math.PI, true);\n                    ++i;\n                    break;\n                case CanvasInstruction.CLOSE_PATH:\n                    context.closePath();\n                    ++i;\n                    break;\n                case CanvasInstruction.CUSTOM:\n                    d = /** @type {number} */ (instruction[1]);\n                    dd = instruction[2];\n                    var geometry = /** @type {import(\"../../geom/SimpleGeometry.js\").default} */ (instruction[3]);\n                    var renderer = instruction[4];\n                    var fn = instruction.length == 6 ? instruction[5] : undefined;\n                    state.geometry = geometry;\n                    state.feature = feature;\n                    if (!(i in coordinateCache)) {\n                        coordinateCache[i] = [];\n                    }\n                    var coords = coordinateCache[i];\n                    if (fn) {\n                        fn(pixelCoordinates, d, dd, 2, coords);\n                    }\n                    else {\n                        coords[0] = pixelCoordinates[d];\n                        coords[1] = pixelCoordinates[d + 1];\n                        coords.length = 2;\n                    }\n                    renderer(coords, state);\n                    ++i;\n                    break;\n                case CanvasInstruction.DRAW_IMAGE:\n                    d = /** @type {number} */ (instruction[1]);\n                    dd = /** @type {number} */ (instruction[2]);\n                    image = /** @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} */ (instruction[3]);\n                    // Remaining arguments in DRAW_IMAGE are in alphabetical order\n                    anchorX = /** @type {number} */ (instruction[4]);\n                    anchorY = /** @type {number} */ (instruction[5]);\n                    declutterGroup = featureCallback ? null : /** @type {import(\"../canvas.js\").DeclutterGroup} */ (instruction[6]);\n                    var height = /** @type {number} */ (instruction[7]);\n                    var opacity = /** @type {number} */ (instruction[8]);\n                    var originX = /** @type {number} */ (instruction[9]);\n                    var originY = /** @type {number} */ (instruction[10]);\n                    var rotateWithView = /** @type {boolean} */ (instruction[11]);\n                    var rotation = /** @type {number} */ (instruction[12]);\n                    var scale = /** @type {number} */ (instruction[13]);\n                    var width = /** @type {number} */ (instruction[14]);\n                    if (!image && instruction.length >= 19) {\n                        // create label images\n                        text = /** @type {string} */ (instruction[18]);\n                        textKey = /** @type {string} */ (instruction[19]);\n                        strokeKey = /** @type {string} */ (instruction[20]);\n                        fillKey = /** @type {string} */ (instruction[21]);\n                        var labelWithAnchor = this.drawTextImageWithPointPlacement_(text, textKey, strokeKey, fillKey);\n                        image = instruction[3] = labelWithAnchor.label;\n                        var textOffsetX = /** @type {number} */ (instruction[22]);\n                        anchorX = instruction[4] = (labelWithAnchor.anchorX - textOffsetX) * this.pixelRatio;\n                        var textOffsetY = /** @type {number} */ (instruction[23]);\n                        anchorY = instruction[5] = (labelWithAnchor.anchorY - textOffsetY) * this.pixelRatio;\n                        height = instruction[7] = image.height;\n                        width = instruction[14] = image.width;\n                    }\n                    var geometryWidths = void 0;\n                    if (instruction.length > 24) {\n                        geometryWidths = /** @type {number} */ (instruction[24]);\n                    }\n                    var padding = void 0, backgroundFill = void 0, backgroundStroke = void 0;\n                    if (instruction.length > 16) {\n                        padding = /** @type {Array<number>} */ (instruction[15]);\n                        backgroundFill = /** @type {boolean} */ (instruction[16]);\n                        backgroundStroke = /** @type {boolean} */ (instruction[17]);\n                    }\n                    else {\n                        padding = defaultPadding;\n                        backgroundFill = backgroundStroke = false;\n                    }\n                    if (rotateWithView) {\n                        rotation += viewRotation;\n                    }\n                    var widthIndex = 0;\n                    for (; d < dd; d += 2) {\n                        if (geometryWidths && geometryWidths[widthIndex++] < width / this.pixelRatio) {\n                            continue;\n                        }\n                        this.replayImage_(context, pixelCoordinates[d], pixelCoordinates[d + 1], image, anchorX, anchorY, declutterGroup, height, opacity, originX, originY, rotation, scale, snapToPixel, width, padding, backgroundFill ? /** @type {Array<*>} */ (lastFillInstruction) : null, backgroundStroke ? /** @type {Array<*>} */ (lastStrokeInstruction) : null);\n                    }\n                    this.renderDeclutter_(declutterGroup, feature);\n                    ++i;\n                    break;\n                case CanvasInstruction.DRAW_CHARS:\n                    var begin = /** @type {number} */ (instruction[1]);\n                    var end = /** @type {number} */ (instruction[2]);\n                    var baseline = /** @type {number} */ (instruction[3]);\n                    declutterGroup = featureCallback ? null : /** @type {import(\"../canvas.js\").DeclutterGroup} */ (instruction[4]);\n                    var overflow = /** @type {number} */ (instruction[5]);\n                    fillKey = /** @type {string} */ (instruction[6]);\n                    var maxAngle = /** @type {number} */ (instruction[7]);\n                    var measurePixelRatio = /** @type {number} */ (instruction[8]);\n                    var offsetY = /** @type {number} */ (instruction[9]);\n                    strokeKey = /** @type {string} */ (instruction[10]);\n                    var strokeWidth = /** @type {number} */ (instruction[11]);\n                    text = /** @type {string} */ (instruction[12]);\n                    textKey = /** @type {string} */ (instruction[13]);\n                    var pixelRatioScale = /** @type {number} */ (instruction[14]);\n                    var textState = this.textStates[textKey];\n                    var font = textState.font;\n                    var textScale = textState.scale * measurePixelRatio;\n                    var cachedWidths = void 0;\n                    if (font in this.widths_) {\n                        cachedWidths = this.widths_[font];\n                    }\n                    else {\n                        cachedWidths = this.widths_[font] = {};\n                    }\n                    var pathLength = lineStringLength(pixelCoordinates, begin, end, 2);\n                    var textLength = textScale * measureAndCacheTextWidth(font, text, cachedWidths);\n                    if (overflow || textLength <= pathLength) {\n                        var textAlign = this.textStates[textKey].textAlign;\n                        var startM = (pathLength - textLength) * TEXT_ALIGN[textAlign];\n                        var parts = drawTextOnPath(pixelCoordinates, begin, end, 2, text, startM, maxAngle, textScale, measureAndCacheTextWidth, font, cachedWidths);\n                        if (parts) {\n                            var c = void 0, cc = void 0, chars = void 0, label = void 0, part = void 0;\n                            if (strokeKey) {\n                                for (c = 0, cc = parts.length; c < cc; ++c) {\n                                    part = parts[c]; // x, y, anchorX, rotation, chunk\n                                    chars = /** @type {string} */ (part[4]);\n                                    label = this.getTextImage(chars, textKey, '', strokeKey);\n                                    anchorX = /** @type {number} */ (part[2]) + strokeWidth;\n                                    anchorY = baseline * label.height + (0.5 - baseline) * 2 * strokeWidth - offsetY;\n                                    this.replayImage_(context, \n                                    /** @type {number} */ (part[0]), /** @type {number} */ (part[1]), label, anchorX, anchorY, declutterGroup, label.height, 1, 0, 0, \n                                    /** @type {number} */ (part[3]), pixelRatioScale, false, label.width, defaultPadding, null, null);\n                                }\n                            }\n                            if (fillKey) {\n                                for (c = 0, cc = parts.length; c < cc; ++c) {\n                                    part = parts[c]; // x, y, anchorX, rotation, chunk\n                                    chars = /** @type {string} */ (part[4]);\n                                    label = this.getTextImage(chars, textKey, fillKey, '');\n                                    anchorX = /** @type {number} */ (part[2]);\n                                    anchorY = baseline * label.height - offsetY;\n                                    this.replayImage_(context, \n                                    /** @type {number} */ (part[0]), /** @type {number} */ (part[1]), label, anchorX, anchorY, declutterGroup, label.height, 1, 0, 0, \n                                    /** @type {number} */ (part[3]), pixelRatioScale, false, label.width, defaultPadding, null, null);\n                                }\n                            }\n                        }\n                    }\n                    this.renderDeclutter_(declutterGroup, feature);\n                    ++i;\n                    break;\n                case CanvasInstruction.END_GEOMETRY:\n                    if (featureCallback !== undefined) {\n                        feature = /** @type {import(\"../../Feature.js\").FeatureLike} */ (instruction[1]);\n                        var result = featureCallback(feature);\n                        if (result) {\n                            return result;\n                        }\n                    }\n                    ++i;\n                    break;\n                case CanvasInstruction.FILL:\n                    if (batchSize) {\n                        pendingFill++;\n                    }\n                    else {\n                        this.fill_(context);\n                    }\n                    ++i;\n                    break;\n                case CanvasInstruction.MOVE_TO_LINE_TO:\n                    d = /** @type {number} */ (instruction[1]);\n                    dd = /** @type {number} */ (instruction[2]);\n                    x = pixelCoordinates[d];\n                    y = pixelCoordinates[d + 1];\n                    roundX = (x + 0.5) | 0;\n                    roundY = (y + 0.5) | 0;\n                    if (roundX !== prevX || roundY !== prevY) {\n                        context.moveTo(x, y);\n                        prevX = roundX;\n                        prevY = roundY;\n                    }\n                    for (d += 2; d < dd; d += 2) {\n                        x = pixelCoordinates[d];\n                        y = pixelCoordinates[d + 1];\n                        roundX = (x + 0.5) | 0;\n                        roundY = (y + 0.5) | 0;\n                        if (d == dd - 2 || roundX !== prevX || roundY !== prevY) {\n                            context.lineTo(x, y);\n                            prevX = roundX;\n                            prevY = roundY;\n                        }\n                    }\n                    ++i;\n                    break;\n                case CanvasInstruction.SET_FILL_STYLE:\n                    lastFillInstruction = instruction;\n                    this.alignFill_ = instruction[2];\n                    if (pendingFill) {\n                        this.fill_(context);\n                        pendingFill = 0;\n                        if (pendingStroke) {\n                            context.stroke();\n                            pendingStroke = 0;\n                        }\n                    }\n                    context.fillStyle = /** @type {import(\"../../colorlike.js\").ColorLike} */ (instruction[1]);\n                    ++i;\n                    break;\n                case CanvasInstruction.SET_STROKE_STYLE:\n                    lastStrokeInstruction = instruction;\n                    if (pendingStroke) {\n                        context.stroke();\n                        pendingStroke = 0;\n                    }\n                    this.setStrokeStyle_(context, /** @type {Array<*>} */ (instruction));\n                    ++i;\n                    break;\n                case CanvasInstruction.STROKE:\n                    if (batchSize) {\n                        pendingStroke++;\n                    }\n                    else {\n                        context.stroke();\n                    }\n                    ++i;\n                    break;\n                default:\n                    ++i; // consume the instruction anyway, to avoid an infinite loop\n                    break;\n            }\n        }\n        if (pendingFill) {\n            this.fill_(context);\n        }\n        if (pendingStroke) {\n            context.stroke();\n        }\n        return undefined;\n    };\n    /**\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {import(\"../../transform.js\").Transform} transform Transform.\n     * @param {number} viewRotation View rotation.\n     * @param {Object<string, boolean>} skippedFeaturesHash Ids of features\n     *     to skip.\n     * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n     */\n    Executor.prototype.execute = function (context, transform, viewRotation, skippedFeaturesHash, snapToPixel) {\n        this.viewRotation_ = viewRotation;\n        this.execute_(context, transform, skippedFeaturesHash, this.instructions, snapToPixel, undefined, undefined);\n    };\n    /**\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {import(\"../../transform.js\").Transform} transform Transform.\n     * @param {number} viewRotation View rotation.\n     * @param {Object<string, boolean>} skippedFeaturesHash Ids of features\n     *     to skip.\n     * @param {function(import(\"../../Feature.js\").FeatureLike): T=} opt_featureCallback\n     *     Feature callback.\n     * @param {import(\"../../extent.js\").Extent=} opt_hitExtent Only check features that intersect this\n     *     extent.\n     * @return {T|undefined} Callback result.\n     * @template T\n     */\n    Executor.prototype.executeHitDetection = function (context, transform, viewRotation, skippedFeaturesHash, opt_featureCallback, opt_hitExtent) {\n        this.viewRotation_ = viewRotation;\n        return this.execute_(context, transform, skippedFeaturesHash, this.hitDetectionInstructions, true, opt_featureCallback, opt_hitExtent);\n    };\n    return Executor;\n}(Disposable));\nexport default Executor;\n//# sourceMappingURL=Executor.js.map","/**\n * @module ol/render/canvas/ExecutorGroup\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { numberSafeCompareFunction } from '../../array.js';\nimport { createCanvasContext2D } from '../../dom.js';\nimport { buffer, createEmpty, extendCoordinate } from '../../extent.js';\nimport { transform2D } from '../../geom/flat/transform.js';\nimport { isEmpty } from '../../obj.js';\nimport BuilderType from './BuilderType.js';\nimport { create as createTransform, compose as composeTransform } from '../../transform.js';\nimport Executor from './Executor.js';\nimport Disposable from '../../Disposable.js';\n/**\n * @const\n * @type {Array<BuilderType>}\n */\nvar ORDER = [\n    BuilderType.POLYGON,\n    BuilderType.CIRCLE,\n    BuilderType.LINE_STRING,\n    BuilderType.IMAGE,\n    BuilderType.TEXT,\n    BuilderType.DEFAULT\n];\nvar ExecutorGroup = /** @class */ (function (_super) {\n    __extends(ExecutorGroup, _super);\n    /**\n     * @param {import(\"../../extent.js\").Extent} maxExtent Max extent for clipping. When a\n     * `maxExtent` was set on the Buillder for this executor group, the same `maxExtent`\n     * should be set here, unless the target context does not exceet that extent (which\n     * can be the case when rendering to tiles).\n     * @param {number} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {boolean} overlaps The executor group can have overlapping geometries.\n     * @param {?} declutterTree Declutter tree for declutter processing in postrender.\n     * @param {!Object<string, !Object<BuilderType, import(\"./Builder.js\").SerializableInstructions>>} allInstructions\n     * The serializable instructions.\n     * @param {number=} opt_renderBuffer Optional rendering buffer.\n     */\n    function ExecutorGroup(maxExtent, resolution, pixelRatio, overlaps, declutterTree, allInstructions, opt_renderBuffer) {\n        var _this = _super.call(this) || this;\n        /**\n         * Declutter tree.\n         * @private\n         */\n        _this.declutterTree_ = declutterTree;\n        /**\n         * @private\n         * @type {import(\"../../extent.js\").Extent}\n         */\n        _this.maxExtent_ = maxExtent;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.overlaps_ = overlaps;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.pixelRatio_ = pixelRatio;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.resolution_ = resolution;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.renderBuffer_ = opt_renderBuffer;\n        /**\n         * @private\n         * @type {!Object<string, !Object<BuilderType, import(\"./Executor\").default>>}\n         */\n        _this.executorsByZIndex_ = {};\n        /**\n         * @private\n         * @type {CanvasRenderingContext2D}\n         */\n        _this.hitDetectionContext_ = createCanvasContext2D(1, 1);\n        /**\n         * @private\n         * @type {import(\"../../transform.js\").Transform}\n         */\n        _this.hitDetectionTransform_ = createTransform();\n        _this.createExecutors_(allInstructions);\n        return _this;\n    }\n    /**\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {import(\"../../transform.js\").Transform} transform Transform.\n     */\n    ExecutorGroup.prototype.clip = function (context, transform) {\n        var flatClipCoords = this.getClipCoords(transform);\n        context.beginPath();\n        context.moveTo(flatClipCoords[0], flatClipCoords[1]);\n        context.lineTo(flatClipCoords[2], flatClipCoords[3]);\n        context.lineTo(flatClipCoords[4], flatClipCoords[5]);\n        context.lineTo(flatClipCoords[6], flatClipCoords[7]);\n        context.clip();\n    };\n    /**\n     * Create executors and populate them using the provided instructions.\n     * @private\n     * @param {!Object<string, !Object<BuilderType, import(\"./Builder.js\").SerializableInstructions>>} allInstructions The serializable instructions\n     */\n    ExecutorGroup.prototype.createExecutors_ = function (allInstructions) {\n        for (var zIndex in allInstructions) {\n            var executors = this.executorsByZIndex_[zIndex];\n            if (executors === undefined) {\n                this.executorsByZIndex_[zIndex] = executors = {};\n            }\n            var instructionByZindex = allInstructions[zIndex];\n            for (var builderType in instructionByZindex) {\n                var instructions = instructionByZindex[builderType];\n                executors[builderType] = new Executor(this.resolution_, this.pixelRatio_, this.overlaps_, this.declutterTree_, instructions);\n            }\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    ExecutorGroup.prototype.disposeInternal = function () {\n        for (var z in this.executorsByZIndex_) {\n            var executors = this.executorsByZIndex_[z];\n            for (var key in executors) {\n                executors[key].disposeInternal();\n            }\n        }\n        var canvas = this.hitDetectionContext_.canvas;\n        canvas.width = canvas.height = 0;\n        _super.prototype.disposeInternal.call(this);\n    };\n    /**\n     * @param {Array<BuilderType>} executors Executors.\n     * @return {boolean} Has executors of the provided types.\n     */\n    ExecutorGroup.prototype.hasExecutors = function (executors) {\n        for (var zIndex in this.executorsByZIndex_) {\n            var candidates = this.executorsByZIndex_[zIndex];\n            for (var i = 0, ii = executors.length; i < ii; ++i) {\n                if (executors[i] in candidates) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    };\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {number} resolution Resolution.\n     * @param {number} rotation Rotation.\n     * @param {number} hitTolerance Hit tolerance in pixels.\n     * @param {Object<string, boolean>} skippedFeaturesHash Ids of features to skip.\n     * @param {function(import(\"../../Feature.js\").FeatureLike): T} callback Feature callback.\n     * @param {Object<string, import(\"../canvas.js\").DeclutterGroup>} declutterReplays Declutter replays.\n     * @return {T|undefined} Callback result.\n     * @template T\n     */\n    ExecutorGroup.prototype.forEachFeatureAtCoordinate = function (coordinate, resolution, rotation, hitTolerance, skippedFeaturesHash, callback, declutterReplays) {\n        hitTolerance = Math.round(hitTolerance);\n        var contextSize = hitTolerance * 2 + 1;\n        var transform = composeTransform(this.hitDetectionTransform_, hitTolerance + 0.5, hitTolerance + 0.5, 1 / resolution, -1 / resolution, -rotation, -coordinate[0], -coordinate[1]);\n        var context = this.hitDetectionContext_;\n        if (context.canvas.width !== contextSize || context.canvas.height !== contextSize) {\n            context.canvas.width = contextSize;\n            context.canvas.height = contextSize;\n        }\n        else {\n            context.clearRect(0, 0, contextSize, contextSize);\n        }\n        /**\n         * @type {import(\"../../extent.js\").Extent}\n         */\n        var hitExtent;\n        if (this.renderBuffer_ !== undefined) {\n            hitExtent = createEmpty();\n            extendCoordinate(hitExtent, coordinate);\n            buffer(hitExtent, resolution * (this.renderBuffer_ + hitTolerance), hitExtent);\n        }\n        var mask = getCircleArray(hitTolerance);\n        var declutteredFeatures;\n        if (this.declutterTree_) {\n            declutteredFeatures = this.declutterTree_.all().map(function (entry) {\n                return entry.value;\n            });\n        }\n        var builderType;\n        /**\n         * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n         * @return {?} Callback result.\n         */\n        function featureCallback(feature) {\n            var imageData = context.getImageData(0, 0, contextSize, contextSize).data;\n            for (var i_1 = 0; i_1 < contextSize; i_1++) {\n                for (var j_1 = 0; j_1 < contextSize; j_1++) {\n                    if (mask[i_1][j_1]) {\n                        if (imageData[(j_1 * contextSize + i_1) * 4 + 3] > 0) {\n                            var result_1 = void 0;\n                            if (!(declutteredFeatures && (builderType == BuilderType.IMAGE || builderType == BuilderType.TEXT)) ||\n                                declutteredFeatures.indexOf(feature) !== -1) {\n                                result_1 = callback(feature);\n                            }\n                            if (result_1) {\n                                return result_1;\n                            }\n                            else {\n                                context.clearRect(0, 0, contextSize, contextSize);\n                                return undefined;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        /** @type {Array<number>} */\n        var zs = Object.keys(this.executorsByZIndex_).map(Number);\n        zs.sort(numberSafeCompareFunction);\n        var i, j, executors, executor, result;\n        for (i = zs.length - 1; i >= 0; --i) {\n            var zIndexKey = zs[i].toString();\n            executors = this.executorsByZIndex_[zIndexKey];\n            for (j = ORDER.length - 1; j >= 0; --j) {\n                builderType = ORDER[j];\n                executor = executors[builderType];\n                if (executor !== undefined) {\n                    if (declutterReplays &&\n                        (builderType == BuilderType.IMAGE || builderType == BuilderType.TEXT)) {\n                        var declutter = declutterReplays[zIndexKey];\n                        if (!declutter) {\n                            declutterReplays[zIndexKey] = [executor, transform.slice(0)];\n                        }\n                        else {\n                            declutter.push(executor, transform.slice(0));\n                        }\n                    }\n                    else {\n                        result = executor.executeHitDetection(context, transform, rotation, skippedFeaturesHash, featureCallback, hitExtent);\n                        if (result) {\n                            return result;\n                        }\n                    }\n                }\n            }\n        }\n        return undefined;\n    };\n    /**\n     * @param {import(\"../../transform.js\").Transform} transform Transform.\n     * @return {Array<number>} Clip coordinates.\n     */\n    ExecutorGroup.prototype.getClipCoords = function (transform) {\n        var maxExtent = this.maxExtent_;\n        if (!maxExtent) {\n            return null;\n        }\n        var minX = maxExtent[0];\n        var minY = maxExtent[1];\n        var maxX = maxExtent[2];\n        var maxY = maxExtent[3];\n        var flatClipCoords = [minX, minY, minX, maxY, maxX, maxY, maxX, minY];\n        transform2D(flatClipCoords, 0, 8, 2, transform, flatClipCoords);\n        return flatClipCoords;\n    };\n    /**\n     * @return {boolean} Is empty.\n     */\n    ExecutorGroup.prototype.isEmpty = function () {\n        return isEmpty(this.executorsByZIndex_);\n    };\n    /**\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {import(\"../../transform.js\").Transform} transform Transform.\n     * @param {number} viewRotation View rotation.\n     * @param {Object<string, boolean>} skippedFeaturesHash Ids of features to skip.\n     * @param {boolean} snapToPixel Snap point symbols and test to integer pixel.\n     * @param {Array<BuilderType>=} opt_builderTypes Ordered replay types to replay.\n     *     Default is {@link module:ol/render/replay~ORDER}\n     * @param {Object<string, import(\"../canvas.js\").DeclutterGroup>=} opt_declutterReplays Declutter replays.\n     */\n    ExecutorGroup.prototype.execute = function (context, transform, viewRotation, skippedFeaturesHash, snapToPixel, opt_builderTypes, opt_declutterReplays) {\n        /** @type {Array<number>} */\n        var zs = Object.keys(this.executorsByZIndex_).map(Number);\n        zs.sort(numberSafeCompareFunction);\n        // setup clipping so that the parts of over-simplified geometries are not\n        // visible outside the current extent when panning\n        if (this.maxExtent_) {\n            context.save();\n            this.clip(context, transform);\n        }\n        var builderTypes = opt_builderTypes ? opt_builderTypes : ORDER;\n        var i, ii, j, jj, replays, replay;\n        for (i = 0, ii = zs.length; i < ii; ++i) {\n            var zIndexKey = zs[i].toString();\n            replays = this.executorsByZIndex_[zIndexKey];\n            for (j = 0, jj = builderTypes.length; j < jj; ++j) {\n                var builderType = builderTypes[j];\n                replay = replays[builderType];\n                if (replay !== undefined) {\n                    if (opt_declutterReplays &&\n                        (builderType == BuilderType.IMAGE || builderType == BuilderType.TEXT)) {\n                        var declutter = opt_declutterReplays[zIndexKey];\n                        if (!declutter) {\n                            opt_declutterReplays[zIndexKey] = [replay, transform.slice(0)];\n                        }\n                        else {\n                            declutter.push(replay, transform.slice(0));\n                        }\n                    }\n                    else {\n                        replay.execute(context, transform, viewRotation, skippedFeaturesHash, snapToPixel);\n                    }\n                }\n            }\n        }\n        if (this.maxExtent_) {\n            context.restore();\n        }\n    };\n    return ExecutorGroup;\n}(Disposable));\n/**\n * This cache is used for storing calculated pixel circles for increasing performance.\n * It is a static property to allow each Replaygroup to access it.\n * @type {Object<number, Array<Array<(boolean|undefined)>>>}\n */\nvar circleArrayCache = {\n    0: [[true]]\n};\n/**\n * This method fills a row in the array from the given coordinate to the\n * middle with `true`.\n * @param {Array<Array<(boolean|undefined)>>} array The array that will be altered.\n * @param {number} x X coordinate.\n * @param {number} y Y coordinate.\n */\nfunction fillCircleArrayRowToMiddle(array, x, y) {\n    var i;\n    var radius = Math.floor(array.length / 2);\n    if (x >= radius) {\n        for (i = radius; i < x; i++) {\n            array[i][y] = true;\n        }\n    }\n    else if (x < radius) {\n        for (i = x + 1; i < radius; i++) {\n            array[i][y] = true;\n        }\n    }\n}\n/**\n * This methods creates a circle inside a fitting array. Points inside the\n * circle are marked by true, points on the outside are undefined.\n * It uses the midpoint circle algorithm.\n * A cache is used to increase performance.\n * @param {number} radius Radius.\n * @returns {Array<Array<(boolean|undefined)>>} An array with marked circle points.\n */\nexport function getCircleArray(radius) {\n    if (circleArrayCache[radius] !== undefined) {\n        return circleArrayCache[radius];\n    }\n    var arraySize = radius * 2 + 1;\n    var arr = new Array(arraySize);\n    for (var i = 0; i < arraySize; i++) {\n        arr[i] = new Array(arraySize);\n    }\n    var x = radius;\n    var y = 0;\n    var error = 0;\n    while (x >= y) {\n        fillCircleArrayRowToMiddle(arr, radius + x, radius + y);\n        fillCircleArrayRowToMiddle(arr, radius + y, radius + x);\n        fillCircleArrayRowToMiddle(arr, radius - y, radius + x);\n        fillCircleArrayRowToMiddle(arr, radius - x, radius + y);\n        fillCircleArrayRowToMiddle(arr, radius - x, radius - y);\n        fillCircleArrayRowToMiddle(arr, radius - y, radius - x);\n        fillCircleArrayRowToMiddle(arr, radius + y, radius - x);\n        fillCircleArrayRowToMiddle(arr, radius + x, radius - y);\n        y++;\n        error += 1 + 2 * y;\n        if (2 * (error - x) + 1 > 0) {\n            x -= 1;\n            error += 1 - 2 * x;\n        }\n    }\n    circleArrayCache[radius] = arr;\n    return arr;\n}\n/**\n * @param {!Object<string, Array<*>>} declutterReplays Declutter replays.\n * @param {CanvasRenderingContext2D} context Context.\n * @param {number} rotation Rotation.\n * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n */\nexport function replayDeclutter(declutterReplays, context, rotation, snapToPixel) {\n    var zs = Object.keys(declutterReplays).map(Number).sort(numberSafeCompareFunction);\n    var skippedFeatureUids = {};\n    for (var z = 0, zz = zs.length; z < zz; ++z) {\n        var executorData = declutterReplays[zs[z].toString()];\n        for (var i = 0, ii = executorData.length; i < ii;) {\n            var executor = executorData[i++];\n            var transform = executorData[i++];\n            executor.execute(context, transform, rotation, skippedFeatureUids, snapToPixel);\n        }\n    }\n}\nexport default ExecutorGroup;\n//# sourceMappingURL=ExecutorGroup.js.map","/**\n * @module ol/renderer/vector\n */\nimport { getUid } from '../util.js';\nimport ImageState from '../ImageState.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport BuilderType from '../render/canvas/BuilderType.js';\n/**\n * Tolerance for geometry simplification in device pixels.\n * @type {number}\n */\nvar SIMPLIFY_TOLERANCE = 0.5;\n/**\n * @const\n * @type {Object<import(\"../geom/GeometryType.js\").default,\n *                function(import(\"../render/canvas/BuilderGroup.js\").default, import(\"../geom/Geometry.js\").default,\n *                         import(\"../style/Style.js\").default, Object): void>}\n */\nvar GEOMETRY_RENDERERS = {\n    'Point': renderPointGeometry,\n    'LineString': renderLineStringGeometry,\n    'Polygon': renderPolygonGeometry,\n    'MultiPoint': renderMultiPointGeometry,\n    'MultiLineString': renderMultiLineStringGeometry,\n    'MultiPolygon': renderMultiPolygonGeometry,\n    'GeometryCollection': renderGeometryCollectionGeometry,\n    'Circle': renderCircleGeometry\n};\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature1 Feature 1.\n * @param {import(\"../Feature.js\").FeatureLike} feature2 Feature 2.\n * @return {number} Order.\n */\nexport function defaultOrder(feature1, feature2) {\n    return parseInt(getUid(feature1), 10) - parseInt(getUid(feature2), 10);\n}\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Squared pixel tolerance.\n */\nexport function getSquaredTolerance(resolution, pixelRatio) {\n    var tolerance = getTolerance(resolution, pixelRatio);\n    return tolerance * tolerance;\n}\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Pixel tolerance.\n */\nexport function getTolerance(resolution, pixelRatio) {\n    return SIMPLIFY_TOLERANCE * resolution / pixelRatio;\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Builder group.\n * @param {import(\"../geom/Circle.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n */\nfunction renderCircleGeometry(builderGroup, geometry, style, feature) {\n    var fillStyle = style.getFill();\n    var strokeStyle = style.getStroke();\n    if (fillStyle || strokeStyle) {\n        var circleReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.CIRCLE);\n        circleReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n        circleReplay.drawCircle(geometry, feature);\n    }\n    var textStyle = style.getText();\n    if (textStyle) {\n        var textReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.TEXT);\n        textReplay.setTextStyle(textStyle, builderGroup.addDeclutter(false));\n        textReplay.drawText(geometry, feature);\n    }\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {function(this: T, import(\"../events/Event.js\").default): void} listener Listener function.\n * @param {T} thisArg Value to use as `this` when executing `listener`.\n * @return {boolean} `true` if style is loading.\n * @template T\n */\nexport function renderFeature(replayGroup, feature, style, squaredTolerance, listener, thisArg) {\n    var loading = false;\n    var imageStyle = style.getImage();\n    if (imageStyle) {\n        var imageState = imageStyle.getImageState();\n        if (imageState == ImageState.LOADED || imageState == ImageState.ERROR) {\n            imageStyle.unlistenImageChange(listener, thisArg);\n        }\n        else {\n            if (imageState == ImageState.IDLE) {\n                imageStyle.load();\n            }\n            imageState = imageStyle.getImageState();\n            imageStyle.listenImageChange(listener, thisArg);\n            loading = true;\n        }\n    }\n    renderFeatureInternal(replayGroup, feature, style, squaredTolerance);\n    return loading;\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n */\nfunction renderFeatureInternal(replayGroup, feature, style, squaredTolerance) {\n    var geometry = style.getGeometryFunction()(feature);\n    if (!geometry) {\n        return;\n    }\n    var simplifiedGeometry = geometry.getSimplifiedGeometry(squaredTolerance);\n    var renderer = style.getRenderer();\n    if (renderer) {\n        renderGeometry(replayGroup, simplifiedGeometry, style, feature);\n    }\n    else {\n        var geometryRenderer = GEOMETRY_RENDERERS[simplifiedGeometry.getType()];\n        geometryRenderer(replayGroup, simplifiedGeometry, style, feature);\n    }\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderGeometry(replayGroup, geometry, style, feature) {\n    if (geometry.getType() == GeometryType.GEOMETRY_COLLECTION) {\n        var geometries = /** @type {import(\"../geom/GeometryCollection.js\").default} */ (geometry).getGeometries();\n        for (var i = 0, ii = geometries.length; i < ii; ++i) {\n            renderGeometry(replayGroup, geometries[i], style, feature);\n        }\n        return;\n    }\n    var replay = replayGroup.getBuilder(style.getZIndex(), BuilderType.DEFAULT);\n    replay.drawCustom(/** @type {import(\"../geom/SimpleGeometry.js\").default} */ (geometry), feature, style.getRenderer());\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/GeometryCollection.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n */\nfunction renderGeometryCollectionGeometry(replayGroup, geometry, style, feature) {\n    var geometries = geometry.getGeometriesArray();\n    var i, ii;\n    for (i = 0, ii = geometries.length; i < ii; ++i) {\n        var geometryRenderer = GEOMETRY_RENDERERS[geometries[i].getType()];\n        geometryRenderer(replayGroup, geometries[i], style, feature);\n    }\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/LineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderLineStringGeometry(builderGroup, geometry, style, feature) {\n    var strokeStyle = style.getStroke();\n    if (strokeStyle) {\n        var lineStringReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.LINE_STRING);\n        lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n        lineStringReplay.drawLineString(geometry, feature);\n    }\n    var textStyle = style.getText();\n    if (textStyle) {\n        var textReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.TEXT);\n        textReplay.setTextStyle(textStyle, builderGroup.addDeclutter(false));\n        textReplay.drawText(geometry, feature);\n    }\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiLineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderMultiLineStringGeometry(builderGroup, geometry, style, feature) {\n    var strokeStyle = style.getStroke();\n    if (strokeStyle) {\n        var lineStringReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.LINE_STRING);\n        lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n        lineStringReplay.drawMultiLineString(geometry, feature);\n    }\n    var textStyle = style.getText();\n    if (textStyle) {\n        var textReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.TEXT);\n        textReplay.setTextStyle(textStyle, builderGroup.addDeclutter(false));\n        textReplay.drawText(geometry, feature);\n    }\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiPolygon.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n */\nfunction renderMultiPolygonGeometry(builderGroup, geometry, style, feature) {\n    var fillStyle = style.getFill();\n    var strokeStyle = style.getStroke();\n    if (strokeStyle || fillStyle) {\n        var polygonReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.POLYGON);\n        polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n        polygonReplay.drawMultiPolygon(geometry, feature);\n    }\n    var textStyle = style.getText();\n    if (textStyle) {\n        var textReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.TEXT);\n        textReplay.setTextStyle(textStyle, builderGroup.addDeclutter(false));\n        textReplay.drawText(geometry, feature);\n    }\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/Point.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderPointGeometry(builderGroup, geometry, style, feature) {\n    var imageStyle = style.getImage();\n    if (imageStyle) {\n        if (imageStyle.getImageState() != ImageState.LOADED) {\n            return;\n        }\n        var imageReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.IMAGE);\n        imageReplay.setImageStyle(imageStyle, builderGroup.addDeclutter(false));\n        imageReplay.drawPoint(geometry, feature);\n    }\n    var textStyle = style.getText();\n    if (textStyle) {\n        var textReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.TEXT);\n        textReplay.setTextStyle(textStyle, builderGroup.addDeclutter(!!imageStyle));\n        textReplay.drawText(geometry, feature);\n    }\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiPoint.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderMultiPointGeometry(builderGroup, geometry, style, feature) {\n    var imageStyle = style.getImage();\n    if (imageStyle) {\n        if (imageStyle.getImageState() != ImageState.LOADED) {\n            return;\n        }\n        var imageReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.IMAGE);\n        imageReplay.setImageStyle(imageStyle, builderGroup.addDeclutter(false));\n        imageReplay.drawMultiPoint(geometry, feature);\n    }\n    var textStyle = style.getText();\n    if (textStyle) {\n        var textReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.TEXT);\n        textReplay.setTextStyle(textStyle, builderGroup.addDeclutter(!!imageStyle));\n        textReplay.drawText(geometry, feature);\n    }\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/Polygon.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderPolygonGeometry(builderGroup, geometry, style, feature) {\n    var fillStyle = style.getFill();\n    var strokeStyle = style.getStroke();\n    if (fillStyle || strokeStyle) {\n        var polygonReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.POLYGON);\n        polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n        polygonReplay.drawPolygon(geometry, feature);\n    }\n    var textStyle = style.getText();\n    if (textStyle) {\n        var textReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.TEXT);\n        textReplay.setTextStyle(textStyle, builderGroup.addDeclutter(false));\n        textReplay.drawText(geometry, feature);\n    }\n}\n//# sourceMappingURL=vector.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/renderer/canvas/VectorLayer\n */\nimport { getUid } from '../../util.js';\nimport ViewHint from '../../ViewHint.js';\nimport { listen, unlisten } from '../../events.js';\nimport EventType from '../../events/EventType.js';\nimport rbush from 'rbush';\nimport { buffer, createEmpty, containsExtent, getWidth } from '../../extent.js';\nimport { labelCache } from '../../render/canvas.js';\nimport CanvasBuilderGroup from '../../render/canvas/BuilderGroup.js';\nimport ExecutorGroup from '../../render/canvas/ExecutorGroup.js';\nimport CanvasLayerRenderer from './Layer.js';\nimport { defaultOrder as defaultRenderOrder, getTolerance as getRenderTolerance, getSquaredTolerance as getSquaredRenderTolerance, renderFeature } from '../vector.js';\nimport { toString as transformToString, makeScale, makeInverse } from '../../transform.js';\n/**\n * @classdesc\n * Canvas renderer for vector layers.\n * @api\n */\nvar CanvasVectorLayerRenderer = /** @class */ (function (_super) {\n    __extends(CanvasVectorLayerRenderer, _super);\n    /**\n     * @param {import(\"../../layer/Vector.js\").default} vectorLayer Vector layer.\n     */\n    function CanvasVectorLayerRenderer(vectorLayer) {\n        var _this = _super.call(this, vectorLayer) || this;\n        /**\n         * Declutter tree.\n         * @private\n         */\n        _this.declutterTree_ = vectorLayer.getDeclutter() ? rbush(9, undefined) : null;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.dirty_ = false;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.renderedRevision_ = -1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.renderedResolution_ = NaN;\n        /**\n         * @private\n         * @type {import(\"../../extent.js\").Extent}\n         */\n        _this.renderedExtent_ = createEmpty();\n        /**\n         * @private\n         * @type {function(import(\"../../Feature.js\").default, import(\"../../Feature.js\").default): number|null}\n         */\n        _this.renderedRenderOrder_ = null;\n        /**\n         * @private\n         * @type {import(\"../../render/canvas/ExecutorGroup\").default}\n         */\n        _this.replayGroup_ = null;\n        /**\n         * A new replay group had to be created by `prepareFrame()`\n         * @type {boolean}\n         */\n        _this.replayGroupChanged = true;\n        listen(labelCache, EventType.CLEAR, _this.handleFontsChanged_, _this);\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    CanvasVectorLayerRenderer.prototype.disposeInternal = function () {\n        unlisten(labelCache, EventType.CLEAR, this.handleFontsChanged_, this);\n        _super.prototype.disposeInternal.call(this);\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasVectorLayerRenderer.prototype.renderFrame = function (frameState, layerState) {\n        var context = this.context;\n        var canvas = context.canvas;\n        var replayGroup = this.replayGroup_;\n        if (!replayGroup || replayGroup.isEmpty()) {\n            if (canvas.width > 0) {\n                canvas.width = 0;\n            }\n            return canvas;\n        }\n        var pixelRatio = frameState.pixelRatio;\n        // set forward and inverse pixel transforms\n        makeScale(this.pixelTransform_, 1 / pixelRatio, 1 / pixelRatio);\n        makeInverse(this.inversePixelTransform_, this.pixelTransform_);\n        // resize and clear\n        var width = Math.round(frameState.size[0] * pixelRatio);\n        var height = Math.round(frameState.size[1] * pixelRatio);\n        if (canvas.width != width || canvas.height != height) {\n            canvas.width = width;\n            canvas.height = height;\n            var canvasTransform = transformToString(this.pixelTransform_);\n            if (canvas.style.transform !== canvasTransform) {\n                canvas.style.transform = canvasTransform;\n            }\n        }\n        else {\n            context.clearRect(0, 0, width, height);\n        }\n        this.preRender(context, frameState);\n        var extent = frameState.extent;\n        var viewState = frameState.viewState;\n        var projection = viewState.projection;\n        var rotation = viewState.rotation;\n        var projectionExtent = projection.getExtent();\n        var vectorSource = this.getLayer().getSource();\n        // clipped rendering if layer extent is set\n        var clipExtent = layerState.extent;\n        var clipped = clipExtent !== undefined;\n        if (clipped) {\n            this.clip(context, frameState, clipExtent);\n        }\n        if (this.declutterTree_) {\n            this.declutterTree_.clear();\n        }\n        var viewHints = frameState.viewHints;\n        var snapToPixel = !(viewHints[ViewHint.ANIMATING] || viewHints[ViewHint.INTERACTING]);\n        var transform = this.getRenderTransform(frameState, width, height, 0);\n        var skippedFeatureUids = layerState.managed ? frameState.skippedFeatureUids : {};\n        replayGroup.execute(context, transform, rotation, skippedFeatureUids, snapToPixel);\n        if (vectorSource.getWrapX() && projection.canWrapX() && !containsExtent(projectionExtent, extent)) {\n            var startX = extent[0];\n            var worldWidth = getWidth(projectionExtent);\n            var world = 0;\n            var offsetX = void 0;\n            while (startX < projectionExtent[0]) {\n                --world;\n                offsetX = worldWidth * world;\n                var transform_1 = this.getRenderTransform(frameState, width, height, offsetX);\n                replayGroup.execute(context, transform_1, rotation, skippedFeatureUids, snapToPixel);\n                startX += worldWidth;\n            }\n            world = 0;\n            startX = extent[2];\n            while (startX > projectionExtent[2]) {\n                ++world;\n                offsetX = worldWidth * world;\n                var transform_2 = this.getRenderTransform(frameState, width, height, offsetX);\n                replayGroup.execute(context, transform_2, rotation, skippedFeatureUids, snapToPixel);\n                startX -= worldWidth;\n            }\n        }\n        if (clipped) {\n            context.restore();\n        }\n        this.postRender(context, frameState);\n        var opacity = layerState.opacity;\n        if (opacity !== parseFloat(canvas.style.opacity)) {\n            canvas.style.opacity = opacity;\n        }\n        return canvas;\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasVectorLayerRenderer.prototype.forEachFeatureAtCoordinate = function (coordinate, frameState, hitTolerance, callback, thisArg) {\n        if (!this.replayGroup_) {\n            return undefined;\n        }\n        else {\n            var resolution = frameState.viewState.resolution;\n            var rotation = frameState.viewState.rotation;\n            var layer_1 = this.getLayer();\n            /** @type {!Object<string, boolean>} */\n            var features_1 = {};\n            var result = this.replayGroup_.forEachFeatureAtCoordinate(coordinate, resolution, rotation, hitTolerance, {}, \n            /**\n             * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n             * @return {?} Callback result.\n             */\n            function (feature) {\n                var key = getUid(feature);\n                if (!(key in features_1)) {\n                    features_1[key] = true;\n                    return callback.call(thisArg, feature, layer_1);\n                }\n            }, null);\n            return result;\n        }\n    };\n    /**\n     * @param {import(\"../../events/Event.js\").default} event Event.\n     */\n    CanvasVectorLayerRenderer.prototype.handleFontsChanged_ = function (event) {\n        var layer = this.getLayer();\n        if (layer.getVisible() && this.replayGroup_) {\n            layer.changed();\n        }\n    };\n    /**\n     * Handle changes in image style state.\n     * @param {import(\"../../events/Event.js\").default} event Image style change event.\n     * @private\n     */\n    CanvasVectorLayerRenderer.prototype.handleStyleImageChange_ = function (event) {\n        this.renderIfReadyAndVisible();\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasVectorLayerRenderer.prototype.prepareFrame = function (frameState, layerState) {\n        var vectorLayer = /** @type {import(\"../../layer/Vector.js\").default} */ (this.getLayer());\n        var vectorSource = vectorLayer.getSource();\n        var animating = frameState.viewHints[ViewHint.ANIMATING];\n        var interacting = frameState.viewHints[ViewHint.INTERACTING];\n        var updateWhileAnimating = vectorLayer.getUpdateWhileAnimating();\n        var updateWhileInteracting = vectorLayer.getUpdateWhileInteracting();\n        if (!this.dirty_ && (!updateWhileAnimating && animating) ||\n            (!updateWhileInteracting && interacting)) {\n            return true;\n        }\n        var frameStateExtent = frameState.extent;\n        var viewState = frameState.viewState;\n        var projection = viewState.projection;\n        var resolution = viewState.resolution;\n        var pixelRatio = frameState.pixelRatio;\n        var vectorLayerRevision = vectorLayer.getRevision();\n        var vectorLayerRenderBuffer = vectorLayer.getRenderBuffer();\n        var vectorLayerRenderOrder = vectorLayer.getRenderOrder();\n        if (vectorLayerRenderOrder === undefined) {\n            vectorLayerRenderOrder = defaultRenderOrder;\n        }\n        var extent = buffer(frameStateExtent, vectorLayerRenderBuffer * resolution);\n        var projectionExtent = viewState.projection.getExtent();\n        if (vectorSource.getWrapX() && viewState.projection.canWrapX() &&\n            !containsExtent(projectionExtent, frameState.extent)) {\n            // For the replay group, we need an extent that intersects the real world\n            // (-180° to +180°). To support geometries in a coordinate range from -540°\n            // to +540°, we add at least 1 world width on each side of the projection\n            // extent. If the viewport is wider than the world, we need to add half of\n            // the viewport width to make sure we cover the whole viewport.\n            var worldWidth = getWidth(projectionExtent);\n            var gutter = Math.max(getWidth(extent) / 2, worldWidth);\n            extent[0] = projectionExtent[0] - gutter;\n            extent[2] = projectionExtent[2] + gutter;\n        }\n        if (!this.dirty_ &&\n            this.renderedResolution_ == resolution &&\n            this.renderedRevision_ == vectorLayerRevision &&\n            this.renderedRenderOrder_ == vectorLayerRenderOrder &&\n            containsExtent(this.renderedExtent_, extent)) {\n            this.replayGroupChanged = false;\n            return true;\n        }\n        if (this.replayGroup_) {\n            this.replayGroup_.dispose();\n        }\n        this.replayGroup_ = null;\n        this.dirty_ = false;\n        var replayGroup = new CanvasBuilderGroup(getRenderTolerance(resolution, pixelRatio), extent, resolution, pixelRatio, !!this.declutterTree_);\n        vectorSource.loadFeatures(extent, resolution, projection);\n        /**\n         * @param {import(\"../../Feature.js\").default} feature Feature.\n         * @this {CanvasVectorLayerRenderer}\n         */\n        var render = function (feature) {\n            var styles;\n            var styleFunction = feature.getStyleFunction() || vectorLayer.getStyleFunction();\n            if (styleFunction) {\n                styles = styleFunction(feature, resolution);\n            }\n            if (styles) {\n                var dirty = this.renderFeature(feature, resolution, pixelRatio, styles, replayGroup);\n                this.dirty_ = this.dirty_ || dirty;\n            }\n        }.bind(this);\n        if (vectorLayerRenderOrder) {\n            /** @type {Array<import(\"../../Feature.js\").default>} */\n            var features_2 = [];\n            vectorSource.forEachFeatureInExtent(extent, \n            /**\n             * @param {import(\"../../Feature.js\").default} feature Feature.\n             */\n            function (feature) {\n                features_2.push(feature);\n            });\n            features_2.sort(vectorLayerRenderOrder);\n            for (var i = 0, ii = features_2.length; i < ii; ++i) {\n                render(features_2[i]);\n            }\n        }\n        else {\n            vectorSource.forEachFeatureInExtent(extent, render);\n        }\n        var replayGroupInstructions = replayGroup.finish();\n        var executorGroup = new ExecutorGroup(extent, resolution, pixelRatio, vectorSource.getOverlaps(), this.declutterTree_, replayGroupInstructions, vectorLayer.getRenderBuffer());\n        this.renderedResolution_ = resolution;\n        this.renderedRevision_ = vectorLayerRevision;\n        this.renderedRenderOrder_ = vectorLayerRenderOrder;\n        this.renderedExtent_ = extent;\n        this.replayGroup_ = executorGroup;\n        this.replayGroupChanged = true;\n        return true;\n    };\n    /**\n     * @param {import(\"../../Feature.js\").default} feature Feature.\n     * @param {number} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"../../style/Style.js\").default|Array<import(\"../../style/Style.js\").default>} styles The style or array of styles.\n     * @param {import(\"../../render/canvas/BuilderGroup.js\").default} builderGroup Builder group.\n     * @return {boolean} `true` if an image is loading.\n     */\n    CanvasVectorLayerRenderer.prototype.renderFeature = function (feature, resolution, pixelRatio, styles, builderGroup) {\n        if (!styles) {\n            return false;\n        }\n        var loading = false;\n        if (Array.isArray(styles)) {\n            for (var i = 0, ii = styles.length; i < ii; ++i) {\n                loading = renderFeature(builderGroup, feature, styles[i], getSquaredRenderTolerance(resolution, pixelRatio), this.handleStyleImageChange_, this) || loading;\n            }\n        }\n        else {\n            loading = renderFeature(builderGroup, feature, styles, getSquaredRenderTolerance(resolution, pixelRatio), this.handleStyleImageChange_, this);\n        }\n        return loading;\n    };\n    return CanvasVectorLayerRenderer;\n}(CanvasLayerRenderer));\nexport default CanvasVectorLayerRenderer;\n//# sourceMappingURL=VectorLayer.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/layer/Vector\n */\nimport BaseVectorLayer from './BaseVector.js';\nimport CanvasVectorLayerRenderer from '../renderer/canvas/VectorLayer.js';\n/**\n * @typedef {import(\"./BaseVector.js\").Options} Options\n */\n/**\n * @classdesc\n * Vector data that is rendered client-side.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @extends {BaseVectorLayer<import(\"../source/Vector.js\").default>}\n * @api\n */\nvar VectorLayer = /** @class */ (function (_super) {\n    __extends(VectorLayer, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function VectorLayer(opt_options) {\n        return _super.call(this, opt_options) || this;\n    }\n    /**\n     * Create a renderer for this layer.\n     * @return {import(\"../renderer/Layer.js\").default} A layer renderer.\n     * @protected\n     */\n    VectorLayer.prototype.createRenderer = function () {\n        return new CanvasVectorLayerRenderer(this);\n    };\n    return VectorLayer;\n}(BaseVectorLayer));\nexport default VectorLayer;\n//# sourceMappingURL=Vector.js.map","/**\n * @module ol/format/FormatType\n */\n/**\n * @enum {string}\n */\nexport default {\n    ARRAY_BUFFER: 'arraybuffer',\n    JSON: 'json',\n    TEXT: 'text',\n    XML: 'xml'\n};\n//# sourceMappingURL=FormatType.js.map","/**\n * @module ol/featureloader\n */\nimport { VOID } from './functions.js';\nimport FormatType from './format/FormatType.js';\n/**\n * {@link module:ol/source/Vector} sources use a function of this type to\n * load features.\n *\n * This function takes an {@link module:ol/extent~Extent} representing the area to be loaded,\n * a `{number}` representing the resolution (map units per pixel) and an\n * {@link module:ol/proj/Projection} for the projection  as\n * arguments. `this` within the function is bound to the\n * {@link module:ol/source/Vector} it's called from.\n *\n * The function is responsible for loading the features and adding them to the\n * source.\n * @typedef {function(this:(import(\"./source/Vector\").default|import(\"./VectorTile.js\").default), import(\"./extent.js\").Extent, number,\n *                    import(\"./proj/Projection.js\").default): void} FeatureLoader\n * @api\n */\n/**\n * {@link module:ol/source/Vector} sources use a function of this type to\n * get the url to load features from.\n *\n * This function takes an {@link module:ol/extent~Extent} representing the area\n * to be loaded, a `{number}` representing the resolution (map units per pixel)\n * and an {@link module:ol/proj/Projection} for the projection  as\n * arguments and returns a `{string}` representing the URL.\n * @typedef {function(import(\"./extent.js\").Extent, number, import(\"./proj/Projection.js\").default): string} FeatureUrlFunction\n * @api\n */\n/**\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default} format Feature format.\n * @param {function(this:import(\"./VectorTile.js\").default, Array<import(\"./Feature.js\").default>, import(\"./proj/Projection.js\").default, import(\"./extent.js\").Extent): void|function(this:import(\"./source/Vector\").default, Array<import(\"./Feature.js\").default>): void} success\n *     Function called with the loaded features and optionally with the data\n *     projection. Called with the vector tile or source as `this`.\n * @param {function(this:import(\"./VectorTile.js\").default): void|function(this:import(\"./source/Vector\").default): void} failure\n *     Function called when loading failed. Called with the vector tile or\n *     source as `this`.\n * @return {FeatureLoader} The feature loader.\n */\nexport function loadFeaturesXhr(url, format, success, failure) {\n    return (\n    /**\n     * @param {import(\"./extent.js\").Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @this {import(\"./source/Vector\").default|import(\"./VectorTile.js\").default}\n     */\n    function (extent, resolution, projection) {\n        var xhr = new XMLHttpRequest();\n        xhr.open('GET', typeof url === 'function' ? url(extent, resolution, projection) : url, true);\n        if (format.getType() == FormatType.ARRAY_BUFFER) {\n            xhr.responseType = 'arraybuffer';\n        }\n        /**\n         * @param {Event} event Event.\n         * @private\n         */\n        xhr.onload = function (event) {\n            // status will be 0 for file:// urls\n            if (!xhr.status || xhr.status >= 200 && xhr.status < 300) {\n                var type = format.getType();\n                /** @type {Document|Node|Object|string|undefined} */\n                var source = void 0;\n                if (type == FormatType.JSON || type == FormatType.TEXT) {\n                    source = xhr.responseText;\n                }\n                else if (type == FormatType.XML) {\n                    source = xhr.responseXML;\n                    if (!source) {\n                        source = new DOMParser().parseFromString(xhr.responseText, 'application/xml');\n                    }\n                }\n                else if (type == FormatType.ARRAY_BUFFER) {\n                    source = /** @type {ArrayBuffer} */ (xhr.response);\n                }\n                if (source) {\n                    success.call(this, format.readFeatures(source, {\n                        extent: extent,\n                        featureProjection: projection\n                    }), format.readProjection(source));\n                }\n                else {\n                    failure.call(this);\n                }\n            }\n            else {\n                failure.call(this);\n            }\n        }.bind(this);\n        /**\n         * @private\n         */\n        xhr.onerror = function () {\n            failure.call(this);\n        }.bind(this);\n        xhr.send();\n    });\n}\n/**\n * Create an XHR feature loader for a `url` and `format`. The feature loader\n * loads features (with XHR), parses the features, and adds them to the\n * vector source.\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default} format Feature format.\n * @return {FeatureLoader} The feature loader.\n * @api\n */\nexport function xhr(url, format) {\n    return loadFeaturesXhr(url, format, \n    /**\n     * @param {Array<import(\"./Feature.js\").default>} features The loaded features.\n     * @param {import(\"./proj/Projection.js\").default} dataProjection Data\n     * projection.\n     * @this {import(\"./source/Vector\").default|import(\"./VectorTile.js\").default}\n     */\n    function (features, dataProjection) {\n        var sourceOrTile = /** @type {?} */ (this);\n        if (typeof sourceOrTile.addFeatures === 'function') {\n            /** @type {import(\"./source/Vector\").default} */ (sourceOrTile).addFeatures(features);\n        }\n    }, /* FIXME handle error */ VOID);\n}\n//# sourceMappingURL=featureloader.js.map","/**\n * @module ol/loadingstrategy\n */\n/**\n * Strategy function for loading all features with a single request.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array<import(\"./extent.js\").Extent>} Extents.\n * @api\n */\nexport function all(extent, resolution) {\n    return [[-Infinity, -Infinity, Infinity, Infinity]];\n}\n/**\n * Strategy function for loading features based on the view's extent and\n * resolution.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array<import(\"./extent.js\").Extent>} Extents.\n * @api\n */\nexport function bbox(extent, resolution) {\n    return [extent];\n}\n/**\n * Creates a strategy function for loading features based on a tile grid.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {function(import(\"./extent.js\").Extent, number): Array<import(\"./extent.js\").Extent>} Loading strategy.\n * @api\n */\nexport function tile(tileGrid) {\n    return (\n    /**\n     * @param {import(\"./extent.js\").Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @return {Array<import(\"./extent.js\").Extent>} Extents.\n     */\n    function (extent, resolution) {\n        var z = tileGrid.getZForResolution(resolution);\n        var tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\n        /** @type {Array<import(\"./extent.js\").Extent>} */\n        var extents = [];\n        /** @type {import(\"./tilecoord.js\").TileCoord} */\n        var tileCoord = [z, 0, 0];\n        for (tileCoord[1] = tileRange.minX; tileCoord[1] <= tileRange.maxX; ++tileCoord[1]) {\n            for (tileCoord[2] = tileRange.minY; tileCoord[2] <= tileRange.maxY; ++tileCoord[2]) {\n                extents.push(tileGrid.getTileCoordExtent(tileCoord));\n            }\n        }\n        return extents;\n    });\n}\n//# sourceMappingURL=loadingstrategy.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/source/Source\n */\nimport { abstract } from '../util.js';\nimport BaseObject from '../Object.js';\nimport { get as getProjection } from '../proj.js';\nimport SourceState from './State.js';\n/**\n * A function that returns a string or an array of strings representing source\n * attributions.\n *\n * @typedef {function(import(\"../PluggableMap.js\").FrameState): (string|Array<string>)} Attribution\n */\n/**\n * A type that can be used to provide attribution information for data sources.\n *\n * It represents either\n * * a simple string (e.g. `'© Acme Inc.'`)\n * * an array of simple strings (e.g. `['© Acme Inc.', '© Bacme Inc.']`)\n * * a function that returns a string or array of strings ({@link module:ol/source/Source~Attribution})\n *\n * @typedef {string|Array<string>|Attribution} AttributionLike\n */\n/**\n * @typedef {Object} Options\n * @property {AttributionLike} [attributions]\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {SourceState} [state='ready']\n * @property {boolean} [wrapX=false]\n */\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for {@link module:ol/layer/Layer~Layer} sources.\n *\n * A generic `change` event is triggered when the state of the source changes.\n * @abstract\n * @api\n */\nvar Source = /** @class */ (function (_super) {\n    __extends(Source, _super);\n    /**\n     * @param {Options} options Source options.\n     */\n    function Source(options) {\n        var _this = _super.call(this) || this;\n        /**\n         * @private\n         * @type {import(\"../proj/Projection.js\").default}\n         */\n        _this.projection_ = getProjection(options.projection);\n        /**\n         * @private\n         * @type {?Attribution}\n         */\n        _this.attributions_ = adaptAttributions(options.attributions);\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.attributionsCollapsible_ = options.attributionsCollapsible !== undefined ?\n            options.attributionsCollapsible : true;\n        /**\n         * This source is currently loading data. Sources that defer loading to the\n         * map's tile queue never set this to `true`.\n         * @type {boolean}\n         */\n        _this.loading = false;\n        /**\n         * @private\n         * @type {SourceState}\n         */\n        _this.state_ = options.state !== undefined ?\n            options.state : SourceState.READY;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.wrapX_ = options.wrapX !== undefined ? options.wrapX : false;\n        return _this;\n    }\n    /**\n     * Get the attribution function for the source.\n     * @return {?Attribution} Attribution function.\n     */\n    Source.prototype.getAttributions = function () {\n        return this.attributions_;\n    };\n    /**\n     * @return {boolean} Attributions are collapsible.\n     */\n    Source.prototype.getAttributionsCollapsible = function () {\n        return this.attributionsCollapsible_;\n    };\n    /**\n     * Get the projection of the source.\n     * @return {import(\"../proj/Projection.js\").default} Projection.\n     * @api\n     */\n    Source.prototype.getProjection = function () {\n        return this.projection_;\n    };\n    /**\n     * @abstract\n     * @return {Array<number>|undefined} Resolutions.\n     */\n    Source.prototype.getResolutions = function () {\n        return abstract();\n    };\n    /**\n     * Get the state of the source, see {@link module:ol/source/State~State} for possible states.\n     * @return {SourceState} State.\n     * @api\n     */\n    Source.prototype.getState = function () {\n        return this.state_;\n    };\n    /**\n     * @return {boolean|undefined} Wrap X.\n     */\n    Source.prototype.getWrapX = function () {\n        return this.wrapX_;\n    };\n    /**\n     * Refreshes the source. The source will be cleared, and data from the server will be reloaded.\n     * @api\n     */\n    Source.prototype.refresh = function () {\n        this.changed();\n    };\n    /**\n     * Set the attributions of the source.\n     * @param {AttributionLike|undefined} attributions Attributions.\n     *     Can be passed as `string`, `Array<string>`, {@link module:ol/source/Source~Attribution},\n     *     or `undefined`.\n     * @api\n     */\n    Source.prototype.setAttributions = function (attributions) {\n        this.attributions_ = adaptAttributions(attributions);\n        this.changed();\n    };\n    /**\n     * Set the state of the source.\n     * @param {SourceState} state State.\n     * @protected\n     */\n    Source.prototype.setState = function (state) {\n        this.state_ = state;\n        this.changed();\n    };\n    return Source;\n}(BaseObject));\n/**\n * Turns the attributions option into an attributions function.\n * @param {AttributionLike|undefined} attributionLike The attribution option.\n * @return {?Attribution} An attribution function (or null).\n */\nfunction adaptAttributions(attributionLike) {\n    if (!attributionLike) {\n        return null;\n    }\n    if (Array.isArray(attributionLike)) {\n        return function (frameState) {\n            return attributionLike;\n        };\n    }\n    if (typeof attributionLike === 'function') {\n        return attributionLike;\n    }\n    return function (frameState) {\n        return [attributionLike];\n    };\n}\nexport default Source;\n//# sourceMappingURL=Source.js.map","/**\n * @module ol/source/VectorEventType\n */\n/**\n * @enum {string}\n */\nexport default {\n    /**\n     * Triggered when a feature is added to the source.\n     * @event module:ol/source/Vector.VectorSourceEvent#addfeature\n     * @api\n     */\n    ADDFEATURE: 'addfeature',\n    /**\n     * Triggered when a feature is updated.\n     * @event module:ol/source/Vector.VectorSourceEvent#changefeature\n     * @api\n     */\n    CHANGEFEATURE: 'changefeature',\n    /**\n     * Triggered when the clear method is called on the source.\n     * @event module:ol/source/Vector.VectorSourceEvent#clear\n     * @api\n     */\n    CLEAR: 'clear',\n    /**\n     * Triggered when a feature is removed from the source.\n     * See {@link module:ol/source/Vector#clear source.clear()} for exceptions.\n     * @event module:ol/source/Vector.VectorSourceEvent#removefeature\n     * @api\n     */\n    REMOVEFEATURE: 'removefeature'\n};\n//# sourceMappingURL=VectorEventType.js.map","/**\n * @module ol/structs/RBush\n */\nimport { getUid } from '../util.js';\nimport rbush from 'rbush';\nimport { createOrUpdate, equals } from '../extent.js';\nimport { isEmpty } from '../obj.js';\n/**\n * @typedef {Object} Entry\n * @property {number} minX\n * @property {number} minY\n * @property {number} maxX\n * @property {number} maxY\n * @property {Object} [value]\n */\n/**\n * @classdesc\n * Wrapper around the RBush by Vladimir Agafonkin.\n * See https://github.com/mourner/rbush.\n *\n * @template T\n */\nvar RBush = /** @class */ (function () {\n    /**\n     * @param {number=} opt_maxEntries Max entries.\n     */\n    function RBush(opt_maxEntries) {\n        /**\n         * @private\n         */\n        this.rbush_ = rbush(opt_maxEntries, undefined);\n        /**\n         * A mapping between the objects added to this rbush wrapper\n         * and the objects that are actually added to the internal rbush.\n         * @private\n         * @type {Object<string, Entry>}\n         */\n        this.items_ = {};\n    }\n    /**\n     * Insert a value into the RBush.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {T} value Value.\n     */\n    RBush.prototype.insert = function (extent, value) {\n        /** @type {Entry} */\n        var item = {\n            minX: extent[0],\n            minY: extent[1],\n            maxX: extent[2],\n            maxY: extent[3],\n            value: value\n        };\n        this.rbush_.insert(item);\n        this.items_[getUid(value)] = item;\n    };\n    /**\n     * Bulk-insert values into the RBush.\n     * @param {Array<import(\"../extent.js\").Extent>} extents Extents.\n     * @param {Array<T>} values Values.\n     */\n    RBush.prototype.load = function (extents, values) {\n        var items = new Array(values.length);\n        for (var i = 0, l = values.length; i < l; i++) {\n            var extent = extents[i];\n            var value = values[i];\n            /** @type {Entry} */\n            var item = {\n                minX: extent[0],\n                minY: extent[1],\n                maxX: extent[2],\n                maxY: extent[3],\n                value: value\n            };\n            items[i] = item;\n            this.items_[getUid(value)] = item;\n        }\n        this.rbush_.load(items);\n    };\n    /**\n     * Remove a value from the RBush.\n     * @param {T} value Value.\n     * @return {boolean} Removed.\n     */\n    RBush.prototype.remove = function (value) {\n        var uid = getUid(value);\n        // get the object in which the value was wrapped when adding to the\n        // internal rbush. then use that object to do the removal.\n        var item = this.items_[uid];\n        delete this.items_[uid];\n        return this.rbush_.remove(item) !== null;\n    };\n    /**\n     * Update the extent of a value in the RBush.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {T} value Value.\n     */\n    RBush.prototype.update = function (extent, value) {\n        var item = this.items_[getUid(value)];\n        var bbox = [item.minX, item.minY, item.maxX, item.maxY];\n        if (!equals(bbox, extent)) {\n            this.remove(value);\n            this.insert(extent, value);\n        }\n    };\n    /**\n     * Return all values in the RBush.\n     * @return {Array<T>} All.\n     */\n    RBush.prototype.getAll = function () {\n        var items = this.rbush_.all();\n        return items.map(function (item) {\n            return item.value;\n        });\n    };\n    /**\n     * Return all values in the given extent.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @return {Array<T>} All in extent.\n     */\n    RBush.prototype.getInExtent = function (extent) {\n        /** @type {Entry} */\n        var bbox = {\n            minX: extent[0],\n            minY: extent[1],\n            maxX: extent[2],\n            maxY: extent[3]\n        };\n        var items = this.rbush_.search(bbox);\n        return items.map(function (item) {\n            return item.value;\n        });\n    };\n    /**\n     * Calls a callback function with each value in the tree.\n     * If the callback returns a truthy value, this value is returned without\n     * checking the rest of the tree.\n     * @param {function(T): *} callback Callback.\n     * @return {*} Callback return value.\n     */\n    RBush.prototype.forEach = function (callback) {\n        return this.forEach_(this.getAll(), callback);\n    };\n    /**\n     * Calls a callback function with each value in the provided extent.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {function(T): *} callback Callback.\n     * @return {*} Callback return value.\n     */\n    RBush.prototype.forEachInExtent = function (extent, callback) {\n        return this.forEach_(this.getInExtent(extent), callback);\n    };\n    /**\n     * @param {Array<T>} values Values.\n     * @param {function(T): *} callback Callback.\n     * @private\n     * @return {*} Callback return value.\n     */\n    RBush.prototype.forEach_ = function (values, callback) {\n        var result;\n        for (var i = 0, l = values.length; i < l; i++) {\n            result = callback(values[i]);\n            if (result) {\n                return result;\n            }\n        }\n        return result;\n    };\n    /**\n     * @return {boolean} Is empty.\n     */\n    RBush.prototype.isEmpty = function () {\n        return isEmpty(this.items_);\n    };\n    /**\n     * Remove all values from the RBush.\n     */\n    RBush.prototype.clear = function () {\n        this.rbush_.clear();\n        this.items_ = {};\n    };\n    /**\n     * @param {import(\"../extent.js\").Extent=} opt_extent Extent.\n     * @return {import(\"../extent.js\").Extent} Extent.\n     */\n    RBush.prototype.getExtent = function (opt_extent) {\n        var data = this.rbush_.toJSON();\n        return createOrUpdate(data.minX, data.minY, data.maxX, data.maxY, opt_extent);\n    };\n    /**\n     * @param {RBush} rbush R-Tree.\n     */\n    RBush.prototype.concat = function (rbush) {\n        this.rbush_.load(rbush.rbush_.all());\n        for (var i in rbush.items_) {\n            this.items_[i] = rbush.items_[i];\n        }\n    };\n    return RBush;\n}());\nexport default RBush;\n//# sourceMappingURL=RBush.js.map","/**\n * @module ol/source/Vector\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { getUid } from '../util.js';\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport { extend } from '../array.js';\nimport { assert } from '../asserts.js';\nimport { listen, unlistenByKey } from '../events.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport { containsExtent, equals } from '../extent.js';\nimport { xhr } from '../featureloader.js';\nimport { TRUE, VOID } from '../functions.js';\nimport { all as allStrategy } from '../loadingstrategy.js';\nimport { isEmpty, getValues } from '../obj.js';\nimport Source from './Source.js';\nimport SourceState from './State.js';\nimport VectorEventType from './VectorEventType.js';\nimport RBush from '../structs/RBush.js';\n/**\n * A function that takes an {@link module:ol/extent~Extent} and a resolution as arguments, and\n * returns an array of {@link module:ol/extent~Extent} with the extents to load. Usually this\n * is one of the standard {@link module:ol/loadingstrategy} strategies.\n *\n * @typedef {function(import(\"../extent.js\").Extent, number): Array<import(\"../extent.js\").Extent>} LoadingStrategy\n * @api\n */\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Vector} instances are instances of this\n * type.\n */\nvar VectorSourceEvent = /** @class */ (function (_super) {\n    __extends(VectorSourceEvent, _super);\n    /**\n     * @param {string} type Type.\n     * @param {import(\"../Feature.js\").default=} opt_feature Feature.\n     */\n    function VectorSourceEvent(type, opt_feature) {\n        var _this = _super.call(this, type) || this;\n        /**\n         * The feature being added or removed.\n         * @type {import(\"../Feature.js\").default|undefined}\n         * @api\n         */\n        _this.feature = opt_feature;\n        return _this;\n    }\n    return VectorSourceEvent;\n}(Event));\nexport { VectorSourceEvent };\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {Array<import(\"../Feature.js\").default>|Collection<import(\"../Feature.js\").default>} [features]\n * Features. If provided as {@link module:ol/Collection}, the features in the source\n * and the collection will stay in sync.\n * @property {import(\"../format/Feature.js\").default} [format] The feature format used by the XHR\n * feature loader when `url` is set. Required if `url` is set, otherwise ignored.\n * @property {import(\"../featureloader.js\").FeatureLoader} [loader]\n * The loader function used to load features, from a remote source for example.\n * If this is not set and `url` is set, the source will create and use an XHR\n * feature loader.\n *\n * Example:\n *\n * ```js\n * import {Vector} from 'ol/source';\n * import {GeoJSON} from 'ol/format';\n * import {bbox} from 'ol/loadingstrategy';\n *\n * var vectorSource = new Vector({\n *   format: new GeoJSON(),\n *   loader: function(extent, resolution, projection) {\n *      var proj = projection.getCode();\n *      var url = 'https://ahocevar.com/geoserver/wfs?service=WFS&' +\n *          'version=1.1.0&request=GetFeature&typename=osm:water_areas&' +\n *          'outputFormat=application/json&srsname=' + proj + '&' +\n *          'bbox=' + extent.join(',') + ',' + proj;\n *      var xhr = new XMLHttpRequest();\n *      xhr.open('GET', url);\n *      var onError = function() {\n *        vectorSource.removeLoadedExtent(extent);\n *      }\n *      xhr.onerror = onError;\n *      xhr.onload = function() {\n *        if (xhr.status == 200) {\n *          vectorSource.addFeatures(\n *              vectorSource.getFormat().readFeatures(xhr.responseText));\n *        } else {\n *          onError();\n *        }\n *      }\n *      xhr.send();\n *    },\n *    strategy: bbox\n *  });\n * ```\n * @property {boolean} [overlaps=true] This source may have overlapping geometries.\n * Setting this to `false` (e.g. for sources with polygons that represent administrative\n * boundaries or TopoJSON sources) allows the renderer to optimise fill and\n * stroke operations.\n * @property {LoadingStrategy} [strategy] The loading strategy to use.\n * By default an {@link module:ol/loadingstrategy~all}\n * strategy is used, a one-off strategy which loads all features at once.\n * @property {string|import(\"../featureloader.js\").FeatureUrlFunction} [url]\n * Setting this option instructs the source to load features using an XHR loader\n * (see {@link module:ol/featureloader~xhr}). Use a `string` and an\n * {@link module:ol/loadingstrategy~all} for a one-off download of all features from\n * the given URL. Use a {@link module:ol/featureloader~FeatureUrlFunction} to generate the url with\n * other loading strategies.\n * Requires `format` to be set as well.\n * When default XHR feature loader is provided, the features will\n * be transformed from the data projection to the view projection\n * during parsing. If your remote data source does not advertise its projection\n * properly, this transformation will be incorrect. For some formats, the\n * default projection (usually EPSG:4326) can be overridden by setting the\n * dataProjection constructor option on the format.\n * Note that if a source contains non-feature data, such as a GeoJSON geometry\n * or a KML NetworkLink, these will be ignored. Use a custom loader to load these.\n * @property {boolean} [useSpatialIndex=true]\n * By default, an RTree is used as spatial index. When features are removed and\n * added frequently, and the total number of features is low, setting this to\n * `false` may improve performance.\n *\n * Note that\n * {@link module:ol/source/Vector~VectorSource#getFeaturesInExtent},\n * {@link module:ol/source/Vector~VectorSource#getClosestFeatureToCoordinate} and\n * {@link module:ol/source/Vector~VectorSource#getExtent} cannot be used when `useSpatialIndex` is\n * set to `false`, and {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent} will loop\n * through all features.\n *\n * When set to `false`, the features will be maintained in an\n * {@link module:ol/Collection}, which can be retrieved through\n * {@link module:ol/source/Vector~VectorSource#getFeaturesCollection}.\n * @property {boolean} [wrapX=true] Wrap the world horizontally. For vector editing across the\n * -180° and 180° meridians to work properly, this should be set to `false`. The\n * resulting geometry coordinates will then exceed the world bounds.\n */\n/**\n * @classdesc\n * Provides a source of features for vector layers. Vector features provided\n * by this source are suitable for editing. See {@link module:ol/source/VectorTile~VectorTile} for\n * vector data that is optimized for rendering.\n *\n * @fires VectorSourceEvent\n * @api\n */\nvar VectorSource = /** @class */ (function (_super) {\n    __extends(VectorSource, _super);\n    /**\n     * @param {Options=} opt_options Vector source options.\n     */\n    function VectorSource(opt_options) {\n        var _this = this;\n        var options = opt_options || {};\n        _this = _super.call(this, {\n            attributions: options.attributions,\n            projection: undefined,\n            state: SourceState.READY,\n            wrapX: options.wrapX !== undefined ? options.wrapX : true\n        }) || this;\n        /**\n         * @private\n         * @type {import(\"../featureloader.js\").FeatureLoader}\n         */\n        _this.loader_ = VOID;\n        /**\n         * @private\n         * @type {import(\"../format/Feature.js\").default|undefined}\n         */\n        _this.format_ = options.format;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.overlaps_ = options.overlaps == undefined ? true : options.overlaps;\n        /**\n         * @private\n         * @type {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined}\n         */\n        _this.url_ = options.url;\n        if (options.loader !== undefined) {\n            _this.loader_ = options.loader;\n        }\n        else if (_this.url_ !== undefined) {\n            assert(_this.format_, 7); // `format` must be set when `url` is set\n            // create a XHR feature loader for \"url\" and \"format\"\n            _this.loader_ = xhr(_this.url_, /** @type {import(\"../format/Feature.js\").default} */ (_this.format_));\n        }\n        /**\n         * @private\n         * @type {LoadingStrategy}\n         */\n        _this.strategy_ = options.strategy !== undefined ? options.strategy : allStrategy;\n        var useSpatialIndex = options.useSpatialIndex !== undefined ? options.useSpatialIndex : true;\n        /**\n         * @private\n         * @type {RBush<import(\"../Feature.js\").default>}\n         */\n        _this.featuresRtree_ = useSpatialIndex ? new RBush() : null;\n        /**\n         * @private\n         * @type {RBush<{extent: import(\"../extent.js\").Extent}>}\n         */\n        _this.loadedExtentsRtree_ = new RBush();\n        /**\n         * @private\n         * @type {!Object<string, import(\"../Feature.js\").default>}\n         */\n        _this.nullGeometryFeatures_ = {};\n        /**\n         * A lookup of features by id (the return from feature.getId()).\n         * @private\n         * @type {!Object<string, import(\"../Feature.js\").default>}\n         */\n        _this.idIndex_ = {};\n        /**\n         * A lookup of features without id (keyed by getUid(feature)).\n         * @private\n         * @type {!Object<string, import(\"../Feature.js\").default>}\n         */\n        _this.undefIdIndex_ = {};\n        /**\n         * @private\n         * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n         */\n        _this.featureChangeKeys_ = {};\n        /**\n         * @private\n         * @type {Collection<import(\"../Feature.js\").default>}\n         */\n        _this.featuresCollection_ = null;\n        var collection, features;\n        if (Array.isArray(options.features)) {\n            features = options.features;\n        }\n        else if (options.features) {\n            collection = options.features;\n            features = collection.getArray();\n        }\n        if (!useSpatialIndex && collection === undefined) {\n            collection = new Collection(features);\n        }\n        if (features !== undefined) {\n            _this.addFeaturesInternal(features);\n        }\n        if (collection !== undefined) {\n            _this.bindFeaturesCollection_(collection);\n        }\n        return _this;\n    }\n    /**\n     * Add a single feature to the source.  If you want to add a batch of features\n     * at once, call {@link module:ol/source/Vector~VectorSource#addFeatures #addFeatures()}\n     * instead. A feature will not be added to the source if feature with\n     * the same id is already there. The reason for this behavior is to avoid\n     * feature duplication when using bbox or tile loading strategies.\n     * @param {import(\"../Feature.js\").default} feature Feature to add.\n     * @api\n     */\n    VectorSource.prototype.addFeature = function (feature) {\n        this.addFeatureInternal(feature);\n        this.changed();\n    };\n    /**\n     * Add a feature without firing a `change` event.\n     * @param {import(\"../Feature.js\").default} feature Feature.\n     * @protected\n     */\n    VectorSource.prototype.addFeatureInternal = function (feature) {\n        var featureKey = getUid(feature);\n        if (!this.addToIndex_(featureKey, feature)) {\n            return;\n        }\n        this.setupChangeEvents_(featureKey, feature);\n        var geometry = feature.getGeometry();\n        if (geometry) {\n            var extent = geometry.getExtent();\n            if (this.featuresRtree_) {\n                this.featuresRtree_.insert(extent, feature);\n            }\n        }\n        else {\n            this.nullGeometryFeatures_[featureKey] = feature;\n        }\n        this.dispatchEvent(new VectorSourceEvent(VectorEventType.ADDFEATURE, feature));\n    };\n    /**\n     * @param {string} featureKey Unique identifier for the feature.\n     * @param {import(\"../Feature.js\").default} feature The feature.\n     * @private\n     */\n    VectorSource.prototype.setupChangeEvents_ = function (featureKey, feature) {\n        this.featureChangeKeys_[featureKey] = [\n            listen(feature, EventType.CHANGE, this.handleFeatureChange_, this),\n            listen(feature, ObjectEventType.PROPERTYCHANGE, this.handleFeatureChange_, this)\n        ];\n    };\n    /**\n     * @param {string} featureKey Unique identifier for the feature.\n     * @param {import(\"../Feature.js\").default} feature The feature.\n     * @return {boolean} The feature is \"valid\", in the sense that it is also a\n     *     candidate for insertion into the Rtree.\n     * @private\n     */\n    VectorSource.prototype.addToIndex_ = function (featureKey, feature) {\n        var valid = true;\n        var id = feature.getId();\n        if (id !== undefined) {\n            if (!(id.toString() in this.idIndex_)) {\n                this.idIndex_[id.toString()] = feature;\n            }\n            else {\n                valid = false;\n            }\n        }\n        else {\n            assert(!(featureKey in this.undefIdIndex_), 30); // The passed `feature` was already added to the source\n            this.undefIdIndex_[featureKey] = feature;\n        }\n        return valid;\n    };\n    /**\n     * Add a batch of features to the source.\n     * @param {Array<import(\"../Feature.js\").default>} features Features to add.\n     * @api\n     */\n    VectorSource.prototype.addFeatures = function (features) {\n        this.addFeaturesInternal(features);\n        this.changed();\n    };\n    /**\n     * Add features without firing a `change` event.\n     * @param {Array<import(\"../Feature.js\").default>} features Features.\n     * @protected\n     */\n    VectorSource.prototype.addFeaturesInternal = function (features) {\n        var extents = [];\n        var newFeatures = [];\n        var geometryFeatures = [];\n        for (var i = 0, length_1 = features.length; i < length_1; i++) {\n            var feature = features[i];\n            var featureKey = getUid(feature);\n            if (this.addToIndex_(featureKey, feature)) {\n                newFeatures.push(feature);\n            }\n        }\n        for (var i = 0, length_2 = newFeatures.length; i < length_2; i++) {\n            var feature = newFeatures[i];\n            var featureKey = getUid(feature);\n            this.setupChangeEvents_(featureKey, feature);\n            var geometry = feature.getGeometry();\n            if (geometry) {\n                var extent = geometry.getExtent();\n                extents.push(extent);\n                geometryFeatures.push(feature);\n            }\n            else {\n                this.nullGeometryFeatures_[featureKey] = feature;\n            }\n        }\n        if (this.featuresRtree_) {\n            this.featuresRtree_.load(extents, geometryFeatures);\n        }\n        for (var i = 0, length_3 = newFeatures.length; i < length_3; i++) {\n            this.dispatchEvent(new VectorSourceEvent(VectorEventType.ADDFEATURE, newFeatures[i]));\n        }\n    };\n    /**\n     * @param {!Collection<import(\"../Feature.js\").default>} collection Collection.\n     * @private\n     */\n    VectorSource.prototype.bindFeaturesCollection_ = function (collection) {\n        var modifyingCollection = false;\n        listen(this, VectorEventType.ADDFEATURE, \n        /**\n         * @param {VectorSourceEvent} evt The vector source event\n         */\n        function (evt) {\n            if (!modifyingCollection) {\n                modifyingCollection = true;\n                collection.push(evt.feature);\n                modifyingCollection = false;\n            }\n        });\n        listen(this, VectorEventType.REMOVEFEATURE, \n        /**\n         * @param {VectorSourceEvent} evt The vector source event\n         */\n        function (evt) {\n            if (!modifyingCollection) {\n                modifyingCollection = true;\n                collection.remove(evt.feature);\n                modifyingCollection = false;\n            }\n        });\n        listen(collection, CollectionEventType.ADD, \n        /**\n         * @param {import(\"../Collection.js\").CollectionEvent} evt The collection event\n         */\n        function (evt) {\n            if (!modifyingCollection) {\n                modifyingCollection = true;\n                this.addFeature(/** @type {import(\"../Feature.js\").default} */ (evt.element));\n                modifyingCollection = false;\n            }\n        }, this);\n        listen(collection, CollectionEventType.REMOVE, \n        /**\n         * @param {import(\"../Collection.js\").CollectionEvent} evt The collection event\n         */\n        function (evt) {\n            if (!modifyingCollection) {\n                modifyingCollection = true;\n                this.removeFeature(/** @type {import(\"../Feature.js\").default} */ (evt.element));\n                modifyingCollection = false;\n            }\n        }, this);\n        this.featuresCollection_ = collection;\n    };\n    /**\n     * Remove all features from the source.\n     * @param {boolean=} opt_fast Skip dispatching of {@link module:ol/source/Vector.VectorSourceEvent#removefeature} events.\n     * @api\n     */\n    VectorSource.prototype.clear = function (opt_fast) {\n        if (opt_fast) {\n            for (var featureId in this.featureChangeKeys_) {\n                var keys = this.featureChangeKeys_[featureId];\n                keys.forEach(unlistenByKey);\n            }\n            if (!this.featuresCollection_) {\n                this.featureChangeKeys_ = {};\n                this.idIndex_ = {};\n                this.undefIdIndex_ = {};\n            }\n        }\n        else {\n            if (this.featuresRtree_) {\n                this.featuresRtree_.forEach(this.removeFeatureInternal.bind(this));\n                for (var id in this.nullGeometryFeatures_) {\n                    this.removeFeatureInternal(this.nullGeometryFeatures_[id]);\n                }\n            }\n        }\n        if (this.featuresCollection_) {\n            this.featuresCollection_.clear();\n        }\n        if (this.featuresRtree_) {\n            this.featuresRtree_.clear();\n        }\n        this.nullGeometryFeatures_ = {};\n        var clearEvent = new VectorSourceEvent(VectorEventType.CLEAR);\n        this.dispatchEvent(clearEvent);\n        this.changed();\n    };\n    /**\n     * Iterate through all features on the source, calling the provided callback\n     * with each one.  If the callback returns any \"truthy\" value, iteration will\n     * stop and the function will return the same value.\n     * Note: this function only iterate through the feature that have a defined geometry.\n     *\n     * @param {function(import(\"../Feature.js\").default): T} callback Called with each feature\n     *     on the source.  Return a truthy value to stop iteration.\n     * @return {T|undefined} The return value from the last call to the callback.\n     * @template T\n     * @api\n     */\n    VectorSource.prototype.forEachFeature = function (callback) {\n        if (this.featuresRtree_) {\n            return this.featuresRtree_.forEach(callback);\n        }\n        else if (this.featuresCollection_) {\n            this.featuresCollection_.forEach(callback);\n        }\n    };\n    /**\n     * Iterate through all features whose geometries contain the provided\n     * coordinate, calling the callback with each feature.  If the callback returns\n     * a \"truthy\" value, iteration will stop and the function will return the same\n     * value.\n     *\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {function(import(\"../Feature.js\").default): T} callback Called with each feature\n     *     whose goemetry contains the provided coordinate.\n     * @return {T|undefined} The return value from the last call to the callback.\n     * @template T\n     */\n    VectorSource.prototype.forEachFeatureAtCoordinateDirect = function (coordinate, callback) {\n        var extent = [coordinate[0], coordinate[1], coordinate[0], coordinate[1]];\n        return this.forEachFeatureInExtent(extent, function (feature) {\n            var geometry = feature.getGeometry();\n            if (geometry.intersectsCoordinate(coordinate)) {\n                return callback(feature);\n            }\n            else {\n                return undefined;\n            }\n        });\n    };\n    /**\n     * Iterate through all features whose bounding box intersects the provided\n     * extent (note that the feature's geometry may not intersect the extent),\n     * calling the callback with each feature.  If the callback returns a \"truthy\"\n     * value, iteration will stop and the function will return the same value.\n     *\n     * If you are interested in features whose geometry intersects an extent, call\n     * the {@link module:ol/source/Vector~VectorSource#forEachFeatureIntersectingExtent #forEachFeatureIntersectingExtent()} method instead.\n     *\n     * When `useSpatialIndex` is set to false, this method will loop through all\n     * features, equivalent to {@link module:ol/source/Vector~VectorSource#forEachFeature #forEachFeature()}.\n     *\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {function(import(\"../Feature.js\").default): T} callback Called with each feature\n     *     whose bounding box intersects the provided extent.\n     * @return {T|undefined} The return value from the last call to the callback.\n     * @template T\n     * @api\n     */\n    VectorSource.prototype.forEachFeatureInExtent = function (extent, callback) {\n        if (this.featuresRtree_) {\n            return this.featuresRtree_.forEachInExtent(extent, callback);\n        }\n        else if (this.featuresCollection_) {\n            this.featuresCollection_.forEach(callback);\n        }\n    };\n    /**\n     * Iterate through all features whose geometry intersects the provided extent,\n     * calling the callback with each feature.  If the callback returns a \"truthy\"\n     * value, iteration will stop and the function will return the same value.\n     *\n     * If you only want to test for bounding box intersection, call the\n     * {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent #forEachFeatureInExtent()} method instead.\n     *\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {function(import(\"../Feature.js\").default): T} callback Called with each feature\n     *     whose geometry intersects the provided extent.\n     * @return {T|undefined} The return value from the last call to the callback.\n     * @template T\n     * @api\n     */\n    VectorSource.prototype.forEachFeatureIntersectingExtent = function (extent, callback) {\n        return this.forEachFeatureInExtent(extent, \n        /**\n         * @param {import(\"../Feature.js\").default} feature Feature.\n         * @return {T|undefined} The return value from the last call to the callback.\n         */\n        function (feature) {\n            var geometry = feature.getGeometry();\n            if (geometry.intersectsExtent(extent)) {\n                var result = callback(feature);\n                if (result) {\n                    return result;\n                }\n            }\n        });\n    };\n    /**\n     * Get the features collection associated with this source. Will be `null`\n     * unless the source was configured with `useSpatialIndex` set to `false`, or\n     * with an {@link module:ol/Collection} as `features`.\n     * @return {Collection<import(\"../Feature.js\").default>} The collection of features.\n     * @api\n     */\n    VectorSource.prototype.getFeaturesCollection = function () {\n        return this.featuresCollection_;\n    };\n    /**\n     * Get all features on the source in random order.\n     * @return {Array<import(\"../Feature.js\").default>} Features.\n     * @api\n     */\n    VectorSource.prototype.getFeatures = function () {\n        var features;\n        if (this.featuresCollection_) {\n            features = this.featuresCollection_.getArray();\n        }\n        else if (this.featuresRtree_) {\n            features = this.featuresRtree_.getAll();\n            if (!isEmpty(this.nullGeometryFeatures_)) {\n                extend(features, getValues(this.nullGeometryFeatures_));\n            }\n        }\n        return (\n        /** @type {Array<import(\"../Feature.js\").default>} */ (features));\n    };\n    /**\n     * Get all features whose geometry intersects the provided coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @return {Array<import(\"../Feature.js\").default>} Features.\n     * @api\n     */\n    VectorSource.prototype.getFeaturesAtCoordinate = function (coordinate) {\n        var features = [];\n        this.forEachFeatureAtCoordinateDirect(coordinate, function (feature) {\n            features.push(feature);\n        });\n        return features;\n    };\n    /**\n     * Get all features in the provided extent.  Note that this returns an array of\n     * all features intersecting the given extent in random order (so it may include\n     * features whose geometries do not intersect the extent).\n     *\n     * This method is not available when the source is configured with\n     * `useSpatialIndex` set to `false`.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @return {Array<import(\"../Feature.js\").default>} Features.\n     * @api\n     */\n    VectorSource.prototype.getFeaturesInExtent = function (extent) {\n        return this.featuresRtree_.getInExtent(extent);\n    };\n    /**\n     * Get the closest feature to the provided coordinate.\n     *\n     * This method is not available when the source is configured with\n     * `useSpatialIndex` set to `false`.\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {function(import(\"../Feature.js\").default):boolean=} opt_filter Feature filter function.\n     *     The filter function will receive one argument, the {@link module:ol/Feature feature}\n     *     and it should return a boolean value. By default, no filtering is made.\n     * @return {import(\"../Feature.js\").default} Closest feature.\n     * @api\n     */\n    VectorSource.prototype.getClosestFeatureToCoordinate = function (coordinate, opt_filter) {\n        // Find the closest feature using branch and bound.  We start searching an\n        // infinite extent, and find the distance from the first feature found.  This\n        // becomes the closest feature.  We then compute a smaller extent which any\n        // closer feature must intersect.  We continue searching with this smaller\n        // extent, trying to find a closer feature.  Every time we find a closer\n        // feature, we update the extent being searched so that any even closer\n        // feature must intersect it.  We continue until we run out of features.\n        var x = coordinate[0];\n        var y = coordinate[1];\n        var closestFeature = null;\n        var closestPoint = [NaN, NaN];\n        var minSquaredDistance = Infinity;\n        var extent = [-Infinity, -Infinity, Infinity, Infinity];\n        var filter = opt_filter ? opt_filter : TRUE;\n        this.featuresRtree_.forEachInExtent(extent, \n        /**\n         * @param {import(\"../Feature.js\").default} feature Feature.\n         */\n        function (feature) {\n            if (filter(feature)) {\n                var geometry = feature.getGeometry();\n                var previousMinSquaredDistance = minSquaredDistance;\n                minSquaredDistance = geometry.closestPointXY(x, y, closestPoint, minSquaredDistance);\n                if (minSquaredDistance < previousMinSquaredDistance) {\n                    closestFeature = feature;\n                    // This is sneaky.  Reduce the extent that it is currently being\n                    // searched while the R-Tree traversal using this same extent object\n                    // is still in progress.  This is safe because the new extent is\n                    // strictly contained by the old extent.\n                    var minDistance = Math.sqrt(minSquaredDistance);\n                    extent[0] = x - minDistance;\n                    extent[1] = y - minDistance;\n                    extent[2] = x + minDistance;\n                    extent[3] = y + minDistance;\n                }\n            }\n        });\n        return closestFeature;\n    };\n    /**\n     * Get the extent of the features currently in the source.\n     *\n     * This method is not available when the source is configured with\n     * `useSpatialIndex` set to `false`.\n     * @param {import(\"../extent.js\").Extent=} opt_extent Destination extent. If provided, no new extent\n     *     will be created. Instead, that extent's coordinates will be overwritten.\n     * @return {import(\"../extent.js\").Extent} Extent.\n     * @api\n     */\n    VectorSource.prototype.getExtent = function (opt_extent) {\n        return this.featuresRtree_.getExtent(opt_extent);\n    };\n    /**\n     * Get a feature by its identifier (the value returned by feature.getId()).\n     * Note that the index treats string and numeric identifiers as the same.  So\n     * `source.getFeatureById(2)` will return a feature with id `'2'` or `2`.\n     *\n     * @param {string|number} id Feature identifier.\n     * @return {import(\"../Feature.js\").default} The feature (or `null` if not found).\n     * @api\n     */\n    VectorSource.prototype.getFeatureById = function (id) {\n        var feature = this.idIndex_[id.toString()];\n        return feature !== undefined ? feature : null;\n    };\n    /**\n     * Get the format associated with this source.\n     *\n     * @return {import(\"../format/Feature.js\").default|undefined} The feature format.\n     * @api\n     */\n    VectorSource.prototype.getFormat = function () {\n        return this.format_;\n    };\n    /**\n     * @return {boolean} The source can have overlapping geometries.\n     */\n    VectorSource.prototype.getOverlaps = function () {\n        return this.overlaps_;\n    };\n    /**\n     * Get the url associated with this source.\n     *\n     * @return {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined} The url.\n     * @api\n     */\n    VectorSource.prototype.getUrl = function () {\n        return this.url_;\n    };\n    /**\n     * @param {Event} event Event.\n     * @private\n     */\n    VectorSource.prototype.handleFeatureChange_ = function (event) {\n        var feature = /** @type {import(\"../Feature.js\").default} */ (event.target);\n        var featureKey = getUid(feature);\n        var geometry = feature.getGeometry();\n        if (!geometry) {\n            if (!(featureKey in this.nullGeometryFeatures_)) {\n                if (this.featuresRtree_) {\n                    this.featuresRtree_.remove(feature);\n                }\n                this.nullGeometryFeatures_[featureKey] = feature;\n            }\n        }\n        else {\n            var extent = geometry.getExtent();\n            if (featureKey in this.nullGeometryFeatures_) {\n                delete this.nullGeometryFeatures_[featureKey];\n                if (this.featuresRtree_) {\n                    this.featuresRtree_.insert(extent, feature);\n                }\n            }\n            else {\n                if (this.featuresRtree_) {\n                    this.featuresRtree_.update(extent, feature);\n                }\n            }\n        }\n        var id = feature.getId();\n        if (id !== undefined) {\n            var sid = id.toString();\n            if (featureKey in this.undefIdIndex_) {\n                delete this.undefIdIndex_[featureKey];\n                this.idIndex_[sid] = feature;\n            }\n            else {\n                if (this.idIndex_[sid] !== feature) {\n                    this.removeFromIdIndex_(feature);\n                    this.idIndex_[sid] = feature;\n                }\n            }\n        }\n        else {\n            if (!(featureKey in this.undefIdIndex_)) {\n                this.removeFromIdIndex_(feature);\n                this.undefIdIndex_[featureKey] = feature;\n            }\n        }\n        this.changed();\n        this.dispatchEvent(new VectorSourceEvent(VectorEventType.CHANGEFEATURE, feature));\n    };\n    /**\n     * Returns true if the feature is contained within the source.\n     * @param {import(\"../Feature.js\").default} feature Feature.\n     * @return {boolean} Has feature.\n     * @api\n     */\n    VectorSource.prototype.hasFeature = function (feature) {\n        var id = feature.getId();\n        if (id !== undefined) {\n            return id in this.idIndex_;\n        }\n        else {\n            return getUid(feature) in this.undefIdIndex_;\n        }\n    };\n    /**\n     * @return {boolean} Is empty.\n     */\n    VectorSource.prototype.isEmpty = function () {\n        return this.featuresRtree_.isEmpty() && isEmpty(this.nullGeometryFeatures_);\n    };\n    /**\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     */\n    VectorSource.prototype.loadFeatures = function (extent, resolution, projection) {\n        var loadedExtentsRtree = this.loadedExtentsRtree_;\n        var extentsToLoad = this.strategy_(extent, resolution);\n        this.loading = false;\n        var _loop_1 = function (i, ii) {\n            var extentToLoad = extentsToLoad[i];\n            var alreadyLoaded = loadedExtentsRtree.forEachInExtent(extentToLoad, \n            /**\n             * @param {{extent: import(\"../extent.js\").Extent}} object Object.\n             * @return {boolean} Contains.\n             */\n            function (object) {\n                return containsExtent(object.extent, extentToLoad);\n            });\n            if (!alreadyLoaded) {\n                this_1.loader_.call(this_1, extentToLoad, resolution, projection);\n                loadedExtentsRtree.insert(extentToLoad, { extent: extentToLoad.slice() });\n                this_1.loading = this_1.loader_ !== VOID;\n            }\n        };\n        var this_1 = this;\n        for (var i = 0, ii = extentsToLoad.length; i < ii; ++i) {\n            _loop_1(i, ii);\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    VectorSource.prototype.refresh = function () {\n        this.clear(true);\n        this.loadedExtentsRtree_.clear();\n        _super.prototype.refresh.call(this);\n    };\n    /**\n     * Remove an extent from the list of loaded extents.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @api\n     */\n    VectorSource.prototype.removeLoadedExtent = function (extent) {\n        var loadedExtentsRtree = this.loadedExtentsRtree_;\n        var obj;\n        loadedExtentsRtree.forEachInExtent(extent, function (object) {\n            if (equals(object.extent, extent)) {\n                obj = object;\n                return true;\n            }\n        });\n        if (obj) {\n            loadedExtentsRtree.remove(obj);\n        }\n    };\n    /**\n     * Remove a single feature from the source.  If you want to remove all features\n     * at once, use the {@link module:ol/source/Vector~VectorSource#clear #clear()} method\n     * instead.\n     * @param {import(\"../Feature.js\").default} feature Feature to remove.\n     * @api\n     */\n    VectorSource.prototype.removeFeature = function (feature) {\n        var featureKey = getUid(feature);\n        if (featureKey in this.nullGeometryFeatures_) {\n            delete this.nullGeometryFeatures_[featureKey];\n        }\n        else {\n            if (this.featuresRtree_) {\n                this.featuresRtree_.remove(feature);\n            }\n        }\n        this.removeFeatureInternal(feature);\n        this.changed();\n    };\n    /**\n     * Remove feature without firing a `change` event.\n     * @param {import(\"../Feature.js\").default} feature Feature.\n     * @protected\n     */\n    VectorSource.prototype.removeFeatureInternal = function (feature) {\n        var featureKey = getUid(feature);\n        this.featureChangeKeys_[featureKey].forEach(unlistenByKey);\n        delete this.featureChangeKeys_[featureKey];\n        var id = feature.getId();\n        if (id !== undefined) {\n            delete this.idIndex_[id.toString()];\n        }\n        else {\n            delete this.undefIdIndex_[featureKey];\n        }\n        this.dispatchEvent(new VectorSourceEvent(VectorEventType.REMOVEFEATURE, feature));\n    };\n    /**\n     * Remove a feature from the id index.  Called internally when the feature id\n     * may have changed.\n     * @param {import(\"../Feature.js\").default} feature The feature.\n     * @return {boolean} Removed the feature from the index.\n     * @private\n     */\n    VectorSource.prototype.removeFromIdIndex_ = function (feature) {\n        var removed = false;\n        for (var id in this.idIndex_) {\n            if (this.idIndex_[id] === feature) {\n                delete this.idIndex_[id];\n                removed = true;\n                break;\n            }\n        }\n        return removed;\n    };\n    /**\n     * Set the new loader of the source. The next render cycle will use the\n     * new loader.\n     * @param {import(\"../featureloader.js\").FeatureLoader} loader The loader to set.\n     * @api\n     */\n    VectorSource.prototype.setLoader = function (loader) {\n        this.loader_ = loader;\n    };\n    /**\n     * Points the source to a new url. The next render cycle will use the new url.\n     * @param {string|import(\"../featureloader.js\").FeatureUrlFunction} url Url.\n     * @api\n     */\n    VectorSource.prototype.setUrl = function (url) {\n        assert(this.format_, 7); // `format` must be set when `url` is set\n        this.setLoader(xhr(url, this.format_));\n    };\n    return VectorSource;\n}(Source));\nexport default VectorSource;\n//# sourceMappingURL=Vector.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/Feature\n */\nimport { assert } from './asserts.js';\nimport { listen, unlisten, unlistenByKey } from './events.js';\nimport EventType from './events/EventType.js';\nimport BaseObject, { getChangeEventType } from './Object.js';\n/**\n * @typedef {typeof Feature|typeof import(\"./render/Feature.js\").default} FeatureClass\n */\n/**\n * @typedef {Feature|import(\"./render/Feature.js\").default} FeatureLike\n */\n/**\n * @classdesc\n * A vector object for geographic features with a geometry and other\n * attribute properties, similar to the features in vector file formats like\n * GeoJSON.\n *\n * Features can be styled individually with `setStyle`; otherwise they use the\n * style of their vector layer.\n *\n * Note that attribute properties are set as {@link module:ol/Object} properties on\n * the feature object, so they are observable, and have get/set accessors.\n *\n * Typically, a feature has a single geometry property. You can set the\n * geometry using the `setGeometry` method and get it with `getGeometry`.\n * It is possible to store more than one geometry on a feature using attribute\n * properties. By default, the geometry used for rendering is identified by\n * the property name `geometry`. If you want to use another geometry property\n * for rendering, use the `setGeometryName` method to change the attribute\n * property associated with the geometry for the feature.  For example:\n *\n * ```js\n *\n * import Feature from 'ol/Feature';\n * import Polygon from 'ol/geom/Polygon';\n * import Point from 'ol/geom/Point';\n *\n * var feature = new Feature({\n *   geometry: new Polygon(polyCoords),\n *   labelPoint: new Point(labelCoords),\n *   name: 'My Polygon'\n * });\n *\n * // get the polygon geometry\n * var poly = feature.getGeometry();\n *\n * // Render the feature as a point using the coordinates from labelPoint\n * feature.setGeometryName('labelPoint');\n *\n * // get the point geometry\n * var point = feature.getGeometry();\n * ```\n *\n * @api\n */\nvar Feature = /** @class */ (function (_super) {\n    __extends(Feature, _super);\n    /**\n     * @param {import(\"./geom/Geometry.js\").default|Object<string, *>=} opt_geometryOrProperties\n     *     You may pass a Geometry object directly, or an object literal containing\n     *     properties. If you pass an object literal, you may include a Geometry\n     *     associated with a `geometry` key.\n     */\n    function Feature(opt_geometryOrProperties) {\n        var _this = _super.call(this) || this;\n        /**\n         * @private\n         * @type {number|string|undefined}\n         */\n        _this.id_ = undefined;\n        /**\n         * @type {string}\n         * @private\n         */\n        _this.geometryName_ = 'geometry';\n        /**\n         * User provided style.\n         * @private\n         * @type {import(\"./style/Style.js\").StyleLike}\n         */\n        _this.style_ = null;\n        /**\n         * @private\n         * @type {import(\"./style/Style.js\").StyleFunction|undefined}\n         */\n        _this.styleFunction_ = undefined;\n        /**\n         * @private\n         * @type {?import(\"./events.js\").EventsKey}\n         */\n        _this.geometryChangeKey_ = null;\n        listen(_this, getChangeEventType(_this.geometryName_), _this.handleGeometryChanged_, _this);\n        if (opt_geometryOrProperties) {\n            if (typeof /** @type {?} */ (opt_geometryOrProperties).getSimplifiedGeometry === 'function') {\n                var geometry = /** @type {import(\"./geom/Geometry.js\").default} */ (opt_geometryOrProperties);\n                _this.setGeometry(geometry);\n            }\n            else {\n                /** @type {Object<string, *>} */\n                var properties = opt_geometryOrProperties;\n                _this.setProperties(properties);\n            }\n        }\n        return _this;\n    }\n    /**\n     * Clone this feature. If the original feature has a geometry it\n     * is also cloned. The feature id is not set in the clone.\n     * @return {Feature} The clone.\n     * @api\n     */\n    Feature.prototype.clone = function () {\n        var clone = new Feature(this.getProperties());\n        clone.setGeometryName(this.getGeometryName());\n        var geometry = this.getGeometry();\n        if (geometry) {\n            clone.setGeometry(geometry.clone());\n        }\n        var style = this.getStyle();\n        if (style) {\n            clone.setStyle(style);\n        }\n        return clone;\n    };\n    /**\n     * Get the feature's default geometry.  A feature may have any number of named\n     * geometries.  The \"default\" geometry (the one that is rendered by default) is\n     * set when calling {@link module:ol/Feature~Feature#setGeometry}.\n     * @return {import(\"./geom/Geometry.js\").default|undefined} The default geometry for the feature.\n     * @api\n     * @observable\n     */\n    Feature.prototype.getGeometry = function () {\n        return (\n        /** @type {import(\"./geom/Geometry.js\").default|undefined} */ (this.get(this.geometryName_)));\n    };\n    /**\n     * Get the feature identifier.  This is a stable identifier for the feature and\n     * is either set when reading data from a remote source or set explicitly by\n     * calling {@link module:ol/Feature~Feature#setId}.\n     * @return {number|string|undefined} Id.\n     * @api\n     */\n    Feature.prototype.getId = function () {\n        return this.id_;\n    };\n    /**\n     * Get the name of the feature's default geometry.  By default, the default\n     * geometry is named `geometry`.\n     * @return {string} Get the property name associated with the default geometry\n     *     for this feature.\n     * @api\n     */\n    Feature.prototype.getGeometryName = function () {\n        return this.geometryName_;\n    };\n    /**\n     * Get the feature's style. Will return what was provided to the\n     * {@link module:ol/Feature~Feature#setStyle} method.\n     * @return {import(\"./style/Style.js\").StyleLike} The feature style.\n     * @api\n     */\n    Feature.prototype.getStyle = function () {\n        return this.style_;\n    };\n    /**\n     * Get the feature's style function.\n     * @return {import(\"./style/Style.js\").StyleFunction|undefined} Return a function\n     * representing the current style of this feature.\n     * @api\n     */\n    Feature.prototype.getStyleFunction = function () {\n        return this.styleFunction_;\n    };\n    /**\n     * @private\n     */\n    Feature.prototype.handleGeometryChange_ = function () {\n        this.changed();\n    };\n    /**\n     * @private\n     */\n    Feature.prototype.handleGeometryChanged_ = function () {\n        if (this.geometryChangeKey_) {\n            unlistenByKey(this.geometryChangeKey_);\n            this.geometryChangeKey_ = null;\n        }\n        var geometry = this.getGeometry();\n        if (geometry) {\n            this.geometryChangeKey_ = listen(geometry, EventType.CHANGE, this.handleGeometryChange_, this);\n        }\n        this.changed();\n    };\n    /**\n     * Set the default geometry for the feature.  This will update the property\n     * with the name returned by {@link module:ol/Feature~Feature#getGeometryName}.\n     * @param {import(\"./geom/Geometry.js\").default|undefined} geometry The new geometry.\n     * @api\n     * @observable\n     */\n    Feature.prototype.setGeometry = function (geometry) {\n        this.set(this.geometryName_, geometry);\n    };\n    /**\n     * Set the style for the feature.  This can be a single style object, an array\n     * of styles, or a function that takes a resolution and returns an array of\n     * styles. If it is `null` the feature has no style (a `null` style).\n     * @param {import(\"./style/Style.js\").StyleLike} style Style for this feature.\n     * @api\n     * @fires module:ol/events/Event~Event#event:change\n     */\n    Feature.prototype.setStyle = function (style) {\n        this.style_ = style;\n        this.styleFunction_ = !style ? undefined : createStyleFunction(style);\n        this.changed();\n    };\n    /**\n     * Set the feature id.  The feature id is considered stable and may be used when\n     * requesting features or comparing identifiers returned from a remote source.\n     * The feature id can be used with the\n     * {@link module:ol/source/Vector~VectorSource#getFeatureById} method.\n     * @param {number|string|undefined} id The feature id.\n     * @api\n     * @fires module:ol/events/Event~Event#event:change\n     */\n    Feature.prototype.setId = function (id) {\n        this.id_ = id;\n        this.changed();\n    };\n    /**\n     * Set the property name to be used when getting the feature's default geometry.\n     * When calling {@link module:ol/Feature~Feature#getGeometry}, the value of the property with\n     * this name will be returned.\n     * @param {string} name The property name of the default geometry.\n     * @api\n     */\n    Feature.prototype.setGeometryName = function (name) {\n        unlisten(this, getChangeEventType(this.geometryName_), this.handleGeometryChanged_, this);\n        this.geometryName_ = name;\n        listen(this, getChangeEventType(this.geometryName_), this.handleGeometryChanged_, this);\n        this.handleGeometryChanged_();\n    };\n    return Feature;\n}(BaseObject));\n/**\n * Convert the provided object into a feature style function.  Functions passed\n * through unchanged.  Arrays of Style or single style objects wrapped\n * in a new feature style function.\n * @param {!import(\"./style/Style.js\").StyleFunction|!Array<import(\"./style/Style.js\").default>|!import(\"./style/Style.js\").default} obj\n *     A feature style function, a single style, or an array of styles.\n * @return {import(\"./style/Style.js\").StyleFunction} A style function.\n */\nexport function createStyleFunction(obj) {\n    if (typeof obj === 'function') {\n        return obj;\n    }\n    else {\n        /**\n         * @type {Array<import(\"./style/Style.js\").default>}\n         */\n        var styles_1;\n        if (Array.isArray(obj)) {\n            styles_1 = obj;\n        }\n        else {\n            assert(typeof /** @type {?} */ (obj).getZIndex === 'function', 41); // Expected an `import(\"./style/Style.js\").Style` or an array of `import(\"./style/Style.js\").Style`\n            var style = /** @type {import(\"./style/Style.js\").default} */ (obj);\n            styles_1 = [style];\n        }\n        return function () {\n            return styles_1;\n        };\n    }\n}\nexport default Feature;\n//# sourceMappingURL=Feature.js.map","/**\n * @module ol/format/Feature\n */\nimport { assign } from '../obj.js';\nimport { abstract } from '../util.js';\nimport { get as getProjection, equivalent as equivalentProjection, transformExtent } from '../proj.js';\n/**\n * @typedef {Object} ReadOptions\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection] Projection of the data we are reading.\n * If not provided, the projection will be derived from the data (where possible) or\n * the `dataProjection` of the format is assigned (where set). If the projection\n * can not be derived from the data and if no `dataProjection` is set for a format,\n * the features will not be reprojected.\n * @property {import(\"../extent.js\").Extent} [extent] Tile extent of the tile being read. This is only used and\n * required for {@link module:ol/format/MVT}.\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection of the feature geometries\n * created by the format reader. If not provided, features will be returned in the\n * `dataProjection`.\n */\n/**\n * @typedef {Object} WriteOptions\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection] Projection of the data we are writing.\n * If not provided, the `dataProjection` of the format is assigned (where set).\n * If no `dataProjection` is set for a format, the features will be returned\n * in the `featureProjection`.\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection of the feature geometries\n * that will be serialized by the format writer. If not provided, geometries are assumed\n * to be in the `dataProjection` if that is set; in other words, they are not transformed.\n * @property {boolean} [rightHanded] When writing geometries, follow the right-hand\n * rule for linear ring orientation.  This means that polygons will have counter-clockwise\n * exterior rings and clockwise interior rings.  By default, coordinates are serialized\n * as they are provided at construction.  If `true`, the right-hand rule will\n * be applied.  If `false`, the left-hand rule will be applied (clockwise for\n * exterior and counter-clockwise for interior rings).  Note that not all\n * formats support this.  The GeoJSON format does use this property when writing\n * geometries.\n * @property {number} [decimals] Maximum number of decimal places for coordinates.\n * Coordinates are stored internally as floats, but floating-point arithmetic can create\n * coordinates with a large number of decimal places, not generally wanted on output.\n * Set a number here to round coordinates. Can also be used to ensure that\n * coordinates read in can be written back out with the same number of decimals.\n * Default is no rounding.\n */\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for feature formats.\n * {FeatureFormat} subclasses provide the ability to decode and encode\n * {@link module:ol/Feature~Feature} objects from a variety of commonly used geospatial\n * file formats.  See the documentation for each format for more details.\n *\n * @abstract\n * @api\n */\nvar FeatureFormat = /** @class */ (function () {\n    function FeatureFormat() {\n        /**\n         * @protected\n         * @type {import(\"../proj/Projection.js\").default}\n         */\n        this.dataProjection = null;\n        /**\n         * @protected\n         * @type {import(\"../proj/Projection.js\").default}\n         */\n        this.defaultFeatureProjection = null;\n    }\n    /**\n     * Adds the data projection to the read options.\n     * @param {Document|Node|Object|string} source Source.\n     * @param {ReadOptions=} opt_options Options.\n     * @return {ReadOptions|undefined} Options.\n     * @protected\n     */\n    FeatureFormat.prototype.getReadOptions = function (source, opt_options) {\n        var options;\n        if (opt_options) {\n            options = {\n                dataProjection: opt_options.dataProjection ?\n                    opt_options.dataProjection : this.readProjection(source),\n                featureProjection: opt_options.featureProjection\n            };\n        }\n        return this.adaptOptions(options);\n    };\n    /**\n     * Sets the `dataProjection` on the options, if no `dataProjection`\n     * is set.\n     * @param {WriteOptions|ReadOptions|undefined} options\n     *     Options.\n     * @protected\n     * @return {WriteOptions|ReadOptions|undefined}\n     *     Updated options.\n     */\n    FeatureFormat.prototype.adaptOptions = function (options) {\n        return assign({\n            dataProjection: this.dataProjection,\n            featureProjection: this.defaultFeatureProjection\n        }, options);\n    };\n    /**\n     * @abstract\n     * @return {import(\"./FormatType.js\").default} Format.\n     */\n    FeatureFormat.prototype.getType = function () {\n        return abstract();\n    };\n    /**\n     * Read a single feature from a source.\n     *\n     * @abstract\n     * @param {Document|Node|Object|string} source Source.\n     * @param {ReadOptions=} opt_options Read options.\n     * @return {import(\"../Feature.js\").FeatureLike} Feature.\n     */\n    FeatureFormat.prototype.readFeature = function (source, opt_options) {\n        return abstract();\n    };\n    /**\n     * Read all features from a source.\n     *\n     * @abstract\n     * @param {Document|Node|ArrayBuffer|Object|string} source Source.\n     * @param {ReadOptions=} opt_options Read options.\n     * @return {Array<import(\"../Feature.js\").FeatureLike>} Features.\n     */\n    FeatureFormat.prototype.readFeatures = function (source, opt_options) {\n        return abstract();\n    };\n    /**\n     * Read a single geometry from a source.\n     *\n     * @abstract\n     * @param {Document|Node|Object|string} source Source.\n     * @param {ReadOptions=} opt_options Read options.\n     * @return {import(\"../geom/Geometry.js\").default} Geometry.\n     */\n    FeatureFormat.prototype.readGeometry = function (source, opt_options) {\n        return abstract();\n    };\n    /**\n     * Read the projection from a source.\n     *\n     * @abstract\n     * @param {Document|Node|Object|string} source Source.\n     * @return {import(\"../proj/Projection.js\").default} Projection.\n     */\n    FeatureFormat.prototype.readProjection = function (source) {\n        return abstract();\n    };\n    /**\n     * Encode a feature in this format.\n     *\n     * @abstract\n     * @param {import(\"../Feature.js\").default} feature Feature.\n     * @param {WriteOptions=} opt_options Write options.\n     * @return {string} Result.\n     */\n    FeatureFormat.prototype.writeFeature = function (feature, opt_options) {\n        return abstract();\n    };\n    /**\n     * Encode an array of features in this format.\n     *\n     * @abstract\n     * @param {Array<import(\"../Feature.js\").default>} features Features.\n     * @param {WriteOptions=} opt_options Write options.\n     * @return {string} Result.\n     */\n    FeatureFormat.prototype.writeFeatures = function (features, opt_options) {\n        return abstract();\n    };\n    /**\n     * Write a single geometry in this format.\n     *\n     * @abstract\n     * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n     * @param {WriteOptions=} opt_options Write options.\n     * @return {string} Result.\n     */\n    FeatureFormat.prototype.writeGeometry = function (geometry, opt_options) {\n        return abstract();\n    };\n    return FeatureFormat;\n}());\nexport default FeatureFormat;\n/**\n * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {boolean} write Set to true for writing, false for reading.\n * @param {(WriteOptions|ReadOptions)=} opt_options Options.\n * @return {import(\"../geom/Geometry.js\").default} Transformed geometry.\n */\nexport function transformGeometryWithOptions(geometry, write, opt_options) {\n    var featureProjection = opt_options ? getProjection(opt_options.featureProjection) : null;\n    var dataProjection = opt_options ? getProjection(opt_options.dataProjection) : null;\n    var transformed;\n    if (featureProjection && dataProjection && !equivalentProjection(featureProjection, dataProjection)) {\n        transformed = (write ? geometry.clone() : geometry).transform(write ? featureProjection : dataProjection, write ? dataProjection : featureProjection);\n    }\n    else {\n        transformed = geometry;\n    }\n    if (write && opt_options && /** @type {WriteOptions} */ (opt_options).decimals !== undefined) {\n        var power_1 = Math.pow(10, /** @type {WriteOptions} */ (opt_options).decimals);\n        // if decimals option on write, round each coordinate appropriately\n        /**\n         * @param {Array<number>} coordinates Coordinates.\n         * @return {Array<number>} Transformed coordinates.\n         */\n        var transform = function (coordinates) {\n            for (var i = 0, ii = coordinates.length; i < ii; ++i) {\n                coordinates[i] = Math.round(coordinates[i] * power_1) / power_1;\n            }\n            return coordinates;\n        };\n        if (transformed === geometry) {\n            transformed = geometry.clone();\n        }\n        transformed.applyTransform(transform);\n    }\n    return transformed;\n}\n/**\n * @param {import(\"../extent.js\").Extent} extent Extent.\n * @param {ReadOptions=} opt_options Read options.\n * @return {import(\"../extent.js\").Extent} Transformed extent.\n */\nexport function transformExtentWithOptions(extent, opt_options) {\n    var featureProjection = opt_options ? getProjection(opt_options.featureProjection) : null;\n    var dataProjection = opt_options ? getProjection(opt_options.dataProjection) : null;\n    if (featureProjection && dataProjection && !equivalentProjection(featureProjection, dataProjection)) {\n        return transformExtent(extent, dataProjection, featureProjection);\n    }\n    else {\n        return extent;\n    }\n}\n//# sourceMappingURL=Feature.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/format/JSONFeature\n */\nimport { abstract } from '../util.js';\nimport FeatureFormat from './Feature.js';\nimport FormatType from './FormatType.js';\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for JSON feature formats.\n *\n * @abstract\n */\nvar JSONFeature = /** @class */ (function (_super) {\n    __extends(JSONFeature, _super);\n    function JSONFeature() {\n        return _super.call(this) || this;\n    }\n    /**\n     * @inheritDoc\n     */\n    JSONFeature.prototype.getType = function () {\n        return FormatType.JSON;\n    };\n    /**\n     * Read a feature.  Only works for a single feature. Use `readFeatures` to\n     * read a feature collection.\n     *\n     * @param {ArrayBuffer|Document|Node|Object|string} source Source.\n     * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n     * @return {import(\"../Feature.js\").default} Feature.\n     * @api\n     */\n    JSONFeature.prototype.readFeature = function (source, opt_options) {\n        return this.readFeatureFromObject(getObject(source), this.getReadOptions(source, opt_options));\n    };\n    /**\n     * Read all features.  Works with both a single feature and a feature\n     * collection.\n     *\n     * @param {ArrayBuffer|Document|Node|Object|string} source Source.\n     * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n     * @return {Array<import(\"../Feature.js\").default>} Features.\n     * @api\n     */\n    JSONFeature.prototype.readFeatures = function (source, opt_options) {\n        return this.readFeaturesFromObject(getObject(source), this.getReadOptions(source, opt_options));\n    };\n    /**\n     * @abstract\n     * @param {Object} object Object.\n     * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n     * @protected\n     * @return {import(\"../Feature.js\").default} Feature.\n     */\n    JSONFeature.prototype.readFeatureFromObject = function (object, opt_options) {\n        return abstract();\n    };\n    /**\n     * @abstract\n     * @param {Object} object Object.\n     * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n     * @protected\n     * @return {Array<import(\"../Feature.js\").default>} Features.\n     */\n    JSONFeature.prototype.readFeaturesFromObject = function (object, opt_options) {\n        return abstract();\n    };\n    /**\n     * Read a geometry.\n     *\n     * @param {ArrayBuffer|Document|Node|Object|string} source Source.\n     * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n     * @return {import(\"../geom/Geometry.js\").default} Geometry.\n     * @api\n     */\n    JSONFeature.prototype.readGeometry = function (source, opt_options) {\n        return this.readGeometryFromObject(getObject(source), this.getReadOptions(source, opt_options));\n    };\n    /**\n     * @abstract\n     * @param {Object} object Object.\n     * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n     * @protected\n     * @return {import(\"../geom/Geometry.js\").default} Geometry.\n     */\n    JSONFeature.prototype.readGeometryFromObject = function (object, opt_options) {\n        return abstract();\n    };\n    /**\n     * Read the projection.\n     *\n     * @param {ArrayBuffer|Document|Node|Object|string} source Source.\n     * @return {import(\"../proj/Projection.js\").default} Projection.\n     * @api\n     */\n    JSONFeature.prototype.readProjection = function (source) {\n        return this.readProjectionFromObject(getObject(source));\n    };\n    /**\n     * @abstract\n     * @param {Object} object Object.\n     * @protected\n     * @return {import(\"../proj/Projection.js\").default} Projection.\n     */\n    JSONFeature.prototype.readProjectionFromObject = function (object) {\n        return abstract();\n    };\n    /**\n     * Encode a feature as string.\n     *\n     * @param {import(\"../Feature.js\").default} feature Feature.\n     * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n     * @return {string} Encoded feature.\n     * @api\n     */\n    JSONFeature.prototype.writeFeature = function (feature, opt_options) {\n        return JSON.stringify(this.writeFeatureObject(feature, opt_options));\n    };\n    /**\n     * @abstract\n     * @param {import(\"../Feature.js\").default} feature Feature.\n     * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n     * @return {Object} Object.\n     */\n    JSONFeature.prototype.writeFeatureObject = function (feature, opt_options) {\n        return abstract();\n    };\n    /**\n     * Encode an array of features as string.\n     *\n     * @param {Array<import(\"../Feature.js\").default>} features Features.\n     * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n     * @return {string} Encoded features.\n     * @api\n     */\n    JSONFeature.prototype.writeFeatures = function (features, opt_options) {\n        return JSON.stringify(this.writeFeaturesObject(features, opt_options));\n    };\n    /**\n     * @abstract\n     * @param {Array<import(\"../Feature.js\").default>} features Features.\n     * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n     * @return {Object} Object.\n     */\n    JSONFeature.prototype.writeFeaturesObject = function (features, opt_options) {\n        return abstract();\n    };\n    /**\n     * Encode a geometry as string.\n     *\n     * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n     * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n     * @return {string} Encoded geometry.\n     * @api\n     */\n    JSONFeature.prototype.writeGeometry = function (geometry, opt_options) {\n        return JSON.stringify(this.writeGeometryObject(geometry, opt_options));\n    };\n    /**\n     * @abstract\n     * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n     * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n     * @return {Object} Object.\n     */\n    JSONFeature.prototype.writeGeometryObject = function (geometry, opt_options) {\n        return abstract();\n    };\n    return JSONFeature;\n}(FeatureFormat));\n/**\n * @param {Document|Node|Object|string} source Source.\n * @return {Object} Object.\n */\nfunction getObject(source) {\n    if (typeof source === 'string') {\n        var object = JSON.parse(source);\n        return object ? /** @type {Object} */ (object) : null;\n    }\n    else if (source !== null) {\n        return source;\n    }\n    else {\n        return null;\n    }\n}\nexport default JSONFeature;\n//# sourceMappingURL=JSONFeature.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/geom/GeometryCollection\n */\nimport { listen, unlisten } from '../events.js';\nimport EventType from '../events/EventType.js';\nimport { createOrUpdateEmpty, closestSquaredDistanceXY, extend, getCenter } from '../extent.js';\nimport Geometry from './Geometry.js';\nimport GeometryType from './GeometryType.js';\nimport { clear } from '../obj.js';\n/**\n * @classdesc\n * An array of {@link module:ol/geom/Geometry} objects.\n *\n * @api\n */\nvar GeometryCollection = /** @class */ (function (_super) {\n    __extends(GeometryCollection, _super);\n    /**\n     * @param {Array<Geometry>=} opt_geometries Geometries.\n     */\n    function GeometryCollection(opt_geometries) {\n        var _this = _super.call(this) || this;\n        /**\n         * @private\n         * @type {Array<Geometry>}\n         */\n        _this.geometries_ = opt_geometries ? opt_geometries : null;\n        _this.listenGeometriesChange_();\n        return _this;\n    }\n    /**\n     * @private\n     */\n    GeometryCollection.prototype.unlistenGeometriesChange_ = function () {\n        if (!this.geometries_) {\n            return;\n        }\n        for (var i = 0, ii = this.geometries_.length; i < ii; ++i) {\n            unlisten(this.geometries_[i], EventType.CHANGE, this.changed, this);\n        }\n    };\n    /**\n     * @private\n     */\n    GeometryCollection.prototype.listenGeometriesChange_ = function () {\n        if (!this.geometries_) {\n            return;\n        }\n        for (var i = 0, ii = this.geometries_.length; i < ii; ++i) {\n            listen(this.geometries_[i], EventType.CHANGE, this.changed, this);\n        }\n    };\n    /**\n     * Make a complete copy of the geometry.\n     * @return {!GeometryCollection} Clone.\n     * @override\n     * @api\n     */\n    GeometryCollection.prototype.clone = function () {\n        var geometryCollection = new GeometryCollection(null);\n        geometryCollection.setGeometries(this.geometries_);\n        return geometryCollection;\n    };\n    /**\n     * @inheritDoc\n     */\n    GeometryCollection.prototype.closestPointXY = function (x, y, closestPoint, minSquaredDistance) {\n        if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n            return minSquaredDistance;\n        }\n        var geometries = this.geometries_;\n        for (var i = 0, ii = geometries.length; i < ii; ++i) {\n            minSquaredDistance = geometries[i].closestPointXY(x, y, closestPoint, minSquaredDistance);\n        }\n        return minSquaredDistance;\n    };\n    /**\n     * @inheritDoc\n     */\n    GeometryCollection.prototype.containsXY = function (x, y) {\n        var geometries = this.geometries_;\n        for (var i = 0, ii = geometries.length; i < ii; ++i) {\n            if (geometries[i].containsXY(x, y)) {\n                return true;\n            }\n        }\n        return false;\n    };\n    /**\n     * @inheritDoc\n     */\n    GeometryCollection.prototype.computeExtent = function (extent) {\n        createOrUpdateEmpty(extent);\n        var geometries = this.geometries_;\n        for (var i = 0, ii = geometries.length; i < ii; ++i) {\n            extend(extent, geometries[i].getExtent());\n        }\n        return extent;\n    };\n    /**\n     * Return the geometries that make up this geometry collection.\n     * @return {Array<Geometry>} Geometries.\n     * @api\n     */\n    GeometryCollection.prototype.getGeometries = function () {\n        return cloneGeometries(this.geometries_);\n    };\n    /**\n     * @return {Array<Geometry>} Geometries.\n     */\n    GeometryCollection.prototype.getGeometriesArray = function () {\n        return this.geometries_;\n    };\n    /**\n     * @inheritDoc\n     */\n    GeometryCollection.prototype.getSimplifiedGeometry = function (squaredTolerance) {\n        if (this.simplifiedGeometryRevision != this.getRevision()) {\n            clear(this.simplifiedGeometryCache);\n            this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n            this.simplifiedGeometryRevision = this.getRevision();\n        }\n        if (squaredTolerance < 0 ||\n            (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n                squaredTolerance < this.simplifiedGeometryMaxMinSquaredTolerance)) {\n            return this;\n        }\n        var key = squaredTolerance.toString();\n        if (this.simplifiedGeometryCache.hasOwnProperty(key)) {\n            return this.simplifiedGeometryCache[key];\n        }\n        else {\n            var simplifiedGeometries = [];\n            var geometries = this.geometries_;\n            var simplified = false;\n            for (var i = 0, ii = geometries.length; i < ii; ++i) {\n                var geometry = geometries[i];\n                var simplifiedGeometry = geometry.getSimplifiedGeometry(squaredTolerance);\n                simplifiedGeometries.push(simplifiedGeometry);\n                if (simplifiedGeometry !== geometry) {\n                    simplified = true;\n                }\n            }\n            if (simplified) {\n                var simplifiedGeometryCollection = new GeometryCollection(null);\n                simplifiedGeometryCollection.setGeometriesArray(simplifiedGeometries);\n                this.simplifiedGeometryCache[key] = simplifiedGeometryCollection;\n                return simplifiedGeometryCollection;\n            }\n            else {\n                this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n                return this;\n            }\n        }\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    GeometryCollection.prototype.getType = function () {\n        return GeometryType.GEOMETRY_COLLECTION;\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    GeometryCollection.prototype.intersectsExtent = function (extent) {\n        var geometries = this.geometries_;\n        for (var i = 0, ii = geometries.length; i < ii; ++i) {\n            if (geometries[i].intersectsExtent(extent)) {\n                return true;\n            }\n        }\n        return false;\n    };\n    /**\n     * @return {boolean} Is empty.\n     */\n    GeometryCollection.prototype.isEmpty = function () {\n        return this.geometries_.length === 0;\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    GeometryCollection.prototype.rotate = function (angle, anchor) {\n        var geometries = this.geometries_;\n        for (var i = 0, ii = geometries.length; i < ii; ++i) {\n            geometries[i].rotate(angle, anchor);\n        }\n        this.changed();\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    GeometryCollection.prototype.scale = function (sx, opt_sy, opt_anchor) {\n        var anchor = opt_anchor;\n        if (!anchor) {\n            anchor = getCenter(this.getExtent());\n        }\n        var geometries = this.geometries_;\n        for (var i = 0, ii = geometries.length; i < ii; ++i) {\n            geometries[i].scale(sx, opt_sy, anchor);\n        }\n        this.changed();\n    };\n    /**\n     * Set the geometries that make up this geometry collection.\n     * @param {Array<Geometry>} geometries Geometries.\n     * @api\n     */\n    GeometryCollection.prototype.setGeometries = function (geometries) {\n        this.setGeometriesArray(cloneGeometries(geometries));\n    };\n    /**\n     * @param {Array<Geometry>} geometries Geometries.\n     */\n    GeometryCollection.prototype.setGeometriesArray = function (geometries) {\n        this.unlistenGeometriesChange_();\n        this.geometries_ = geometries;\n        this.listenGeometriesChange_();\n        this.changed();\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    GeometryCollection.prototype.applyTransform = function (transformFn) {\n        var geometries = this.geometries_;\n        for (var i = 0, ii = geometries.length; i < ii; ++i) {\n            geometries[i].applyTransform(transformFn);\n        }\n        this.changed();\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    GeometryCollection.prototype.translate = function (deltaX, deltaY) {\n        var geometries = this.geometries_;\n        for (var i = 0, ii = geometries.length; i < ii; ++i) {\n            geometries[i].translate(deltaX, deltaY);\n        }\n        this.changed();\n    };\n    /**\n     * @inheritDoc\n     */\n    GeometryCollection.prototype.disposeInternal = function () {\n        this.unlistenGeometriesChange_();\n        _super.prototype.disposeInternal.call(this);\n    };\n    return GeometryCollection;\n}(Geometry));\n/**\n * @param {Array<Geometry>} geometries Geometries.\n * @return {Array<Geometry>} Cloned geometries.\n */\nfunction cloneGeometries(geometries) {\n    var clonedGeometries = [];\n    for (var i = 0, ii = geometries.length; i < ii; ++i) {\n        clonedGeometries.push(geometries[i].clone());\n    }\n    return clonedGeometries;\n}\nexport default GeometryCollection;\n//# sourceMappingURL=GeometryCollection.js.map","/**\n * @module ol/geom/flat/interpolate\n */\nimport { binarySearch } from '../../array.js';\nimport { lerp } from '../../math.js';\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} fraction Fraction.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Destination.\n */\nexport function interpolatePoint(flatCoordinates, offset, end, stride, fraction, opt_dest) {\n    var pointX = NaN;\n    var pointY = NaN;\n    var n = (end - offset) / stride;\n    if (n === 1) {\n        pointX = flatCoordinates[offset];\n        pointY = flatCoordinates[offset + 1];\n    }\n    else if (n == 2) {\n        pointX = (1 - fraction) * flatCoordinates[offset] +\n            fraction * flatCoordinates[offset + stride];\n        pointY = (1 - fraction) * flatCoordinates[offset + 1] +\n            fraction * flatCoordinates[offset + stride + 1];\n    }\n    else if (n !== 0) {\n        var x1 = flatCoordinates[offset];\n        var y1 = flatCoordinates[offset + 1];\n        var length_1 = 0;\n        var cumulativeLengths = [0];\n        for (var i = offset + stride; i < end; i += stride) {\n            var x2 = flatCoordinates[i];\n            var y2 = flatCoordinates[i + 1];\n            length_1 += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n            cumulativeLengths.push(length_1);\n            x1 = x2;\n            y1 = y2;\n        }\n        var target = fraction * length_1;\n        var index = binarySearch(cumulativeLengths, target);\n        if (index < 0) {\n            var t = (target - cumulativeLengths[-index - 2]) /\n                (cumulativeLengths[-index - 1] - cumulativeLengths[-index - 2]);\n            var o = offset + (-index - 2) * stride;\n            pointX = lerp(flatCoordinates[o], flatCoordinates[o + stride], t);\n            pointY = lerp(flatCoordinates[o + 1], flatCoordinates[o + stride + 1], t);\n        }\n        else {\n            pointX = flatCoordinates[offset + index * stride];\n            pointY = flatCoordinates[offset + index * stride + 1];\n        }\n    }\n    if (opt_dest) {\n        opt_dest[0] = pointX;\n        opt_dest[1] = pointY;\n        return opt_dest;\n    }\n    else {\n        return [pointX, pointY];\n    }\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @return {import(\"../../coordinate.js\").Coordinate} Coordinate.\n */\nexport function lineStringCoordinateAtM(flatCoordinates, offset, end, stride, m, extrapolate) {\n    if (end == offset) {\n        return null;\n    }\n    var coordinate;\n    if (m < flatCoordinates[offset + stride - 1]) {\n        if (extrapolate) {\n            coordinate = flatCoordinates.slice(offset, offset + stride);\n            coordinate[stride - 1] = m;\n            return coordinate;\n        }\n        else {\n            return null;\n        }\n    }\n    else if (flatCoordinates[end - 1] < m) {\n        if (extrapolate) {\n            coordinate = flatCoordinates.slice(end - stride, end);\n            coordinate[stride - 1] = m;\n            return coordinate;\n        }\n        else {\n            return null;\n        }\n    }\n    // FIXME use O(1) search\n    if (m == flatCoordinates[offset + stride - 1]) {\n        return flatCoordinates.slice(offset, offset + stride);\n    }\n    var lo = offset / stride;\n    var hi = end / stride;\n    while (lo < hi) {\n        var mid = (lo + hi) >> 1;\n        if (m < flatCoordinates[(mid + 1) * stride - 1]) {\n            hi = mid;\n        }\n        else {\n            lo = mid + 1;\n        }\n    }\n    var m0 = flatCoordinates[lo * stride - 1];\n    if (m == m0) {\n        return flatCoordinates.slice((lo - 1) * stride, (lo - 1) * stride + stride);\n    }\n    var m1 = flatCoordinates[(lo + 1) * stride - 1];\n    var t = (m - m0) / (m1 - m0);\n    coordinate = [];\n    for (var i = 0; i < stride - 1; ++i) {\n        coordinate.push(lerp(flatCoordinates[(lo - 1) * stride + i], flatCoordinates[lo * stride + i], t));\n    }\n    coordinate.push(m);\n    return coordinate;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @param {boolean} interpolate Interpolate.\n * @return {import(\"../../coordinate.js\").Coordinate} Coordinate.\n */\nexport function lineStringsCoordinateAtM(flatCoordinates, offset, ends, stride, m, extrapolate, interpolate) {\n    if (interpolate) {\n        return lineStringCoordinateAtM(flatCoordinates, offset, ends[ends.length - 1], stride, m, extrapolate);\n    }\n    var coordinate;\n    if (m < flatCoordinates[stride - 1]) {\n        if (extrapolate) {\n            coordinate = flatCoordinates.slice(0, stride);\n            coordinate[stride - 1] = m;\n            return coordinate;\n        }\n        else {\n            return null;\n        }\n    }\n    if (flatCoordinates[flatCoordinates.length - 1] < m) {\n        if (extrapolate) {\n            coordinate = flatCoordinates.slice(flatCoordinates.length - stride);\n            coordinate[stride - 1] = m;\n            return coordinate;\n        }\n        else {\n            return null;\n        }\n    }\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n        var end = ends[i];\n        if (offset == end) {\n            continue;\n        }\n        if (m < flatCoordinates[offset + stride - 1]) {\n            return null;\n        }\n        else if (m <= flatCoordinates[end - 1]) {\n            return lineStringCoordinateAtM(flatCoordinates, offset, end, stride, m, false);\n        }\n        offset = end;\n    }\n    return null;\n}\n//# sourceMappingURL=interpolate.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/geom/LineString\n */\nimport { extend } from '../array.js';\nimport { closestSquaredDistanceXY } from '../extent.js';\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport { assignClosestPoint, maxSquaredDelta } from './flat/closest.js';\nimport { deflateCoordinates } from './flat/deflate.js';\nimport { inflateCoordinates } from './flat/inflate.js';\nimport { interpolatePoint, lineStringCoordinateAtM } from './flat/interpolate.js';\nimport { intersectsLineString } from './flat/intersectsextent.js';\nimport { lineStringLength } from './flat/length.js';\nimport { forEach as forEachSegment } from './flat/segments.js';\nimport { douglasPeucker } from './flat/simplify.js';\n/**\n * @classdesc\n * Linestring geometry.\n *\n * @api\n */\nvar LineString = /** @class */ (function (_super) {\n    __extends(LineString, _super);\n    /**\n     * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n     *     For internal use, flat coordinates in combination with `opt_layout` are also accepted.\n     * @param {GeometryLayout=} opt_layout Layout.\n     */\n    function LineString(coordinates, opt_layout) {\n        var _this = _super.call(this) || this;\n        /**\n         * @private\n         * @type {import(\"../coordinate.js\").Coordinate}\n         */\n        _this.flatMidpoint_ = null;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.flatMidpointRevision_ = -1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.maxDelta_ = -1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.maxDeltaRevision_ = -1;\n        if (opt_layout !== undefined && !Array.isArray(coordinates[0])) {\n            _this.setFlatCoordinates(opt_layout, /** @type {Array<number>} */ (coordinates));\n        }\n        else {\n            _this.setCoordinates(/** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (coordinates), opt_layout);\n        }\n        return _this;\n    }\n    /**\n     * Append the passed coordinate to the coordinates of the linestring.\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @api\n     */\n    LineString.prototype.appendCoordinate = function (coordinate) {\n        if (!this.flatCoordinates) {\n            this.flatCoordinates = coordinate.slice();\n        }\n        else {\n            extend(this.flatCoordinates, coordinate);\n        }\n        this.changed();\n    };\n    /**\n     * Make a complete copy of the geometry.\n     * @return {!LineString} Clone.\n     * @override\n     * @api\n     */\n    LineString.prototype.clone = function () {\n        return new LineString(this.flatCoordinates.slice(), this.layout);\n    };\n    /**\n     * @inheritDoc\n     */\n    LineString.prototype.closestPointXY = function (x, y, closestPoint, minSquaredDistance) {\n        if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n            return minSquaredDistance;\n        }\n        if (this.maxDeltaRevision_ != this.getRevision()) {\n            this.maxDelta_ = Math.sqrt(maxSquaredDelta(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, 0));\n            this.maxDeltaRevision_ = this.getRevision();\n        }\n        return assignClosestPoint(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, this.maxDelta_, false, x, y, closestPoint, minSquaredDistance);\n    };\n    /**\n     * Iterate over each segment, calling the provided callback.\n     * If the callback returns a truthy value the function returns that\n     * value immediately. Otherwise the function returns `false`.\n     *\n     * @param {function(this: S, import(\"../coordinate.js\").Coordinate, import(\"../coordinate.js\").Coordinate): T} callback Function\n     *     called for each segment.\n     * @return {T|boolean} Value.\n     * @template T,S\n     * @api\n     */\n    LineString.prototype.forEachSegment = function (callback) {\n        return forEachSegment(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, callback);\n    };\n    /**\n     * Returns the coordinate at `m` using linear interpolation, or `null` if no\n     * such coordinate exists.\n     *\n     * `opt_extrapolate` controls extrapolation beyond the range of Ms in the\n     * MultiLineString. If `opt_extrapolate` is `true` then Ms less than the first\n     * M will return the first coordinate and Ms greater than the last M will\n     * return the last coordinate.\n     *\n     * @param {number} m M.\n     * @param {boolean=} opt_extrapolate Extrapolate. Default is `false`.\n     * @return {import(\"../coordinate.js\").Coordinate} Coordinate.\n     * @api\n     */\n    LineString.prototype.getCoordinateAtM = function (m, opt_extrapolate) {\n        if (this.layout != GeometryLayout.XYM &&\n            this.layout != GeometryLayout.XYZM) {\n            return null;\n        }\n        var extrapolate = opt_extrapolate !== undefined ? opt_extrapolate : false;\n        return lineStringCoordinateAtM(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, m, extrapolate);\n    };\n    /**\n     * Return the coordinates of the linestring.\n     * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n     * @override\n     * @api\n     */\n    LineString.prototype.getCoordinates = function () {\n        return inflateCoordinates(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n    };\n    /**\n     * Return the coordinate at the provided fraction along the linestring.\n     * The `fraction` is a number between 0 and 1, where 0 is the start of the\n     * linestring and 1 is the end.\n     * @param {number} fraction Fraction.\n     * @param {import(\"../coordinate.js\").Coordinate=} opt_dest Optional coordinate whose values will\n     *     be modified. If not provided, a new coordinate will be returned.\n     * @return {import(\"../coordinate.js\").Coordinate} Coordinate of the interpolated point.\n     * @api\n     */\n    LineString.prototype.getCoordinateAt = function (fraction, opt_dest) {\n        return interpolatePoint(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, fraction, opt_dest);\n    };\n    /**\n     * Return the length of the linestring on projected plane.\n     * @return {number} Length (on projected plane).\n     * @api\n     */\n    LineString.prototype.getLength = function () {\n        return lineStringLength(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n    };\n    /**\n     * @return {Array<number>} Flat midpoint.\n     */\n    LineString.prototype.getFlatMidpoint = function () {\n        if (this.flatMidpointRevision_ != this.getRevision()) {\n            this.flatMidpoint_ = this.getCoordinateAt(0.5, this.flatMidpoint_);\n            this.flatMidpointRevision_ = this.getRevision();\n        }\n        return this.flatMidpoint_;\n    };\n    /**\n     * @inheritDoc\n     */\n    LineString.prototype.getSimplifiedGeometryInternal = function (squaredTolerance) {\n        var simplifiedFlatCoordinates = [];\n        simplifiedFlatCoordinates.length = douglasPeucker(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, squaredTolerance, simplifiedFlatCoordinates, 0);\n        return new LineString(simplifiedFlatCoordinates, GeometryLayout.XY);\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    LineString.prototype.getType = function () {\n        return GeometryType.LINE_STRING;\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    LineString.prototype.intersectsExtent = function (extent) {\n        return intersectsLineString(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, extent);\n    };\n    /**\n     * Set the coordinates of the linestring.\n     * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n     * @param {GeometryLayout=} opt_layout Layout.\n     * @override\n     * @api\n     */\n    LineString.prototype.setCoordinates = function (coordinates, opt_layout) {\n        this.setLayout(opt_layout, coordinates, 1);\n        if (!this.flatCoordinates) {\n            this.flatCoordinates = [];\n        }\n        this.flatCoordinates.length = deflateCoordinates(this.flatCoordinates, 0, coordinates, this.stride);\n        this.changed();\n    };\n    return LineString;\n}(SimpleGeometry));\nexport default LineString;\n//# sourceMappingURL=LineString.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/geom/MultiLineString\n */\nimport { extend } from '../array.js';\nimport { closestSquaredDistanceXY } from '../extent.js';\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport LineString from './LineString.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport { assignClosestArrayPoint, arrayMaxSquaredDelta } from './flat/closest.js';\nimport { deflateCoordinatesArray } from './flat/deflate.js';\nimport { inflateCoordinatesArray } from './flat/inflate.js';\nimport { interpolatePoint, lineStringsCoordinateAtM } from './flat/interpolate.js';\nimport { intersectsLineStringArray } from './flat/intersectsextent.js';\nimport { douglasPeuckerArray } from './flat/simplify.js';\n/**\n * @classdesc\n * Multi-linestring geometry.\n *\n * @api\n */\nvar MultiLineString = /** @class */ (function (_super) {\n    __extends(MultiLineString, _super);\n    /**\n     * @param {Array<Array<import(\"../coordinate.js\").Coordinate>|LineString>|Array<number>} coordinates\n     *     Coordinates or LineString geometries. (For internal use, flat coordinates in\n     *     combination with `opt_layout` and `opt_ends` are also accepted.)\n     * @param {GeometryLayout=} opt_layout Layout.\n     * @param {Array<number>=} opt_ends Flat coordinate ends for internal use.\n     */\n    function MultiLineString(coordinates, opt_layout, opt_ends) {\n        var _this = _super.call(this) || this;\n        /**\n         * @type {Array<number>}\n         * @private\n         */\n        _this.ends_ = [];\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.maxDelta_ = -1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.maxDeltaRevision_ = -1;\n        if (Array.isArray(coordinates[0])) {\n            _this.setCoordinates(/** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */ (coordinates), opt_layout);\n        }\n        else if (opt_layout !== undefined && opt_ends) {\n            _this.setFlatCoordinates(opt_layout, /** @type {Array<number>} */ (coordinates));\n            _this.ends_ = opt_ends;\n        }\n        else {\n            var layout = _this.getLayout();\n            var lineStrings = /** @type {Array<LineString>} */ (coordinates);\n            var flatCoordinates = [];\n            var ends = [];\n            for (var i = 0, ii = lineStrings.length; i < ii; ++i) {\n                var lineString = lineStrings[i];\n                if (i === 0) {\n                    layout = lineString.getLayout();\n                }\n                extend(flatCoordinates, lineString.getFlatCoordinates());\n                ends.push(flatCoordinates.length);\n            }\n            _this.setFlatCoordinates(layout, flatCoordinates);\n            _this.ends_ = ends;\n        }\n        return _this;\n    }\n    /**\n     * Append the passed linestring to the multilinestring.\n     * @param {LineString} lineString LineString.\n     * @api\n     */\n    MultiLineString.prototype.appendLineString = function (lineString) {\n        if (!this.flatCoordinates) {\n            this.flatCoordinates = lineString.getFlatCoordinates().slice();\n        }\n        else {\n            extend(this.flatCoordinates, lineString.getFlatCoordinates().slice());\n        }\n        this.ends_.push(this.flatCoordinates.length);\n        this.changed();\n    };\n    /**\n     * Make a complete copy of the geometry.\n     * @return {!MultiLineString} Clone.\n     * @override\n     * @api\n     */\n    MultiLineString.prototype.clone = function () {\n        return new MultiLineString(this.flatCoordinates.slice(), this.layout, this.ends_.slice());\n    };\n    /**\n     * @inheritDoc\n     */\n    MultiLineString.prototype.closestPointXY = function (x, y, closestPoint, minSquaredDistance) {\n        if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n            return minSquaredDistance;\n        }\n        if (this.maxDeltaRevision_ != this.getRevision()) {\n            this.maxDelta_ = Math.sqrt(arrayMaxSquaredDelta(this.flatCoordinates, 0, this.ends_, this.stride, 0));\n            this.maxDeltaRevision_ = this.getRevision();\n        }\n        return assignClosestArrayPoint(this.flatCoordinates, 0, this.ends_, this.stride, this.maxDelta_, false, x, y, closestPoint, minSquaredDistance);\n    };\n    /**\n     * Returns the coordinate at `m` using linear interpolation, or `null` if no\n     * such coordinate exists.\n     *\n     * `opt_extrapolate` controls extrapolation beyond the range of Ms in the\n     * MultiLineString. If `opt_extrapolate` is `true` then Ms less than the first\n     * M will return the first coordinate and Ms greater than the last M will\n     * return the last coordinate.\n     *\n     * `opt_interpolate` controls interpolation between consecutive LineStrings\n     * within the MultiLineString. If `opt_interpolate` is `true` the coordinates\n     * will be linearly interpolated between the last coordinate of one LineString\n     * and the first coordinate of the next LineString.  If `opt_interpolate` is\n     * `false` then the function will return `null` for Ms falling between\n     * LineStrings.\n     *\n     * @param {number} m M.\n     * @param {boolean=} opt_extrapolate Extrapolate. Default is `false`.\n     * @param {boolean=} opt_interpolate Interpolate. Default is `false`.\n     * @return {import(\"../coordinate.js\").Coordinate} Coordinate.\n     * @api\n     */\n    MultiLineString.prototype.getCoordinateAtM = function (m, opt_extrapolate, opt_interpolate) {\n        if ((this.layout != GeometryLayout.XYM &&\n            this.layout != GeometryLayout.XYZM) ||\n            this.flatCoordinates.length === 0) {\n            return null;\n        }\n        var extrapolate = opt_extrapolate !== undefined ? opt_extrapolate : false;\n        var interpolate = opt_interpolate !== undefined ? opt_interpolate : false;\n        return lineStringsCoordinateAtM(this.flatCoordinates, 0, this.ends_, this.stride, m, extrapolate, interpolate);\n    };\n    /**\n     * Return the coordinates of the multilinestring.\n     * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\n     * @override\n     * @api\n     */\n    MultiLineString.prototype.getCoordinates = function () {\n        return inflateCoordinatesArray(this.flatCoordinates, 0, this.ends_, this.stride);\n    };\n    /**\n     * @return {Array<number>} Ends.\n     */\n    MultiLineString.prototype.getEnds = function () {\n        return this.ends_;\n    };\n    /**\n     * Return the linestring at the specified index.\n     * @param {number} index Index.\n     * @return {LineString} LineString.\n     * @api\n     */\n    MultiLineString.prototype.getLineString = function (index) {\n        if (index < 0 || this.ends_.length <= index) {\n            return null;\n        }\n        return new LineString(this.flatCoordinates.slice(index === 0 ? 0 : this.ends_[index - 1], this.ends_[index]), this.layout);\n    };\n    /**\n     * Return the linestrings of this multilinestring.\n     * @return {Array<LineString>} LineStrings.\n     * @api\n     */\n    MultiLineString.prototype.getLineStrings = function () {\n        var flatCoordinates = this.flatCoordinates;\n        var ends = this.ends_;\n        var layout = this.layout;\n        /** @type {Array<LineString>} */\n        var lineStrings = [];\n        var offset = 0;\n        for (var i = 0, ii = ends.length; i < ii; ++i) {\n            var end = ends[i];\n            var lineString = new LineString(flatCoordinates.slice(offset, end), layout);\n            lineStrings.push(lineString);\n            offset = end;\n        }\n        return lineStrings;\n    };\n    /**\n     * @return {Array<number>} Flat midpoints.\n     */\n    MultiLineString.prototype.getFlatMidpoints = function () {\n        var midpoints = [];\n        var flatCoordinates = this.flatCoordinates;\n        var offset = 0;\n        var ends = this.ends_;\n        var stride = this.stride;\n        for (var i = 0, ii = ends.length; i < ii; ++i) {\n            var end = ends[i];\n            var midpoint = interpolatePoint(flatCoordinates, offset, end, stride, 0.5);\n            extend(midpoints, midpoint);\n            offset = end;\n        }\n        return midpoints;\n    };\n    /**\n     * @inheritDoc\n     */\n    MultiLineString.prototype.getSimplifiedGeometryInternal = function (squaredTolerance) {\n        var simplifiedFlatCoordinates = [];\n        var simplifiedEnds = [];\n        simplifiedFlatCoordinates.length = douglasPeuckerArray(this.flatCoordinates, 0, this.ends_, this.stride, squaredTolerance, simplifiedFlatCoordinates, 0, simplifiedEnds);\n        return new MultiLineString(simplifiedFlatCoordinates, GeometryLayout.XY, simplifiedEnds);\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    MultiLineString.prototype.getType = function () {\n        return GeometryType.MULTI_LINE_STRING;\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    MultiLineString.prototype.intersectsExtent = function (extent) {\n        return intersectsLineStringArray(this.flatCoordinates, 0, this.ends_, this.stride, extent);\n    };\n    /**\n     * Set the coordinates of the multilinestring.\n     * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\n     * @param {GeometryLayout=} opt_layout Layout.\n     * @override\n     * @api\n     */\n    MultiLineString.prototype.setCoordinates = function (coordinates, opt_layout) {\n        this.setLayout(opt_layout, coordinates, 2);\n        if (!this.flatCoordinates) {\n            this.flatCoordinates = [];\n        }\n        var ends = deflateCoordinatesArray(this.flatCoordinates, 0, coordinates, this.stride, this.ends_);\n        this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n        this.changed();\n    };\n    return MultiLineString;\n}(SimpleGeometry));\nexport default MultiLineString;\n//# sourceMappingURL=MultiLineString.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/geom/MultiPoint\n */\nimport { extend } from '../array.js';\nimport { closestSquaredDistanceXY, containsXY } from '../extent.js';\nimport GeometryType from './GeometryType.js';\nimport Point from './Point.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport { deflateCoordinates } from './flat/deflate.js';\nimport { inflateCoordinates } from './flat/inflate.js';\nimport { squaredDistance as squaredDx } from '../math.js';\n/**\n * @classdesc\n * Multi-point geometry.\n *\n * @api\n */\nvar MultiPoint = /** @class */ (function (_super) {\n    __extends(MultiPoint, _super);\n    /**\n     * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n     *     For internal use, flat coordinates in combination with `opt_layout` are also accepted.\n     * @param {import(\"./GeometryLayout.js\").default=} opt_layout Layout.\n     */\n    function MultiPoint(coordinates, opt_layout) {\n        var _this = _super.call(this) || this;\n        if (opt_layout && !Array.isArray(coordinates[0])) {\n            _this.setFlatCoordinates(opt_layout, /** @type {Array<number>} */ (coordinates));\n        }\n        else {\n            _this.setCoordinates(/** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (coordinates), opt_layout);\n        }\n        return _this;\n    }\n    /**\n     * Append the passed point to this multipoint.\n     * @param {Point} point Point.\n     * @api\n     */\n    MultiPoint.prototype.appendPoint = function (point) {\n        if (!this.flatCoordinates) {\n            this.flatCoordinates = point.getFlatCoordinates().slice();\n        }\n        else {\n            extend(this.flatCoordinates, point.getFlatCoordinates());\n        }\n        this.changed();\n    };\n    /**\n     * Make a complete copy of the geometry.\n     * @return {!MultiPoint} Clone.\n     * @override\n     * @api\n     */\n    MultiPoint.prototype.clone = function () {\n        var multiPoint = new MultiPoint(this.flatCoordinates.slice(), this.layout);\n        return multiPoint;\n    };\n    /**\n     * @inheritDoc\n     */\n    MultiPoint.prototype.closestPointXY = function (x, y, closestPoint, minSquaredDistance) {\n        if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n            return minSquaredDistance;\n        }\n        var flatCoordinates = this.flatCoordinates;\n        var stride = this.stride;\n        for (var i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n            var squaredDistance = squaredDx(x, y, flatCoordinates[i], flatCoordinates[i + 1]);\n            if (squaredDistance < minSquaredDistance) {\n                minSquaredDistance = squaredDistance;\n                for (var j = 0; j < stride; ++j) {\n                    closestPoint[j] = flatCoordinates[i + j];\n                }\n                closestPoint.length = stride;\n            }\n        }\n        return minSquaredDistance;\n    };\n    /**\n     * Return the coordinates of the multipoint.\n     * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n     * @override\n     * @api\n     */\n    MultiPoint.prototype.getCoordinates = function () {\n        return inflateCoordinates(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n    };\n    /**\n     * Return the point at the specified index.\n     * @param {number} index Index.\n     * @return {Point} Point.\n     * @api\n     */\n    MultiPoint.prototype.getPoint = function (index) {\n        var n = !this.flatCoordinates ? 0 : this.flatCoordinates.length / this.stride;\n        if (index < 0 || n <= index) {\n            return null;\n        }\n        return new Point(this.flatCoordinates.slice(index * this.stride, (index + 1) * this.stride), this.layout);\n    };\n    /**\n     * Return the points of this multipoint.\n     * @return {Array<Point>} Points.\n     * @api\n     */\n    MultiPoint.prototype.getPoints = function () {\n        var flatCoordinates = this.flatCoordinates;\n        var layout = this.layout;\n        var stride = this.stride;\n        /** @type {Array<Point>} */\n        var points = [];\n        for (var i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n            var point = new Point(flatCoordinates.slice(i, i + stride), layout);\n            points.push(point);\n        }\n        return points;\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    MultiPoint.prototype.getType = function () {\n        return GeometryType.MULTI_POINT;\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    MultiPoint.prototype.intersectsExtent = function (extent) {\n        var flatCoordinates = this.flatCoordinates;\n        var stride = this.stride;\n        for (var i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n            var x = flatCoordinates[i];\n            var y = flatCoordinates[i + 1];\n            if (containsXY(extent, x, y)) {\n                return true;\n            }\n        }\n        return false;\n    };\n    /**\n     * Set the coordinates of the multipoint.\n     * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n     * @param {import(\"./GeometryLayout.js\").default=} opt_layout Layout.\n     * @override\n     * @api\n     */\n    MultiPoint.prototype.setCoordinates = function (coordinates, opt_layout) {\n        this.setLayout(opt_layout, coordinates, 1);\n        if (!this.flatCoordinates) {\n            this.flatCoordinates = [];\n        }\n        this.flatCoordinates.length = deflateCoordinates(this.flatCoordinates, 0, coordinates, this.stride);\n        this.changed();\n    };\n    return MultiPoint;\n}(SimpleGeometry));\nexport default MultiPoint;\n//# sourceMappingURL=MultiPoint.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/geom/MultiPolygon\n */\nimport { extend } from '../array.js';\nimport { closestSquaredDistanceXY } from '../extent.js';\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport MultiPoint from './MultiPoint.js';\nimport Polygon from './Polygon.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport { linearRingss as linearRingssArea } from './flat/area.js';\nimport { linearRingss as linearRingssCenter } from './flat/center.js';\nimport { assignClosestMultiArrayPoint, multiArrayMaxSquaredDelta } from './flat/closest.js';\nimport { linearRingssContainsXY } from './flat/contains.js';\nimport { deflateMultiCoordinatesArray } from './flat/deflate.js';\nimport { inflateMultiCoordinatesArray } from './flat/inflate.js';\nimport { getInteriorPointsOfMultiArray } from './flat/interiorpoint.js';\nimport { intersectsLinearRingMultiArray } from './flat/intersectsextent.js';\nimport { linearRingssAreOriented, orientLinearRingsArray } from './flat/orient.js';\nimport { quantizeMultiArray } from './flat/simplify.js';\n/**\n * @classdesc\n * Multi-polygon geometry.\n *\n * @api\n */\nvar MultiPolygon = /** @class */ (function (_super) {\n    __extends(MultiPolygon, _super);\n    /**\n     * @param {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>|Polygon>|Array<number>} coordinates Coordinates.\n     *     For internal use, flat coordinates in combination with `opt_layout` and `opt_endss` are also accepted.\n     * @param {GeometryLayout=} opt_layout Layout.\n     * @param {Array<Array<number>>=} opt_endss Array of ends for internal use with flat coordinates.\n     */\n    function MultiPolygon(coordinates, opt_layout, opt_endss) {\n        var _this = _super.call(this) || this;\n        /**\n         * @type {Array<Array<number>>}\n         * @private\n         */\n        _this.endss_ = [];\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.flatInteriorPointsRevision_ = -1;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        _this.flatInteriorPoints_ = null;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.maxDelta_ = -1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.maxDeltaRevision_ = -1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.orientedRevision_ = -1;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        _this.orientedFlatCoordinates_ = null;\n        if (!opt_endss && !Array.isArray(coordinates[0])) {\n            var layout = _this.getLayout();\n            var polygons = /** @type {Array<Polygon>} */ (coordinates);\n            var flatCoordinates = [];\n            var endss = [];\n            for (var i = 0, ii = polygons.length; i < ii; ++i) {\n                var polygon = polygons[i];\n                if (i === 0) {\n                    layout = polygon.getLayout();\n                }\n                var offset = flatCoordinates.length;\n                var ends = polygon.getEnds();\n                for (var j = 0, jj = ends.length; j < jj; ++j) {\n                    ends[j] += offset;\n                }\n                extend(flatCoordinates, polygon.getFlatCoordinates());\n                endss.push(ends);\n            }\n            opt_layout = layout;\n            coordinates = flatCoordinates;\n            opt_endss = endss;\n        }\n        if (opt_layout !== undefined && opt_endss) {\n            _this.setFlatCoordinates(opt_layout, /** @type {Array<number>} */ (coordinates));\n            _this.endss_ = opt_endss;\n        }\n        else {\n            _this.setCoordinates(/** @type {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} */ (coordinates), opt_layout);\n        }\n        return _this;\n    }\n    /**\n     * Append the passed polygon to this multipolygon.\n     * @param {Polygon} polygon Polygon.\n     * @api\n     */\n    MultiPolygon.prototype.appendPolygon = function (polygon) {\n        /** @type {Array<number>} */\n        var ends;\n        if (!this.flatCoordinates) {\n            this.flatCoordinates = polygon.getFlatCoordinates().slice();\n            ends = polygon.getEnds().slice();\n            this.endss_.push();\n        }\n        else {\n            var offset = this.flatCoordinates.length;\n            extend(this.flatCoordinates, polygon.getFlatCoordinates());\n            ends = polygon.getEnds().slice();\n            for (var i = 0, ii = ends.length; i < ii; ++i) {\n                ends[i] += offset;\n            }\n        }\n        this.endss_.push(ends);\n        this.changed();\n    };\n    /**\n     * Make a complete copy of the geometry.\n     * @return {!MultiPolygon} Clone.\n     * @override\n     * @api\n     */\n    MultiPolygon.prototype.clone = function () {\n        var len = this.endss_.length;\n        var newEndss = new Array(len);\n        for (var i = 0; i < len; ++i) {\n            newEndss[i] = this.endss_[i].slice();\n        }\n        return new MultiPolygon(this.flatCoordinates.slice(), this.layout, newEndss);\n    };\n    /**\n     * @inheritDoc\n     */\n    MultiPolygon.prototype.closestPointXY = function (x, y, closestPoint, minSquaredDistance) {\n        if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n            return minSquaredDistance;\n        }\n        if (this.maxDeltaRevision_ != this.getRevision()) {\n            this.maxDelta_ = Math.sqrt(multiArrayMaxSquaredDelta(this.flatCoordinates, 0, this.endss_, this.stride, 0));\n            this.maxDeltaRevision_ = this.getRevision();\n        }\n        return assignClosestMultiArrayPoint(this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride, this.maxDelta_, true, x, y, closestPoint, minSquaredDistance);\n    };\n    /**\n     * @inheritDoc\n     */\n    MultiPolygon.prototype.containsXY = function (x, y) {\n        return linearRingssContainsXY(this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride, x, y);\n    };\n    /**\n     * Return the area of the multipolygon on projected plane.\n     * @return {number} Area (on projected plane).\n     * @api\n     */\n    MultiPolygon.prototype.getArea = function () {\n        return linearRingssArea(this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride);\n    };\n    /**\n     * Get the coordinate array for this geometry.  This array has the structure\n     * of a GeoJSON coordinate array for multi-polygons.\n     *\n     * @param {boolean=} opt_right Orient coordinates according to the right-hand\n     *     rule (counter-clockwise for exterior and clockwise for interior rings).\n     *     If `false`, coordinates will be oriented according to the left-hand rule\n     *     (clockwise for exterior and counter-clockwise for interior rings).\n     *     By default, coordinate orientation will depend on how the geometry was\n     *     constructed.\n     * @return {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} Coordinates.\n     * @override\n     * @api\n     */\n    MultiPolygon.prototype.getCoordinates = function (opt_right) {\n        var flatCoordinates;\n        if (opt_right !== undefined) {\n            flatCoordinates = this.getOrientedFlatCoordinates().slice();\n            orientLinearRingsArray(flatCoordinates, 0, this.endss_, this.stride, opt_right);\n        }\n        else {\n            flatCoordinates = this.flatCoordinates;\n        }\n        return inflateMultiCoordinatesArray(flatCoordinates, 0, this.endss_, this.stride);\n    };\n    /**\n     * @return {Array<Array<number>>} Endss.\n     */\n    MultiPolygon.prototype.getEndss = function () {\n        return this.endss_;\n    };\n    /**\n     * @return {Array<number>} Flat interior points.\n     */\n    MultiPolygon.prototype.getFlatInteriorPoints = function () {\n        if (this.flatInteriorPointsRevision_ != this.getRevision()) {\n            var flatCenters = linearRingssCenter(this.flatCoordinates, 0, this.endss_, this.stride);\n            this.flatInteriorPoints_ = getInteriorPointsOfMultiArray(this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride, flatCenters);\n            this.flatInteriorPointsRevision_ = this.getRevision();\n        }\n        return this.flatInteriorPoints_;\n    };\n    /**\n     * Return the interior points as {@link module:ol/geom/MultiPoint multipoint}.\n     * @return {MultiPoint} Interior points as XYM coordinates, where M is\n     * the length of the horizontal intersection that the point belongs to.\n     * @api\n     */\n    MultiPolygon.prototype.getInteriorPoints = function () {\n        return new MultiPoint(this.getFlatInteriorPoints().slice(), GeometryLayout.XYM);\n    };\n    /**\n     * @return {Array<number>} Oriented flat coordinates.\n     */\n    MultiPolygon.prototype.getOrientedFlatCoordinates = function () {\n        if (this.orientedRevision_ != this.getRevision()) {\n            var flatCoordinates = this.flatCoordinates;\n            if (linearRingssAreOriented(flatCoordinates, 0, this.endss_, this.stride)) {\n                this.orientedFlatCoordinates_ = flatCoordinates;\n            }\n            else {\n                this.orientedFlatCoordinates_ = flatCoordinates.slice();\n                this.orientedFlatCoordinates_.length =\n                    orientLinearRingsArray(this.orientedFlatCoordinates_, 0, this.endss_, this.stride);\n            }\n            this.orientedRevision_ = this.getRevision();\n        }\n        return this.orientedFlatCoordinates_;\n    };\n    /**\n     * @inheritDoc\n     */\n    MultiPolygon.prototype.getSimplifiedGeometryInternal = function (squaredTolerance) {\n        var simplifiedFlatCoordinates = [];\n        var simplifiedEndss = [];\n        simplifiedFlatCoordinates.length = quantizeMultiArray(this.flatCoordinates, 0, this.endss_, this.stride, Math.sqrt(squaredTolerance), simplifiedFlatCoordinates, 0, simplifiedEndss);\n        return new MultiPolygon(simplifiedFlatCoordinates, GeometryLayout.XY, simplifiedEndss);\n    };\n    /**\n     * Return the polygon at the specified index.\n     * @param {number} index Index.\n     * @return {Polygon} Polygon.\n     * @api\n     */\n    MultiPolygon.prototype.getPolygon = function (index) {\n        if (index < 0 || this.endss_.length <= index) {\n            return null;\n        }\n        var offset;\n        if (index === 0) {\n            offset = 0;\n        }\n        else {\n            var prevEnds = this.endss_[index - 1];\n            offset = prevEnds[prevEnds.length - 1];\n        }\n        var ends = this.endss_[index].slice();\n        var end = ends[ends.length - 1];\n        if (offset !== 0) {\n            for (var i = 0, ii = ends.length; i < ii; ++i) {\n                ends[i] -= offset;\n            }\n        }\n        return new Polygon(this.flatCoordinates.slice(offset, end), this.layout, ends);\n    };\n    /**\n     * Return the polygons of this multipolygon.\n     * @return {Array<Polygon>} Polygons.\n     * @api\n     */\n    MultiPolygon.prototype.getPolygons = function () {\n        var layout = this.layout;\n        var flatCoordinates = this.flatCoordinates;\n        var endss = this.endss_;\n        var polygons = [];\n        var offset = 0;\n        for (var i = 0, ii = endss.length; i < ii; ++i) {\n            var ends = endss[i].slice();\n            var end = ends[ends.length - 1];\n            if (offset !== 0) {\n                for (var j = 0, jj = ends.length; j < jj; ++j) {\n                    ends[j] -= offset;\n                }\n            }\n            var polygon = new Polygon(flatCoordinates.slice(offset, end), layout, ends);\n            polygons.push(polygon);\n            offset = end;\n        }\n        return polygons;\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    MultiPolygon.prototype.getType = function () {\n        return GeometryType.MULTI_POLYGON;\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    MultiPolygon.prototype.intersectsExtent = function (extent) {\n        return intersectsLinearRingMultiArray(this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride, extent);\n    };\n    /**\n     * Set the coordinates of the multipolygon.\n     * @param {!Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} coordinates Coordinates.\n     * @param {GeometryLayout=} opt_layout Layout.\n     * @override\n     * @api\n     */\n    MultiPolygon.prototype.setCoordinates = function (coordinates, opt_layout) {\n        this.setLayout(opt_layout, coordinates, 3);\n        if (!this.flatCoordinates) {\n            this.flatCoordinates = [];\n        }\n        var endss = deflateMultiCoordinatesArray(this.flatCoordinates, 0, coordinates, this.stride, this.endss_);\n        if (endss.length === 0) {\n            this.flatCoordinates.length = 0;\n        }\n        else {\n            var lastEnds = endss[endss.length - 1];\n            this.flatCoordinates.length = lastEnds.length === 0 ?\n                0 : lastEnds[lastEnds.length - 1];\n        }\n        this.changed();\n    };\n    return MultiPolygon;\n}(SimpleGeometry));\nexport default MultiPolygon;\n//# sourceMappingURL=MultiPolygon.js.map","/**\n * @module ol/geom/flat/center\n */\nimport { createEmpty, createOrUpdateFromFlatCoordinates } from '../../extent.js';\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {Array<number>} Flat centers.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n    var flatCenters = [];\n    var extent = createEmpty();\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        extent = createOrUpdateFromFlatCoordinates(flatCoordinates, offset, ends[0], stride);\n        flatCenters.push((extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2);\n        offset = ends[ends.length - 1];\n    }\n    return flatCenters;\n}\n//# sourceMappingURL=center.js.map","/**\n * @module ol/format/GeoJSON\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { assert } from '../asserts.js';\nimport Feature from '../Feature.js';\nimport { transformGeometryWithOptions } from './Feature.js';\nimport JSONFeature from './JSONFeature.js';\nimport GeometryCollection from '../geom/GeometryCollection.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport { assign, isEmpty } from '../obj.js';\nimport { get as getProjection } from '../proj.js';\nimport GeometryType from '../geom/GeometryType.js';\n/**\n * @typedef {import(\"geojson\").GeoJSON} GeoJSONObject\n * @typedef {import(\"geojson\").Feature} GeoJSONFeature\n * @typedef {import(\"geojson\").FeatureCollection} GeoJSONFeatureCollection\n * @typedef {import(\"geojson\").Geometry} GeoJSONGeometry\n * @typedef {import(\"geojson\").Point} GeoJSONPoint\n * @typedef {import(\"geojson\").LineString} GeoJSONLineString\n * @typedef {import(\"geojson\").Polygon} GeoJSONPolygon\n * @typedef {import(\"geojson\").MultiPoint} GeoJSONMultiPoint\n * @typedef {import(\"geojson\").MultiLineString} GeoJSONMultiLineString\n * @typedef {import(\"geojson\").MultiPolygon} GeoJSONMultiPolygon\n * @typedef {import(\"geojson\").GeometryCollection} GeoJSONGeometryCollection\n */\n/**\n * @typedef {Object} Options\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection='EPSG:4326'] Default data projection.\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection for features read or\n * written by the format.  Options passed to read or write methods will take precedence.\n * @property {string} [geometryName] Geometry name to use when creating features.\n * @property {boolean} [extractGeometryName=false] Certain GeoJSON providers include\n * the geometry_name field in the feature GeoJSON. If set to `true` the GeoJSON reader\n * will look for that field to set the geometry name. If both this field is set to `true`\n * and a `geometryName` is provided, the `geometryName` will take precedence.\n */\n/**\n * @classdesc\n * Feature format for reading and writing data in the GeoJSON format.\n *\n  * @api\n */\nvar GeoJSON = /** @class */ (function (_super) {\n    __extends(GeoJSON, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function GeoJSON(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        _this = _super.call(this) || this;\n        /**\n         * @inheritDoc\n         */\n        _this.dataProjection = getProjection(options.dataProjection ?\n            options.dataProjection : 'EPSG:4326');\n        if (options.featureProjection) {\n            _this.defaultFeatureProjection = getProjection(options.featureProjection);\n        }\n        /**\n         * Name of the geometry attribute for features.\n         * @type {string|undefined}\n         * @private\n         */\n        _this.geometryName_ = options.geometryName;\n        /**\n         * Look for the geometry name in the feature GeoJSON\n         * @type {boolean|undefined}\n         * @private\n         */\n        _this.extractGeometryName_ = options.extractGeometryName;\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    GeoJSON.prototype.readFeatureFromObject = function (object, opt_options) {\n        /**\n         * @type {GeoJSONFeature}\n         */\n        var geoJSONFeature = null;\n        if (object['type'] === 'Feature') {\n            geoJSONFeature = /** @type {GeoJSONFeature} */ (object);\n        }\n        else {\n            geoJSONFeature = {\n                'type': 'Feature',\n                'geometry': /** @type {GeoJSONGeometry} */ (object),\n                'properties': null\n            };\n        }\n        var geometry = readGeometry(geoJSONFeature['geometry'], opt_options);\n        var feature = new Feature();\n        if (this.geometryName_) {\n            feature.setGeometryName(this.geometryName_);\n        }\n        else if (this.extractGeometryName_ && 'geometry_name' in geoJSONFeature !== undefined) {\n            feature.setGeometryName(geoJSONFeature['geometry_name']);\n        }\n        feature.setGeometry(geometry);\n        if ('id' in geoJSONFeature) {\n            feature.setId(geoJSONFeature['id']);\n        }\n        if (geoJSONFeature['properties']) {\n            feature.setProperties(geoJSONFeature['properties'], true);\n        }\n        return feature;\n    };\n    /**\n     * @inheritDoc\n     */\n    GeoJSON.prototype.readFeaturesFromObject = function (object, opt_options) {\n        var geoJSONObject = /** @type {GeoJSONObject} */ (object);\n        /** @type {Array<import(\"../Feature.js\").default>} */\n        var features = null;\n        if (geoJSONObject['type'] === 'FeatureCollection') {\n            var geoJSONFeatureCollection = /** @type {GeoJSONFeatureCollection} */ (object);\n            features = [];\n            var geoJSONFeatures = geoJSONFeatureCollection['features'];\n            for (var i = 0, ii = geoJSONFeatures.length; i < ii; ++i) {\n                features.push(this.readFeatureFromObject(geoJSONFeatures[i], opt_options));\n            }\n        }\n        else {\n            features = [this.readFeatureFromObject(object, opt_options)];\n        }\n        return features;\n    };\n    /**\n     * @inheritDoc\n     */\n    GeoJSON.prototype.readGeometryFromObject = function (object, opt_options) {\n        return readGeometry(/** @type {GeoJSONGeometry} */ (object), opt_options);\n    };\n    /**\n     * @inheritDoc\n     */\n    GeoJSON.prototype.readProjectionFromObject = function (object) {\n        var crs = object['crs'];\n        var projection;\n        if (crs) {\n            if (crs['type'] == 'name') {\n                projection = getProjection(crs['properties']['name']);\n            }\n            else {\n                assert(false, 36); // Unknown SRS type\n            }\n        }\n        else {\n            projection = this.dataProjection;\n        }\n        return (\n        /** @type {import(\"../proj/Projection.js\").default} */ (projection));\n    };\n    /**\n     * Encode a feature as a GeoJSON Feature object.\n     *\n     * @param {import(\"../Feature.js\").default} feature Feature.\n     * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n     * @return {GeoJSONFeature} Object.\n     * @override\n     * @api\n     */\n    GeoJSON.prototype.writeFeatureObject = function (feature, opt_options) {\n        opt_options = this.adaptOptions(opt_options);\n        /** @type {GeoJSONFeature} */\n        var object = {\n            'type': 'Feature',\n            geometry: null,\n            properties: null\n        };\n        var id = feature.getId();\n        if (id !== undefined) {\n            object.id = id;\n        }\n        var geometry = feature.getGeometry();\n        if (geometry) {\n            object.geometry = writeGeometry(geometry, opt_options);\n        }\n        var properties = feature.getProperties();\n        delete properties[feature.getGeometryName()];\n        if (!isEmpty(properties)) {\n            object.properties = properties;\n        }\n        return object;\n    };\n    /**\n     * Encode an array of features as a GeoJSON object.\n     *\n     * @param {Array<import(\"../Feature.js\").default>} features Features.\n     * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n     * @return {GeoJSONFeatureCollection} GeoJSON Object.\n     * @override\n     * @api\n     */\n    GeoJSON.prototype.writeFeaturesObject = function (features, opt_options) {\n        opt_options = this.adaptOptions(opt_options);\n        var objects = [];\n        for (var i = 0, ii = features.length; i < ii; ++i) {\n            objects.push(this.writeFeatureObject(features[i], opt_options));\n        }\n        return {\n            type: 'FeatureCollection',\n            features: objects\n        };\n    };\n    /**\n     * Encode a geometry as a GeoJSON object.\n     *\n     * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n     * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n     * @return {GeoJSONGeometry|GeoJSONGeometryCollection} Object.\n     * @override\n     * @api\n     */\n    GeoJSON.prototype.writeGeometryObject = function (geometry, opt_options) {\n        return writeGeometry(geometry, this.adaptOptions(opt_options));\n    };\n    return GeoJSON;\n}(JSONFeature));\n/**\n * @param {GeoJSONGeometry|GeoJSONGeometryCollection} object Object.\n * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n * @return {import(\"../geom/Geometry.js\").default} Geometry.\n */\nfunction readGeometry(object, opt_options) {\n    if (!object) {\n        return null;\n    }\n    /**\n     * @type {import(\"../geom/Geometry.js\").default}\n     */\n    var geometry;\n    switch (object['type']) {\n        case GeometryType.POINT: {\n            geometry = readPointGeometry(/** @type {GeoJSONPoint} */ (object));\n            break;\n        }\n        case GeometryType.LINE_STRING: {\n            geometry = readLineStringGeometry(/** @type {GeoJSONLineString} */ (object));\n            break;\n        }\n        case GeometryType.POLYGON: {\n            geometry = readPolygonGeometry(/** @type {GeoJSONPolygon} */ (object));\n            break;\n        }\n        case GeometryType.MULTI_POINT: {\n            geometry = readMultiPointGeometry(/** @type {GeoJSONMultiPoint} */ (object));\n            break;\n        }\n        case GeometryType.MULTI_LINE_STRING: {\n            geometry = readMultiLineStringGeometry(/** @type {GeoJSONMultiLineString} */ (object));\n            break;\n        }\n        case GeometryType.MULTI_POLYGON: {\n            geometry = readMultiPolygonGeometry(/** @type {GeoJSONMultiPolygon} */ (object));\n            break;\n        }\n        case GeometryType.GEOMETRY_COLLECTION: {\n            geometry = readGeometryCollectionGeometry(/** @type {GeoJSONGeometryCollection} */ (object));\n            break;\n        }\n        default: {\n            throw new Error('Unsupported GeoJSON type: ' + object.type);\n        }\n    }\n    return transformGeometryWithOptions(geometry, false, opt_options);\n}\n/**\n * @param {GeoJSONGeometryCollection} object Object.\n * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n * @return {GeometryCollection} Geometry collection.\n */\nfunction readGeometryCollectionGeometry(object, opt_options) {\n    var geometries = object['geometries'].map(\n    /**\n     * @param {GeoJSONGeometry} geometry Geometry.\n     * @return {import(\"../geom/Geometry.js\").default} geometry Geometry.\n     */\n    function (geometry) {\n        return readGeometry(geometry, opt_options);\n    });\n    return new GeometryCollection(geometries);\n}\n/**\n * @param {GeoJSONPoint} object Object.\n * @return {Point} Point.\n */\nfunction readPointGeometry(object) {\n    return new Point(object['coordinates']);\n}\n/**\n * @param {GeoJSONLineString} object Object.\n * @return {LineString} LineString.\n */\nfunction readLineStringGeometry(object) {\n    return new LineString(object['coordinates']);\n}\n/**\n * @param {GeoJSONMultiLineString} object Object.\n * @return {MultiLineString} MultiLineString.\n */\nfunction readMultiLineStringGeometry(object) {\n    return new MultiLineString(object['coordinates']);\n}\n/**\n * @param {GeoJSONMultiPoint} object Object.\n * @return {MultiPoint} MultiPoint.\n */\nfunction readMultiPointGeometry(object) {\n    return new MultiPoint(object['coordinates']);\n}\n/**\n * @param {GeoJSONMultiPolygon} object Object.\n * @return {MultiPolygon} MultiPolygon.\n */\nfunction readMultiPolygonGeometry(object) {\n    return new MultiPolygon(object['coordinates']);\n}\n/**\n * @param {GeoJSONPolygon} object Object.\n * @return {Polygon} Polygon.\n */\nfunction readPolygonGeometry(object) {\n    return new Polygon(object['coordinates']);\n}\n/**\n * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeGeometry(geometry, opt_options) {\n    geometry = transformGeometryWithOptions(geometry, true, opt_options);\n    var type = geometry.getType();\n    /** @type {GeoJSONGeometry} */\n    var geoJSON;\n    switch (type) {\n        case GeometryType.POINT: {\n            geoJSON = writePointGeometry(/** @type {Point} */ (geometry), opt_options);\n            break;\n        }\n        case GeometryType.LINE_STRING: {\n            geoJSON = writeLineStringGeometry(/** @type {LineString} */ (geometry), opt_options);\n            break;\n        }\n        case GeometryType.POLYGON: {\n            geoJSON = writePolygonGeometry(/** @type {Polygon} */ (geometry), opt_options);\n            break;\n        }\n        case GeometryType.MULTI_POINT: {\n            geoJSON = writeMultiPointGeometry(/** @type {MultiPoint} */ (geometry), opt_options);\n            break;\n        }\n        case GeometryType.MULTI_LINE_STRING: {\n            geoJSON = writeMultiLineStringGeometry(/** @type {MultiLineString} */ (geometry), opt_options);\n            break;\n        }\n        case GeometryType.MULTI_POLYGON: {\n            geoJSON = writeMultiPolygonGeometry(/** @type {MultiPolygon} */ (geometry), opt_options);\n            break;\n        }\n        case GeometryType.GEOMETRY_COLLECTION: {\n            geoJSON = writeGeometryCollectionGeometry(/** @type {GeometryCollection} */ (geometry), opt_options);\n            break;\n        }\n        case GeometryType.CIRCLE: {\n            geoJSON = {\n                type: 'GeometryCollection',\n                geometries: []\n            };\n            break;\n        }\n        default: {\n            throw new Error('Unsupported geometry type: ' + type);\n        }\n    }\n    return geoJSON;\n}\n/**\n * @param {GeometryCollection} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometryCollection} GeoJSON geometry collection.\n */\nfunction writeGeometryCollectionGeometry(geometry, opt_options) {\n    var geometries = geometry.getGeometriesArray().map(function (geometry) {\n        var options = assign({}, opt_options);\n        delete options.featureProjection;\n        return writeGeometry(geometry, options);\n    });\n    return {\n        type: 'GeometryCollection',\n        geometries: geometries\n    };\n}\n/**\n * @param {LineString} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeLineStringGeometry(geometry, opt_options) {\n    return {\n        type: 'LineString',\n        coordinates: geometry.getCoordinates()\n    };\n}\n/**\n * @param {MultiLineString} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeMultiLineStringGeometry(geometry, opt_options) {\n    return {\n        type: 'MultiLineString',\n        coordinates: geometry.getCoordinates()\n    };\n}\n/**\n * @param {MultiPoint} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeMultiPointGeometry(geometry, opt_options) {\n    return {\n        type: 'MultiPoint',\n        coordinates: geometry.getCoordinates()\n    };\n}\n/**\n * @param {MultiPolygon} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeMultiPolygonGeometry(geometry, opt_options) {\n    var right;\n    if (opt_options) {\n        right = opt_options.rightHanded;\n    }\n    return {\n        type: 'MultiPolygon',\n        coordinates: geometry.getCoordinates(right)\n    };\n}\n/**\n * @param {Point} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writePointGeometry(geometry, opt_options) {\n    return {\n        type: 'Point',\n        coordinates: geometry.getCoordinates()\n    };\n}\n/**\n * @param {Polygon} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writePolygonGeometry(geometry, opt_options) {\n    var right;\n    if (opt_options) {\n        right = opt_options.rightHanded;\n    }\n    return {\n        type: 'Polygon',\n        coordinates: geometry.getCoordinates(right)\n    };\n}\nexport default GeoJSON;\n//# sourceMappingURL=GeoJSON.js.map","/**\n * @module ol/OverlayPositioning\n */\n/**\n * Overlay position: `'bottom-left'`, `'bottom-center'`,  `'bottom-right'`,\n * `'center-left'`, `'center-center'`, `'center-right'`, `'top-left'`,\n * `'top-center'`, `'top-right'`\n * @enum {string}\n */\nexport default {\n    BOTTOM_LEFT: 'bottom-left',\n    BOTTOM_CENTER: 'bottom-center',\n    BOTTOM_RIGHT: 'bottom-right',\n    CENTER_LEFT: 'center-left',\n    CENTER_CENTER: 'center-center',\n    CENTER_RIGHT: 'center-right',\n    TOP_LEFT: 'top-left',\n    TOP_CENTER: 'top-center',\n    TOP_RIGHT: 'top-right'\n};\n//# sourceMappingURL=OverlayPositioning.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/Overlay\n */\nimport MapEventType from './MapEventType.js';\nimport BaseObject, { getChangeEventType } from './Object.js';\nimport OverlayPositioning from './OverlayPositioning.js';\nimport { CLASS_SELECTABLE } from './css.js';\nimport { removeNode, removeChildren, outerWidth, outerHeight } from './dom.js';\nimport { listen, unlistenByKey } from './events.js';\nimport { containsExtent } from './extent.js';\n/**\n * @typedef {Object} Options\n * @property {number|string} [id] Set the overlay id. The overlay id can be used\n * with the {@link module:ol/Map~Map#getOverlayById} method.\n * @property {HTMLElement} [element] The overlay element.\n * @property {Array<number>} [offset=[0, 0]] Offsets in pixels used when positioning\n * the overlay. The first element in the\n * array is the horizontal offset. A positive value shifts the overlay right.\n * The second element in the array is the vertical offset. A positive value\n * shifts the overlay down.\n * @property {import(\"./coordinate.js\").Coordinate} [position] The overlay position\n * in map projection.\n * @property {OverlayPositioning} [positioning='top-left'] Defines how\n * the overlay is actually positioned with respect to its `position` property.\n * Possible values are `'bottom-left'`, `'bottom-center'`, `'bottom-right'`,\n * `'center-left'`, `'center-center'`, `'center-right'`, `'top-left'`,\n * `'top-center'`, and `'top-right'`.\n * @property {boolean} [stopEvent=true] Whether event propagation to the map\n * viewport should be stopped. If `true` the overlay is placed in the same\n * container as that of the controls (CSS class name\n * `ol-overlaycontainer-stopevent`); if `false` it is placed in the container\n * with CSS class name specified by the `className` property.\n * @property {boolean} [insertFirst=true] Whether the overlay is inserted first\n * in the overlay container, or appended. If the overlay is placed in the same\n * container as that of the controls (see the `stopEvent` option) you will\n * probably set `insertFirst` to `true` so the overlay is displayed below the\n * controls.\n * @property {boolean} [autoPan=false] If set to `true` the map is panned when\n * calling `setPosition`, so that the overlay is entirely visible in the current\n * viewport.\n * @property {PanOptions} [autoPanAnimation] The\n * animation options used to pan the overlay into view. This animation is only\n * used when `autoPan` is enabled. A `duration` and `easing` may be provided to\n * customize the animation.\n * @property {number} [autoPanMargin=20] The margin (in pixels) between the\n * overlay and the borders of the map when autopanning.\n * @property {string} [className='ol-overlay-container ol-selectable'] CSS class\n * name.\n */\n/**\n * @typedef {Object} PanOptions\n * @property {number} [duration=1000] The duration of the animation in\n * milliseconds.\n * @property {function(number):number} [easing] The easing function to use. Can\n * be one from {@link module:ol/easing} or a custom function.\n * Default is {@link module:ol/easing~inAndOut}.\n */\n/**\n * @enum {string}\n * @protected\n */\nvar Property = {\n    ELEMENT: 'element',\n    MAP: 'map',\n    OFFSET: 'offset',\n    POSITION: 'position',\n    POSITIONING: 'positioning'\n};\n/**\n * @classdesc\n * An element to be displayed over the map and attached to a single map\n * location.  Like {@link module:ol/control/Control~Control}, Overlays are\n * visible widgets. Unlike Controls, they are not in a fixed position on the\n * screen, but are tied to a geographical coordinate, so panning the map will\n * move an Overlay but not a Control.\n *\n * Example:\n *\n *     import Overlay from 'ol/Overlay';\n *\n *     var popup = new Overlay({\n *       element: document.getElementById('popup')\n *     });\n *     popup.setPosition(coordinate);\n *     map.addOverlay(popup);\n *\n * @api\n */\nvar Overlay = /** @class */ (function (_super) {\n    __extends(Overlay, _super);\n    /**\n     * @param {Options} options Overlay options.\n     */\n    function Overlay(options) {\n        var _this = _super.call(this) || this;\n        /**\n         * @protected\n         * @type {Options}\n         */\n        _this.options = options;\n        /**\n         * @protected\n         * @type {number|string|undefined}\n         */\n        _this.id = options.id;\n        /**\n         * @protected\n         * @type {boolean}\n         */\n        _this.insertFirst = options.insertFirst !== undefined ?\n            options.insertFirst : true;\n        /**\n         * @protected\n         * @type {boolean}\n         */\n        _this.stopEvent = options.stopEvent !== undefined ? options.stopEvent : true;\n        /**\n         * @protected\n         * @type {HTMLElement}\n         */\n        _this.element = document.createElement('div');\n        _this.element.className = options.className !== undefined ?\n            options.className : 'ol-overlay-container ' + CLASS_SELECTABLE;\n        _this.element.style.position = 'absolute';\n        /**\n         * @protected\n         * @type {boolean}\n         */\n        _this.autoPan = options.autoPan !== undefined ? options.autoPan : false;\n        /**\n         * @protected\n         * @type {PanOptions}\n         */\n        _this.autoPanAnimation = options.autoPanAnimation || /** @type {PanOptions} */ ({});\n        /**\n         * @protected\n         * @type {number}\n         */\n        _this.autoPanMargin = options.autoPanMargin !== undefined ?\n            options.autoPanMargin : 20;\n        /**\n         * @protected\n         * @type {{bottom_: string,\n         *         left_: string,\n         *         right_: string,\n         *         top_: string,\n         *         visible: boolean}}\n         */\n        _this.rendered = {\n            bottom_: '',\n            left_: '',\n            right_: '',\n            top_: '',\n            visible: true\n        };\n        /**\n         * @protected\n         * @type {?import(\"./events.js\").EventsKey}\n         */\n        _this.mapPostrenderListenerKey = null;\n        listen(_this, getChangeEventType(Property.ELEMENT), _this.handleElementChanged, _this);\n        listen(_this, getChangeEventType(Property.MAP), _this.handleMapChanged, _this);\n        listen(_this, getChangeEventType(Property.OFFSET), _this.handleOffsetChanged, _this);\n        listen(_this, getChangeEventType(Property.POSITION), _this.handlePositionChanged, _this);\n        listen(_this, getChangeEventType(Property.POSITIONING), _this.handlePositioningChanged, _this);\n        if (options.element !== undefined) {\n            _this.setElement(options.element);\n        }\n        _this.setOffset(options.offset !== undefined ? options.offset : [0, 0]);\n        _this.setPositioning(options.positioning !== undefined ?\n            /** @type {OverlayPositioning} */ (options.positioning) :\n            OverlayPositioning.TOP_LEFT);\n        if (options.position !== undefined) {\n            _this.setPosition(options.position);\n        }\n        return _this;\n    }\n    /**\n     * Get the DOM element of this overlay.\n     * @return {HTMLElement|undefined} The Element containing the overlay.\n     * @observable\n     * @api\n     */\n    Overlay.prototype.getElement = function () {\n        return /** @type {HTMLElement|undefined} */ (this.get(Property.ELEMENT));\n    };\n    /**\n     * Get the overlay identifier which is set on constructor.\n     * @return {number|string|undefined} Id.\n     * @api\n     */\n    Overlay.prototype.getId = function () {\n        return this.id;\n    };\n    /**\n     * Get the map associated with this overlay.\n     * @return {import(\"./PluggableMap.js\").default|undefined} The map that the\n     * overlay is part of.\n     * @observable\n     * @api\n     */\n    Overlay.prototype.getMap = function () {\n        return (\n        /** @type {import(\"./PluggableMap.js\").default|undefined} */ (this.get(Property.MAP)));\n    };\n    /**\n     * Get the offset of this overlay.\n     * @return {Array<number>} The offset.\n     * @observable\n     * @api\n     */\n    Overlay.prototype.getOffset = function () {\n        return /** @type {Array<number>} */ (this.get(Property.OFFSET));\n    };\n    /**\n     * Get the current position of this overlay.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} The spatial point that the overlay is\n     *     anchored at.\n     * @observable\n     * @api\n     */\n    Overlay.prototype.getPosition = function () {\n        return (\n        /** @type {import(\"./coordinate.js\").Coordinate|undefined} */ (this.get(Property.POSITION)));\n    };\n    /**\n     * Get the current positioning of this overlay.\n     * @return {OverlayPositioning} How the overlay is positioned\n     *     relative to its point on the map.\n     * @observable\n     * @api\n     */\n    Overlay.prototype.getPositioning = function () {\n        return (\n        /** @type {OverlayPositioning} */ (this.get(Property.POSITIONING)));\n    };\n    /**\n     * @protected\n     */\n    Overlay.prototype.handleElementChanged = function () {\n        removeChildren(this.element);\n        var element = this.getElement();\n        if (element) {\n            this.element.appendChild(element);\n        }\n    };\n    /**\n     * @protected\n     */\n    Overlay.prototype.handleMapChanged = function () {\n        if (this.mapPostrenderListenerKey) {\n            removeNode(this.element);\n            unlistenByKey(this.mapPostrenderListenerKey);\n            this.mapPostrenderListenerKey = null;\n        }\n        var map = this.getMap();\n        if (map) {\n            this.mapPostrenderListenerKey = listen(map, MapEventType.POSTRENDER, this.render, this);\n            this.updatePixelPosition();\n            var container = this.stopEvent ?\n                map.getOverlayContainerStopEvent() : map.getOverlayContainer();\n            if (this.insertFirst) {\n                container.insertBefore(this.element, container.childNodes[0] || null);\n            }\n            else {\n                container.appendChild(this.element);\n            }\n        }\n    };\n    /**\n     * @protected\n     */\n    Overlay.prototype.render = function () {\n        this.updatePixelPosition();\n    };\n    /**\n     * @protected\n     */\n    Overlay.prototype.handleOffsetChanged = function () {\n        this.updatePixelPosition();\n    };\n    /**\n     * @protected\n     */\n    Overlay.prototype.handlePositionChanged = function () {\n        this.updatePixelPosition();\n        if (this.get(Property.POSITION) && this.autoPan) {\n            this.panIntoView();\n        }\n    };\n    /**\n     * @protected\n     */\n    Overlay.prototype.handlePositioningChanged = function () {\n        this.updatePixelPosition();\n    };\n    /**\n     * Set the DOM element to be associated with this overlay.\n     * @param {HTMLElement|undefined} element The Element containing the overlay.\n     * @observable\n     * @api\n     */\n    Overlay.prototype.setElement = function (element) {\n        this.set(Property.ELEMENT, element);\n    };\n    /**\n     * Set the map to be associated with this overlay.\n     * @param {import(\"./PluggableMap.js\").default|undefined} map The map that the\n     * overlay is part of.\n     * @observable\n     * @api\n     */\n    Overlay.prototype.setMap = function (map) {\n        this.set(Property.MAP, map);\n    };\n    /**\n     * Set the offset for this overlay.\n     * @param {Array<number>} offset Offset.\n     * @observable\n     * @api\n     */\n    Overlay.prototype.setOffset = function (offset) {\n        this.set(Property.OFFSET, offset);\n    };\n    /**\n     * Set the position for this overlay. If the position is `undefined` the\n     * overlay is hidden.\n     * @param {import(\"./coordinate.js\").Coordinate|undefined} position The spatial point that the overlay\n     *     is anchored at.\n     * @observable\n     * @api\n     */\n    Overlay.prototype.setPosition = function (position) {\n        this.set(Property.POSITION, position);\n    };\n    /**\n     * Pan the map so that the overlay is entirely visible in the current viewport\n     * (if necessary).\n     * @protected\n     */\n    Overlay.prototype.panIntoView = function () {\n        var map = this.getMap();\n        if (!map || !map.getTargetElement()) {\n            return;\n        }\n        var mapRect = this.getRect(map.getTargetElement(), map.getSize());\n        var element = this.getElement();\n        var overlayRect = this.getRect(element, [outerWidth(element), outerHeight(element)]);\n        var margin = this.autoPanMargin;\n        if (!containsExtent(mapRect, overlayRect)) {\n            // the overlay is not completely inside the viewport, so pan the map\n            var offsetLeft = overlayRect[0] - mapRect[0];\n            var offsetRight = mapRect[2] - overlayRect[2];\n            var offsetTop = overlayRect[1] - mapRect[1];\n            var offsetBottom = mapRect[3] - overlayRect[3];\n            var delta = [0, 0];\n            if (offsetLeft < 0) {\n                // move map to the left\n                delta[0] = offsetLeft - margin;\n            }\n            else if (offsetRight < 0) {\n                // move map to the right\n                delta[0] = Math.abs(offsetRight) + margin;\n            }\n            if (offsetTop < 0) {\n                // move map up\n                delta[1] = offsetTop - margin;\n            }\n            else if (offsetBottom < 0) {\n                // move map down\n                delta[1] = Math.abs(offsetBottom) + margin;\n            }\n            if (delta[0] !== 0 || delta[1] !== 0) {\n                var center = /** @type {import(\"./coordinate.js\").Coordinate} */ (map.getView().getCenter());\n                var centerPx = map.getPixelFromCoordinate(center);\n                var newCenterPx = [\n                    centerPx[0] + delta[0],\n                    centerPx[1] + delta[1]\n                ];\n                map.getView().animate({\n                    center: map.getCoordinateFromPixel(newCenterPx),\n                    duration: this.autoPanAnimation.duration,\n                    easing: this.autoPanAnimation.easing\n                });\n            }\n        }\n    };\n    /**\n     * Get the extent of an element relative to the document\n     * @param {HTMLElement|undefined} element The element.\n     * @param {import(\"./size.js\").Size|undefined} size The size of the element.\n     * @return {import(\"./extent.js\").Extent} The extent.\n     * @protected\n     */\n    Overlay.prototype.getRect = function (element, size) {\n        var box = element.getBoundingClientRect();\n        var offsetX = box.left + window.pageXOffset;\n        var offsetY = box.top + window.pageYOffset;\n        return [\n            offsetX,\n            offsetY,\n            offsetX + size[0],\n            offsetY + size[1]\n        ];\n    };\n    /**\n     * Set the positioning for this overlay.\n     * @param {OverlayPositioning} positioning how the overlay is\n     *     positioned relative to its point on the map.\n     * @observable\n     * @api\n     */\n    Overlay.prototype.setPositioning = function (positioning) {\n        this.set(Property.POSITIONING, positioning);\n    };\n    /**\n     * Modify the visibility of the element.\n     * @param {boolean} visible Element visibility.\n     * @protected\n     */\n    Overlay.prototype.setVisible = function (visible) {\n        if (this.rendered.visible !== visible) {\n            this.element.style.display = visible ? '' : 'none';\n            this.rendered.visible = visible;\n        }\n    };\n    /**\n     * Update pixel position.\n     * @protected\n     */\n    Overlay.prototype.updatePixelPosition = function () {\n        var map = this.getMap();\n        var position = this.getPosition();\n        if (!map || !map.isRendered() || !position) {\n            this.setVisible(false);\n            return;\n        }\n        var pixel = map.getPixelFromCoordinate(position);\n        var mapSize = map.getSize();\n        this.updateRenderedPosition(pixel, mapSize);\n    };\n    /**\n     * @param {import(\"./pixel.js\").Pixel} pixel The pixel location.\n     * @param {import(\"./size.js\").Size|undefined} mapSize The map size.\n     * @protected\n     */\n    Overlay.prototype.updateRenderedPosition = function (pixel, mapSize) {\n        var style = this.element.style;\n        var offset = this.getOffset();\n        var positioning = this.getPositioning();\n        this.setVisible(true);\n        var offsetX = offset[0];\n        var offsetY = offset[1];\n        if (positioning == OverlayPositioning.BOTTOM_RIGHT ||\n            positioning == OverlayPositioning.CENTER_RIGHT ||\n            positioning == OverlayPositioning.TOP_RIGHT) {\n            if (this.rendered.left_ !== '') {\n                this.rendered.left_ = style.left = '';\n            }\n            var right = Math.round(mapSize[0] - pixel[0] - offsetX) + 'px';\n            if (this.rendered.right_ != right) {\n                this.rendered.right_ = style.right = right;\n            }\n        }\n        else {\n            if (this.rendered.right_ !== '') {\n                this.rendered.right_ = style.right = '';\n            }\n            if (positioning == OverlayPositioning.BOTTOM_CENTER ||\n                positioning == OverlayPositioning.CENTER_CENTER ||\n                positioning == OverlayPositioning.TOP_CENTER) {\n                offsetX -= this.element.offsetWidth / 2;\n            }\n            var left = Math.round(pixel[0] + offsetX) + 'px';\n            if (this.rendered.left_ != left) {\n                this.rendered.left_ = style.left = left;\n            }\n        }\n        if (positioning == OverlayPositioning.BOTTOM_LEFT ||\n            positioning == OverlayPositioning.BOTTOM_CENTER ||\n            positioning == OverlayPositioning.BOTTOM_RIGHT) {\n            if (this.rendered.top_ !== '') {\n                this.rendered.top_ = style.top = '';\n            }\n            var bottom = Math.round(mapSize[1] - pixel[1] - offsetY) + 'px';\n            if (this.rendered.bottom_ != bottom) {\n                this.rendered.bottom_ = style.bottom = bottom;\n            }\n        }\n        else {\n            if (this.rendered.bottom_ !== '') {\n                this.rendered.bottom_ = style.bottom = '';\n            }\n            if (positioning == OverlayPositioning.CENTER_LEFT ||\n                positioning == OverlayPositioning.CENTER_CENTER ||\n                positioning == OverlayPositioning.CENTER_RIGHT) {\n                offsetY -= this.element.offsetHeight / 2;\n            }\n            var top_1 = Math.round(pixel[1] + offsetY) + 'px';\n            if (this.rendered.top_ != top_1) {\n                this.rendered.top_ = style.top = top_1;\n            }\n        }\n    };\n    /**\n     * returns the options this Overlay has been created with\n     * @return {Options} overlay options\n     */\n    Overlay.prototype.getOptions = function () {\n        return this.options;\n    };\n    return Overlay;\n}(BaseObject));\nexport default Overlay;\n//# sourceMappingURL=Overlay.js.map","import hashed from 'hashed';\nimport {transform} from 'ol/proj';\n\nfunction toPrecision(value, precision) {\n  const factor = Math.pow(10, precision);\n  return (Math.round(value * factor) / factor).toString();\n}\n\nfunction synchronize(map, options) {\n  options = options || {};\n  let animate;\n  if ('animate' in options) {\n    animate = options.animate;\n  } else {\n    animate = {duration: 250};\n  }\n\n  const view = map.getView();\n  const projection = view.getProjection().getCode();\n\n  let zoom, center, rotation;\n  if (view.isDef()) {\n    zoom = view.getZoom();\n    center = view.getCenter();\n    rotation = view.getRotation();\n  } else {\n    const viewport = map.getViewport();\n    if (viewport) {\n      zoom = Math.LOG2E * Math.log(viewport.clientWidth / 256);\n    } else {\n      zoom = 0;\n    }\n    center = [0, 0];\n    rotation = 0;\n  }\n\n  const config = {\n    center: {\n      default: center,\n      serialize: function(coord, state) {\n        let precision;\n        if (state && 'zoom' in state) {\n          precision = Math.max(0, Math.ceil(Math.log(state.zoom) / Math.LN2));\n        } else {\n          precision = 3;\n        }\n        coord = transform(coord, projection, 'EPSG:4326');\n        return (\n          toPrecision(coord[0], precision) +\n          ',' +\n          toPrecision(coord[1], precision)\n        );\n      },\n      deserialize: function(str) {\n        const parts = str.split(',');\n        if (parts.length !== 2) {\n          throw new Error('Expected lon,lat but got ' + str);\n        }\n        const coord = [parseFloat(parts[0]), parseFloat(parts[1])];\n        return transform(coord, 'EPSG:4326', projection);\n      }\n    },\n    zoom: {\n      default: zoom,\n      serialize: function(value) {\n        return toPrecision(value, 1);\n      },\n      deserialize: Number\n    },\n    rotation: {\n      default: rotation,\n      serialize: function(value) {\n        return toPrecision(value, 2);\n      },\n      deserialize: Number\n    }\n  };\n\n  function hashHandler(state) {\n    if (view.isDef() && animate) {\n      view.animate(Object.assign({}, state, animate));\n      return;\n    }\n    if ('center' in state) {\n      view.setCenter(state.center);\n    }\n    if ('zoom' in state) {\n      view.setZoom(state.zoom);\n    }\n    if ('rotation' in state) {\n      view.setRotation(state.rotation);\n    }\n  }\n\n  const update = hashed.register(config, hashHandler);\n\n  function onMoveEnd() {\n    update({\n      center: view.getCenter(),\n      zoom: view.getZoom(),\n      rotation: view.getRotation()\n    });\n  }\n\n  map.on('moveend', onMoveEnd);\n\n  return function unregister() {\n    map.un('moveend', onMoveEnd);\n    hashed.unregister(hashHandler);\n  };\n}\n\nexport default synchronize;\n","/**\n * @module ol/reproj/common\n */\n/**\n * Default maximum allowed threshold  (in pixels) for reprojection\n * triangulation.\n * @type {number}\n */\nexport var ERROR_THRESHOLD = 0.5;\n/**\n * Enable automatic reprojection of raster sources. Default is `true`.\n * TODO: decide if we want to expose this as a build flag or remove it\n * @type {boolean}\n */\nexport var ENABLE_RASTER_REPROJECTION = true;\n//# sourceMappingURL=common.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/Tile\n */\nimport TileState from './TileState.js';\nimport { easeIn } from './easing.js';\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport { abstract } from './util.js';\n/**\n * A function that takes an {@link module:ol/Tile} for the tile and a\n * `{string}` for the url as arguments. The default is\n * ```js\n * source.setTileLoadFunction(function(tile, src) {\n *   tile.getImage().src = src;\n * });\n * ```\n * For more fine grained control, the load function can use fetch or XMLHttpRequest and involve\n * error handling:\n *\n * ```js\n * import TileState from 'ol/TileState';\n *\n * source.setTileLoadFunction(function(tile, src) {\n *   var xhr = new XMLHttpRequest();\n *   xhr.responseType = 'blob';\n *   xhr.addEventListener('loadend', function (evt) {\n *     var data = this.response;\n *     if (data !== undefined) {\n *       tile.getImage().src = URL.createObjectURL(data);\n *     } else {\n *       tile.setState(TileState.ERROR);\n *     }\n *   });\n *   xhr.addEventListener('error', function () {\n *     tile.setState(TileState.ERROR);\n *   });\n *   xhr.open('GET', src);\n *   xhr.send();\n * });\n * ```\n *\n * @typedef {function(Tile, string): void} LoadFunction\n * @api\n */\n/**\n * {@link module:ol/source/Tile~Tile} sources use a function of this type to get\n * the url that provides a tile for a given tile coordinate.\n *\n * This function takes an {@link module:ol/tilecoord~TileCoord} for the tile\n * coordinate, a `{number}` representing the pixel ratio and a\n * {@link module:ol/proj/Projection} for the projection  as arguments\n * and returns a `{string}` representing the tile URL, or undefined if no tile\n * should be requested for the passed tile coordinate.\n *\n * @typedef {function(import(\"./tilecoord.js\").TileCoord, number,\n *           import(\"./proj/Projection.js\").default): (string|undefined)} UrlFunction\n * @api\n */\n/**\n * @typedef {Object} Options\n * @property {number} [transition=250] A duration for tile opacity\n * transitions in milliseconds. A duration of 0 disables the opacity transition.\n * @api\n */\n/**\n * @classdesc\n * Base class for tiles.\n *\n * @abstract\n */\nvar Tile = /** @class */ (function (_super) {\n    __extends(Tile, _super);\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @param {TileState} state State.\n     * @param {Options=} opt_options Tile options.\n     */\n    function Tile(tileCoord, state, opt_options) {\n        var _this = _super.call(this) || this;\n        var options = opt_options ? opt_options : {};\n        /**\n         * @type {import(\"./tilecoord.js\").TileCoord}\n         */\n        _this.tileCoord = tileCoord;\n        /**\n         * @protected\n         * @type {TileState}\n         */\n        _this.state = state;\n        /**\n         * An \"interim\" tile for this tile. The interim tile may be used while this\n         * one is loading, for \"smooth\" transitions when changing params/dimensions\n         * on the source.\n         * @type {Tile}\n         */\n        _this.interimTile = null;\n        /**\n         * The tile is available at the highest possible resolution. Subclasses can\n         * set this to `false` initially. Tile load listeners will not be\n         * unregistered before this is set to `true` and a `#changed()` is called.\n         * @type {boolean}\n         */\n        _this.hifi = true;\n        /**\n         * A key assigned to the tile. This is used by the tile source to determine\n         * if this tile can effectively be used, or if a new tile should be created\n         * and this one be used as an interim tile for this new tile.\n         * @type {string}\n         */\n        _this.key = '';\n        /**\n         * The duration for the opacity transition.\n         * @type {number}\n         */\n        _this.transition_ = options.transition === undefined ? 250 : options.transition;\n        /**\n         * Lookup of start times for rendering transitions.  If the start time is\n         * equal to -1, the transition is complete.\n         * @type {Object<string, number>}\n         */\n        _this.transitionStarts_ = {};\n        return _this;\n    }\n    /**\n     * @protected\n     */\n    Tile.prototype.changed = function () {\n        this.dispatchEvent(EventType.CHANGE);\n    };\n    /**\n     * @return {string} Key.\n     */\n    Tile.prototype.getKey = function () {\n        return this.key + '/' + this.tileCoord;\n    };\n    /**\n     * Get the interim tile most suitable for rendering using the chain of interim\n     * tiles. This corresponds to the  most recent tile that has been loaded, if no\n     * such tile exists, the original tile is returned.\n     * @return {!Tile} Best tile for rendering.\n     */\n    Tile.prototype.getInterimTile = function () {\n        if (!this.interimTile) {\n            //empty chain\n            return this;\n        }\n        var tile = this.interimTile;\n        // find the first loaded tile and return it. Since the chain is sorted in\n        // decreasing order of creation time, there is no need to search the remainder\n        // of the list (all those tiles correspond to older requests and will be\n        // cleaned up by refreshInterimChain)\n        do {\n            if (tile.getState() == TileState.LOADED) {\n                // Show tile immediately instead of fading it in after loading, because\n                // the interim tile is in place already\n                this.transition_ = 0;\n                return tile;\n            }\n            tile = tile.interimTile;\n        } while (tile);\n        // we can not find a better tile\n        return this;\n    };\n    /**\n     * Goes through the chain of interim tiles and discards sections of the chain\n     * that are no longer relevant.\n     */\n    Tile.prototype.refreshInterimChain = function () {\n        if (!this.interimTile) {\n            return;\n        }\n        var tile = this.interimTile;\n        var prev = /** @type {Tile} */ (this);\n        do {\n            if (tile.getState() == TileState.LOADED) {\n                //we have a loaded tile, we can discard the rest of the list\n                //we would could abort any LOADING tile request\n                //older than this tile (i.e. any LOADING tile following this entry in the chain)\n                tile.interimTile = null;\n                break;\n            }\n            else if (tile.getState() == TileState.LOADING) {\n                //keep this LOADING tile any loaded tiles later in the chain are\n                //older than this tile, so we're still interested in the request\n                prev = tile;\n            }\n            else if (tile.getState() == TileState.IDLE) {\n                //the head of the list is the most current tile, we don't need\n                //to start any other requests for this chain\n                prev.interimTile = tile.interimTile;\n            }\n            else {\n                prev = tile;\n            }\n            tile = prev.interimTile;\n        } while (tile);\n    };\n    /**\n     * Get the tile coordinate for this tile.\n     * @return {import(\"./tilecoord.js\").TileCoord} The tile coordinate.\n     * @api\n     */\n    Tile.prototype.getTileCoord = function () {\n        return this.tileCoord;\n    };\n    /**\n     * @return {TileState} State.\n     */\n    Tile.prototype.getState = function () {\n        return this.state;\n    };\n    /**\n     * Sets the state of this tile. If you write your own {@link module:ol/Tile~LoadFunction tileLoadFunction} ,\n     * it is important to set the state correctly to {@link module:ol/TileState~ERROR}\n     * when the tile cannot be loaded. Otherwise the tile cannot be removed from\n     * the tile queue and will block other requests.\n     * @param {TileState} state State.\n     * @api\n     */\n    Tile.prototype.setState = function (state) {\n        this.state = state;\n        this.changed();\n    };\n    /**\n     * Load the image or retry if loading previously failed.\n     * Loading is taken care of by the tile queue, and calling this method is\n     * only needed for preloading or for reloading in case of an error.\n     * @abstract\n     * @api\n     */\n    Tile.prototype.load = function () {\n        abstract();\n    };\n    /**\n     * Get the alpha value for rendering.\n     * @param {string} id An id for the renderer.\n     * @param {number} time The render frame time.\n     * @return {number} A number between 0 and 1.\n     */\n    Tile.prototype.getAlpha = function (id, time) {\n        if (!this.transition_) {\n            return 1;\n        }\n        var start = this.transitionStarts_[id];\n        if (!start) {\n            start = time;\n            this.transitionStarts_[id] = start;\n        }\n        else if (start === -1) {\n            return 1;\n        }\n        var delta = time - start + (1000 / 60); // avoid rendering at 0\n        if (delta >= this.transition_) {\n            return 1;\n        }\n        return easeIn(delta / this.transition_);\n    };\n    /**\n     * Determine if a tile is in an alpha transition.  A tile is considered in\n     * transition if tile.getAlpha() has not yet been called or has been called\n     * and returned 1.\n     * @param {string} id An id for the renderer.\n     * @return {boolean} The tile is in transition.\n     */\n    Tile.prototype.inTransition = function (id) {\n        if (!this.transition_) {\n            return false;\n        }\n        return this.transitionStarts_[id] !== -1;\n    };\n    /**\n     * Mark a transition as complete.\n     * @param {string} id An id for the renderer.\n     */\n    Tile.prototype.endTransition = function (id) {\n        if (this.transition_) {\n            this.transitionStarts_[id] = -1;\n        }\n    };\n    return Tile;\n}(EventTarget));\nexport default Tile;\n//# sourceMappingURL=Tile.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/ImageTile\n */\nimport Tile from './Tile.js';\nimport TileState from './TileState.js';\nimport { createCanvasContext2D } from './dom.js';\nimport { listenOnce, unlistenByKey } from './events.js';\nimport EventType from './events/EventType.js';\nvar ImageTile = /** @class */ (function (_super) {\n    __extends(ImageTile, _super);\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @param {TileState} state State.\n     * @param {string} src Image source URI.\n     * @param {?string} crossOrigin Cross origin.\n     * @param {import(\"./Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n     * @param {import(\"./Tile.js\").Options=} opt_options Tile options.\n     */\n    function ImageTile(tileCoord, state, src, crossOrigin, tileLoadFunction, opt_options) {\n        var _this = _super.call(this, tileCoord, state, opt_options) || this;\n        /**\n         * @private\n         * @type {?string}\n         */\n        _this.crossOrigin_ = crossOrigin;\n        /**\n         * Image URI\n         *\n         * @private\n         * @type {string}\n         */\n        _this.src_ = src;\n        /**\n         * @private\n         * @type {HTMLImageElement|HTMLCanvasElement}\n         */\n        _this.image_ = new Image();\n        if (crossOrigin !== null) {\n            _this.image_.crossOrigin = crossOrigin;\n        }\n        /**\n         * @private\n         * @type {Array<import(\"./events.js\").EventsKey>}\n         */\n        _this.imageListenerKeys_ = null;\n        /**\n         * @private\n         * @type {import(\"./Tile.js\").LoadFunction}\n         */\n        _this.tileLoadFunction_ = tileLoadFunction;\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    ImageTile.prototype.disposeInternal = function () {\n        if (this.state == TileState.LOADING) {\n            this.unlistenImage_();\n            this.image_ = getBlankImage();\n        }\n        if (this.interimTile) {\n            this.interimTile.dispose();\n        }\n        this.state = TileState.ABORT;\n        this.changed();\n        _super.prototype.disposeInternal.call(this);\n    };\n    /**\n     * Get the HTML image element for this tile (may be a Canvas, Image, or Video).\n     * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n     * @api\n     */\n    ImageTile.prototype.getImage = function () {\n        return this.image_;\n    };\n    /**\n     * @inheritDoc\n     */\n    ImageTile.prototype.getKey = function () {\n        return this.src_;\n    };\n    /**\n     * Tracks loading or read errors.\n     *\n     * @private\n     */\n    ImageTile.prototype.handleImageError_ = function () {\n        this.state = TileState.ERROR;\n        this.unlistenImage_();\n        this.image_ = getBlankImage();\n        this.changed();\n    };\n    /**\n     * Tracks successful image load.\n     *\n     * @private\n     */\n    ImageTile.prototype.handleImageLoad_ = function () {\n        var image = /** @type {HTMLImageElement} */ (this.image_);\n        if (image.naturalWidth && image.naturalHeight) {\n            this.state = TileState.LOADED;\n        }\n        else {\n            this.state = TileState.EMPTY;\n        }\n        this.unlistenImage_();\n        this.changed();\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    ImageTile.prototype.load = function () {\n        if (this.state == TileState.ERROR) {\n            this.state = TileState.IDLE;\n            this.image_ = new Image();\n            if (this.crossOrigin_ !== null) {\n                this.image_.crossOrigin = this.crossOrigin_;\n            }\n        }\n        if (this.state == TileState.IDLE) {\n            this.state = TileState.LOADING;\n            this.changed();\n            this.imageListenerKeys_ = [\n                listenOnce(this.image_, EventType.ERROR, this.handleImageError_, this),\n                listenOnce(this.image_, EventType.LOAD, this.handleImageLoad_, this)\n            ];\n            this.tileLoadFunction_(this, this.src_);\n        }\n    };\n    /**\n     * Discards event handlers which listen for load completion or errors.\n     *\n     * @private\n     */\n    ImageTile.prototype.unlistenImage_ = function () {\n        this.imageListenerKeys_.forEach(unlistenByKey);\n        this.imageListenerKeys_ = null;\n    };\n    return ImageTile;\n}(Tile));\n/**\n * Get a 1-pixel blank image.\n * @return {HTMLCanvasElement} Blank image.\n */\nfunction getBlankImage() {\n    var ctx = createCanvasContext2D(1, 1);\n    ctx.fillStyle = 'rgba(0,0,0,0)';\n    ctx.fillRect(0, 0, 1, 1);\n    return ctx.canvas;\n}\nexport default ImageTile;\n//# sourceMappingURL=ImageTile.js.map","/**\n * @module ol/tilecoord\n */\n/**\n * An array of three numbers representing the location of a tile in a tile\n * grid. The order is `z` (zoom level), `x` (column), and `y` (row).\n * @typedef {Array<number>} TileCoord\n * @api\n */\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {TileCoord=} opt_tileCoord Tile coordinate.\n * @return {TileCoord} Tile coordinate.\n */\nexport function createOrUpdate(z, x, y, opt_tileCoord) {\n    if (opt_tileCoord !== undefined) {\n        opt_tileCoord[0] = z;\n        opt_tileCoord[1] = x;\n        opt_tileCoord[2] = y;\n        return opt_tileCoord;\n    }\n    else {\n        return [z, x, y];\n    }\n}\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {string} Key.\n */\nexport function getKeyZXY(z, x, y) {\n    return z + '/' + x + '/' + y;\n}\n/**\n * Get the key for a tile coord.\n * @param {TileCoord} tileCoord The tile coord.\n * @return {string} Key.\n */\nexport function getKey(tileCoord) {\n    return getKeyZXY(tileCoord[0], tileCoord[1], tileCoord[2]);\n}\n/**\n * Get a tile coord given a key.\n * @param {string} key The tile coord key.\n * @return {TileCoord} The tile coord.\n */\nexport function fromKey(key) {\n    return key.split('/').map(Number);\n}\n/**\n * @param {TileCoord} tileCoord Tile coord.\n * @return {number} Hash.\n */\nexport function hash(tileCoord) {\n    return (tileCoord[1] << tileCoord[0]) + tileCoord[2];\n}\n/**\n * @param {TileCoord} tileCoord Tile coordinate.\n * @param {!import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {boolean} Tile coordinate is within extent and zoom level range.\n */\nexport function withinExtentAndZ(tileCoord, tileGrid) {\n    var z = tileCoord[0];\n    var x = tileCoord[1];\n    var y = tileCoord[2];\n    if (tileGrid.getMinZoom() > z || z > tileGrid.getMaxZoom()) {\n        return false;\n    }\n    var extent = tileGrid.getExtent();\n    var tileRange;\n    if (!extent) {\n        tileRange = tileGrid.getFullTileRange(z);\n    }\n    else {\n        tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\n    }\n    if (!tileRange) {\n        return true;\n    }\n    else {\n        return tileRange.containsXY(x, y);\n    }\n}\n//# sourceMappingURL=tilecoord.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/TileCache\n */\nimport LRUCache from './structs/LRUCache.js';\nimport { fromKey, getKey } from './tilecoord.js';\nvar TileCache = /** @class */ (function (_super) {\n    __extends(TileCache, _super);\n    /**\n     * @param {number=} opt_highWaterMark High water mark.\n     */\n    function TileCache(opt_highWaterMark) {\n        return _super.call(this, opt_highWaterMark) || this;\n    }\n    /**\n     * @param {!Object<string, import(\"./TileRange.js\").default>} usedTiles Used tiles.\n     */\n    TileCache.prototype.expireCache = function (usedTiles) {\n        while (this.canExpireCache()) {\n            var tile = this.peekLast();\n            if (tile.getKey() in usedTiles) {\n                break;\n            }\n            else {\n                this.pop().dispose();\n            }\n        }\n    };\n    /**\n     * Prune all tiles from the cache that don't have the same z as the newest tile.\n     */\n    TileCache.prototype.pruneExceptNewestZ = function () {\n        if (this.getCount() === 0) {\n            return;\n        }\n        var key = this.peekFirstKey();\n        var tileCoord = fromKey(key);\n        var z = tileCoord[0];\n        this.forEach(function (tile) {\n            if (tile.tileCoord[0] !== z) {\n                this.remove(getKey(tile.tileCoord));\n                tile.dispose();\n            }\n        }.bind(this));\n    };\n    return TileCache;\n}(LRUCache));\nexport default TileCache;\n//# sourceMappingURL=TileCache.js.map","/**\n * @module ol/reproj\n */\nimport { createCanvasContext2D } from './dom.js';\nimport { containsCoordinate, createEmpty, extend, getHeight, getTopLeft, getWidth } from './extent.js';\nimport { solveLinearSystem } from './math.js';\nimport { getPointResolution, transform } from './proj.js';\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {import(\"./proj/Projection.js\").default} sourceProj Source projection.\n * @param {import(\"./proj/Projection.js\").default} targetProj Target projection.\n * @param {import(\"./coordinate.js\").Coordinate} targetCenter Target center.\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceResolution(sourceProj, targetProj, targetCenter, targetResolution) {\n    var sourceCenter = transform(targetCenter, targetProj, sourceProj);\n    // calculate the ideal resolution of the source data\n    var sourceResolution = getPointResolution(targetProj, targetResolution, targetCenter);\n    var targetMetersPerUnit = targetProj.getMetersPerUnit();\n    if (targetMetersPerUnit !== undefined) {\n        sourceResolution *= targetMetersPerUnit;\n    }\n    var sourceMetersPerUnit = sourceProj.getMetersPerUnit();\n    if (sourceMetersPerUnit !== undefined) {\n        sourceResolution /= sourceMetersPerUnit;\n    }\n    // Based on the projection properties, the point resolution at the specified\n    // coordinates may be slightly different. We need to reverse-compensate this\n    // in order to achieve optimal results.\n    var sourceExtent = sourceProj.getExtent();\n    if (!sourceExtent || containsCoordinate(sourceExtent, sourceCenter)) {\n        var compensationFactor = getPointResolution(sourceProj, sourceResolution, sourceCenter) /\n            sourceResolution;\n        if (isFinite(compensationFactor) && compensationFactor > 0) {\n            sourceResolution /= compensationFactor;\n        }\n    }\n    return sourceResolution;\n}\n/**\n * Enlarge the clipping triangle point by 1 pixel to ensure the edges overlap\n * in order to mask gaps caused by antialiasing.\n *\n * @param {number} centroidX Centroid of the triangle (x coordinate in pixels).\n * @param {number} centroidY Centroid of the triangle (y coordinate in pixels).\n * @param {number} x X coordinate of the point (in pixels).\n * @param {number} y Y coordinate of the point (in pixels).\n * @return {import(\"./coordinate.js\").Coordinate} New point 1 px farther from the centroid.\n */\nfunction enlargeClipPoint(centroidX, centroidY, x, y) {\n    var dX = x - centroidX;\n    var dY = y - centroidY;\n    var distance = Math.sqrt(dX * dX + dY * dY);\n    return [Math.round(x + dX / distance), Math.round(y + dY / distance)];\n}\n/**\n * Renders the source data into new canvas based on the triangulation.\n *\n * @param {number} width Width of the canvas.\n * @param {number} height Height of the canvas.\n * @param {number} pixelRatio Pixel ratio.\n * @param {number} sourceResolution Source resolution.\n * @param {import(\"./extent.js\").Extent} sourceExtent Extent of the data source.\n * @param {number} targetResolution Target resolution.\n * @param {import(\"./extent.js\").Extent} targetExtent Target extent.\n * @param {import(\"./reproj/Triangulation.js\").default} triangulation\n * Calculated triangulation.\n * @param {Array<{extent: import(\"./extent.js\").Extent,\n *                 image: (HTMLCanvasElement|HTMLImageElement|HTMLVideoElement)}>} sources\n * Array of sources.\n * @param {number} gutter Gutter of the sources.\n * @param {boolean=} opt_renderEdges Render reprojection edges.\n * @return {HTMLCanvasElement} Canvas with reprojected data.\n */\nexport function render(width, height, pixelRatio, sourceResolution, sourceExtent, targetResolution, targetExtent, triangulation, sources, gutter, opt_renderEdges) {\n    var context = createCanvasContext2D(Math.round(pixelRatio * width), Math.round(pixelRatio * height));\n    if (sources.length === 0) {\n        return context.canvas;\n    }\n    context.scale(pixelRatio, pixelRatio);\n    var sourceDataExtent = createEmpty();\n    sources.forEach(function (src, i, arr) {\n        extend(sourceDataExtent, src.extent);\n    });\n    var canvasWidthInUnits = getWidth(sourceDataExtent);\n    var canvasHeightInUnits = getHeight(sourceDataExtent);\n    var stitchContext = createCanvasContext2D(Math.round(pixelRatio * canvasWidthInUnits / sourceResolution), Math.round(pixelRatio * canvasHeightInUnits / sourceResolution));\n    var stitchScale = pixelRatio / sourceResolution;\n    sources.forEach(function (src, i, arr) {\n        var xPos = src.extent[0] - sourceDataExtent[0];\n        var yPos = -(src.extent[3] - sourceDataExtent[3]);\n        var srcWidth = getWidth(src.extent);\n        var srcHeight = getHeight(src.extent);\n        stitchContext.drawImage(src.image, gutter, gutter, src.image.width - 2 * gutter, src.image.height - 2 * gutter, xPos * stitchScale, yPos * stitchScale, srcWidth * stitchScale, srcHeight * stitchScale);\n    });\n    var targetTopLeft = getTopLeft(targetExtent);\n    triangulation.getTriangles().forEach(function (triangle, i, arr) {\n        /* Calculate affine transform (src -> dst)\n         * Resulting matrix can be used to transform coordinate\n         * from `sourceProjection` to destination pixels.\n         *\n         * To optimize number of context calls and increase numerical stability,\n         * we also do the following operations:\n         * trans(-topLeftExtentCorner), scale(1 / targetResolution), scale(1, -1)\n         * here before solving the linear system so [ui, vi] are pixel coordinates.\n         *\n         * Src points: xi, yi\n         * Dst points: ui, vi\n         * Affine coefficients: aij\n         *\n         * | x0 y0 1  0  0 0 |   |a00|   |u0|\n         * | x1 y1 1  0  0 0 |   |a01|   |u1|\n         * | x2 y2 1  0  0 0 | x |a02| = |u2|\n         * |  0  0 0 x0 y0 1 |   |a10|   |v0|\n         * |  0  0 0 x1 y1 1 |   |a11|   |v1|\n         * |  0  0 0 x2 y2 1 |   |a12|   |v2|\n         */\n        var source = triangle.source;\n        var target = triangle.target;\n        var x0 = source[0][0], y0 = source[0][1];\n        var x1 = source[1][0], y1 = source[1][1];\n        var x2 = source[2][0], y2 = source[2][1];\n        var u0 = (target[0][0] - targetTopLeft[0]) / targetResolution;\n        var v0 = -(target[0][1] - targetTopLeft[1]) / targetResolution;\n        var u1 = (target[1][0] - targetTopLeft[0]) / targetResolution;\n        var v1 = -(target[1][1] - targetTopLeft[1]) / targetResolution;\n        var u2 = (target[2][0] - targetTopLeft[0]) / targetResolution;\n        var v2 = -(target[2][1] - targetTopLeft[1]) / targetResolution;\n        // Shift all the source points to improve numerical stability\n        // of all the subsequent calculations. The [x0, y0] is used here.\n        // This is also used to simplify the linear system.\n        var sourceNumericalShiftX = x0;\n        var sourceNumericalShiftY = y0;\n        x0 = 0;\n        y0 = 0;\n        x1 -= sourceNumericalShiftX;\n        y1 -= sourceNumericalShiftY;\n        x2 -= sourceNumericalShiftX;\n        y2 -= sourceNumericalShiftY;\n        var augmentedMatrix = [\n            [x1, y1, 0, 0, u1 - u0],\n            [x2, y2, 0, 0, u2 - u0],\n            [0, 0, x1, y1, v1 - v0],\n            [0, 0, x2, y2, v2 - v0]\n        ];\n        var affineCoefs = solveLinearSystem(augmentedMatrix);\n        if (!affineCoefs) {\n            return;\n        }\n        context.save();\n        context.beginPath();\n        var centroidX = (u0 + u1 + u2) / 3;\n        var centroidY = (v0 + v1 + v2) / 3;\n        var p0 = enlargeClipPoint(centroidX, centroidY, u0, v0);\n        var p1 = enlargeClipPoint(centroidX, centroidY, u1, v1);\n        var p2 = enlargeClipPoint(centroidX, centroidY, u2, v2);\n        context.moveTo(p1[0], p1[1]);\n        context.lineTo(p0[0], p0[1]);\n        context.lineTo(p2[0], p2[1]);\n        context.clip();\n        context.transform(affineCoefs[0], affineCoefs[2], affineCoefs[1], affineCoefs[3], u0, v0);\n        context.translate(sourceDataExtent[0] - sourceNumericalShiftX, sourceDataExtent[3] - sourceNumericalShiftY);\n        context.scale(sourceResolution / pixelRatio, -sourceResolution / pixelRatio);\n        context.drawImage(stitchContext.canvas, 0, 0);\n        context.restore();\n    });\n    if (opt_renderEdges) {\n        context.save();\n        context.strokeStyle = 'black';\n        context.lineWidth = 1;\n        triangulation.getTriangles().forEach(function (triangle, i, arr) {\n            var target = triangle.target;\n            var u0 = (target[0][0] - targetTopLeft[0]) / targetResolution;\n            var v0 = -(target[0][1] - targetTopLeft[1]) / targetResolution;\n            var u1 = (target[1][0] - targetTopLeft[0]) / targetResolution;\n            var v1 = -(target[1][1] - targetTopLeft[1]) / targetResolution;\n            var u2 = (target[2][0] - targetTopLeft[0]) / targetResolution;\n            var v2 = -(target[2][1] - targetTopLeft[1]) / targetResolution;\n            context.beginPath();\n            context.moveTo(u1, v1);\n            context.lineTo(u0, v0);\n            context.lineTo(u2, v2);\n            context.closePath();\n            context.stroke();\n        });\n        context.restore();\n    }\n    return context.canvas;\n}\n//# sourceMappingURL=reproj.js.map","/**\n * @module ol/reproj/Triangulation\n */\nimport { boundingExtent, createEmpty, extendCoordinate, getBottomLeft, getBottomRight, getTopLeft, getTopRight, getWidth, intersects } from '../extent.js';\nimport { modulo } from '../math.js';\nimport { getTransform } from '../proj.js';\n/**\n * Single triangle; consists of 3 source points and 3 target points.\n * @typedef {Object} Triangle\n * @property {Array<import(\"../coordinate.js\").Coordinate>} source\n * @property {Array<import(\"../coordinate.js\").Coordinate>} target\n */\n/**\n * Maximum number of subdivision steps during raster reprojection triangulation.\n * Prevents high memory usage and large number of proj4 calls (for certain\n * transformations and areas). At most `2*(2^this)` triangles are created for\n * each triangulated extent (tile/image).\n * @type {number}\n */\nvar MAX_SUBDIVISION = 10;\n/**\n * Maximum allowed size of triangle relative to world width. When transforming\n * corners of world extent between certain projections, the resulting\n * triangulation seems to have zero error and no subdivision is performed. If\n * the triangle width is more than this (relative to world width; 0-1),\n * subdivison is forced (up to `MAX_SUBDIVISION`). Default is `0.25`.\n * @type {number}\n */\nvar MAX_TRIANGLE_WIDTH = 0.25;\n/**\n * @classdesc\n * Class containing triangulation of the given target extent.\n * Used for determining source data and the reprojection itself.\n */\nvar Triangulation = /** @class */ (function () {\n    /**\n     * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n     * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n     * @param {import(\"../extent.js\").Extent} targetExtent Target extent to triangulate.\n     * @param {import(\"../extent.js\").Extent} maxSourceExtent Maximal source extent that can be used.\n     * @param {number} errorThreshold Acceptable error (in source units).\n     */\n    function Triangulation(sourceProj, targetProj, targetExtent, maxSourceExtent, errorThreshold) {\n        /**\n         * @type {import(\"../proj/Projection.js\").default}\n         * @private\n         */\n        this.sourceProj_ = sourceProj;\n        /**\n         * @type {import(\"../proj/Projection.js\").default}\n         * @private\n         */\n        this.targetProj_ = targetProj;\n        /** @type {!Object<string, import(\"../coordinate.js\").Coordinate>} */\n        var transformInvCache = {};\n        var transformInv = getTransform(this.targetProj_, this.sourceProj_);\n        /**\n         * @param {import(\"../coordinate.js\").Coordinate} c A coordinate.\n         * @return {import(\"../coordinate.js\").Coordinate} Transformed coordinate.\n         * @private\n         */\n        this.transformInv_ = function (c) {\n            var key = c[0] + '/' + c[1];\n            if (!transformInvCache[key]) {\n                transformInvCache[key] = transformInv(c);\n            }\n            return transformInvCache[key];\n        };\n        /**\n         * @type {import(\"../extent.js\").Extent}\n         * @private\n         */\n        this.maxSourceExtent_ = maxSourceExtent;\n        /**\n         * @type {number}\n         * @private\n         */\n        this.errorThresholdSquared_ = errorThreshold * errorThreshold;\n        /**\n         * @type {Array<Triangle>}\n         * @private\n         */\n        this.triangles_ = [];\n        /**\n         * Indicates that the triangulation crosses edge of the source projection.\n         * @type {boolean}\n         * @private\n         */\n        this.wrapsXInSource_ = false;\n        /**\n         * @type {boolean}\n         * @private\n         */\n        this.canWrapXInSource_ = this.sourceProj_.canWrapX() &&\n            !!maxSourceExtent &&\n            !!this.sourceProj_.getExtent() &&\n            (getWidth(maxSourceExtent) == getWidth(this.sourceProj_.getExtent()));\n        /**\n         * @type {?number}\n         * @private\n         */\n        this.sourceWorldWidth_ = this.sourceProj_.getExtent() ?\n            getWidth(this.sourceProj_.getExtent()) : null;\n        /**\n         * @type {?number}\n         * @private\n         */\n        this.targetWorldWidth_ = this.targetProj_.getExtent() ?\n            getWidth(this.targetProj_.getExtent()) : null;\n        var destinationTopLeft = getTopLeft(targetExtent);\n        var destinationTopRight = getTopRight(targetExtent);\n        var destinationBottomRight = getBottomRight(targetExtent);\n        var destinationBottomLeft = getBottomLeft(targetExtent);\n        var sourceTopLeft = this.transformInv_(destinationTopLeft);\n        var sourceTopRight = this.transformInv_(destinationTopRight);\n        var sourceBottomRight = this.transformInv_(destinationBottomRight);\n        var sourceBottomLeft = this.transformInv_(destinationBottomLeft);\n        this.addQuad_(destinationTopLeft, destinationTopRight, destinationBottomRight, destinationBottomLeft, sourceTopLeft, sourceTopRight, sourceBottomRight, sourceBottomLeft, MAX_SUBDIVISION);\n        if (this.wrapsXInSource_) {\n            var leftBound_1 = Infinity;\n            this.triangles_.forEach(function (triangle, i, arr) {\n                leftBound_1 = Math.min(leftBound_1, triangle.source[0][0], triangle.source[1][0], triangle.source[2][0]);\n            });\n            // Shift triangles to be as close to `leftBound` as possible\n            // (if the distance is more than `worldWidth / 2` it can be closer.\n            this.triangles_.forEach(function (triangle) {\n                if (Math.max(triangle.source[0][0], triangle.source[1][0], triangle.source[2][0]) - leftBound_1 > this.sourceWorldWidth_ / 2) {\n                    var newTriangle = [[triangle.source[0][0], triangle.source[0][1]],\n                        [triangle.source[1][0], triangle.source[1][1]],\n                        [triangle.source[2][0], triangle.source[2][1]]];\n                    if ((newTriangle[0][0] - leftBound_1) > this.sourceWorldWidth_ / 2) {\n                        newTriangle[0][0] -= this.sourceWorldWidth_;\n                    }\n                    if ((newTriangle[1][0] - leftBound_1) > this.sourceWorldWidth_ / 2) {\n                        newTriangle[1][0] -= this.sourceWorldWidth_;\n                    }\n                    if ((newTriangle[2][0] - leftBound_1) > this.sourceWorldWidth_ / 2) {\n                        newTriangle[2][0] -= this.sourceWorldWidth_;\n                    }\n                    // Rarely (if the extent contains both the dateline and prime meridian)\n                    // the shift can in turn break some triangles.\n                    // Detect this here and don't shift in such cases.\n                    var minX = Math.min(newTriangle[0][0], newTriangle[1][0], newTriangle[2][0]);\n                    var maxX = Math.max(newTriangle[0][0], newTriangle[1][0], newTriangle[2][0]);\n                    if ((maxX - minX) < this.sourceWorldWidth_ / 2) {\n                        triangle.source = newTriangle;\n                    }\n                }\n            }.bind(this));\n        }\n        transformInvCache = {};\n    }\n    /**\n     * Adds triangle to the triangulation.\n     * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n     * @private\n     */\n    Triangulation.prototype.addTriangle_ = function (a, b, c, aSrc, bSrc, cSrc) {\n        this.triangles_.push({\n            source: [aSrc, bSrc, cSrc],\n            target: [a, b, c]\n        });\n    };\n    /**\n     * Adds quad (points in clock-wise order) to the triangulation\n     * (and reprojects the vertices) if valid.\n     * Performs quad subdivision if needed to increase precision.\n     *\n     * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} d The target d coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} dSrc The source d coordinate.\n     * @param {number} maxSubdivision Maximal allowed subdivision of the quad.\n     * @private\n     */\n    Triangulation.prototype.addQuad_ = function (a, b, c, d, aSrc, bSrc, cSrc, dSrc, maxSubdivision) {\n        var sourceQuadExtent = boundingExtent([aSrc, bSrc, cSrc, dSrc]);\n        var sourceCoverageX = this.sourceWorldWidth_ ?\n            getWidth(sourceQuadExtent) / this.sourceWorldWidth_ : null;\n        var sourceWorldWidth = /** @type {number} */ (this.sourceWorldWidth_);\n        // when the quad is wrapped in the source projection\n        // it covers most of the projection extent, but not fully\n        var wrapsX = this.sourceProj_.canWrapX() &&\n            sourceCoverageX > 0.5 && sourceCoverageX < 1;\n        var needsSubdivision = false;\n        if (maxSubdivision > 0) {\n            if (this.targetProj_.isGlobal() && this.targetWorldWidth_) {\n                var targetQuadExtent = boundingExtent([a, b, c, d]);\n                var targetCoverageX = getWidth(targetQuadExtent) / this.targetWorldWidth_;\n                needsSubdivision = targetCoverageX > MAX_TRIANGLE_WIDTH ||\n                    needsSubdivision;\n            }\n            if (!wrapsX && this.sourceProj_.isGlobal() && sourceCoverageX) {\n                needsSubdivision = sourceCoverageX > MAX_TRIANGLE_WIDTH ||\n                    needsSubdivision;\n            }\n        }\n        if (!needsSubdivision && this.maxSourceExtent_) {\n            if (!intersects(sourceQuadExtent, this.maxSourceExtent_)) {\n                // whole quad outside source projection extent -> ignore\n                return;\n            }\n        }\n        if (!needsSubdivision) {\n            if (!isFinite(aSrc[0]) || !isFinite(aSrc[1]) ||\n                !isFinite(bSrc[0]) || !isFinite(bSrc[1]) ||\n                !isFinite(cSrc[0]) || !isFinite(cSrc[1]) ||\n                !isFinite(dSrc[0]) || !isFinite(dSrc[1])) {\n                if (maxSubdivision > 0) {\n                    needsSubdivision = true;\n                }\n                else {\n                    return;\n                }\n            }\n        }\n        if (maxSubdivision > 0) {\n            if (!needsSubdivision) {\n                var center = [(a[0] + c[0]) / 2, (a[1] + c[1]) / 2];\n                var centerSrc = this.transformInv_(center);\n                var dx = void 0;\n                if (wrapsX) {\n                    var centerSrcEstimX = (modulo(aSrc[0], sourceWorldWidth) +\n                        modulo(cSrc[0], sourceWorldWidth)) / 2;\n                    dx = centerSrcEstimX -\n                        modulo(centerSrc[0], sourceWorldWidth);\n                }\n                else {\n                    dx = (aSrc[0] + cSrc[0]) / 2 - centerSrc[0];\n                }\n                var dy = (aSrc[1] + cSrc[1]) / 2 - centerSrc[1];\n                var centerSrcErrorSquared = dx * dx + dy * dy;\n                needsSubdivision = centerSrcErrorSquared > this.errorThresholdSquared_;\n            }\n            if (needsSubdivision) {\n                if (Math.abs(a[0] - c[0]) <= Math.abs(a[1] - c[1])) {\n                    // split horizontally (top & bottom)\n                    var bc = [(b[0] + c[0]) / 2, (b[1] + c[1]) / 2];\n                    var bcSrc = this.transformInv_(bc);\n                    var da = [(d[0] + a[0]) / 2, (d[1] + a[1]) / 2];\n                    var daSrc = this.transformInv_(da);\n                    this.addQuad_(a, b, bc, da, aSrc, bSrc, bcSrc, daSrc, maxSubdivision - 1);\n                    this.addQuad_(da, bc, c, d, daSrc, bcSrc, cSrc, dSrc, maxSubdivision - 1);\n                }\n                else {\n                    // split vertically (left & right)\n                    var ab = [(a[0] + b[0]) / 2, (a[1] + b[1]) / 2];\n                    var abSrc = this.transformInv_(ab);\n                    var cd = [(c[0] + d[0]) / 2, (c[1] + d[1]) / 2];\n                    var cdSrc = this.transformInv_(cd);\n                    this.addQuad_(a, ab, cd, d, aSrc, abSrc, cdSrc, dSrc, maxSubdivision - 1);\n                    this.addQuad_(ab, b, c, cd, abSrc, bSrc, cSrc, cdSrc, maxSubdivision - 1);\n                }\n                return;\n            }\n        }\n        if (wrapsX) {\n            if (!this.canWrapXInSource_) {\n                return;\n            }\n            this.wrapsXInSource_ = true;\n        }\n        this.addTriangle_(a, c, d, aSrc, cSrc, dSrc);\n        this.addTriangle_(a, b, c, aSrc, bSrc, cSrc);\n    };\n    /**\n     * Calculates extent of the 'source' coordinates from all the triangles.\n     *\n     * @return {import(\"../extent.js\").Extent} Calculated extent.\n     */\n    Triangulation.prototype.calculateSourceExtent = function () {\n        var extent = createEmpty();\n        this.triangles_.forEach(function (triangle, i, arr) {\n            var src = triangle.source;\n            extendCoordinate(extent, src[0]);\n            extendCoordinate(extent, src[1]);\n            extendCoordinate(extent, src[2]);\n        });\n        return extent;\n    };\n    /**\n     * @return {Array<Triangle>} Array of the calculated triangles.\n     */\n    Triangulation.prototype.getTriangles = function () {\n        return this.triangles_;\n    };\n    return Triangulation;\n}());\nexport default Triangulation;\n//# sourceMappingURL=Triangulation.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/reproj/Tile\n */\nimport { ERROR_THRESHOLD } from './common.js';\nimport Tile from '../Tile.js';\nimport TileState from '../TileState.js';\nimport { listen, unlistenByKey } from '../events.js';\nimport EventType from '../events/EventType.js';\nimport { getArea, getCenter, getIntersection } from '../extent.js';\nimport { clamp } from '../math.js';\nimport { calculateSourceResolution, render as renderReprojected } from '../reproj.js';\nimport Triangulation from './Triangulation.js';\n/**\n * @typedef {function(number, number, number, number) : import(\"../Tile.js\").default} FunctionType\n */\n/**\n * @classdesc\n * Class encapsulating single reprojected tile.\n * See {@link module:ol/source/TileImage~TileImage}.\n *\n */\nvar ReprojTile = /** @class */ (function (_super) {\n    __extends(ReprojTile, _super);\n    /**\n     * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n     * @param {import(\"../tilegrid/TileGrid.js\").default} sourceTileGrid Source tile grid.\n     * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n     * @param {import(\"../tilegrid/TileGrid.js\").default} targetTileGrid Target tile grid.\n     * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Coordinate of the tile.\n     * @param {import(\"../tilecoord.js\").TileCoord} wrappedTileCoord Coordinate of the tile wrapped in X.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {number} gutter Gutter of the source tiles.\n     * @param {FunctionType} getTileFunction\n     *     Function returning source tiles (z, x, y, pixelRatio).\n     * @param {number=} opt_errorThreshold Acceptable reprojection error (in px).\n     * @param {boolean=} opt_renderEdges Render reprojection edges.\n     */\n    function ReprojTile(sourceProj, sourceTileGrid, targetProj, targetTileGrid, tileCoord, wrappedTileCoord, pixelRatio, gutter, getTileFunction, opt_errorThreshold, opt_renderEdges) {\n        var _this = _super.call(this, tileCoord, TileState.IDLE) || this;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.renderEdges_ = opt_renderEdges !== undefined ? opt_renderEdges : false;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.pixelRatio_ = pixelRatio;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.gutter_ = gutter;\n        /**\n         * @private\n         * @type {HTMLCanvasElement}\n         */\n        _this.canvas_ = null;\n        /**\n         * @private\n         * @type {import(\"../tilegrid/TileGrid.js\").default}\n         */\n        _this.sourceTileGrid_ = sourceTileGrid;\n        /**\n         * @private\n         * @type {import(\"../tilegrid/TileGrid.js\").default}\n         */\n        _this.targetTileGrid_ = targetTileGrid;\n        /**\n         * @private\n         * @type {import(\"../tilecoord.js\").TileCoord}\n         */\n        _this.wrappedTileCoord_ = wrappedTileCoord ? wrappedTileCoord : tileCoord;\n        /**\n         * @private\n         * @type {!Array<import(\"../Tile.js\").default>}\n         */\n        _this.sourceTiles_ = [];\n        /**\n         * @private\n         * @type {Array<import(\"../events.js\").EventsKey>}\n         */\n        _this.sourcesListenerKeys_ = null;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.sourceZ_ = 0;\n        var targetExtent = targetTileGrid.getTileCoordExtent(_this.wrappedTileCoord_);\n        var maxTargetExtent = _this.targetTileGrid_.getExtent();\n        var maxSourceExtent = _this.sourceTileGrid_.getExtent();\n        var limitedTargetExtent = maxTargetExtent ?\n            getIntersection(targetExtent, maxTargetExtent) : targetExtent;\n        if (getArea(limitedTargetExtent) === 0) {\n            // Tile is completely outside range -> EMPTY\n            // TODO: is it actually correct that the source even creates the tile ?\n            _this.state = TileState.EMPTY;\n            return _this;\n        }\n        var sourceProjExtent = sourceProj.getExtent();\n        if (sourceProjExtent) {\n            if (!maxSourceExtent) {\n                maxSourceExtent = sourceProjExtent;\n            }\n            else {\n                maxSourceExtent = getIntersection(maxSourceExtent, sourceProjExtent);\n            }\n        }\n        var targetResolution = targetTileGrid.getResolution(_this.wrappedTileCoord_[0]);\n        var targetCenter = getCenter(limitedTargetExtent);\n        var sourceResolution = calculateSourceResolution(sourceProj, targetProj, targetCenter, targetResolution);\n        if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n            // invalid sourceResolution -> EMPTY\n            // probably edges of the projections when no extent is defined\n            _this.state = TileState.EMPTY;\n            return _this;\n        }\n        var errorThresholdInPixels = opt_errorThreshold !== undefined ?\n            opt_errorThreshold : ERROR_THRESHOLD;\n        /**\n         * @private\n         * @type {!import(\"./Triangulation.js\").default}\n         */\n        _this.triangulation_ = new Triangulation(sourceProj, targetProj, limitedTargetExtent, maxSourceExtent, sourceResolution * errorThresholdInPixels);\n        if (_this.triangulation_.getTriangles().length === 0) {\n            // no valid triangles -> EMPTY\n            _this.state = TileState.EMPTY;\n            return _this;\n        }\n        _this.sourceZ_ = sourceTileGrid.getZForResolution(sourceResolution);\n        var sourceExtent = _this.triangulation_.calculateSourceExtent();\n        if (maxSourceExtent) {\n            if (sourceProj.canWrapX()) {\n                sourceExtent[1] = clamp(sourceExtent[1], maxSourceExtent[1], maxSourceExtent[3]);\n                sourceExtent[3] = clamp(sourceExtent[3], maxSourceExtent[1], maxSourceExtent[3]);\n            }\n            else {\n                sourceExtent = getIntersection(sourceExtent, maxSourceExtent);\n            }\n        }\n        if (!getArea(sourceExtent)) {\n            _this.state = TileState.EMPTY;\n        }\n        else {\n            var sourceRange = sourceTileGrid.getTileRangeForExtentAndZ(sourceExtent, _this.sourceZ_);\n            for (var srcX = sourceRange.minX; srcX <= sourceRange.maxX; srcX++) {\n                for (var srcY = sourceRange.minY; srcY <= sourceRange.maxY; srcY++) {\n                    var tile = getTileFunction(_this.sourceZ_, srcX, srcY, pixelRatio);\n                    if (tile) {\n                        _this.sourceTiles_.push(tile);\n                    }\n                }\n            }\n            if (_this.sourceTiles_.length === 0) {\n                _this.state = TileState.EMPTY;\n            }\n        }\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    ReprojTile.prototype.disposeInternal = function () {\n        if (this.state == TileState.LOADING) {\n            this.unlistenSources_();\n        }\n        _super.prototype.disposeInternal.call(this);\n    };\n    /**\n     * Get the HTML Canvas element for this tile.\n     * @return {HTMLCanvasElement} Canvas.\n     */\n    ReprojTile.prototype.getImage = function () {\n        return this.canvas_;\n    };\n    /**\n     * @private\n     */\n    ReprojTile.prototype.reproject_ = function () {\n        var sources = [];\n        this.sourceTiles_.forEach(function (tile, i, arr) {\n            if (tile && tile.getState() == TileState.LOADED) {\n                sources.push({\n                    extent: this.sourceTileGrid_.getTileCoordExtent(tile.tileCoord),\n                    image: tile.getImage()\n                });\n            }\n        }.bind(this));\n        this.sourceTiles_.length = 0;\n        if (sources.length === 0) {\n            this.state = TileState.ERROR;\n        }\n        else {\n            var z = this.wrappedTileCoord_[0];\n            var size = this.targetTileGrid_.getTileSize(z);\n            var width = typeof size === 'number' ? size : size[0];\n            var height = typeof size === 'number' ? size : size[1];\n            var targetResolution = this.targetTileGrid_.getResolution(z);\n            var sourceResolution = this.sourceTileGrid_.getResolution(this.sourceZ_);\n            var targetExtent = this.targetTileGrid_.getTileCoordExtent(this.wrappedTileCoord_);\n            this.canvas_ = renderReprojected(width, height, this.pixelRatio_, sourceResolution, this.sourceTileGrid_.getExtent(), targetResolution, targetExtent, this.triangulation_, sources, this.gutter_, this.renderEdges_);\n            this.state = TileState.LOADED;\n        }\n        this.changed();\n    };\n    /**\n     * @inheritDoc\n     */\n    ReprojTile.prototype.load = function () {\n        if (this.state == TileState.IDLE) {\n            this.state = TileState.LOADING;\n            this.changed();\n            var leftToLoad_1 = 0;\n            this.sourcesListenerKeys_ = [];\n            this.sourceTiles_.forEach(function (tile, i, arr) {\n                var state = tile.getState();\n                if (state == TileState.IDLE || state == TileState.LOADING) {\n                    leftToLoad_1++;\n                    var sourceListenKey_1 = listen(tile, EventType.CHANGE, function (e) {\n                        var state = tile.getState();\n                        if (state == TileState.LOADED ||\n                            state == TileState.ERROR ||\n                            state == TileState.EMPTY) {\n                            unlistenByKey(sourceListenKey_1);\n                            leftToLoad_1--;\n                            if (leftToLoad_1 === 0) {\n                                this.unlistenSources_();\n                                this.reproject_();\n                            }\n                        }\n                    }, this);\n                    this.sourcesListenerKeys_.push(sourceListenKey_1);\n                }\n            }.bind(this));\n            this.sourceTiles_.forEach(function (tile, i, arr) {\n                var state = tile.getState();\n                if (state == TileState.IDLE) {\n                    tile.load();\n                }\n            });\n            if (leftToLoad_1 === 0) {\n                setTimeout(this.reproject_.bind(this), 0);\n            }\n        }\n    };\n    /**\n     * @private\n     */\n    ReprojTile.prototype.unlistenSources_ = function () {\n        this.sourcesListenerKeys_.forEach(unlistenByKey);\n        this.sourcesListenerKeys_ = null;\n    };\n    return ReprojTile;\n}(Tile));\nexport default ReprojTile;\n//# sourceMappingURL=Tile.js.map","/**\n * @module ol/tileurlfunction\n */\nimport { assert } from './asserts.js';\nimport { modulo } from './math.js';\nimport { hash as tileCoordHash } from './tilecoord.js';\n/**\n * @param {string} template Template.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplate(template, tileGrid) {\n    var zRegEx = /\\{z\\}/g;\n    var xRegEx = /\\{x\\}/g;\n    var yRegEx = /\\{y\\}/g;\n    var dashYRegEx = /\\{-y\\}/g;\n    return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n        if (!tileCoord) {\n            return undefined;\n        }\n        else {\n            return template.replace(zRegEx, tileCoord[0].toString())\n                .replace(xRegEx, tileCoord[1].toString())\n                .replace(yRegEx, tileCoord[2].toString())\n                .replace(dashYRegEx, function () {\n                var z = tileCoord[0];\n                var range = tileGrid.getFullTileRange(z);\n                assert(range, 55); // The {-y} placeholder requires a tile grid with extent\n                var y = range.getHeight() - tileCoord[2] - 1;\n                return y.toString();\n            });\n        }\n    });\n}\n/**\n * @param {Array<string>} templates Templates.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplates(templates, tileGrid) {\n    var len = templates.length;\n    var tileUrlFunctions = new Array(len);\n    for (var i = 0; i < len; ++i) {\n        tileUrlFunctions[i] = createFromTemplate(templates[i], tileGrid);\n    }\n    return createFromTileUrlFunctions(tileUrlFunctions);\n}\n/**\n * @param {Array<import(\"./Tile.js\").UrlFunction>} tileUrlFunctions Tile URL Functions.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTileUrlFunctions(tileUrlFunctions) {\n    if (tileUrlFunctions.length === 1) {\n        return tileUrlFunctions[0];\n    }\n    return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n        if (!tileCoord) {\n            return undefined;\n        }\n        else {\n            var h = tileCoordHash(tileCoord);\n            var index = modulo(h, tileUrlFunctions.length);\n            return tileUrlFunctions[index](tileCoord, pixelRatio, projection);\n        }\n    });\n}\n/**\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {number} pixelRatio Pixel ratio.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {string|undefined} Tile URL.\n */\nexport function nullTileUrlFunction(tileCoord, pixelRatio, projection) {\n    return undefined;\n}\n/**\n * @param {string} url URL.\n * @return {Array<string>} Array of urls.\n */\nexport function expandUrl(url) {\n    var urls = [];\n    var match = /\\{([a-z])-([a-z])\\}/.exec(url);\n    if (match) {\n        // char range\n        var startCharCode = match[1].charCodeAt(0);\n        var stopCharCode = match[2].charCodeAt(0);\n        var charCode = void 0;\n        for (charCode = startCharCode; charCode <= stopCharCode; ++charCode) {\n            urls.push(url.replace(match[0], String.fromCharCode(charCode)));\n        }\n        return urls;\n    }\n    match = match = /\\{(\\d+)-(\\d+)\\}/.exec(url);\n    if (match) {\n        // number range\n        var stop_1 = parseInt(match[2], 10);\n        for (var i = parseInt(match[1], 10); i <= stop_1; i++) {\n            urls.push(url.replace(match[0], i.toString()));\n        }\n        return urls;\n    }\n    urls.push(url);\n    return urls;\n}\n//# sourceMappingURL=tileurlfunction.js.map","/**\n * @module ol/tilegrid/TileGrid\n */\nimport { DEFAULT_TILE_SIZE } from './common.js';\nimport { assert } from '../asserts.js';\nimport TileRange, { createOrUpdate as createOrUpdateTileRange } from '../TileRange.js';\nimport { isSorted, linearFindNearest } from '../array.js';\nimport { createOrUpdate, getTopLeft } from '../extent.js';\nimport { clamp } from '../math.js';\nimport { toSize } from '../size.js';\nimport { createOrUpdate as createOrUpdateTileCoord } from '../tilecoord.js';\n/**\n * @private\n * @type {import(\"../tilecoord.js\").TileCoord}\n */\nvar tmpTileCoord = [0, 0, 0];\n/**\n * @typedef {Object} Options\n * @property {import(\"../extent.js\").Extent} [extent] Extent for the tile grid. No tiles outside this\n * extent will be requested by {@link module:ol/source/Tile} sources. When no `origin` or\n * `origins` are configured, the `origin` will be set to the top-left corner of the extent.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {import(\"../coordinate.js\").Coordinate} [origin] The tile grid origin, i.e. where the `x`\n * and `y` axes meet (`[z, 0, 0]`). Tile coordinates increase left to right and upwards. If not\n * specified, `extent` or `origins` must be provided.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} [origins] Tile grid origins, i.e. where\n * the `x` and `y` axes meet (`[z, 0, 0]`), for each zoom level. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * origin. Tile coordinates increase left to right and upwards. If not specified, `extent` or\n * `origin` must be provided.\n * @property {!Array<number>} resolutions Resolutions. The array index of each resolution needs\n * to match the zoom level. This means that even if a `minZoom` is configured, the resolutions\n * array will have a length of `maxZoom + 1`.\n * @property {Array<import(\"../size.js\").Size>} [sizes] Sizes.\n * @property {number|import(\"../size.js\").Size} [tileSize] Tile size.\n * Default is `[256, 256]`.\n * @property {Array<import(\"../size.js\").Size>} [tileSizes] Tile sizes. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * tile size.\n */\n/**\n * @classdesc\n * Base class for setting the grid pattern for sources accessing tiled-image\n * servers.\n * @api\n */\nvar TileGrid = /** @class */ (function () {\n    /**\n     * @param {Options} options Tile grid options.\n     */\n    function TileGrid(options) {\n        /**\n         * @protected\n         * @type {number}\n         */\n        this.minZoom = options.minZoom !== undefined ? options.minZoom : 0;\n        /**\n         * @private\n         * @type {!Array<number>}\n         */\n        this.resolutions_ = options.resolutions;\n        assert(isSorted(this.resolutions_, function (a, b) {\n            return b - a;\n        }, true), 17); // `resolutions` must be sorted in descending order\n        // check if we've got a consistent zoom factor and origin\n        var zoomFactor;\n        if (!options.origins) {\n            for (var i = 0, ii = this.resolutions_.length - 1; i < ii; ++i) {\n                if (!zoomFactor) {\n                    zoomFactor = this.resolutions_[i] / this.resolutions_[i + 1];\n                }\n                else {\n                    if (this.resolutions_[i] / this.resolutions_[i + 1] !== zoomFactor) {\n                        zoomFactor = undefined;\n                        break;\n                    }\n                }\n            }\n        }\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        this.zoomFactor_ = zoomFactor;\n        /**\n         * @protected\n         * @type {number}\n         */\n        this.maxZoom = this.resolutions_.length - 1;\n        /**\n         * @private\n         * @type {import(\"../coordinate.js\").Coordinate}\n         */\n        this.origin_ = options.origin !== undefined ? options.origin : null;\n        /**\n         * @private\n         * @type {Array<import(\"../coordinate.js\").Coordinate>}\n         */\n        this.origins_ = null;\n        if (options.origins !== undefined) {\n            this.origins_ = options.origins;\n            assert(this.origins_.length == this.resolutions_.length, 20); // Number of `origins` and `resolutions` must be equal\n        }\n        var extent = options.extent;\n        if (extent !== undefined &&\n            !this.origin_ && !this.origins_) {\n            this.origin_ = getTopLeft(extent);\n        }\n        assert((!this.origin_ && this.origins_) || (this.origin_ && !this.origins_), 18); // Either `origin` or `origins` must be configured, never both\n        /**\n         * @private\n         * @type {Array<number|import(\"../size.js\").Size>}\n         */\n        this.tileSizes_ = null;\n        if (options.tileSizes !== undefined) {\n            this.tileSizes_ = options.tileSizes;\n            assert(this.tileSizes_.length == this.resolutions_.length, 19); // Number of `tileSizes` and `resolutions` must be equal\n        }\n        /**\n         * @private\n         * @type {number|import(\"../size.js\").Size}\n         */\n        this.tileSize_ = options.tileSize !== undefined ?\n            options.tileSize :\n            !this.tileSizes_ ? DEFAULT_TILE_SIZE : null;\n        assert((!this.tileSize_ && this.tileSizes_) ||\n            (this.tileSize_ && !this.tileSizes_), 22); // Either `tileSize` or `tileSizes` must be configured, never both\n        /**\n         * @private\n         * @type {import(\"../extent.js\").Extent}\n         */\n        this.extent_ = extent !== undefined ? extent : null;\n        /**\n         * @private\n         * @type {Array<import(\"../TileRange.js\").default>}\n         */\n        this.fullTileRanges_ = null;\n        /**\n         * @private\n         * @type {import(\"../size.js\").Size}\n         */\n        this.tmpSize_ = [0, 0];\n        if (options.sizes !== undefined) {\n            this.fullTileRanges_ = options.sizes.map(function (size, z) {\n                var tileRange = new TileRange(Math.min(0, size[0]), Math.max(size[0] - 1, -1), Math.min(0, size[1]), Math.max(size[1] - 1, -1));\n                return tileRange;\n            }, this);\n        }\n        else if (extent) {\n            this.calculateTileRanges_(extent);\n        }\n    }\n    /**\n     * Call a function with each tile coordinate for a given extent and zoom level.\n     *\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {number} zoom Integer zoom level.\n     * @param {function(import(\"../tilecoord.js\").TileCoord): void} callback Function called with each tile coordinate.\n     * @api\n     */\n    TileGrid.prototype.forEachTileCoord = function (extent, zoom, callback) {\n        var tileRange = this.getTileRangeForExtentAndZ(extent, zoom);\n        for (var i = tileRange.minX, ii = tileRange.maxX; i <= ii; ++i) {\n            for (var j = tileRange.minY, jj = tileRange.maxY; j <= jj; ++j) {\n                callback([zoom, i, j]);\n            }\n        }\n    };\n    /**\n     * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @param {function(number, import(\"../TileRange.js\").default): boolean} callback Callback.\n     * @param {import(\"../TileRange.js\").default=} opt_tileRange Temporary import(\"../TileRange.js\").default object.\n     * @param {import(\"../extent.js\").Extent=} opt_extent Temporary import(\"../extent.js\").Extent object.\n     * @return {boolean} Callback succeeded.\n     */\n    TileGrid.prototype.forEachTileCoordParentTileRange = function (tileCoord, callback, opt_tileRange, opt_extent) {\n        var tileRange, x, y;\n        var tileCoordExtent = null;\n        var z = tileCoord[0] - 1;\n        if (this.zoomFactor_ === 2) {\n            x = tileCoord[1];\n            y = tileCoord[2];\n        }\n        else {\n            tileCoordExtent = this.getTileCoordExtent(tileCoord, opt_extent);\n        }\n        while (z >= this.minZoom) {\n            if (this.zoomFactor_ === 2) {\n                x = Math.floor(x / 2);\n                y = Math.floor(y / 2);\n                tileRange = createOrUpdateTileRange(x, x, y, y, opt_tileRange);\n            }\n            else {\n                tileRange = this.getTileRangeForExtentAndZ(tileCoordExtent, z, opt_tileRange);\n            }\n            if (callback(z, tileRange)) {\n                return true;\n            }\n            --z;\n        }\n        return false;\n    };\n    /**\n     * Get the extent for this tile grid, if it was configured.\n     * @return {import(\"../extent.js\").Extent} Extent.\n     */\n    TileGrid.prototype.getExtent = function () {\n        return this.extent_;\n    };\n    /**\n     * Get the maximum zoom level for the grid.\n     * @return {number} Max zoom.\n     * @api\n     */\n    TileGrid.prototype.getMaxZoom = function () {\n        return this.maxZoom;\n    };\n    /**\n     * Get the minimum zoom level for the grid.\n     * @return {number} Min zoom.\n     * @api\n     */\n    TileGrid.prototype.getMinZoom = function () {\n        return this.minZoom;\n    };\n    /**\n     * Get the origin for the grid at the given zoom level.\n     * @param {number} z Integer zoom level.\n     * @return {import(\"../coordinate.js\").Coordinate} Origin.\n     * @api\n     */\n    TileGrid.prototype.getOrigin = function (z) {\n        if (this.origin_) {\n            return this.origin_;\n        }\n        else {\n            return this.origins_[z];\n        }\n    };\n    /**\n     * Get the resolution for the given zoom level.\n     * @param {number} z Integer zoom level.\n     * @return {number} Resolution.\n     * @api\n     */\n    TileGrid.prototype.getResolution = function (z) {\n        return this.resolutions_[z];\n    };\n    /**\n     * Get the list of resolutions for the tile grid.\n     * @return {Array<number>} Resolutions.\n     * @api\n     */\n    TileGrid.prototype.getResolutions = function () {\n        return this.resolutions_;\n    };\n    /**\n     * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @param {import(\"../TileRange.js\").default=} opt_tileRange Temporary import(\"../TileRange.js\").default object.\n     * @param {import(\"../extent.js\").Extent=} opt_extent Temporary import(\"../extent.js\").Extent object.\n     * @return {import(\"../TileRange.js\").default} Tile range.\n     */\n    TileGrid.prototype.getTileCoordChildTileRange = function (tileCoord, opt_tileRange, opt_extent) {\n        if (tileCoord[0] < this.maxZoom) {\n            if (this.zoomFactor_ === 2) {\n                var minX = tileCoord[1] * 2;\n                var minY = tileCoord[2] * 2;\n                return createOrUpdateTileRange(minX, minX + 1, minY, minY + 1, opt_tileRange);\n            }\n            var tileCoordExtent = this.getTileCoordExtent(tileCoord, opt_extent);\n            return this.getTileRangeForExtentAndZ(tileCoordExtent, tileCoord[0] + 1, opt_tileRange);\n        }\n        return null;\n    };\n    /**\n     * Get the extent for a tile range.\n     * @param {number} z Integer zoom level.\n     * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n     * @param {import(\"../extent.js\").Extent=} opt_extent Temporary import(\"../extent.js\").Extent object.\n     * @return {import(\"../extent.js\").Extent} Extent.\n     */\n    TileGrid.prototype.getTileRangeExtent = function (z, tileRange, opt_extent) {\n        var origin = this.getOrigin(z);\n        var resolution = this.getResolution(z);\n        var tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n        var minX = origin[0] + tileRange.minX * tileSize[0] * resolution;\n        var maxX = origin[0] + (tileRange.maxX + 1) * tileSize[0] * resolution;\n        var minY = origin[1] + tileRange.minY * tileSize[1] * resolution;\n        var maxY = origin[1] + (tileRange.maxY + 1) * tileSize[1] * resolution;\n        return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n    };\n    /**\n     * Get a tile range for the given extent and integer zoom level.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {number} z Integer zoom level.\n     * @param {import(\"../TileRange.js\").default=} opt_tileRange Temporary tile range object.\n     * @return {import(\"../TileRange.js\").default} Tile range.\n     */\n    TileGrid.prototype.getTileRangeForExtentAndZ = function (extent, z, opt_tileRange) {\n        var tileCoord = tmpTileCoord;\n        this.getTileCoordForXYAndZ_(extent[0], extent[3], z, false, tileCoord);\n        var minX = tileCoord[1];\n        var minY = tileCoord[2];\n        this.getTileCoordForXYAndZ_(extent[2], extent[1], z, true, tileCoord);\n        return createOrUpdateTileRange(minX, tileCoord[1], minY, tileCoord[2], opt_tileRange);\n    };\n    /**\n     * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @return {import(\"../coordinate.js\").Coordinate} Tile center.\n     */\n    TileGrid.prototype.getTileCoordCenter = function (tileCoord) {\n        var origin = this.getOrigin(tileCoord[0]);\n        var resolution = this.getResolution(tileCoord[0]);\n        var tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n        return [\n            origin[0] + (tileCoord[1] + 0.5) * tileSize[0] * resolution,\n            origin[1] - (tileCoord[2] + 0.5) * tileSize[1] * resolution\n        ];\n    };\n    /**\n     * Get the extent of a tile coordinate.\n     *\n     * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @param {import(\"../extent.js\").Extent=} opt_extent Temporary extent object.\n     * @return {import(\"../extent.js\").Extent} Extent.\n     * @api\n     */\n    TileGrid.prototype.getTileCoordExtent = function (tileCoord, opt_extent) {\n        var origin = this.getOrigin(tileCoord[0]);\n        var resolution = this.getResolution(tileCoord[0]);\n        var tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n        var minX = origin[0] + tileCoord[1] * tileSize[0] * resolution;\n        var minY = origin[1] - (tileCoord[2] + 1) * tileSize[1] * resolution;\n        var maxX = minX + tileSize[0] * resolution;\n        var maxY = minY + tileSize[1] * resolution;\n        return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n    };\n    /**\n     * Get the tile coordinate for the given map coordinate and resolution.  This\n     * method considers that coordinates that intersect tile boundaries should be\n     * assigned the higher tile coordinate.\n     *\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {number} resolution Resolution.\n     * @param {import(\"../tilecoord.js\").TileCoord=} opt_tileCoord Destination import(\"../tilecoord.js\").TileCoord object.\n     * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n     * @api\n     */\n    TileGrid.prototype.getTileCoordForCoordAndResolution = function (coordinate, resolution, opt_tileCoord) {\n        return this.getTileCoordForXYAndResolution_(coordinate[0], coordinate[1], resolution, false, opt_tileCoord);\n    };\n    /**\n     * Note that this method should not be called for resolutions that correspond\n     * to an integer zoom level.  Instead call the `getTileCoordForXYAndZ_` method.\n     * @param {number} x X.\n     * @param {number} y Y.\n     * @param {number} resolution Resolution (for a non-integer zoom level).\n     * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n     *     intersections go to the higher tile coordinate, let edge intersections\n     *     go to the lower tile coordinate.\n     * @param {import(\"../tilecoord.js\").TileCoord=} opt_tileCoord Temporary import(\"../tilecoord.js\").TileCoord object.\n     * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n     * @private\n     */\n    TileGrid.prototype.getTileCoordForXYAndResolution_ = function (x, y, resolution, reverseIntersectionPolicy, opt_tileCoord) {\n        var z = this.getZForResolution(resolution);\n        var scale = resolution / this.getResolution(z);\n        var origin = this.getOrigin(z);\n        var tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n        var adjustX = reverseIntersectionPolicy ? 0.5 : 0;\n        var adjustY = reverseIntersectionPolicy ? 0.5 : 0;\n        var xFromOrigin = Math.floor((x - origin[0]) / resolution + adjustX);\n        var yFromOrigin = Math.floor((origin[1] - y) / resolution + adjustY);\n        var tileCoordX = scale * xFromOrigin / tileSize[0];\n        var tileCoordY = scale * yFromOrigin / tileSize[1];\n        if (reverseIntersectionPolicy) {\n            tileCoordX = Math.ceil(tileCoordX) - 1;\n            tileCoordY = Math.ceil(tileCoordY) - 1;\n        }\n        else {\n            tileCoordX = Math.floor(tileCoordX);\n            tileCoordY = Math.floor(tileCoordY);\n        }\n        return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n    };\n    /**\n     * Although there is repetition between this method and `getTileCoordForXYAndResolution_`,\n     * they should have separate implementations.  This method is for integer zoom\n     * levels.  The other method should only be called for resolutions corresponding\n     * to non-integer zoom levels.\n     * @param {number} x Map x coordinate.\n     * @param {number} y Map y coordinate.\n     * @param {number} z Integer zoom level.\n     * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n     *     intersections go to the higher tile coordinate, let edge intersections\n     *     go to the lower tile coordinate.\n     * @param {import(\"../tilecoord.js\").TileCoord=} opt_tileCoord Temporary import(\"../tilecoord.js\").TileCoord object.\n     * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n     * @private\n     */\n    TileGrid.prototype.getTileCoordForXYAndZ_ = function (x, y, z, reverseIntersectionPolicy, opt_tileCoord) {\n        var origin = this.getOrigin(z);\n        var resolution = this.getResolution(z);\n        var tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n        var adjustX = reverseIntersectionPolicy ? 0.5 : 0;\n        var adjustY = reverseIntersectionPolicy ? 0.5 : 0;\n        var xFromOrigin = Math.floor((x - origin[0]) / resolution + adjustX);\n        var yFromOrigin = Math.floor((origin[1] - y) / resolution + adjustY);\n        var tileCoordX = xFromOrigin / tileSize[0];\n        var tileCoordY = yFromOrigin / tileSize[1];\n        if (reverseIntersectionPolicy) {\n            tileCoordX = Math.ceil(tileCoordX) - 1;\n            tileCoordY = Math.ceil(tileCoordY) - 1;\n        }\n        else {\n            tileCoordX = Math.floor(tileCoordX);\n            tileCoordY = Math.floor(tileCoordY);\n        }\n        return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n    };\n    /**\n     * Get a tile coordinate given a map coordinate and zoom level.\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {number} z Zoom level.\n     * @param {import(\"../tilecoord.js\").TileCoord=} opt_tileCoord Destination import(\"../tilecoord.js\").TileCoord object.\n     * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n     * @api\n     */\n    TileGrid.prototype.getTileCoordForCoordAndZ = function (coordinate, z, opt_tileCoord) {\n        return this.getTileCoordForXYAndZ_(coordinate[0], coordinate[1], z, false, opt_tileCoord);\n    };\n    /**\n     * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @return {number} Tile resolution.\n     */\n    TileGrid.prototype.getTileCoordResolution = function (tileCoord) {\n        return this.resolutions_[tileCoord[0]];\n    };\n    /**\n     * Get the tile size for a zoom level. The type of the return value matches the\n     * `tileSize` or `tileSizes` that the tile grid was configured with. To always\n     * get an `import(\"../size.js\").Size`, run the result through `import(\"../size.js\").Size.toSize()`.\n     * @param {number} z Z.\n     * @return {number|import(\"../size.js\").Size} Tile size.\n     * @api\n     */\n    TileGrid.prototype.getTileSize = function (z) {\n        if (this.tileSize_) {\n            return this.tileSize_;\n        }\n        else {\n            return this.tileSizes_[z];\n        }\n    };\n    /**\n     * @param {number} z Zoom level.\n     * @return {import(\"../TileRange.js\").default} Extent tile range for the specified zoom level.\n     */\n    TileGrid.prototype.getFullTileRange = function (z) {\n        if (!this.fullTileRanges_) {\n            return null;\n        }\n        else {\n            return this.fullTileRanges_[z];\n        }\n    };\n    /**\n     * @param {number} resolution Resolution.\n     * @param {number=} opt_direction If 0, the nearest resolution will be used.\n     *     If 1, the nearest lower resolution will be used. If -1, the nearest\n     *     higher resolution will be used. Default is 0.\n     * @return {number} Z.\n     * @api\n     */\n    TileGrid.prototype.getZForResolution = function (resolution, opt_direction) {\n        var z = linearFindNearest(this.resolutions_, resolution, opt_direction || 0);\n        return clamp(z, this.minZoom, this.maxZoom);\n    };\n    /**\n     * @param {!import(\"../extent.js\").Extent} extent Extent for this tile grid.\n     * @private\n     */\n    TileGrid.prototype.calculateTileRanges_ = function (extent) {\n        var length = this.resolutions_.length;\n        var fullTileRanges = new Array(length);\n        for (var z = this.minZoom; z < length; ++z) {\n            fullTileRanges[z] = this.getTileRangeForExtentAndZ(extent, z);\n        }\n        this.fullTileRanges_ = fullTileRanges;\n    };\n    return TileGrid;\n}());\nexport default TileGrid;\n//# sourceMappingURL=TileGrid.js.map","/**\n * @module ol/tilegrid\n */\nimport { DEFAULT_MAX_ZOOM, DEFAULT_TILE_SIZE } from './tilegrid/common.js';\nimport { toSize } from './size.js';\nimport { containsCoordinate, createOrUpdate, getCorner, getHeight, getWidth } from './extent.js';\nimport Corner from './extent/Corner.js';\nimport { get as getProjection, METERS_PER_UNIT } from './proj.js';\nimport Units from './proj/Units.js';\nimport TileGrid from './tilegrid/TileGrid.js';\n/**\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {!TileGrid} Default tile grid for the\n * passed projection.\n */\nexport function getForProjection(projection) {\n    var tileGrid = projection.getDefaultTileGrid();\n    if (!tileGrid) {\n        tileGrid = createForProjection(projection);\n        projection.setDefaultTileGrid(tileGrid);\n    }\n    return tileGrid;\n}\n/**\n * @param {TileGrid} tileGrid Tile grid.\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {import(\"./tilecoord.js\").TileCoord} Tile coordinate.\n */\nexport function wrapX(tileGrid, tileCoord, projection) {\n    var z = tileCoord[0];\n    var center = tileGrid.getTileCoordCenter(tileCoord);\n    var projectionExtent = extentFromProjection(projection);\n    if (!containsCoordinate(projectionExtent, center)) {\n        var worldWidth = getWidth(projectionExtent);\n        var worldsAway = Math.ceil((projectionExtent[0] - center[0]) / worldWidth);\n        center[0] += worldWidth * worldsAway;\n        return tileGrid.getTileCoordForCoordAndZ(center, z);\n    }\n    else {\n        return tileCoord;\n    }\n}\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number=} opt_maxZoom Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size=} opt_tileSize Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {Corner=} opt_corner Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForExtent(extent, opt_maxZoom, opt_tileSize, opt_corner) {\n    var corner = opt_corner !== undefined ? opt_corner : Corner.TOP_LEFT;\n    var resolutions = resolutionsFromExtent(extent, opt_maxZoom, opt_tileSize);\n    return new TileGrid({\n        extent: extent,\n        origin: getCorner(extent, corner),\n        resolutions: resolutions,\n        tileSize: opt_tileSize\n    });\n}\n/**\n * @typedef {Object} XYZOptions\n * @property {import(\"./extent.js\").Extent} [extent] Extent for the tile grid. The origin for an XYZ tile grid is the\n * top-left corner of the extent. The zero level of the grid is defined by the resolution at which one tile fits in the\n * provided extent. If not provided, the extent of the EPSG:3857 projection is used.\n * @property {number} [maxZoom] Maximum zoom. The default is `42`. This determines the number of levels\n * in the grid set. For example, a `maxZoom` of 21 means there are 22 levels in the grid set.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {number|import(\"./size.js\").Size} [tileSize=[256, 256]] Tile size in pixels.\n */\n/**\n * Creates a tile grid with a standard XYZ tiling scheme.\n * @param {XYZOptions=} opt_options Tile grid options.\n * @return {!TileGrid} Tile grid instance.\n * @api\n */\nexport function createXYZ(opt_options) {\n    /** @type {XYZOptions} */\n    var xyzOptions = opt_options || {};\n    var extent = xyzOptions.extent || getProjection('EPSG:3857').getExtent();\n    /** @type {import(\"./tilegrid/TileGrid.js\").Options} */\n    var gridOptions = {\n        extent: extent,\n        minZoom: xyzOptions.minZoom,\n        tileSize: xyzOptions.tileSize,\n        resolutions: resolutionsFromExtent(extent, xyzOptions.maxZoom, xyzOptions.tileSize)\n    };\n    return new TileGrid(gridOptions);\n}\n/**\n * Create a resolutions array from an extent.  A zoom factor of 2 is assumed.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number=} opt_maxZoom Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size=} opt_tileSize Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @return {!Array<number>} Resolutions array.\n */\nfunction resolutionsFromExtent(extent, opt_maxZoom, opt_tileSize) {\n    var maxZoom = opt_maxZoom !== undefined ?\n        opt_maxZoom : DEFAULT_MAX_ZOOM;\n    var height = getHeight(extent);\n    var width = getWidth(extent);\n    var tileSize = toSize(opt_tileSize !== undefined ?\n        opt_tileSize : DEFAULT_TILE_SIZE);\n    var maxResolution = Math.max(width / tileSize[0], height / tileSize[1]);\n    var length = maxZoom + 1;\n    var resolutions = new Array(length);\n    for (var z = 0; z < length; ++z) {\n        resolutions[z] = maxResolution / Math.pow(2, z);\n    }\n    return resolutions;\n}\n/**\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @param {number=} opt_maxZoom Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size=} opt_tileSize Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {Corner=} opt_corner Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForProjection(projection, opt_maxZoom, opt_tileSize, opt_corner) {\n    var extent = extentFromProjection(projection);\n    return createForExtent(extent, opt_maxZoom, opt_tileSize, opt_corner);\n}\n/**\n * Generate a tile grid extent from a projection.  If the projection has an\n * extent, it is used.  If not, a global extent is assumed.\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @return {import(\"./extent.js\").Extent} Extent.\n */\nexport function extentFromProjection(projection) {\n    projection = getProjection(projection);\n    var extent = projection.getExtent();\n    if (!extent) {\n        var half = 180 * METERS_PER_UNIT[Units.DEGREES] / projection.getMetersPerUnit();\n        extent = createOrUpdate(-half, -half, half, half);\n    }\n    return extent;\n}\n//# sourceMappingURL=tilegrid.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/source/Tile\n */\nimport { abstract } from '../util.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport Event from '../events/Event.js';\nimport { equivalent } from '../proj.js';\nimport { toSize, scale as scaleSize } from '../size.js';\nimport Source from './Source.js';\nimport { getKeyZXY, withinExtentAndZ } from '../tilecoord.js';\nimport { wrapX, getForProjection as getTileGridForProjection } from '../tilegrid.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions]\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize]\n * @property {boolean} [opaque]\n * @property {number} [tilePixelRatio]\n * @property {import(\"../proj.js\").ProjectionLike} [projection]\n * @property {import(\"./State.js\").default} [state]\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid]\n * @property {boolean} [wrapX=true]\n * @property {number} [transition]\n * @property {string} [key]\n */\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for sources providing images divided into a tile grid.\n * @abstract\n * @api\n */\nvar TileSource = /** @class */ (function (_super) {\n    __extends(TileSource, _super);\n    /**\n     * @param {Options} options SourceTile source options.\n     */\n    function TileSource(options) {\n        var _this = _super.call(this, {\n            attributions: options.attributions,\n            attributionsCollapsible: options.attributionsCollapsible,\n            projection: options.projection,\n            state: options.state,\n            wrapX: options.wrapX\n        }) || this;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.opaque_ = options.opaque !== undefined ? options.opaque : false;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.tilePixelRatio_ = options.tilePixelRatio !== undefined ?\n            options.tilePixelRatio : 1;\n        /**\n         * @protected\n         * @type {import(\"../tilegrid/TileGrid.js\").default}\n         */\n        _this.tileGrid = options.tileGrid !== undefined ? options.tileGrid : null;\n        var cacheSize = options.cacheSize;\n        if (cacheSize === undefined) {\n            var tileSize = [256, 256];\n            var tileGrid = options.tileGrid;\n            if (tileGrid) {\n                toSize(tileGrid.getTileSize(tileGrid.getMinZoom()), tileSize);\n            }\n            var canUseScreen = 'screen' in self;\n            var width = canUseScreen ? (screen.availWidth || screen.width) : 1920;\n            var height = canUseScreen ? (screen.availHeight || screen.height) : 1080;\n            cacheSize = 4 * Math.ceil(width / tileSize[0]) * Math.ceil(height / tileSize[1]);\n        }\n        /**\n         * @protected\n         * @type {import(\"../TileCache.js\").default}\n         */\n        _this.tileCache = new TileCache(cacheSize);\n        /**\n         * @protected\n         * @type {import(\"../size.js\").Size}\n         */\n        _this.tmpSize = [0, 0];\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.key_ = options.key || '';\n        /**\n         * @protected\n         * @type {import(\"../Tile.js\").Options}\n         */\n        _this.tileOptions = { transition: options.transition };\n        /**\n         * zDirection hint, read by the renderer. Indicates which resolution should be used\n         * by a renderer if the views resolution does not match any resolution of the tile source.\n         * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n         * will be used. If -1, the nearest higher resolution will be used.\n         * @type {number=}\n         */\n        _this.zDirection;\n        return _this;\n    }\n    /**\n     * @return {boolean} Can expire cache.\n     */\n    TileSource.prototype.canExpireCache = function () {\n        return this.tileCache.canExpireCache();\n    };\n    /**\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @param {!Object<string, import(\"../TileRange.js\").default>} usedTiles Used tiles.\n     */\n    TileSource.prototype.expireCache = function (projection, usedTiles) {\n        var tileCache = this.getTileCacheForProjection(projection);\n        if (tileCache) {\n            tileCache.expireCache(usedTiles);\n        }\n    };\n    /**\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @param {number} z Zoom level.\n     * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n     * @param {function(import(\"../Tile.js\").default):(boolean|void)} callback Called with each\n     *     loaded tile.  If the callback returns `false`, the tile will not be\n     *     considered loaded.\n     * @return {boolean} The tile range is fully covered with loaded tiles.\n     */\n    TileSource.prototype.forEachLoadedTile = function (projection, z, tileRange, callback) {\n        var tileCache = this.getTileCacheForProjection(projection);\n        if (!tileCache) {\n            return false;\n        }\n        var covered = true;\n        var tile, tileCoordKey, loaded;\n        for (var x = tileRange.minX; x <= tileRange.maxX; ++x) {\n            for (var y = tileRange.minY; y <= tileRange.maxY; ++y) {\n                tileCoordKey = getKeyZXY(z, x, y);\n                loaded = false;\n                if (tileCache.containsKey(tileCoordKey)) {\n                    tile = /** @type {!import(\"../Tile.js\").default} */ (tileCache.get(tileCoordKey));\n                    loaded = tile.getState() === TileState.LOADED;\n                    if (loaded) {\n                        loaded = (callback(tile) !== false);\n                    }\n                }\n                if (!loaded) {\n                    covered = false;\n                }\n            }\n        }\n        return covered;\n    };\n    /**\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {number} Gutter.\n     */\n    TileSource.prototype.getGutterForProjection = function (projection) {\n        return 0;\n    };\n    /**\n     * Return the key to be used for all tiles in the source.\n     * @return {string} The key for all tiles.\n     * @protected\n     */\n    TileSource.prototype.getKey = function () {\n        return this.key_;\n    };\n    /**\n     * Set the value to be used as the key for all tiles in the source.\n     * @param {string} key The key for tiles.\n     * @protected\n     */\n    TileSource.prototype.setKey = function (key) {\n        if (this.key_ !== key) {\n            this.key_ = key;\n            this.changed();\n        }\n    };\n    /**\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {boolean} Opaque.\n     */\n    TileSource.prototype.getOpaque = function (projection) {\n        return this.opaque_;\n    };\n    /**\n     * @inheritDoc\n     */\n    TileSource.prototype.getResolutions = function () {\n        return this.tileGrid.getResolutions();\n    };\n    /**\n     * @abstract\n     * @param {number} z Tile coordinate z.\n     * @param {number} x Tile coordinate x.\n     * @param {number} y Tile coordinate y.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {!import(\"../Tile.js\").default} Tile.\n     */\n    TileSource.prototype.getTile = function (z, x, y, pixelRatio, projection) {\n        return abstract();\n    };\n    /**\n     * Return the tile grid of the tile source.\n     * @return {import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n     * @api\n     */\n    TileSource.prototype.getTileGrid = function () {\n        return this.tileGrid;\n    };\n    /**\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n     */\n    TileSource.prototype.getTileGridForProjection = function (projection) {\n        if (!this.tileGrid) {\n            return getTileGridForProjection(projection);\n        }\n        else {\n            return this.tileGrid;\n        }\n    };\n    /**\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {import(\"../TileCache.js\").default} Tile cache.\n     * @protected\n     */\n    TileSource.prototype.getTileCacheForProjection = function (projection) {\n        var thisProj = this.getProjection();\n        if (thisProj && !equivalent(thisProj, projection)) {\n            return null;\n        }\n        else {\n            return this.tileCache;\n        }\n    };\n    /**\n     * Get the tile pixel ratio for this source. Subclasses may override this\n     * method, which is meant to return a supported pixel ratio that matches the\n     * provided `pixelRatio` as close as possible.\n     * @param {number} pixelRatio Pixel ratio.\n     * @return {number} Tile pixel ratio.\n     */\n    TileSource.prototype.getTilePixelRatio = function (pixelRatio) {\n        return this.tilePixelRatio_;\n    };\n    /**\n     * @param {number} z Z.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {import(\"../size.js\").Size} Tile size.\n     */\n    TileSource.prototype.getTilePixelSize = function (z, pixelRatio, projection) {\n        var tileGrid = this.getTileGridForProjection(projection);\n        var tilePixelRatio = this.getTilePixelRatio(pixelRatio);\n        var tileSize = toSize(tileGrid.getTileSize(z), this.tmpSize);\n        if (tilePixelRatio == 1) {\n            return tileSize;\n        }\n        else {\n            return scaleSize(tileSize, tilePixelRatio, this.tmpSize);\n        }\n    };\n    /**\n     * Returns a tile coordinate wrapped around the x-axis. When the tile coordinate\n     * is outside the resolution and extent range of the tile grid, `null` will be\n     * returned.\n     * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @param {import(\"../proj/Projection.js\").default=} opt_projection Projection.\n     * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate to be passed to the tileUrlFunction or\n     *     null if no tile URL should be created for the passed `tileCoord`.\n     */\n    TileSource.prototype.getTileCoordForTileUrlFunction = function (tileCoord, opt_projection) {\n        var projection = opt_projection !== undefined ?\n            opt_projection : this.getProjection();\n        var tileGrid = this.getTileGridForProjection(projection);\n        if (this.getWrapX() && projection.isGlobal()) {\n            tileCoord = wrapX(tileGrid, tileCoord, projection);\n        }\n        return withinExtentAndZ(tileCoord, tileGrid) ? tileCoord : null;\n    };\n    /**\n     * Remove all cached tiles from the source. The next render cycle will fetch new tiles.\n     * @api\n     */\n    TileSource.prototype.clear = function () {\n        this.tileCache.clear();\n    };\n    /**\n     * @inheritDoc\n     */\n    TileSource.prototype.refresh = function () {\n        this.clear();\n        _super.prototype.refresh.call(this);\n    };\n    /**\n     * Marks a tile coord as being used, without triggering a load.\n     * @abstract\n     * @param {number} z Tile coordinate z.\n     * @param {number} x Tile coordinate x.\n     * @param {number} y Tile coordinate y.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     */\n    TileSource.prototype.useTile = function (z, x, y, projection) { };\n    return TileSource;\n}(Source));\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Tile~TileSource} instances are instances of this\n * type.\n */\nvar TileSourceEvent = /** @class */ (function (_super) {\n    __extends(TileSourceEvent, _super);\n    /**\n     * @param {string} type Type.\n     * @param {import(\"../Tile.js\").default} tile The tile.\n     */\n    function TileSourceEvent(type, tile) {\n        var _this = _super.call(this, type) || this;\n        /**\n         * The tile related to the event.\n         * @type {import(\"../Tile.js\").default}\n         * @api\n         */\n        _this.tile = tile;\n        return _this;\n    }\n    return TileSourceEvent;\n}(Event));\nexport { TileSourceEvent };\nexport default TileSource;\n//# sourceMappingURL=Tile.js.map","/**\n * @module ol/source/TileEventType\n */\n/**\n * @enum {string}\n */\nexport default {\n    /**\n     * Triggered when a tile starts loading.\n     * @event module:ol/source/Tile.TileSourceEvent#tileloadstart\n     * @api\n     */\n    TILELOADSTART: 'tileloadstart',\n    /**\n     * Triggered when a tile finishes loading, either when its data is loaded,\n     * or when loading was aborted because the tile is no longer needed.\n     * @event module:ol/source/Tile.TileSourceEvent#tileloadend\n     * @api\n     */\n    TILELOADEND: 'tileloadend',\n    /**\n     * Triggered if tile loading results in an error.\n     * @event module:ol/source/Tile.TileSourceEvent#tileloaderror\n     * @api\n     */\n    TILELOADERROR: 'tileloaderror'\n};\n//# sourceMappingURL=TileEventType.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/source/UrlTile\n */\nimport { getUid } from '../util.js';\nimport TileState from '../TileState.js';\nimport { expandUrl, createFromTemplates, nullTileUrlFunction } from '../tileurlfunction.js';\nimport TileSource, { TileSourceEvent } from './Tile.js';\nimport TileEventType from './TileEventType.js';\nimport { getKeyZXY } from '../tilecoord.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions]\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize]\n * @property {boolean} [opaque]\n * @property {import(\"../proj.js\").ProjectionLike} [projection]\n * @property {import(\"./State.js\").default} [state]\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid]\n * @property {import(\"../Tile.js\").LoadFunction} tileLoadFunction\n * @property {number} [tilePixelRatio]\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction]\n * @property {string} [url]\n * @property {Array<string>} [urls]\n * @property {boolean} [wrapX=true]\n * @property {number} [transition]\n * @property {string} [key]\n */\n/**\n * @classdesc\n * Base class for sources providing tiles divided into a tile grid over http.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n */\nvar UrlTile = /** @class */ (function (_super) {\n    __extends(UrlTile, _super);\n    /**\n     * @param {Options} options Image tile options.\n     */\n    function UrlTile(options) {\n        var _this = _super.call(this, {\n            attributions: options.attributions,\n            cacheSize: options.cacheSize,\n            opaque: options.opaque,\n            projection: options.projection,\n            state: options.state,\n            tileGrid: options.tileGrid,\n            tilePixelRatio: options.tilePixelRatio,\n            wrapX: options.wrapX,\n            transition: options.transition,\n            key: options.key,\n            attributionsCollapsible: options.attributionsCollapsible\n        }) || this;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.generateTileUrlFunction_ = !options.tileUrlFunction;\n        /**\n         * @protected\n         * @type {import(\"../Tile.js\").LoadFunction}\n         */\n        _this.tileLoadFunction = options.tileLoadFunction;\n        /**\n         * @protected\n         * @type {import(\"../Tile.js\").UrlFunction}\n         */\n        _this.tileUrlFunction = options.tileUrlFunction ? options.tileUrlFunction.bind(_this) : nullTileUrlFunction;\n        /**\n         * @protected\n         * @type {!Array<string>|null}\n         */\n        _this.urls = null;\n        if (options.urls) {\n            _this.setUrls(options.urls);\n        }\n        else if (options.url) {\n            _this.setUrl(options.url);\n        }\n        /**\n         * @private\n         * @type {!Object<string, boolean>}\n         */\n        _this.tileLoadingKeys_ = {};\n        return _this;\n    }\n    /**\n     * Return the tile load function of the source.\n     * @return {import(\"../Tile.js\").LoadFunction} TileLoadFunction\n     * @api\n     */\n    UrlTile.prototype.getTileLoadFunction = function () {\n        return this.tileLoadFunction;\n    };\n    /**\n     * Return the tile URL function of the source.\n     * @return {import(\"../Tile.js\").UrlFunction} TileUrlFunction\n     * @api\n     */\n    UrlTile.prototype.getTileUrlFunction = function () {\n        return this.tileUrlFunction;\n    };\n    /**\n     * Return the URLs used for this source.\n     * When a tileUrlFunction is used instead of url or urls,\n     * null will be returned.\n     * @return {!Array<string>|null} URLs.\n     * @api\n     */\n    UrlTile.prototype.getUrls = function () {\n        return this.urls;\n    };\n    /**\n     * Handle tile change events.\n     * @param {import(\"../events/Event.js\").default} event Event.\n     * @protected\n     */\n    UrlTile.prototype.handleTileChange = function (event) {\n        var tile = /** @type {import(\"../Tile.js\").default} */ (event.target);\n        var uid = getUid(tile);\n        var tileState = tile.getState();\n        var type;\n        if (tileState == TileState.LOADING) {\n            this.tileLoadingKeys_[uid] = true;\n            type = TileEventType.TILELOADSTART;\n        }\n        else if (uid in this.tileLoadingKeys_) {\n            delete this.tileLoadingKeys_[uid];\n            type = tileState == TileState.ERROR ? TileEventType.TILELOADERROR :\n                (tileState == TileState.LOADED || tileState == TileState.ABORT) ?\n                    TileEventType.TILELOADEND : undefined;\n        }\n        if (type != undefined) {\n            this.dispatchEvent(new TileSourceEvent(type, tile));\n        }\n    };\n    /**\n     * Set the tile load function of the source.\n     * @param {import(\"../Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n     * @api\n     */\n    UrlTile.prototype.setTileLoadFunction = function (tileLoadFunction) {\n        this.tileCache.clear();\n        this.tileLoadFunction = tileLoadFunction;\n        this.changed();\n    };\n    /**\n     * Set the tile URL function of the source.\n     * @param {import(\"../Tile.js\").UrlFunction} tileUrlFunction Tile URL function.\n     * @param {string=} key Optional new tile key for the source.\n     * @api\n     */\n    UrlTile.prototype.setTileUrlFunction = function (tileUrlFunction, key) {\n        this.tileUrlFunction = tileUrlFunction;\n        this.tileCache.pruneExceptNewestZ();\n        if (typeof key !== 'undefined') {\n            this.setKey(key);\n        }\n        else {\n            this.changed();\n        }\n    };\n    /**\n     * Set the URL to use for requests.\n     * @param {string} url URL.\n     * @api\n     */\n    UrlTile.prototype.setUrl = function (url) {\n        var urls = this.urls = expandUrl(url);\n        this.setUrls(urls);\n    };\n    /**\n     * Set the URLs to use for requests.\n     * @param {Array<string>} urls URLs.\n     * @api\n     */\n    UrlTile.prototype.setUrls = function (urls) {\n        this.urls = urls;\n        var key = urls.join('\\n');\n        if (this.generateTileUrlFunction_) {\n            this.setTileUrlFunction(createFromTemplates(urls, this.tileGrid), key);\n        }\n        else {\n            this.setKey(key);\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    UrlTile.prototype.useTile = function (z, x, y) {\n        var tileCoordKey = getKeyZXY(z, x, y);\n        if (this.tileCache.containsKey(tileCoordKey)) {\n            this.tileCache.get(tileCoordKey);\n        }\n    };\n    return UrlTile;\n}(TileSource));\nexport default UrlTile;\n//# sourceMappingURL=UrlTile.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/source/TileImage\n */\nimport { ENABLE_RASTER_REPROJECTION } from '../reproj/common.js';\nimport { getUid } from '../util.js';\nimport ImageTile from '../ImageTile.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport { listen } from '../events.js';\nimport EventType from '../events/EventType.js';\nimport { equivalent, get as getProjection } from '../proj.js';\nimport ReprojTile from '../reproj/Tile.js';\nimport UrlTile from './UrlTile.js';\nimport { getKey, getKeyZXY } from '../tilecoord.js';\nimport { getForProjection as getTileGridForProjection } from '../tilegrid.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Tile cache size. The default depends on the screen size. Will increase if too small.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [opaque=true] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"./State.js\").default} [state] Source state.\n * @property {typeof import(\"../ImageTile.js\").default} [tileClass] Class used to instantiate image tiles.\n * Default is {@link module:ol/ImageTile~ImageTile}.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service. For example, if the tile\n * service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get tile URL given a tile coordinate and the projection.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`, may be\n * used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX] Whether to wrap the world horizontally. The default, is to\n * request out-of-bounds tiles from the server. When set to `false`, only one\n * world will be rendered. When set to `true`, tiles will be requested for one\n * world only, but they will be wrapped horizontally to render multiple worlds.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {string} [key] Optional tile key for proper cache fetching\n */\n/**\n * @classdesc\n * Base class for sources providing images divided into a tile grid.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n * @api\n */\nvar TileImage = /** @class */ (function (_super) {\n    __extends(TileImage, _super);\n    /**\n     * @param {!Options} options Image tile options.\n     */\n    function TileImage(options) {\n        var _this = _super.call(this, {\n            attributions: options.attributions,\n            cacheSize: options.cacheSize,\n            opaque: options.opaque,\n            projection: options.projection,\n            state: options.state,\n            tileGrid: options.tileGrid,\n            tileLoadFunction: options.tileLoadFunction ?\n                options.tileLoadFunction : defaultTileLoadFunction,\n            tilePixelRatio: options.tilePixelRatio,\n            tileUrlFunction: options.tileUrlFunction,\n            url: options.url,\n            urls: options.urls,\n            wrapX: options.wrapX,\n            transition: options.transition,\n            key: options.key,\n            attributionsCollapsible: options.attributionsCollapsible\n        }) || this;\n        /**\n         * @protected\n         * @type {?string}\n         */\n        _this.crossOrigin =\n            options.crossOrigin !== undefined ? options.crossOrigin : null;\n        /**\n         * @protected\n         * @type {typeof ImageTile}\n         */\n        _this.tileClass = options.tileClass !== undefined ?\n            options.tileClass : ImageTile;\n        /**\n         * @protected\n         * @type {!Object<string, TileCache>}\n         */\n        _this.tileCacheForProjection = {};\n        /**\n         * @protected\n         * @type {!Object<string, import(\"../tilegrid/TileGrid.js\").default>}\n         */\n        _this.tileGridForProjection = {};\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.reprojectionErrorThreshold_ = options.reprojectionErrorThreshold;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.renderReprojectionEdges_ = false;\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    TileImage.prototype.canExpireCache = function () {\n        if (!ENABLE_RASTER_REPROJECTION) {\n            return _super.prototype.canExpireCache.call(this);\n        }\n        if (this.tileCache.canExpireCache()) {\n            return true;\n        }\n        else {\n            for (var key in this.tileCacheForProjection) {\n                if (this.tileCacheForProjection[key].canExpireCache()) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    };\n    /**\n     * @inheritDoc\n     */\n    TileImage.prototype.expireCache = function (projection, usedTiles) {\n        if (!ENABLE_RASTER_REPROJECTION) {\n            _super.prototype.expireCache.call(this, projection, usedTiles);\n            return;\n        }\n        var usedTileCache = this.getTileCacheForProjection(projection);\n        this.tileCache.expireCache(this.tileCache == usedTileCache ? usedTiles : {});\n        for (var id in this.tileCacheForProjection) {\n            var tileCache = this.tileCacheForProjection[id];\n            tileCache.expireCache(tileCache == usedTileCache ? usedTiles : {});\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    TileImage.prototype.getGutterForProjection = function (projection) {\n        if (ENABLE_RASTER_REPROJECTION &&\n            this.getProjection() && projection && !equivalent(this.getProjection(), projection)) {\n            return 0;\n        }\n        else {\n            return this.getGutter();\n        }\n    };\n    /**\n     * @return {number} Gutter.\n     */\n    TileImage.prototype.getGutter = function () {\n        return 0;\n    };\n    /**\n     * @inheritDoc\n     */\n    TileImage.prototype.getOpaque = function (projection) {\n        if (ENABLE_RASTER_REPROJECTION &&\n            this.getProjection() && projection && !equivalent(this.getProjection(), projection)) {\n            return false;\n        }\n        else {\n            return _super.prototype.getOpaque.call(this, projection);\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    TileImage.prototype.getTileGridForProjection = function (projection) {\n        if (!ENABLE_RASTER_REPROJECTION) {\n            return _super.prototype.getTileGridForProjection.call(this, projection);\n        }\n        var thisProj = this.getProjection();\n        if (this.tileGrid && (!thisProj || equivalent(thisProj, projection))) {\n            return this.tileGrid;\n        }\n        else {\n            var projKey = getUid(projection);\n            if (!(projKey in this.tileGridForProjection)) {\n                this.tileGridForProjection[projKey] = getTileGridForProjection(projection);\n            }\n            return (\n            /** @type {!import(\"../tilegrid/TileGrid.js\").default} */ (this.tileGridForProjection[projKey]));\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    TileImage.prototype.getTileCacheForProjection = function (projection) {\n        if (!ENABLE_RASTER_REPROJECTION) {\n            return _super.prototype.getTileCacheForProjection.call(this, projection);\n        }\n        var thisProj = this.getProjection();\n        if (!thisProj || equivalent(thisProj, projection)) {\n            return this.tileCache;\n        }\n        else {\n            var projKey = getUid(projection);\n            if (!(projKey in this.tileCacheForProjection)) {\n                this.tileCacheForProjection[projKey] = new TileCache(this.tileCache.highWaterMark);\n            }\n            return this.tileCacheForProjection[projKey];\n        }\n    };\n    /**\n     * @param {number} z Tile coordinate z.\n     * @param {number} x Tile coordinate x.\n     * @param {number} y Tile coordinate y.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @param {string} key The key set on the tile.\n     * @return {!import(\"../Tile.js\").default} Tile.\n     * @private\n     */\n    TileImage.prototype.createTile_ = function (z, x, y, pixelRatio, projection, key) {\n        var tileCoord = [z, x, y];\n        var urlTileCoord = this.getTileCoordForTileUrlFunction(tileCoord, projection);\n        var tileUrl = urlTileCoord ?\n            this.tileUrlFunction(urlTileCoord, pixelRatio, projection) : undefined;\n        var tile = new this.tileClass(tileCoord, tileUrl !== undefined ? TileState.IDLE : TileState.EMPTY, tileUrl !== undefined ? tileUrl : '', this.crossOrigin, this.tileLoadFunction, this.tileOptions);\n        tile.key = key;\n        listen(tile, EventType.CHANGE, this.handleTileChange, this);\n        return tile;\n    };\n    /**\n     * @inheritDoc\n     */\n    TileImage.prototype.getTile = function (z, x, y, pixelRatio, projection) {\n        var sourceProjection = /** @type {!import(\"../proj/Projection.js\").default} */ (this.getProjection());\n        if (!ENABLE_RASTER_REPROJECTION ||\n            !sourceProjection || !projection || equivalent(sourceProjection, projection)) {\n            return this.getTileInternal(z, x, y, pixelRatio, sourceProjection || projection);\n        }\n        else {\n            var cache = this.getTileCacheForProjection(projection);\n            var tileCoord = [z, x, y];\n            var tile = void 0;\n            var tileCoordKey = getKey(tileCoord);\n            if (cache.containsKey(tileCoordKey)) {\n                tile = /** @type {!import(\"../Tile.js\").default} */ (cache.get(tileCoordKey));\n            }\n            var key = this.getKey();\n            if (tile && tile.key == key) {\n                return tile;\n            }\n            else {\n                var sourceTileGrid = this.getTileGridForProjection(sourceProjection);\n                var targetTileGrid = this.getTileGridForProjection(projection);\n                var wrappedTileCoord = this.getTileCoordForTileUrlFunction(tileCoord, projection);\n                var newTile = new ReprojTile(sourceProjection, sourceTileGrid, projection, targetTileGrid, tileCoord, wrappedTileCoord, this.getTilePixelRatio(pixelRatio), this.getGutter(), function (z, x, y, pixelRatio) {\n                    return this.getTileInternal(z, x, y, pixelRatio, sourceProjection);\n                }.bind(this), this.reprojectionErrorThreshold_, this.renderReprojectionEdges_);\n                newTile.key = key;\n                if (tile) {\n                    newTile.interimTile = tile;\n                    newTile.refreshInterimChain();\n                    cache.replace(tileCoordKey, newTile);\n                }\n                else {\n                    cache.set(tileCoordKey, newTile);\n                }\n                return newTile;\n            }\n        }\n    };\n    /**\n     * @param {number} z Tile coordinate z.\n     * @param {number} x Tile coordinate x.\n     * @param {number} y Tile coordinate y.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {!import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {!import(\"../Tile.js\").default} Tile.\n     * @protected\n     */\n    TileImage.prototype.getTileInternal = function (z, x, y, pixelRatio, projection) {\n        var tile = null;\n        var tileCoordKey = getKeyZXY(z, x, y);\n        var key = this.getKey();\n        if (!this.tileCache.containsKey(tileCoordKey)) {\n            tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n            this.tileCache.set(tileCoordKey, tile);\n        }\n        else {\n            tile = this.tileCache.get(tileCoordKey);\n            if (tile.key != key) {\n                // The source's params changed. If the tile has an interim tile and if we\n                // can use it then we use it. Otherwise we create a new tile.  In both\n                // cases we attempt to assign an interim tile to the new tile.\n                var interimTile = tile;\n                tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n                //make the new tile the head of the list,\n                if (interimTile.getState() == TileState.IDLE) {\n                    //the old tile hasn't begun loading yet, and is now outdated, so we can simply discard it\n                    tile.interimTile = interimTile.interimTile;\n                }\n                else {\n                    tile.interimTile = interimTile;\n                }\n                tile.refreshInterimChain();\n                this.tileCache.replace(tileCoordKey, tile);\n            }\n        }\n        return tile;\n    };\n    /**\n     * Sets whether to render reprojection edges or not (usually for debugging).\n     * @param {boolean} render Render the edges.\n     * @api\n     */\n    TileImage.prototype.setRenderReprojectionEdges = function (render) {\n        if (!ENABLE_RASTER_REPROJECTION ||\n            this.renderReprojectionEdges_ == render) {\n            return;\n        }\n        this.renderReprojectionEdges_ = render;\n        for (var id in this.tileCacheForProjection) {\n            this.tileCacheForProjection[id].clear();\n        }\n        this.changed();\n    };\n    /**\n     * Sets the tile grid to use when reprojecting the tiles to the given\n     * projection instead of the default tile grid for the projection.\n     *\n     * This can be useful when the default tile grid cannot be created\n     * (e.g. projection has no extent defined) or\n     * for optimization reasons (custom tile size, resolutions, ...).\n     *\n     * @param {import(\"../proj.js\").ProjectionLike} projection Projection.\n     * @param {import(\"../tilegrid/TileGrid.js\").default} tilegrid Tile grid to use for the projection.\n     * @api\n     */\n    TileImage.prototype.setTileGridForProjection = function (projection, tilegrid) {\n        if (ENABLE_RASTER_REPROJECTION) {\n            var proj = getProjection(projection);\n            if (proj) {\n                var projKey = getUid(proj);\n                if (!(projKey in this.tileGridForProjection)) {\n                    this.tileGridForProjection[projKey] = tilegrid;\n                }\n            }\n        }\n    };\n    return TileImage;\n}(UrlTile));\n/**\n * @param {ImageTile} imageTile Image tile.\n * @param {string} src Source.\n */\nfunction defaultTileLoadFunction(imageTile, src) {\n    /** @type {HTMLImageElement|HTMLVideoElement} */ (imageTile.getImage()).src = src;\n}\nexport default TileImage;\n//# sourceMappingURL=TileImage.js.map","/**\n * @module ol/source/XYZ\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport TileImage from './TileImage.js';\nimport { createXYZ, extentFromProjection } from '../tilegrid.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Tile cache size. The default depends on the screen size. Will increase if too small.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [opaque=true] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection='EPSG:3857'] Projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {number} [maxZoom=18] Optional max zoom level.\n * @property {number} [minZoom=0] Optional min zoom level.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service.\n * For example, if the tile service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {number|import(\"../size.js\").Size} [tileSize=[256, 256]] The tile size used by the tile service.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get\n * tile URL given a tile coordinate and the projection.\n * Required if url or urls are not provided.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`,\n * and `{z}` placeholders. A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`,\n * may be used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n */\n/**\n * @classdesc\n * Layer source for tile data with URLs in a set XYZ format that are\n * defined in a URL template. By default, this follows the widely-used\n * Google grid where `x` 0 and `y` 0 are in the top left. Grids like\n * TMS where `x` 0 and `y` 0 are in the bottom left can be used by\n * using the `{-y}` placeholder in the URL template, so long as the\n * source does not have a custom tile grid. In this case,\n * {@link module:ol/source/TileImage} can be used with a `tileUrlFunction`\n * such as:\n *\n *  tileUrlFunction: function(coordinate) {\n *    return 'http://mapserver.com/' + coordinate[0] + '/' +\n *        coordinate[1] + '/' + coordinate[2] + '.png';\n *    }\n *\n * @api\n */\nvar XYZ = /** @class */ (function (_super) {\n    __extends(XYZ, _super);\n    /**\n     * @param {Options=} opt_options XYZ options.\n     */\n    function XYZ(opt_options) {\n        var _this = this;\n        var options = opt_options || {};\n        var projection = options.projection !== undefined ?\n            options.projection : 'EPSG:3857';\n        var tileGrid = options.tileGrid !== undefined ? options.tileGrid :\n            createXYZ({\n                extent: extentFromProjection(projection),\n                maxZoom: options.maxZoom,\n                minZoom: options.minZoom,\n                tileSize: options.tileSize\n            });\n        _this = _super.call(this, {\n            attributions: options.attributions,\n            cacheSize: options.cacheSize,\n            crossOrigin: options.crossOrigin,\n            opaque: options.opaque,\n            projection: projection,\n            reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n            tileGrid: tileGrid,\n            tileLoadFunction: options.tileLoadFunction,\n            tilePixelRatio: options.tilePixelRatio,\n            tileUrlFunction: options.tileUrlFunction,\n            url: options.url,\n            urls: options.urls,\n            wrapX: options.wrapX !== undefined ? options.wrapX : true,\n            transition: options.transition,\n            attributionsCollapsible: options.attributionsCollapsible\n        }) || this;\n        return _this;\n    }\n    return XYZ;\n}(TileImage));\nexport default XYZ;\n//# sourceMappingURL=XYZ.js.map","/**\n * @module ol/source/OSM\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport XYZ from './XYZ.js';\n/**\n * The attribution containing a link to the OpenStreetMap Copyright and License\n * page.\n * @const\n * @type {string}\n * @api\n */\nexport var ATTRIBUTION = '&#169; ' +\n    '<a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> ' +\n    'contributors.';\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize] Tile cache size. The default depends on the screen size. Will increase if too small.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {number} [maxZoom=19] Max zoom.\n * @property {boolean} [opaque=true] Whether the layer is opaque.\n * @property {number} [reprojectionErrorThreshold=1.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {string} [url='https://{a-c}.tile.openstreetmap.org/{z}/{x}/{y}.png'] URL template.\n * Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n */\n/**\n * @classdesc\n * Layer source for the OpenStreetMap tile server.\n * @api\n */\nvar OSM = /** @class */ (function (_super) {\n    __extends(OSM, _super);\n    /**\n     * @param {Options=} [opt_options] Open Street Map options.\n     */\n    function OSM(opt_options) {\n        var _this = this;\n        var options = opt_options || {};\n        var attributions;\n        if (options.attributions !== undefined) {\n            attributions = options.attributions;\n        }\n        else {\n            attributions = [ATTRIBUTION];\n        }\n        var crossOrigin = options.crossOrigin !== undefined ?\n            options.crossOrigin : 'anonymous';\n        var url = options.url !== undefined ?\n            options.url : 'https://{a-c}.tile.openstreetmap.org/{z}/{x}/{y}.png';\n        _this = _super.call(this, {\n            attributions: attributions,\n            cacheSize: options.cacheSize,\n            crossOrigin: crossOrigin,\n            opaque: options.opaque !== undefined ? options.opaque : true,\n            maxZoom: options.maxZoom !== undefined ? options.maxZoom : 19,\n            reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n            tileLoadFunction: options.tileLoadFunction,\n            url: url,\n            wrapX: options.wrapX,\n            attributionsCollapsible: false\n        }) || this;\n        return _this;\n    }\n    return OSM;\n}(XYZ));\nexport default OSM;\n//# sourceMappingURL=OSM.js.map","import 'ol/ol.css';\nimport Map from 'ol/Map';\nimport View from 'ol/View';\nimport TileLayer from 'ol/layer/Tile';\nimport Stamen from 'ol/source/Stamen';\nimport VectorLayer from 'ol/layer/Vector';\nimport Vector from 'ol/source/Vector';\nimport GeoJSON from 'ol/format/GeoJSON';\nimport Style from 'ol/style/Style';\nimport Circle from 'ol/style/Circle';\nimport Fill from 'ol/style/Fill';\nimport Stroke from 'ol/style/Stroke';\nimport Overlay from 'ol/Overlay';\nimport {fromLonLat, toLonLat} from 'ol/proj';\nimport sync from 'ol-hashed';\nimport OSM from 'ol/source/OSM';\nimport Feature from 'ol/Feature';\nimport {circular} from 'ol/geom/Polygon';\nimport Point from 'ol/geom/Point';\nimport Control from 'ol/control/Control';\n\n\n// define the map\nconst map = new Map({\n  target: 'map',\n  view: new View({\n    center: fromLonLat([16.37, 48.2]),\n    zoom: 13\n  })\n});\n\n//OpenStreetMap\nmap.addLayer(new TileLayer({\n\ttitle: 'OSM',\n\ttype: 'base',\n\tsource: new OSM()\n}));\t\n\n\n// OGD layer of districts of vienna\nconst bezirkeLayer = new VectorLayer({\n  source: new Vector({\n    url: 'https://data.wien.gv.at/daten/geo?service=WFS&request=GetFeature&version=1.1.0&typeName=ogdwien:BEZIRKSGRENZEOGD&srsName=EPSG:4326&outputFormat=json',\n    format: new GeoJSON()\n  })\n});\nmap.addLayer(bezirkeLayer);\n\n\n// layer containing existing feedback points\n// postgis_geojson.php needs deliver a valid GeoJSON!\nconst feedbackLayer = new VectorLayer({\n  source: new Vector({\n    url: 'https://student.ifip.tuwien.ac.at/geoweb/2019/g03/kontaktformular/postgis_geojson.php',\n    format: new GeoJSON()\n  })\n});\nmap.addLayer(feedbackLayer);\n\n// set the style of existing feedback points\nfeedbackLayer.setStyle(function(feature) {\n  return new Style({\n    image: new Circle({\n      radius: 7,\n      fill: new Fill({\n        color: 'rgba(143, 188, 143, 1)'\n      }),\n      stroke: new Stroke({\n        color: 'rgba(4, 4, 4, 1)',\n        width: 1\n      })\n    })\n  });\n});\n\n// sync view of map with the url-hash\nsync(map);\n\n// define an Overlay, which should appear on the map on user-click\nconst overlay = new Overlay({\n  element: document.getElementById('popup-container'),\n  positioning: 'bottom-center',\n  offset: [0, -10],\n  autoPan: true\n});\nmap.addOverlay(overlay);\noverlay.getElement().addEventListener('click', function() {\n  overlay.setPosition();\n});\n\n// define what happens when user clicks on the map\nmap.on('singleclick', function(e) {\n  let markup = ''; // the variable \"markup\" is html code, as string\n  map.forEachFeatureAtPixel(e.pixel, function(feature) {\n    const properties = feature.getProperties();\n    markup += markup + '<hr><table>';\n    for (const property in properties) {\n      if (property != 'geometry') {\n        markup += '<tr><th>' + property + '</th><td>' + properties[property] + '</td></tr>';\n      }\n    }\n    markup += '</table>';\n  }, {\n    layerFilter: (l) => l === feedbackLayer\n  });\n  if (markup) { // if any table was created (= feature already existed at clicked point)\n    document.getElementById('popup-content').innerHTML = markup;\n    overlay.setPosition(e.coordinate);\n  } else { // if no feature existed on clicked point\n    overlay.setPosition();\n    const pos = toLonLat(e.coordinate);\n    window.location.href =\n        'https://student.ifip.tuwien.ac.at/geoweb/2019/g03/kontaktformular/formular.php?pos=' +\n        pos.join(' ');\n  }\n});\n\n\n/**\n * function to calculate statistics for districts\n * sets the property 'FEEDBACKS' for each district to the number of feedbacks inside\n */\nfunction calculateStatistics() {\n  const feedbacks = feedbackLayer.getSource().getFeatures();\n  const bezirke = bezirkeLayer.getSource().getFeatures();\n  if (feedbacks.length > 0 && bezirke.length > 0) {\n    for (let i = 0, ii = feedbacks.length; i < ii; ++i) {\n      const feedback = feedbacks[i];\n      for (let j = 0, jj = bezirke.length; j < jj; ++j) {\n        const bezirk = bezirke[j];\n        let count = bezirk.get('FEEDBACKS') || 0;\n        const feedbackGeom = feedback.getGeometry();\n        if (feedbackGeom && bezirk.getGeometry().intersectsCoordinate(feedbackGeom.getCoordinates())) {\n          ++count;\n        }\n        bezirk.set('FEEDBACKS', count);\n      }\n    }\n  }\n}\n// we need both layers to calculate the statistics\n// try to calculate the statistics when either is loaded\nbezirkeLayer.getSource().once('change', calculateStatistics);\nfeedbackLayer.getSource().once('change', calculateStatistics);\n\n// set the style of the district according to the number of feedbacks\nbezirkeLayer.setStyle(function(feature) {\n  let fillColor;\n  const feedbackCount = feature.get('FEEDBACKS');\n  if (feedbackCount <= 1) {\n    fillColor = 'rgba(238, 233, 233, 0.7';\n  } else if (feedbackCount < 5) {\n    fillColor = 'rgba(205, 201, 201, 0.7)';\n  } else {\n    fillColor = 'rgba(139, 137, 137, 0.7)';\n  }\n  return new Style({\n    fill: new Fill({\n      color: fillColor\n    }),\n    stroke: new Stroke({\n      color: 'rgba(4, 4, 4, 1)',\n      width: 1\n    })\n  });\n});\n\n//GPS Location\nconst GPSsource = new Vector();\nconst GPSlayer = new VectorLayer({\n  source: GPSsource\n});\nmap.addLayer(GPSlayer);\n\n\nnavigator.geolocation.watchPosition(function(pos) {\n  const coords = [pos.coords.longitude, pos.coords.latitude];\n  const accuracy = circular(coords, pos.coords.accuracy);\n  GPSsource.clear(true);\n  GPSsource.addFeatures([\n    new Feature(accuracy.transform('EPSG:4326', map.getView().getProjection())),\n    new Feature(new Point(fromLonLat(coords)))\n  ]);\n}, function(error) {\n  alert(`ERROR: ${error.message}`);\n}, {\n  enableHighAccuracy: true\n});\n\nconst locate = document.createElement('div');\nlocate.className = 'ol-control ol-unselectable locate';\nlocate.innerHTML = '<button title=\"Locate me\">◎</button>';\nlocate.addEventListener('click', function() {\n  if (!GPSsource.isEmpty()) {\n    map.getView().fit(GPSsource.getExtent(), {\n      maxZoom: 18,\n      duration: 500\n    });\n  }\n});\n\nmap.addControl(new Control({\n  element: locate\n}));"],"sourceRoot":""}